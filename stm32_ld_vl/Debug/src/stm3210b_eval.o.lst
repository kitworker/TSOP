   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm3210b_eval.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	GPIO_PORT
  19              		.data
  20              		.align	2
  23              	GPIO_PORT:
  24 0000 00100140 		.word	1073811456
  25 0004 00100140 		.word	1073811456
  26 0008 00100140 		.word	1073811456
  27 000c 00100140 		.word	1073811456
  28              		.global	GPIO_PIN
  29              		.section	.rodata
  30              		.align	2
  33              	GPIO_PIN:
  34 0000 4000     		.short	64
  35 0002 8000     		.short	128
  36 0004 0001     		.short	256
  37 0006 0002     		.short	512
  38              		.global	GPIO_CLK
  39              		.align	2
  42              	GPIO_CLK:
  43 0008 10000000 		.word	16
  44 000c 10000000 		.word	16
  45 0010 10000000 		.word	16
  46 0014 10000000 		.word	16
  47              		.global	BUTTON_PORT
  48              		.data
  49              		.align	2
  52              	BUTTON_PORT:
  53 0010 00080140 		.word	1073809408
  54 0014 00100140 		.word	1073811456
  55 0018 000C0140 		.word	1073810432
  56 001c 00180140 		.word	1073813504
  57 0020 00180140 		.word	1073813504
  58 0024 00140140 		.word	1073812480
  59 0028 00140140 		.word	1073812480
  60 002c 00140140 		.word	1073812480
  61              		.global	BUTTON_PIN
  62              		.section	.rodata
  63              		.align	2
  66              	BUTTON_PIN:
  67 0018 0100     		.short	1
  68 001a 0020     		.short	8192
  69 001c 0002     		.short	512
  70 001e 0100     		.short	1
  71 0020 0200     		.short	2
  72 0022 0001     		.short	256
  73 0024 0040     		.short	16384
  74 0026 0010     		.short	4096
  75              		.global	BUTTON_CLK
  76              		.align	2
  79              	BUTTON_CLK:
  80 0028 04000000 		.word	4
  81 002c 10000000 		.word	16
  82 0030 08000000 		.word	8
  83 0034 40000000 		.word	64
  84 0038 40000000 		.word	64
  85 003c 20000000 		.word	32
  86 0040 20000000 		.word	32
  87 0044 20000000 		.word	32
  88              		.global	BUTTON_EXTI_LINE
  89              		.align	2
  92              	BUTTON_EXTI_LINE:
  93 0048 0100     		.short	1
  94 004a 0020     		.short	8192
  95 004c 0002     		.short	512
  96 004e 0100     		.short	1
  97 0050 0200     		.short	2
  98 0052 0001     		.short	256
  99 0054 0040     		.short	16384
 100 0056 0010     		.short	4096
 101              		.global	BUTTON_PORT_SOURCE
 102              		.align	2
 105              	BUTTON_PORT_SOURCE:
 106 0058 0000     		.short	0
 107 005a 0200     		.short	2
 108 005c 0100     		.short	1
 109 005e 0400     		.short	4
 110 0060 0400     		.short	4
 111 0062 0300     		.short	3
 112 0064 0300     		.short	3
 113 0066 0300     		.short	3
 114              		.global	BUTTON_PIN_SOURCE
 115              		.align	2
 118              	BUTTON_PIN_SOURCE:
 119 0068 0000     		.short	0
 120 006a 0D00     		.short	13
 121 006c 0900     		.short	9
 122 006e 0000     		.short	0
 123 0070 0100     		.short	1
 124 0072 0800     		.short	8
 125 0074 0E00     		.short	14
 126 0076 0C00     		.short	12
 127              		.global	BUTTON_IRQn
 128              		.align	2
 131              	BUTTON_IRQn:
 132 0078 0600     		.short	6
 133 007a 2800     		.short	40
 134 007c 1700     		.short	23
 135 007e 0600     		.short	6
 136 0080 0700     		.short	7
 137 0082 1700     		.short	23
 138 0084 2800     		.short	40
 139 0086 2800     		.short	40
 140              		.global	COM_USART
 141              		.data
 142              		.align	2
 145              	COM_USART:
 146 0030 00380140 		.word	1073821696
 147 0034 00440040 		.word	1073759232
 148              		.global	COM_TX_PORT
 149              		.align	2
 152              	COM_TX_PORT:
 153 0038 00080140 		.word	1073809408
 154 003c 00140140 		.word	1073812480
 155              		.global	COM_RX_PORT
 156              		.align	2
 159              	COM_RX_PORT:
 160 0040 00080140 		.word	1073809408
 161 0044 00140140 		.word	1073812480
 162              		.global	COM_USART_CLK
 163              		.section	.rodata
 164              		.align	2
 167              	COM_USART_CLK:
 168 0088 00400000 		.word	16384
 169 008c 00000200 		.word	131072
 170              		.global	COM_TX_PORT_CLK
 171              		.align	2
 174              	COM_TX_PORT_CLK:
 175 0090 04000000 		.word	4
 176 0094 20000000 		.word	32
 177              		.global	COM_RX_PORT_CLK
 178              		.align	2
 181              	COM_RX_PORT_CLK:
 182 0098 04000000 		.word	4
 183 009c 20000000 		.word	32
 184              		.global	COM_TX_PIN
 185              		.align	2
 188              	COM_TX_PIN:
 189 00a0 0002     		.short	512
 190 00a2 2000     		.short	32
 191              		.global	COM_RX_PIN
 192              		.align	2
 195              	COM_RX_PIN:
 196 00a4 0004     		.short	1024
 197 00a6 4000     		.short	64
 198              		.text
 199              		.align	2
 200              		.global	STM_EVAL_LEDInit
 201              		.thumb
 202              		.thumb_func
 204              	STM_EVAL_LEDInit:
 205              	.LFB29:
 206              		.file 1 "../src/stm3210b_eval.c"
   1:../src/stm3210b_eval.c **** /**
   2:../src/stm3210b_eval.c ****   ******************************************************************************
   3:../src/stm3210b_eval.c ****   * @file    stm3210b_eval.c
   4:../src/stm3210b_eval.c ****   * @author  MCD Application Team
   5:../src/stm3210b_eval.c ****   * @version V4.1.0
   6:../src/stm3210b_eval.c ****   * @date    03/01/2010
   7:../src/stm3210b_eval.c ****   * @brief   This file provides
   8:../src/stm3210b_eval.c ****   *            - set of firmware functions to manage Leds, push-button and COM ports
   9:../src/stm3210b_eval.c ****   *            - low level initialization functions for SD card (on SPI), SPI serial
  10:../src/stm3210b_eval.c ****   *              flash (sFLASH) and temperature sensor (LM75)
  11:../src/stm3210b_eval.c ****   *          available on STM3210B-EVAL evaluation board from STMicroelectronics.    
  12:../src/stm3210b_eval.c ****   ******************************************************************************
  13:../src/stm3210b_eval.c ****   * @copy
  14:../src/stm3210b_eval.c ****   *
  15:../src/stm3210b_eval.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  16:../src/stm3210b_eval.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  17:../src/stm3210b_eval.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  18:../src/stm3210b_eval.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  19:../src/stm3210b_eval.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  20:../src/stm3210b_eval.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  21:../src/stm3210b_eval.c ****   *
  22:../src/stm3210b_eval.c ****   * <h2><center>&copy; COPYRIGHT 2010 STMicroelectronics</center></h2>
  23:../src/stm3210b_eval.c ****   */ 
  24:../src/stm3210b_eval.c ****   
  25:../src/stm3210b_eval.c **** /* Includes ------------------------------------------------------------------*/
  26:../src/stm3210b_eval.c **** #include "stm3210b_eval.h"
  27:../src/stm3210b_eval.c **** 
  28:../src/stm3210b_eval.c **** /** @addtogroup Utilities
  29:../src/stm3210b_eval.c ****   * @{
  30:../src/stm3210b_eval.c ****   */ 
  31:../src/stm3210b_eval.c **** 
  32:../src/stm3210b_eval.c **** /** @addtogroup STM32_EVAL
  33:../src/stm3210b_eval.c ****   * @{
  34:../src/stm3210b_eval.c ****   */ 
  35:../src/stm3210b_eval.c **** 
  36:../src/stm3210b_eval.c **** /** @addtogroup STM3210B_EVAL
  37:../src/stm3210b_eval.c ****   * @{
  38:../src/stm3210b_eval.c ****   */ 
  39:../src/stm3210b_eval.c ****       
  40:../src/stm3210b_eval.c **** /** @defgroup STM3210B_EVAL_LOW_LEVEL 
  41:../src/stm3210b_eval.c ****   * @brief This file provides firmware functions to manage Leds, push-buttons, 
  42:../src/stm3210b_eval.c ****   *        COM ports, SD card on SPI, serial flash (sFLASH), serial EEPROM (sEE) 
  43:../src/stm3210b_eval.c ****   *        and temperature sensor (LM75) available on STM3210B-EVAL evaluation
  44:../src/stm3210b_eval.c ****   *        board from STMicroelectronics.
  45:../src/stm3210b_eval.c ****   * @{
  46:../src/stm3210b_eval.c ****   */ 
  47:../src/stm3210b_eval.c **** 
  48:../src/stm3210b_eval.c **** /** @defgroup STM3210B_EVAL_LOW_LEVEL_Private_TypesDefinitions
  49:../src/stm3210b_eval.c ****   * @{
  50:../src/stm3210b_eval.c ****   */ 
  51:../src/stm3210b_eval.c **** /**
  52:../src/stm3210b_eval.c ****   * @}
  53:../src/stm3210b_eval.c ****   */ 
  54:../src/stm3210b_eval.c **** 
  55:../src/stm3210b_eval.c **** 
  56:../src/stm3210b_eval.c **** /** @defgroup STM3210B_EVAL_LOW_LEVEL_Private_Defines
  57:../src/stm3210b_eval.c ****   * @{
  58:../src/stm3210b_eval.c ****   */ 
  59:../src/stm3210b_eval.c **** /**
  60:../src/stm3210b_eval.c ****   * @}
  61:../src/stm3210b_eval.c ****   */ 
  62:../src/stm3210b_eval.c **** 
  63:../src/stm3210b_eval.c **** 
  64:../src/stm3210b_eval.c **** /** @defgroup STM3210B_EVAL_LOW_LEVEL_Private_Macros
  65:../src/stm3210b_eval.c ****   * @{
  66:../src/stm3210b_eval.c ****   */ 
  67:../src/stm3210b_eval.c **** /**
  68:../src/stm3210b_eval.c ****   * @}
  69:../src/stm3210b_eval.c ****   */ 
  70:../src/stm3210b_eval.c **** 
  71:../src/stm3210b_eval.c **** 
  72:../src/stm3210b_eval.c **** /** @defgroup STM3210B_EVAL_LOW_LEVEL_Private_Variables
  73:../src/stm3210b_eval.c ****   * @{
  74:../src/stm3210b_eval.c ****   */ 
  75:../src/stm3210b_eval.c **** GPIO_TypeDef* GPIO_PORT[LEDn] = {LED1_GPIO_PORT, LED2_GPIO_PORT, LED3_GPIO_PORT,
  76:../src/stm3210b_eval.c ****                                  LED4_GPIO_PORT};
  77:../src/stm3210b_eval.c **** const uint16_t GPIO_PIN[LEDn] = {LED1_PIN, LED2_PIN, LED3_PIN,
  78:../src/stm3210b_eval.c ****                                  LED4_PIN};
  79:../src/stm3210b_eval.c **** const uint32_t GPIO_CLK[LEDn] = {LED1_GPIO_CLK, LED2_GPIO_CLK, LED3_GPIO_CLK,
  80:../src/stm3210b_eval.c ****                                  LED4_GPIO_CLK};
  81:../src/stm3210b_eval.c **** 
  82:../src/stm3210b_eval.c **** GPIO_TypeDef* BUTTON_PORT[BUTTONn] = {WAKEUP_BUTTON_GPIO_PORT, TAMPER_BUTTON_GPIO_PORT, 
  83:../src/stm3210b_eval.c ****                                       KEY_BUTTON_GPIO_PORT, RIGHT_BUTTON_GPIO_PORT,
  84:../src/stm3210b_eval.c ****                                       LEFT_BUTTON_GPIO_PORT, UP_BUTTON_GPIO_PORT,
  85:../src/stm3210b_eval.c ****                                       DOWN_BUTTON_GPIO_PORT, SEL_BUTTON_GPIO_PORT}; 
  86:../src/stm3210b_eval.c **** 
  87:../src/stm3210b_eval.c **** const uint16_t BUTTON_PIN[BUTTONn] = {WAKEUP_BUTTON_PIN, TAMPER_BUTTON_PIN, 
  88:../src/stm3210b_eval.c ****                                       KEY_BUTTON_PIN, RIGHT_BUTTON_PIN,
  89:../src/stm3210b_eval.c ****                                       LEFT_BUTTON_PIN, UP_BUTTON_PIN,
  90:../src/stm3210b_eval.c ****                                       DOWN_BUTTON_PIN, SEL_BUTTON_PIN}; 
  91:../src/stm3210b_eval.c **** 
  92:../src/stm3210b_eval.c **** const uint32_t BUTTON_CLK[BUTTONn] = {WAKEUP_BUTTON_GPIO_CLK, TAMPER_BUTTON_GPIO_CLK,
  93:../src/stm3210b_eval.c ****                                       KEY_BUTTON_GPIO_CLK, RIGHT_BUTTON_GPIO_CLK,
  94:../src/stm3210b_eval.c ****                                       LEFT_BUTTON_GPIO_CLK, UP_BUTTON_GPIO_CLK,
  95:../src/stm3210b_eval.c ****                                       DOWN_BUTTON_GPIO_CLK, SEL_BUTTON_GPIO_CLK};
  96:../src/stm3210b_eval.c **** 
  97:../src/stm3210b_eval.c **** const uint16_t BUTTON_EXTI_LINE[BUTTONn] = {WAKEUP_BUTTON_EXTI_LINE,
  98:../src/stm3210b_eval.c ****                                             TAMPER_BUTTON_EXTI_LINE, 
  99:../src/stm3210b_eval.c ****                                             KEY_BUTTON_EXTI_LINE,
 100:../src/stm3210b_eval.c ****                                             RIGHT_BUTTON_EXTI_LINE,
 101:../src/stm3210b_eval.c ****                                             LEFT_BUTTON_EXTI_LINE,
 102:../src/stm3210b_eval.c ****                                             UP_BUTTON_EXTI_LINE,
 103:../src/stm3210b_eval.c ****                                             DOWN_BUTTON_EXTI_LINE,
 104:../src/stm3210b_eval.c ****                                             SEL_BUTTON_EXTI_LINE};
 105:../src/stm3210b_eval.c **** 
 106:../src/stm3210b_eval.c **** const uint16_t BUTTON_PORT_SOURCE[BUTTONn] = {WAKEUP_BUTTON_EXTI_PORT_SOURCE,
 107:../src/stm3210b_eval.c ****                                               TAMPER_BUTTON_EXTI_PORT_SOURCE, 
 108:../src/stm3210b_eval.c ****                                               KEY_BUTTON_EXTI_PORT_SOURCE,
 109:../src/stm3210b_eval.c ****                                               RIGHT_BUTTON_EXTI_PORT_SOURCE,
 110:../src/stm3210b_eval.c ****                                               LEFT_BUTTON_EXTI_PORT_SOURCE,
 111:../src/stm3210b_eval.c ****                                               UP_BUTTON_EXTI_PORT_SOURCE,
 112:../src/stm3210b_eval.c ****                                               DOWN_BUTTON_EXTI_PORT_SOURCE,
 113:../src/stm3210b_eval.c ****                                               SEL_BUTTON_EXTI_PORT_SOURCE};
 114:../src/stm3210b_eval.c **** 								 
 115:../src/stm3210b_eval.c **** const uint16_t BUTTON_PIN_SOURCE[BUTTONn] = {WAKEUP_BUTTON_EXTI_PIN_SOURCE,
 116:../src/stm3210b_eval.c ****                                              TAMPER_BUTTON_EXTI_PIN_SOURCE, 
 117:../src/stm3210b_eval.c ****                                              KEY_BUTTON_EXTI_PIN_SOURCE,
 118:../src/stm3210b_eval.c ****                                              RIGHT_BUTTON_EXTI_PIN_SOURCE,
 119:../src/stm3210b_eval.c ****                                              LEFT_BUTTON_EXTI_PIN_SOURCE,
 120:../src/stm3210b_eval.c ****                                              UP_BUTTON_EXTI_PIN_SOURCE,
 121:../src/stm3210b_eval.c ****                                              DOWN_BUTTON_EXTI_PIN_SOURCE,
 122:../src/stm3210b_eval.c ****                                              SEL_BUTTON_EXTI_PIN_SOURCE}; 
 123:../src/stm3210b_eval.c **** 
 124:../src/stm3210b_eval.c **** const uint16_t BUTTON_IRQn[BUTTONn] = {WAKEUP_BUTTON_EXTI_IRQn, TAMPER_BUTTON_EXTI_IRQn, 
 125:../src/stm3210b_eval.c ****                                        KEY_BUTTON_EXTI_IRQn, RIGHT_BUTTON_EXTI_IRQn,
 126:../src/stm3210b_eval.c ****                                        LEFT_BUTTON_EXTI_IRQn, UP_BUTTON_EXTI_IRQn,
 127:../src/stm3210b_eval.c ****                                        DOWN_BUTTON_EXTI_IRQn, SEL_BUTTON_EXTI_IRQn};
 128:../src/stm3210b_eval.c **** 
 129:../src/stm3210b_eval.c **** USART_TypeDef* COM_USART[COMn] = {EVAL_COM1, EVAL_COM2}; 
 130:../src/stm3210b_eval.c **** 
 131:../src/stm3210b_eval.c **** GPIO_TypeDef* COM_TX_PORT[COMn] = {EVAL_COM1_TX_GPIO_PORT, EVAL_COM2_TX_GPIO_PORT};
 132:../src/stm3210b_eval.c ****  
 133:../src/stm3210b_eval.c **** GPIO_TypeDef* COM_RX_PORT[COMn] = {EVAL_COM1_RX_GPIO_PORT, EVAL_COM2_RX_GPIO_PORT};
 134:../src/stm3210b_eval.c ****  
 135:../src/stm3210b_eval.c **** const uint32_t COM_USART_CLK[COMn] = {EVAL_COM1_CLK, EVAL_COM2_CLK};
 136:../src/stm3210b_eval.c **** 
 137:../src/stm3210b_eval.c **** const uint32_t COM_TX_PORT_CLK[COMn] = {EVAL_COM1_TX_GPIO_CLK, EVAL_COM2_TX_GPIO_CLK};
 138:../src/stm3210b_eval.c ****  
 139:../src/stm3210b_eval.c **** const uint32_t COM_RX_PORT_CLK[COMn] = {EVAL_COM1_RX_GPIO_CLK, EVAL_COM2_RX_GPIO_CLK};
 140:../src/stm3210b_eval.c **** 
 141:../src/stm3210b_eval.c **** const uint16_t COM_TX_PIN[COMn] = {EVAL_COM1_TX_PIN, EVAL_COM2_TX_PIN};
 142:../src/stm3210b_eval.c **** 
 143:../src/stm3210b_eval.c **** const uint16_t COM_RX_PIN[COMn] = {EVAL_COM1_RX_PIN, EVAL_COM2_RX_PIN};
 144:../src/stm3210b_eval.c **** 
 145:../src/stm3210b_eval.c **** 
 146:../src/stm3210b_eval.c **** /**
 147:../src/stm3210b_eval.c ****   * @}
 148:../src/stm3210b_eval.c ****   */ 
 149:../src/stm3210b_eval.c **** 
 150:../src/stm3210b_eval.c **** 
 151:../src/stm3210b_eval.c **** /** @defgroup STM3210B_EVAL_LOW_LEVEL_Private_FunctionPrototypes
 152:../src/stm3210b_eval.c ****   * @{
 153:../src/stm3210b_eval.c ****   */ 
 154:../src/stm3210b_eval.c **** 
 155:../src/stm3210b_eval.c **** /**
 156:../src/stm3210b_eval.c ****   * @}
 157:../src/stm3210b_eval.c ****   */ 
 158:../src/stm3210b_eval.c **** 
 159:../src/stm3210b_eval.c **** 
 160:../src/stm3210b_eval.c **** /** @defgroup STM3210B_EVAL_LOW_LEVEL_Private_Functions
 161:../src/stm3210b_eval.c ****   * @{
 162:../src/stm3210b_eval.c ****   */ 
 163:../src/stm3210b_eval.c **** 
 164:../src/stm3210b_eval.c **** /**
 165:../src/stm3210b_eval.c ****   * @brief  Configures LED GPIO.
 166:../src/stm3210b_eval.c ****   * @param  Led: Specifies the Led to be configured. 
 167:../src/stm3210b_eval.c ****   *   This parameter can be one of following parameters:
 168:../src/stm3210b_eval.c ****   *     @arg LED1
 169:../src/stm3210b_eval.c ****   *     @arg LED2
 170:../src/stm3210b_eval.c ****   *     @arg LED3
 171:../src/stm3210b_eval.c ****   *     @arg LED4
 172:../src/stm3210b_eval.c ****   * @retval None
 173:../src/stm3210b_eval.c ****   */
 174:../src/stm3210b_eval.c **** void STM_EVAL_LEDInit(Led_TypeDef Led)
 175:../src/stm3210b_eval.c **** {
 207              		.loc 1 175 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 16
 210              		@ frame_needed = 1, uses_anonymous_args = 0
 211 0000 80B5     		push	{r7, lr}
 212              	.LCFI0:
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 7, -8
 215              		.cfi_offset 14, -4
 216 0002 84B0     		sub	sp, sp, #16
 217              	.LCFI1:
 218              		.cfi_def_cfa_offset 24
 219 0004 00AF     		add	r7, sp, #0
 220              	.LCFI2:
 221              		.cfi_def_cfa_register 7
 222 0006 0346     		mov	r3, r0
 223 0008 FB71     		strb	r3, [r7, #7]
 176:../src/stm3210b_eval.c ****   GPIO_InitTypeDef  GPIO_InitStructure;
 177:../src/stm3210b_eval.c ****   
 178:../src/stm3210b_eval.c ****   /* Enable the GPIO_LED Clock */
 179:../src/stm3210b_eval.c ****   RCC_APB2PeriphClockCmd(GPIO_CLK[Led], ENABLE);
 224              		.loc 1 179 0
 225 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 226 000c 0B4B     		ldr	r3, .L2
 227 000e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 228 0012 1846     		mov	r0, r3
 229 0014 4FF00101 		mov	r1, #1
 230 0018 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 180:../src/stm3210b_eval.c **** 
 181:../src/stm3210b_eval.c ****   /* Configure the GPIO_LED pin */
 182:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = GPIO_PIN[Led];
 231              		.loc 1 182 0
 232 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 233 001e 084B     		ldr	r3, .L2+4
 234 0020 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 235 0024 BB81     		strh	r3, [r7, #12]	@ movhi
 183:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
 236              		.loc 1 183 0
 237 0026 4FF01003 		mov	r3, #16
 238 002a FB73     		strb	r3, [r7, #15]
 184:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 239              		.loc 1 184 0
 240 002c 4FF00303 		mov	r3, #3
 241 0030 BB73     		strb	r3, [r7, #14]
 185:../src/stm3210b_eval.c **** 
 186:../src/stm3210b_eval.c **** //  GPIO_Init(GPIO_PORT[Led], &GPIO_InitStructure);
 187:../src/stm3210b_eval.c **** }
 242              		.loc 1 187 0
 243 0032 07F11007 		add	r7, r7, #16
 244 0036 BD46     		mov	sp, r7
 245 0038 80BD     		pop	{r7, pc}
 246              	.L3:
 247 003a 00BF     		.align	2
 248              	.L2:
 249 003c 00000000 		.word	GPIO_CLK
 250 0040 00000000 		.word	GPIO_PIN
 251              		.cfi_endproc
 252              	.LFE29:
 254              		.align	2
 255              		.global	STM_EVAL_LEDOn
 256              		.thumb
 257              		.thumb_func
 259              	STM_EVAL_LEDOn:
 260              	.LFB30:
 188:../src/stm3210b_eval.c **** 
 189:../src/stm3210b_eval.c **** /**
 190:../src/stm3210b_eval.c ****   * @brief  Turns selected LED On.
 191:../src/stm3210b_eval.c ****   * @param  Led: Specifies the Led to be set on. 
 192:../src/stm3210b_eval.c ****   *   This parameter can be one of following parameters:
 193:../src/stm3210b_eval.c ****   *     @arg LED1
 194:../src/stm3210b_eval.c ****   *     @arg LED2
 195:../src/stm3210b_eval.c ****   *     @arg LED3
 196:../src/stm3210b_eval.c ****   *     @arg LED4  
 197:../src/stm3210b_eval.c ****   * @retval None
 198:../src/stm3210b_eval.c ****   */
 199:../src/stm3210b_eval.c **** void STM_EVAL_LEDOn(Led_TypeDef Led)
 200:../src/stm3210b_eval.c **** {
 261              		.loc 1 200 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 8
 264              		@ frame_needed = 1, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266 0044 80B4     		push	{r7}
 267              	.LCFI3:
 268              		.cfi_def_cfa_offset 4
 269              		.cfi_offset 7, -4
 270 0046 83B0     		sub	sp, sp, #12
 271              	.LCFI4:
 272              		.cfi_def_cfa_offset 16
 273 0048 00AF     		add	r7, sp, #0
 274              	.LCFI5:
 275              		.cfi_def_cfa_register 7
 276 004a 0346     		mov	r3, r0
 277 004c FB71     		strb	r3, [r7, #7]
 201:../src/stm3210b_eval.c ****   GPIO_PORT[Led]->BSRR = GPIO_PIN[Led];     
 278              		.loc 1 201 0
 279 004e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 280 0050 064B     		ldr	r3, .L5
 281 0052 53F82230 		ldr	r3, [r3, r2, lsl #2]
 282 0056 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 283 0058 054A     		ldr	r2, .L5+4
 284 005a 32F81120 		ldrh	r2, [r2, r1, lsl #1]
 285 005e 1A61     		str	r2, [r3, #16]
 202:../src/stm3210b_eval.c **** }
 286              		.loc 1 202 0
 287 0060 07F10C07 		add	r7, r7, #12
 288 0064 BD46     		mov	sp, r7
 289 0066 80BC     		pop	{r7}
 290 0068 7047     		bx	lr
 291              	.L6:
 292 006a 00BF     		.align	2
 293              	.L5:
 294 006c 00000000 		.word	GPIO_PORT
 295 0070 00000000 		.word	GPIO_PIN
 296              		.cfi_endproc
 297              	.LFE30:
 299              		.align	2
 300              		.global	STM_EVAL_LEDOff
 301              		.thumb
 302              		.thumb_func
 304              	STM_EVAL_LEDOff:
 305              	.LFB31:
 203:../src/stm3210b_eval.c **** 
 204:../src/stm3210b_eval.c **** /**
 205:../src/stm3210b_eval.c ****   * @brief  Turns selected LED Off.
 206:../src/stm3210b_eval.c ****   * @param  Led: Specifies the Led to be set off. 
 207:../src/stm3210b_eval.c ****   *   This parameter can be one of following parameters:
 208:../src/stm3210b_eval.c ****   *     @arg LED1
 209:../src/stm3210b_eval.c ****   *     @arg LED2
 210:../src/stm3210b_eval.c ****   *     @arg LED3
 211:../src/stm3210b_eval.c ****   *     @arg LED4 
 212:../src/stm3210b_eval.c ****   * @retval None
 213:../src/stm3210b_eval.c ****   */
 214:../src/stm3210b_eval.c **** void STM_EVAL_LEDOff(Led_TypeDef Led)
 215:../src/stm3210b_eval.c **** {
 306              		.loc 1 215 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 8
 309              		@ frame_needed = 1, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 311 0074 80B4     		push	{r7}
 312              	.LCFI6:
 313              		.cfi_def_cfa_offset 4
 314              		.cfi_offset 7, -4
 315 0076 83B0     		sub	sp, sp, #12
 316              	.LCFI7:
 317              		.cfi_def_cfa_offset 16
 318 0078 00AF     		add	r7, sp, #0
 319              	.LCFI8:
 320              		.cfi_def_cfa_register 7
 321 007a 0346     		mov	r3, r0
 322 007c FB71     		strb	r3, [r7, #7]
 216:../src/stm3210b_eval.c ****   GPIO_PORT[Led]->BRR = GPIO_PIN[Led];  
 323              		.loc 1 216 0
 324 007e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 325 0080 064B     		ldr	r3, .L8
 326 0082 53F82230 		ldr	r3, [r3, r2, lsl #2]
 327 0086 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 328 0088 054A     		ldr	r2, .L8+4
 329 008a 32F81120 		ldrh	r2, [r2, r1, lsl #1]
 330 008e 5A61     		str	r2, [r3, #20]
 217:../src/stm3210b_eval.c **** }
 331              		.loc 1 217 0
 332 0090 07F10C07 		add	r7, r7, #12
 333 0094 BD46     		mov	sp, r7
 334 0096 80BC     		pop	{r7}
 335 0098 7047     		bx	lr
 336              	.L9:
 337 009a 00BF     		.align	2
 338              	.L8:
 339 009c 00000000 		.word	GPIO_PORT
 340 00a0 00000000 		.word	GPIO_PIN
 341              		.cfi_endproc
 342              	.LFE31:
 344              		.align	2
 345              		.global	STM_EVAL_LEDToggle
 346              		.thumb
 347              		.thumb_func
 349              	STM_EVAL_LEDToggle:
 350              	.LFB32:
 218:../src/stm3210b_eval.c **** 
 219:../src/stm3210b_eval.c **** /**
 220:../src/stm3210b_eval.c ****   * @brief  Toggles the selected LED.
 221:../src/stm3210b_eval.c ****   * @param  Led: Specifies the Led to be toggled. 
 222:../src/stm3210b_eval.c ****   *   This parameter can be one of following parameters:
 223:../src/stm3210b_eval.c ****   *     @arg LED1
 224:../src/stm3210b_eval.c ****   *     @arg LED2
 225:../src/stm3210b_eval.c ****   *     @arg LED3
 226:../src/stm3210b_eval.c ****   *     @arg LED4  
 227:../src/stm3210b_eval.c ****   * @retval None
 228:../src/stm3210b_eval.c ****   */
 229:../src/stm3210b_eval.c **** void STM_EVAL_LEDToggle(Led_TypeDef Led)
 230:../src/stm3210b_eval.c **** {
 351              		.loc 1 230 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 8
 354              		@ frame_needed = 1, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 356 00a4 80B4     		push	{r7}
 357              	.LCFI9:
 358              		.cfi_def_cfa_offset 4
 359              		.cfi_offset 7, -4
 360 00a6 83B0     		sub	sp, sp, #12
 361              	.LCFI10:
 362              		.cfi_def_cfa_offset 16
 363 00a8 00AF     		add	r7, sp, #0
 364              	.LCFI11:
 365              		.cfi_def_cfa_register 7
 366 00aa 0346     		mov	r3, r0
 367 00ac FB71     		strb	r3, [r7, #7]
 231:../src/stm3210b_eval.c ****   GPIO_PORT[Led]->ODR ^= GPIO_PIN[Led];
 368              		.loc 1 231 0
 369 00ae FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 370 00b0 094B     		ldr	r3, .L11
 371 00b2 53F82230 		ldr	r3, [r3, r2, lsl #2]
 372 00b6 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 373 00b8 074A     		ldr	r2, .L11
 374 00ba 52F82120 		ldr	r2, [r2, r1, lsl #2]
 375 00be D168     		ldr	r1, [r2, #12]
 376 00c0 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 377 00c2 064A     		ldr	r2, .L11+4
 378 00c4 32F81020 		ldrh	r2, [r2, r0, lsl #1]
 379 00c8 4A40     		eors	r2, r2, r1
 380 00ca DA60     		str	r2, [r3, #12]
 232:../src/stm3210b_eval.c **** }
 381              		.loc 1 232 0
 382 00cc 07F10C07 		add	r7, r7, #12
 383 00d0 BD46     		mov	sp, r7
 384 00d2 80BC     		pop	{r7}
 385 00d4 7047     		bx	lr
 386              	.L12:
 387 00d6 00BF     		.align	2
 388              	.L11:
 389 00d8 00000000 		.word	GPIO_PORT
 390 00dc 00000000 		.word	GPIO_PIN
 391              		.cfi_endproc
 392              	.LFE32:
 394              		.align	2
 395              		.global	STM_EVAL_PBInit
 396              		.thumb
 397              		.thumb_func
 399              	STM_EVAL_PBInit:
 400              	.LFB33:
 233:../src/stm3210b_eval.c **** 
 234:../src/stm3210b_eval.c **** /**
 235:../src/stm3210b_eval.c ****   * @brief  Configures Button GPIO and EXTI Line.
 236:../src/stm3210b_eval.c ****   * @param  Button: Specifies the Button to be configured.
 237:../src/stm3210b_eval.c ****   *   This parameter can be one of following parameters:   
 238:../src/stm3210b_eval.c ****   *     @arg BUTTON_WAKEUP: Wakeup Push Button
 239:../src/stm3210b_eval.c ****   *     @arg BUTTON_TAMPER: Tamper Push Button  
 240:../src/stm3210b_eval.c ****   *     @arg BUTTON_KEY: Key Push Button 
 241:../src/stm3210b_eval.c ****   *     @arg BUTTON_RIGHT: Joystick Right Push Button 
 242:../src/stm3210b_eval.c ****   *     @arg BUTTON_LEFT: Joystick Left Push Button 
 243:../src/stm3210b_eval.c ****   *     @arg BUTTON_UP: Joystick Up Push Button 
 244:../src/stm3210b_eval.c ****   *     @arg BUTTON_DOWN: Joystick Down Push Button
 245:../src/stm3210b_eval.c ****   *     @arg BUTTON_SEL: Joystick Sel Push Button
 246:../src/stm3210b_eval.c ****   * @param  Button_Mode: Specifies Button mode.
 247:../src/stm3210b_eval.c ****   *   This parameter can be one of following parameters:   
 248:../src/stm3210b_eval.c ****   *     @arg BUTTON_MODE_GPIO: Button will be used as simple IO 
 249:../src/stm3210b_eval.c ****   *     @arg BUTTON_MODE_EXTI: Button will be connected to EXTI line with interrupt
 250:../src/stm3210b_eval.c ****   *                     generation capability  
 251:../src/stm3210b_eval.c ****   * @retval None
 252:../src/stm3210b_eval.c ****   */
 253:../src/stm3210b_eval.c **** void STM_EVAL_PBInit(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode)
 254:../src/stm3210b_eval.c **** {
 401              		.loc 1 254 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 24
 404              		@ frame_needed = 1, uses_anonymous_args = 0
 405 00e0 80B5     		push	{r7, lr}
 406              	.LCFI12:
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 7, -8
 409              		.cfi_offset 14, -4
 410 00e2 86B0     		sub	sp, sp, #24
 411              	.LCFI13:
 412              		.cfi_def_cfa_offset 32
 413 00e4 00AF     		add	r7, sp, #0
 414              	.LCFI14:
 415              		.cfi_def_cfa_register 7
 416 00e6 0246     		mov	r2, r0
 417 00e8 0B46     		mov	r3, r1
 418 00ea FA71     		strb	r2, [r7, #7]
 419 00ec BB71     		strb	r3, [r7, #6]
 255:../src/stm3210b_eval.c ****   GPIO_InitTypeDef GPIO_InitStructure;
 256:../src/stm3210b_eval.c ****   EXTI_InitTypeDef EXTI_InitStructure;
 257:../src/stm3210b_eval.c ****   NVIC_InitTypeDef NVIC_InitStructure;
 258:../src/stm3210b_eval.c **** 
 259:../src/stm3210b_eval.c ****   /* Enable the BUTTON Clock */
 260:../src/stm3210b_eval.c ****   RCC_APB2PeriphClockCmd(BUTTON_CLK[Button] | RCC_APB2Periph_AFIO, ENABLE);
 420              		.loc 1 260 0
 421 00ee FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 422 00f0 2F4B     		ldr	r3, .L17
 423 00f2 53F82230 		ldr	r3, [r3, r2, lsl #2]
 424 00f6 43F00103 		orr	r3, r3, #1
 425 00fa 1846     		mov	r0, r3
 426 00fc 4FF00101 		mov	r1, #1
 427 0100 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 261:../src/stm3210b_eval.c **** 
 262:../src/stm3210b_eval.c ****   /* Configure Button pin as input floating */
 263:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 428              		.loc 1 263 0
 429 0104 4FF00403 		mov	r3, #4
 430 0108 FB75     		strb	r3, [r7, #23]
 264:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = BUTTON_PIN[Button];
 431              		.loc 1 264 0
 432 010a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 433 010c 294B     		ldr	r3, .L17+4
 434 010e 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 435 0112 BB82     		strh	r3, [r7, #20]	@ movhi
 265:../src/stm3210b_eval.c ****   GPIO_Init(BUTTON_PORT[Button], &GPIO_InitStructure);
 436              		.loc 1 265 0
 437 0114 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 438 0116 284B     		ldr	r3, .L17+8
 439 0118 53F82220 		ldr	r2, [r3, r2, lsl #2]
 440 011c 07F11403 		add	r3, r7, #20
 441 0120 1046     		mov	r0, r2
 442 0122 1946     		mov	r1, r3
 443 0124 FFF7FEFF 		bl	GPIO_Init
 266:../src/stm3210b_eval.c **** 
 267:../src/stm3210b_eval.c **** 
 268:../src/stm3210b_eval.c ****   if (Button_Mode == BUTTON_MODE_EXTI)
 444              		.loc 1 268 0
 445 0128 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 446 012a 012B     		cmp	r3, #1
 447 012c 3BD1     		bne	.L13
 269:../src/stm3210b_eval.c ****   {
 270:../src/stm3210b_eval.c ****     /* Connect Button EXTI Line to Button GPIO Pin */
 271:../src/stm3210b_eval.c ****     GPIO_EXTILineConfig(BUTTON_PORT_SOURCE[Button], BUTTON_PIN_SOURCE[Button]);
 448              		.loc 1 271 0
 449 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 450 0130 224B     		ldr	r3, .L17+12
 451 0132 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 452 0136 DAB2     		uxtb	r2, r3
 453 0138 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 454 013a 214B     		ldr	r3, .L17+16
 455 013c 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 456 0140 DBB2     		uxtb	r3, r3
 457 0142 1046     		mov	r0, r2
 458 0144 1946     		mov	r1, r3
 459 0146 FFF7FEFF 		bl	GPIO_EXTILineConfig
 272:../src/stm3210b_eval.c **** 
 273:../src/stm3210b_eval.c ****     /* Configure Button EXTI line */
 274:../src/stm3210b_eval.c ****     EXTI_InitStructure.EXTI_Line = BUTTON_EXTI_LINE[Button];
 460              		.loc 1 274 0
 461 014a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 462 014c 1D4B     		ldr	r3, .L17+20
 463 014e 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 464 0152 FB60     		str	r3, [r7, #12]
 275:../src/stm3210b_eval.c ****     EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
 465              		.loc 1 275 0
 466 0154 4FF00003 		mov	r3, #0
 467 0158 3B74     		strb	r3, [r7, #16]
 276:../src/stm3210b_eval.c **** 
 277:../src/stm3210b_eval.c ****     if(Button != BUTTON_WAKEUP)
 468              		.loc 1 277 0
 469 015a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 470 015c 002B     		cmp	r3, #0
 471 015e 03D0     		beq	.L15
 278:../src/stm3210b_eval.c ****     {
 279:../src/stm3210b_eval.c ****       EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;  
 472              		.loc 1 279 0
 473 0160 4FF00C03 		mov	r3, #12
 474 0164 7B74     		strb	r3, [r7, #17]
 475 0166 02E0     		b	.L16
 476              	.L15:
 280:../src/stm3210b_eval.c ****     }
 281:../src/stm3210b_eval.c ****     else
 282:../src/stm3210b_eval.c ****     {
 283:../src/stm3210b_eval.c ****       EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;  
 477              		.loc 1 283 0
 478 0168 4FF00803 		mov	r3, #8
 479 016c 7B74     		strb	r3, [r7, #17]
 480              	.L16:
 284:../src/stm3210b_eval.c ****     }
 285:../src/stm3210b_eval.c ****     EXTI_InitStructure.EXTI_LineCmd = ENABLE;
 481              		.loc 1 285 0
 482 016e 4FF00103 		mov	r3, #1
 483 0172 BB74     		strb	r3, [r7, #18]
 286:../src/stm3210b_eval.c ****     EXTI_Init(&EXTI_InitStructure);
 484              		.loc 1 286 0
 485 0174 07F10C03 		add	r3, r7, #12
 486 0178 1846     		mov	r0, r3
 487 017a FFF7FEFF 		bl	EXTI_Init
 287:../src/stm3210b_eval.c **** 
 288:../src/stm3210b_eval.c ****     /* Enable and set Button EXTI Interrupt to the lowest priority */
 289:../src/stm3210b_eval.c ****     NVIC_InitStructure.NVIC_IRQChannel = BUTTON_IRQn[Button];
 488              		.loc 1 289 0
 489 017e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 490 0180 114B     		ldr	r3, .L17+24
 491 0182 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 492 0186 DBB2     		uxtb	r3, r3
 493 0188 3B72     		strb	r3, [r7, #8]
 290:../src/stm3210b_eval.c ****     NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x0F;
 494              		.loc 1 290 0
 495 018a 4FF00F03 		mov	r3, #15
 496 018e 7B72     		strb	r3, [r7, #9]
 291:../src/stm3210b_eval.c ****     NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x0F;
 497              		.loc 1 291 0
 498 0190 4FF00F03 		mov	r3, #15
 499 0194 BB72     		strb	r3, [r7, #10]
 292:../src/stm3210b_eval.c ****     NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 500              		.loc 1 292 0
 501 0196 4FF00103 		mov	r3, #1
 502 019a FB72     		strb	r3, [r7, #11]
 293:../src/stm3210b_eval.c **** 
 294:../src/stm3210b_eval.c ****     NVIC_Init(&NVIC_InitStructure); 
 503              		.loc 1 294 0
 504 019c 07F10803 		add	r3, r7, #8
 505 01a0 1846     		mov	r0, r3
 506 01a2 FFF7FEFF 		bl	NVIC_Init
 507              	.L13:
 295:../src/stm3210b_eval.c ****   }
 296:../src/stm3210b_eval.c **** }
 508              		.loc 1 296 0
 509 01a6 07F11807 		add	r7, r7, #24
 510 01aa BD46     		mov	sp, r7
 511 01ac 80BD     		pop	{r7, pc}
 512              	.L18:
 513 01ae 00BF     		.align	2
 514              	.L17:
 515 01b0 00000000 		.word	BUTTON_CLK
 516 01b4 00000000 		.word	BUTTON_PIN
 517 01b8 00000000 		.word	BUTTON_PORT
 518 01bc 00000000 		.word	BUTTON_PORT_SOURCE
 519 01c0 00000000 		.word	BUTTON_PIN_SOURCE
 520 01c4 00000000 		.word	BUTTON_EXTI_LINE
 521 01c8 00000000 		.word	BUTTON_IRQn
 522              		.cfi_endproc
 523              	.LFE33:
 525              		.align	2
 526              		.global	STM_EVAL_PBGetState
 527              		.thumb
 528              		.thumb_func
 530              	STM_EVAL_PBGetState:
 531              	.LFB34:
 297:../src/stm3210b_eval.c **** 
 298:../src/stm3210b_eval.c **** /**
 299:../src/stm3210b_eval.c ****   * @brief  Returns the selected Button state.
 300:../src/stm3210b_eval.c ****   * @param  Button: Specifies the Button to be checked.
 301:../src/stm3210b_eval.c ****   *   This parameter can be one of following parameters:    
 302:../src/stm3210b_eval.c ****   *     @arg BUTTON_WAKEUP: Wakeup Push Button
 303:../src/stm3210b_eval.c ****   *     @arg BUTTON_TAMPER: Tamper Push Button  
 304:../src/stm3210b_eval.c ****   *     @arg BUTTON_KEY: Key Push Button 
 305:../src/stm3210b_eval.c ****   *     @arg BUTTON_RIGHT: Joystick Right Push Button 
 306:../src/stm3210b_eval.c ****   *     @arg BUTTON_LEFT: Joystick Left Push Button 
 307:../src/stm3210b_eval.c ****   *     @arg BUTTON_UP: Joystick Up Push Button 
 308:../src/stm3210b_eval.c ****   *     @arg BUTTON_DOWN: Joystick Down Push Button
 309:../src/stm3210b_eval.c ****   *     @arg BUTTON_SEL: Joystick Sel Push Button    
 310:../src/stm3210b_eval.c ****   * @retval The Button GPIO pin value.
 311:../src/stm3210b_eval.c ****   */
 312:../src/stm3210b_eval.c **** uint32_t STM_EVAL_PBGetState(Button_TypeDef Button)
 313:../src/stm3210b_eval.c **** {
 532              		.loc 1 313 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 8
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536 01cc 80B5     		push	{r7, lr}
 537              	.LCFI15:
 538              		.cfi_def_cfa_offset 8
 539              		.cfi_offset 7, -8
 540              		.cfi_offset 14, -4
 541 01ce 82B0     		sub	sp, sp, #8
 542              	.LCFI16:
 543              		.cfi_def_cfa_offset 16
 544 01d0 00AF     		add	r7, sp, #0
 545              	.LCFI17:
 546              		.cfi_def_cfa_register 7
 547 01d2 0346     		mov	r3, r0
 548 01d4 FB71     		strb	r3, [r7, #7]
 314:../src/stm3210b_eval.c ****   return GPIO_ReadInputDataBit(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 549              		.loc 1 314 0
 550 01d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 551 01d8 084B     		ldr	r3, .L21
 552 01da 53F82220 		ldr	r2, [r3, r2, lsl #2]
 553 01de F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 554 01e0 074B     		ldr	r3, .L21+4
 555 01e2 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 556 01e6 1046     		mov	r0, r2
 557 01e8 1946     		mov	r1, r3
 558 01ea FFF7FEFF 		bl	GPIO_ReadInputDataBit
 559 01ee 0346     		mov	r3, r0
 315:../src/stm3210b_eval.c **** }
 560              		.loc 1 315 0
 561 01f0 1846     		mov	r0, r3
 562 01f2 07F10807 		add	r7, r7, #8
 563 01f6 BD46     		mov	sp, r7
 564 01f8 80BD     		pop	{r7, pc}
 565              	.L22:
 566 01fa 00BF     		.align	2
 567              	.L21:
 568 01fc 00000000 		.word	BUTTON_PORT
 569 0200 00000000 		.word	BUTTON_PIN
 570              		.cfi_endproc
 571              	.LFE34:
 573              		.align	2
 574              		.global	STM_EVAL_COMInit
 575              		.thumb
 576              		.thumb_func
 578              	STM_EVAL_COMInit:
 579              	.LFB35:
 316:../src/stm3210b_eval.c **** 
 317:../src/stm3210b_eval.c **** /**
 318:../src/stm3210b_eval.c ****   * @brief  Configures COM port.
 319:../src/stm3210b_eval.c ****   * @param  COM: Specifies the COM port to be configured.
 320:../src/stm3210b_eval.c ****   *   This parameter can be one of following parameters:    
 321:../src/stm3210b_eval.c ****   *     @arg COM1
 322:../src/stm3210b_eval.c ****   *     @arg COM2  
 323:../src/stm3210b_eval.c ****   * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure that
 324:../src/stm3210b_eval.c ****   *   contains the configuration information for the specified USART peripheral.
 325:../src/stm3210b_eval.c ****   * @retval None
 326:../src/stm3210b_eval.c ****   */
 327:../src/stm3210b_eval.c **** void STM_EVAL_COMInit(COM_TypeDef COM, USART_InitTypeDef* USART_InitStruct)
 328:../src/stm3210b_eval.c **** {
 580              		.loc 1 328 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 16
 583              		@ frame_needed = 1, uses_anonymous_args = 0
 584 0204 80B5     		push	{r7, lr}
 585              	.LCFI18:
 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 7, -8
 588              		.cfi_offset 14, -4
 589 0206 84B0     		sub	sp, sp, #16
 590              	.LCFI19:
 591              		.cfi_def_cfa_offset 24
 592 0208 00AF     		add	r7, sp, #0
 593              	.LCFI20:
 594              		.cfi_def_cfa_register 7
 595 020a 0346     		mov	r3, r0
 596 020c 3960     		str	r1, [r7, #0]
 597 020e FB71     		strb	r3, [r7, #7]
 329:../src/stm3210b_eval.c ****   GPIO_InitTypeDef GPIO_InitStructure;
 330:../src/stm3210b_eval.c **** 
 331:../src/stm3210b_eval.c ****   /* Enable GPIO clock */
 332:../src/stm3210b_eval.c ****   RCC_APB2PeriphClockCmd(COM_TX_PORT_CLK[COM] | COM_RX_PORT_CLK[COM] | RCC_APB2Periph_AFIO, ENABLE)
 598              		.loc 1 332 0
 599 0210 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 600 0212 334B     		ldr	r3, .L26
 601 0214 53F82220 		ldr	r2, [r3, r2, lsl #2]
 602 0218 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 603 021a 324B     		ldr	r3, .L26+4
 604 021c 53F82130 		ldr	r3, [r3, r1, lsl #2]
 605 0220 1343     		orrs	r3, r3, r2
 606 0222 43F00103 		orr	r3, r3, #1
 607 0226 1846     		mov	r0, r3
 608 0228 4FF00101 		mov	r1, #1
 609 022c FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 333:../src/stm3210b_eval.c **** 
 334:../src/stm3210b_eval.c ****   if (COM == COM1)
 610              		.loc 1 334 0
 611 0230 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612 0232 002B     		cmp	r3, #0
 613 0234 09D1     		bne	.L24
 335:../src/stm3210b_eval.c ****   {
 336:../src/stm3210b_eval.c ****     RCC_APB2PeriphClockCmd(COM_USART_CLK[COM], ENABLE); 
 614              		.loc 1 336 0
 615 0236 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 616 0238 2B4B     		ldr	r3, .L26+8
 617 023a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 618 023e 1846     		mov	r0, r3
 619 0240 4FF00101 		mov	r1, #1
 620 0244 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 621 0248 0EE0     		b	.L25
 622              	.L24:
 337:../src/stm3210b_eval.c ****   }
 338:../src/stm3210b_eval.c ****   else
 339:../src/stm3210b_eval.c ****   {
 340:../src/stm3210b_eval.c ****     /* Enable the USART2 Pins Software Remapping */
 341:../src/stm3210b_eval.c ****     GPIO_PinRemapConfig(GPIO_Remap_USART2, ENABLE);
 623              		.loc 1 341 0
 624 024a 4FF00800 		mov	r0, #8
 625 024e 4FF00101 		mov	r1, #1
 626 0252 FFF7FEFF 		bl	GPIO_PinRemapConfig
 342:../src/stm3210b_eval.c ****     RCC_APB1PeriphClockCmd(COM_USART_CLK[COM], ENABLE);
 627              		.loc 1 342 0
 628 0256 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 629 0258 234B     		ldr	r3, .L26+8
 630 025a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 631 025e 1846     		mov	r0, r3
 632 0260 4FF00101 		mov	r1, #1
 633 0264 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 634              	.L25:
 343:../src/stm3210b_eval.c ****   }
 344:../src/stm3210b_eval.c **** 
 345:../src/stm3210b_eval.c ****   /* Configure USART Tx as alternate function push-pull */
 346:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 635              		.loc 1 346 0
 636 0268 4FF01803 		mov	r3, #24
 637 026c FB73     		strb	r3, [r7, #15]
 347:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = COM_TX_PIN[COM];
 638              		.loc 1 347 0
 639 026e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 640 0270 1E4B     		ldr	r3, .L26+12
 641 0272 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 642 0276 BB81     		strh	r3, [r7, #12]	@ movhi
 348:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 643              		.loc 1 348 0
 644 0278 4FF00303 		mov	r3, #3
 645 027c BB73     		strb	r3, [r7, #14]
 349:../src/stm3210b_eval.c ****   GPIO_Init(COM_TX_PORT[COM], &GPIO_InitStructure);
 646              		.loc 1 349 0
 647 027e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 648 0280 1B4B     		ldr	r3, .L26+16
 649 0282 53F82220 		ldr	r2, [r3, r2, lsl #2]
 650 0286 07F10C03 		add	r3, r7, #12
 651 028a 1046     		mov	r0, r2
 652 028c 1946     		mov	r1, r3
 653 028e FFF7FEFF 		bl	GPIO_Init
 350:../src/stm3210b_eval.c **** 
 351:../src/stm3210b_eval.c **** 
 352:../src/stm3210b_eval.c ****   /* Configure USART Rx as input floating */
 353:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 654              		.loc 1 353 0
 655 0292 4FF00403 		mov	r3, #4
 656 0296 FB73     		strb	r3, [r7, #15]
 354:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = COM_RX_PIN[COM];
 657              		.loc 1 354 0
 658 0298 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 659 029a 164B     		ldr	r3, .L26+20
 660 029c 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 661 02a0 BB81     		strh	r3, [r7, #12]	@ movhi
 355:../src/stm3210b_eval.c ****   GPIO_Init(COM_RX_PORT[COM], &GPIO_InitStructure);
 662              		.loc 1 355 0
 663 02a2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 664 02a4 144B     		ldr	r3, .L26+24
 665 02a6 53F82220 		ldr	r2, [r3, r2, lsl #2]
 666 02aa 07F10C03 		add	r3, r7, #12
 667 02ae 1046     		mov	r0, r2
 668 02b0 1946     		mov	r1, r3
 669 02b2 FFF7FEFF 		bl	GPIO_Init
 356:../src/stm3210b_eval.c **** 
 357:../src/stm3210b_eval.c ****   /* USART configuration */
 358:../src/stm3210b_eval.c ****   USART_Init(COM_USART[COM], USART_InitStruct);
 670              		.loc 1 358 0
 671 02b6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 672 02b8 104B     		ldr	r3, .L26+28
 673 02ba 53F82230 		ldr	r3, [r3, r2, lsl #2]
 674 02be 1846     		mov	r0, r3
 675 02c0 3968     		ldr	r1, [r7, #0]
 676 02c2 FFF7FEFF 		bl	USART_Init
 359:../src/stm3210b_eval.c ****     
 360:../src/stm3210b_eval.c ****   /* Enable USART */
 361:../src/stm3210b_eval.c ****   USART_Cmd(COM_USART[COM], ENABLE);
 677              		.loc 1 361 0
 678 02c6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 679 02c8 0C4B     		ldr	r3, .L26+28
 680 02ca 53F82230 		ldr	r3, [r3, r2, lsl #2]
 681 02ce 1846     		mov	r0, r3
 682 02d0 4FF00101 		mov	r1, #1
 683 02d4 FFF7FEFF 		bl	USART_Cmd
 362:../src/stm3210b_eval.c **** }
 684              		.loc 1 362 0
 685 02d8 07F11007 		add	r7, r7, #16
 686 02dc BD46     		mov	sp, r7
 687 02de 80BD     		pop	{r7, pc}
 688              	.L27:
 689              		.align	2
 690              	.L26:
 691 02e0 00000000 		.word	COM_TX_PORT_CLK
 692 02e4 00000000 		.word	COM_RX_PORT_CLK
 693 02e8 00000000 		.word	COM_USART_CLK
 694 02ec 00000000 		.word	COM_TX_PIN
 695 02f0 00000000 		.word	COM_TX_PORT
 696 02f4 00000000 		.word	COM_RX_PIN
 697 02f8 00000000 		.word	COM_RX_PORT
 698 02fc 00000000 		.word	COM_USART
 699              		.cfi_endproc
 700              	.LFE35:
 702              		.align	2
 703              		.global	SD_LowLevel_DeInit
 704              		.thumb
 705              		.thumb_func
 707              	SD_LowLevel_DeInit:
 708              	.LFB36:
 363:../src/stm3210b_eval.c **** 
 364:../src/stm3210b_eval.c **** /**
 365:../src/stm3210b_eval.c ****   * @brief  DeInitializes the SD/SD communication.
 366:../src/stm3210b_eval.c ****   * @param  None
 367:../src/stm3210b_eval.c ****   * @retval None
 368:../src/stm3210b_eval.c ****   */
 369:../src/stm3210b_eval.c **** void SD_LowLevel_DeInit(void)
 370:../src/stm3210b_eval.c **** {
 709              		.loc 1 370 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 8
 712              		@ frame_needed = 1, uses_anonymous_args = 0
 713 0300 80B5     		push	{r7, lr}
 714              	.LCFI21:
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 7, -8
 717              		.cfi_offset 14, -4
 718 0302 82B0     		sub	sp, sp, #8
 719              	.LCFI22:
 720              		.cfi_def_cfa_offset 16
 721 0304 00AF     		add	r7, sp, #0
 722              	.LCFI23:
 723              		.cfi_def_cfa_register 7
 371:../src/stm3210b_eval.c ****   GPIO_InitTypeDef  GPIO_InitStructure;
 372:../src/stm3210b_eval.c ****   
 373:../src/stm3210b_eval.c ****   SPI_Cmd(SD_SPI, DISABLE); /*!< SD_SPI disable */
 724              		.loc 1 373 0
 725 0306 2148     		ldr	r0, .L29
 726 0308 4FF00001 		mov	r1, #0
 727 030c FFF7FEFF 		bl	SPI_Cmd
 374:../src/stm3210b_eval.c ****   SPI_I2S_DeInit(SD_SPI);   /*!< DeInitializes the SD_SPI */
 728              		.loc 1 374 0
 729 0310 1E48     		ldr	r0, .L29
 730 0312 FFF7FEFF 		bl	SPI_I2S_DeInit
 375:../src/stm3210b_eval.c ****   
 376:../src/stm3210b_eval.c ****   /*!< SD_SPI Periph clock disable */
 377:../src/stm3210b_eval.c ****   RCC_APB2PeriphClockCmd(SD_SPI_CLK, DISABLE); 
 731              		.loc 1 377 0
 732 0316 4FF48050 		mov	r0, #4096
 733 031a 4FF00001 		mov	r1, #0
 734 031e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 378:../src/stm3210b_eval.c ****   
 379:../src/stm3210b_eval.c ****   /*!< Configure SD_SPI pins: SCK */
 380:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = SD_SPI_SCK_PIN;
 735              		.loc 1 380 0
 736 0322 4FF02003 		mov	r3, #32
 737 0326 BB80     		strh	r3, [r7, #4]	@ movhi
 381:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 738              		.loc 1 381 0
 739 0328 4FF00403 		mov	r3, #4
 740 032c FB71     		strb	r3, [r7, #7]
 382:../src/stm3210b_eval.c ****   GPIO_Init(SD_SPI_SCK_GPIO_PORT, &GPIO_InitStructure);
 741              		.loc 1 382 0
 742 032e 07F10403 		add	r3, r7, #4
 743 0332 1748     		ldr	r0, .L29+4
 744 0334 1946     		mov	r1, r3
 745 0336 FFF7FEFF 		bl	GPIO_Init
 383:../src/stm3210b_eval.c **** 
 384:../src/stm3210b_eval.c ****   /*!< Configure SD_SPI pins: MISO */
 385:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = SD_SPI_MISO_PIN;
 746              		.loc 1 385 0
 747 033a 4FF04003 		mov	r3, #64
 748 033e BB80     		strh	r3, [r7, #4]	@ movhi
 386:../src/stm3210b_eval.c ****   GPIO_Init(SD_SPI_MISO_GPIO_PORT, &GPIO_InitStructure);
 749              		.loc 1 386 0
 750 0340 07F10403 		add	r3, r7, #4
 751 0344 1248     		ldr	r0, .L29+4
 752 0346 1946     		mov	r1, r3
 753 0348 FFF7FEFF 		bl	GPIO_Init
 387:../src/stm3210b_eval.c **** 
 388:../src/stm3210b_eval.c ****   /*!< Configure SD_SPI pins: MOSI */
 389:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = SD_SPI_MOSI_PIN;
 754              		.loc 1 389 0
 755 034c 4FF08003 		mov	r3, #128
 756 0350 BB80     		strh	r3, [r7, #4]	@ movhi
 390:../src/stm3210b_eval.c ****   GPIO_Init(SD_SPI_MOSI_GPIO_PORT, &GPIO_InitStructure);
 757              		.loc 1 390 0
 758 0352 07F10403 		add	r3, r7, #4
 759 0356 0E48     		ldr	r0, .L29+4
 760 0358 1946     		mov	r1, r3
 761 035a FFF7FEFF 		bl	GPIO_Init
 391:../src/stm3210b_eval.c **** 
 392:../src/stm3210b_eval.c ****   /*!< Configure SD_SPI_CS_PIN pin: SD Card CS pin */
 393:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = SD_CS_PIN;
 762              		.loc 1 393 0
 763 035e 4FF48053 		mov	r3, #4096
 764 0362 BB80     		strh	r3, [r7, #4]	@ movhi
 394:../src/stm3210b_eval.c ****   GPIO_Init(SD_CS_GPIO_PORT, &GPIO_InitStructure);
 765              		.loc 1 394 0
 766 0364 07F10403 		add	r3, r7, #4
 767 0368 0A48     		ldr	r0, .L29+8
 768 036a 1946     		mov	r1, r3
 769 036c FFF7FEFF 		bl	GPIO_Init
 395:../src/stm3210b_eval.c **** 
 396:../src/stm3210b_eval.c ****   /*!< Configure SD_SPI_DETECT_PIN pin: SD Card detect pin */
 397:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = SD_DETECT_PIN;
 770              		.loc 1 397 0
 771 0370 4FF08003 		mov	r3, #128
 772 0374 BB80     		strh	r3, [r7, #4]	@ movhi
 398:../src/stm3210b_eval.c ****   GPIO_Init(SD_DETECT_GPIO_PORT, &GPIO_InitStructure);
 773              		.loc 1 398 0
 774 0376 07F10403 		add	r3, r7, #4
 775 037a 0748     		ldr	r0, .L29+12
 776 037c 1946     		mov	r1, r3
 777 037e FFF7FEFF 		bl	GPIO_Init
 399:../src/stm3210b_eval.c **** }
 778              		.loc 1 399 0
 779 0382 07F10807 		add	r7, r7, #8
 780 0386 BD46     		mov	sp, r7
 781 0388 80BD     		pop	{r7, pc}
 782              	.L30:
 783 038a 00BF     		.align	2
 784              	.L29:
 785 038c 00300140 		.word	1073819648
 786 0390 00080140 		.word	1073809408
 787 0394 00100140 		.word	1073811456
 788 0398 00180140 		.word	1073813504
 789              		.cfi_endproc
 790              	.LFE36:
 792              		.align	2
 793              		.global	SD_LowLevel_Init
 794              		.thumb
 795              		.thumb_func
 797              	SD_LowLevel_Init:
 798              	.LFB37:
 400:../src/stm3210b_eval.c **** 
 401:../src/stm3210b_eval.c **** /**
 402:../src/stm3210b_eval.c ****   * @brief  Initializes the SD_SPI and CS pins.
 403:../src/stm3210b_eval.c ****   * @param  None
 404:../src/stm3210b_eval.c ****   * @retval None
 405:../src/stm3210b_eval.c ****   */
 406:../src/stm3210b_eval.c **** void SD_LowLevel_Init(void)
 407:../src/stm3210b_eval.c **** {
 799              		.loc 1 407 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 24
 802              		@ frame_needed = 1, uses_anonymous_args = 0
 803 039c 80B5     		push	{r7, lr}
 804              	.LCFI24:
 805              		.cfi_def_cfa_offset 8
 806              		.cfi_offset 7, -8
 807              		.cfi_offset 14, -4
 808 039e 86B0     		sub	sp, sp, #24
 809              	.LCFI25:
 810              		.cfi_def_cfa_offset 32
 811 03a0 00AF     		add	r7, sp, #0
 812              	.LCFI26:
 813              		.cfi_def_cfa_register 7
 408:../src/stm3210b_eval.c ****   GPIO_InitTypeDef  GPIO_InitStructure;
 409:../src/stm3210b_eval.c ****   SPI_InitTypeDef   SPI_InitStructure;
 410:../src/stm3210b_eval.c **** 
 411:../src/stm3210b_eval.c ****   /*!< SD_SPI_CS_GPIO, SD_SPI_MOSI_GPIO, SD_SPI_MISO_GPIO, SD_SPI_DETECT_GPIO 
 412:../src/stm3210b_eval.c ****        and SD_SPI_SCK_GPIO Periph clock enable */
 413:../src/stm3210b_eval.c ****   RCC_APB2PeriphClockCmd(SD_CS_GPIO_CLK | SD_SPI_MOSI_GPIO_CLK | SD_SPI_MISO_GPIO_CLK |
 814              		.loc 1 413 0
 815 03a2 4FF05400 		mov	r0, #84
 816 03a6 4FF00101 		mov	r1, #1
 817 03aa FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 414:../src/stm3210b_eval.c ****                          SD_SPI_SCK_GPIO_CLK | SD_DETECT_GPIO_CLK, ENABLE);
 415:../src/stm3210b_eval.c **** 
 416:../src/stm3210b_eval.c ****   /*!< SD_SPI Periph clock enable */
 417:../src/stm3210b_eval.c ****   RCC_APB2PeriphClockCmd(SD_SPI_CLK, ENABLE); 
 818              		.loc 1 417 0
 819 03ae 4FF48050 		mov	r0, #4096
 820 03b2 4FF00101 		mov	r1, #1
 821 03b6 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 418:../src/stm3210b_eval.c **** 
 419:../src/stm3210b_eval.c ****   
 420:../src/stm3210b_eval.c ****   /*!< Configure SD_SPI pins: SCK */
 421:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = SD_SPI_SCK_PIN;
 822              		.loc 1 421 0
 823 03ba 4FF02003 		mov	r3, #32
 824 03be BB82     		strh	r3, [r7, #20]	@ movhi
 422:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 825              		.loc 1 422 0
 826 03c0 4FF00303 		mov	r3, #3
 827 03c4 BB75     		strb	r3, [r7, #22]
 423:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 828              		.loc 1 423 0
 829 03c6 4FF01803 		mov	r3, #24
 830 03ca FB75     		strb	r3, [r7, #23]
 424:../src/stm3210b_eval.c ****   GPIO_Init(SD_SPI_SCK_GPIO_PORT, &GPIO_InitStructure);
 831              		.loc 1 424 0
 832 03cc 07F11403 		add	r3, r7, #20
 833 03d0 2B48     		ldr	r0, .L32
 834 03d2 1946     		mov	r1, r3
 835 03d4 FFF7FEFF 		bl	GPIO_Init
 425:../src/stm3210b_eval.c **** 
 426:../src/stm3210b_eval.c ****   /*!< Configure SD_SPI pins: MISO */
 427:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = SD_SPI_MISO_PIN;
 836              		.loc 1 427 0
 837 03d8 4FF04003 		mov	r3, #64
 838 03dc BB82     		strh	r3, [r7, #20]	@ movhi
 428:../src/stm3210b_eval.c ****   GPIO_Init(SD_SPI_MISO_GPIO_PORT, &GPIO_InitStructure);
 839              		.loc 1 428 0
 840 03de 07F11403 		add	r3, r7, #20
 841 03e2 2748     		ldr	r0, .L32
 842 03e4 1946     		mov	r1, r3
 843 03e6 FFF7FEFF 		bl	GPIO_Init
 429:../src/stm3210b_eval.c **** 
 430:../src/stm3210b_eval.c ****   /*!< Configure SD_SPI pins: MOSI */
 431:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = SD_SPI_MOSI_PIN;
 844              		.loc 1 431 0
 845 03ea 4FF08003 		mov	r3, #128
 846 03ee BB82     		strh	r3, [r7, #20]	@ movhi
 432:../src/stm3210b_eval.c ****   GPIO_Init(SD_SPI_MOSI_GPIO_PORT, &GPIO_InitStructure);
 847              		.loc 1 432 0
 848 03f0 07F11403 		add	r3, r7, #20
 849 03f4 2248     		ldr	r0, .L32
 850 03f6 1946     		mov	r1, r3
 851 03f8 FFF7FEFF 		bl	GPIO_Init
 433:../src/stm3210b_eval.c **** 
 434:../src/stm3210b_eval.c ****   /*!< Configure SD_SPI_CS_PIN pin: SD Card CS pin */
 435:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = SD_CS_PIN;
 852              		.loc 1 435 0
 853 03fc 4FF48053 		mov	r3, #4096
 854 0400 BB82     		strh	r3, [r7, #20]	@ movhi
 436:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
 855              		.loc 1 436 0
 856 0402 4FF01003 		mov	r3, #16
 857 0406 FB75     		strb	r3, [r7, #23]
 437:../src/stm3210b_eval.c ****   GPIO_Init(SD_CS_GPIO_PORT, &GPIO_InitStructure);
 858              		.loc 1 437 0
 859 0408 07F11403 		add	r3, r7, #20
 860 040c 1D48     		ldr	r0, .L32+4
 861 040e 1946     		mov	r1, r3
 862 0410 FFF7FEFF 		bl	GPIO_Init
 438:../src/stm3210b_eval.c **** 
 439:../src/stm3210b_eval.c ****   /*!< Configure SD_SPI_DETECT_PIN pin: SD Card detect pin */
 440:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = SD_DETECT_PIN;
 863              		.loc 1 440 0
 864 0414 4FF08003 		mov	r3, #128
 865 0418 BB82     		strh	r3, [r7, #20]	@ movhi
 441:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
 866              		.loc 1 441 0
 867 041a 4FF04803 		mov	r3, #72
 868 041e FB75     		strb	r3, [r7, #23]
 442:../src/stm3210b_eval.c ****   GPIO_Init(SD_DETECT_GPIO_PORT, &GPIO_InitStructure);
 869              		.loc 1 442 0
 870 0420 07F11403 		add	r3, r7, #20
 871 0424 1848     		ldr	r0, .L32+8
 872 0426 1946     		mov	r1, r3
 873 0428 FFF7FEFF 		bl	GPIO_Init
 443:../src/stm3210b_eval.c **** 
 444:../src/stm3210b_eval.c ****   /*!< SD_SPI Config */
 445:../src/stm3210b_eval.c ****   SPI_InitStructure.SPI_Direction = SPI_Direction_2Lines_FullDuplex;
 874              		.loc 1 445 0
 875 042c 4FF00003 		mov	r3, #0
 876 0430 3B80     		strh	r3, [r7, #0]	@ movhi
 446:../src/stm3210b_eval.c ****   SPI_InitStructure.SPI_Mode = SPI_Mode_Master;
 877              		.loc 1 446 0
 878 0432 4FF48273 		mov	r3, #260
 879 0436 7B80     		strh	r3, [r7, #2]	@ movhi
 447:../src/stm3210b_eval.c ****   SPI_InitStructure.SPI_DataSize = SPI_DataSize_8b;
 880              		.loc 1 447 0
 881 0438 4FF00003 		mov	r3, #0
 882 043c BB80     		strh	r3, [r7, #4]	@ movhi
 448:../src/stm3210b_eval.c ****   SPI_InitStructure.SPI_CPOL = SPI_CPOL_High;
 883              		.loc 1 448 0
 884 043e 4FF00203 		mov	r3, #2
 885 0442 FB80     		strh	r3, [r7, #6]	@ movhi
 449:../src/stm3210b_eval.c ****   SPI_InitStructure.SPI_CPHA = SPI_CPHA_2Edge;
 886              		.loc 1 449 0
 887 0444 4FF00103 		mov	r3, #1
 888 0448 3B81     		strh	r3, [r7, #8]	@ movhi
 450:../src/stm3210b_eval.c ****   SPI_InitStructure.SPI_NSS = SPI_NSS_Soft;
 889              		.loc 1 450 0
 890 044a 4FF40073 		mov	r3, #512
 891 044e 7B81     		strh	r3, [r7, #10]	@ movhi
 451:../src/stm3210b_eval.c ****   SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_4;
 892              		.loc 1 451 0
 893 0450 4FF00803 		mov	r3, #8
 894 0454 BB81     		strh	r3, [r7, #12]	@ movhi
 452:../src/stm3210b_eval.c ****   SPI_InitStructure.SPI_FirstBit = SPI_FirstBit_MSB;
 895              		.loc 1 452 0
 896 0456 4FF00003 		mov	r3, #0
 897 045a FB81     		strh	r3, [r7, #14]	@ movhi
 453:../src/stm3210b_eval.c ****   SPI_InitStructure.SPI_CRCPolynomial = 7;
 898              		.loc 1 453 0
 899 045c 4FF00703 		mov	r3, #7
 900 0460 3B82     		strh	r3, [r7, #16]	@ movhi
 454:../src/stm3210b_eval.c ****   SPI_Init(SD_SPI, &SPI_InitStructure);
 901              		.loc 1 454 0
 902 0462 3B46     		mov	r3, r7
 903 0464 0948     		ldr	r0, .L32+12
 904 0466 1946     		mov	r1, r3
 905 0468 FFF7FEFF 		bl	SPI_Init
 455:../src/stm3210b_eval.c ****   
 456:../src/stm3210b_eval.c ****   SPI_Cmd(SD_SPI, ENABLE); /*!< SD_SPI enable */
 906              		.loc 1 456 0
 907 046c 0748     		ldr	r0, .L32+12
 908 046e 4FF00101 		mov	r1, #1
 909 0472 FFF7FEFF 		bl	SPI_Cmd
 457:../src/stm3210b_eval.c **** }
 910              		.loc 1 457 0
 911 0476 07F11807 		add	r7, r7, #24
 912 047a BD46     		mov	sp, r7
 913 047c 80BD     		pop	{r7, pc}
 914              	.L33:
 915 047e 00BF     		.align	2
 916              	.L32:
 917 0480 00080140 		.word	1073809408
 918 0484 00100140 		.word	1073811456
 919 0488 00180140 		.word	1073813504
 920 048c 00300140 		.word	1073819648
 921              		.cfi_endproc
 922              	.LFE37:
 924              		.align	2
 925              		.global	sFLASH_LowLevel_DeInit
 926              		.thumb
 927              		.thumb_func
 929              	sFLASH_LowLevel_DeInit:
 930              	.LFB38:
 458:../src/stm3210b_eval.c **** 
 459:../src/stm3210b_eval.c **** /**
 460:../src/stm3210b_eval.c ****   * @brief  DeInitializes the peripherals used by the SPI FLASH driver.
 461:../src/stm3210b_eval.c ****   * @param  None
 462:../src/stm3210b_eval.c ****   * @retval None
 463:../src/stm3210b_eval.c ****   */
 464:../src/stm3210b_eval.c **** void sFLASH_LowLevel_DeInit(void)
 465:../src/stm3210b_eval.c **** {
 931              		.loc 1 465 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 8
 934              		@ frame_needed = 1, uses_anonymous_args = 0
 935 0490 80B5     		push	{r7, lr}
 936              	.LCFI27:
 937              		.cfi_def_cfa_offset 8
 938              		.cfi_offset 7, -8
 939              		.cfi_offset 14, -4
 940 0492 82B0     		sub	sp, sp, #8
 941              	.LCFI28:
 942              		.cfi_def_cfa_offset 16
 943 0494 00AF     		add	r7, sp, #0
 944              	.LCFI29:
 945              		.cfi_def_cfa_register 7
 466:../src/stm3210b_eval.c ****   GPIO_InitTypeDef GPIO_InitStructure;
 467:../src/stm3210b_eval.c **** 
 468:../src/stm3210b_eval.c ****   /*!< Disable the sFLASH_SPI  */
 469:../src/stm3210b_eval.c ****   SPI_Cmd(sFLASH_SPI, DISABLE);
 946              		.loc 1 469 0
 947 0496 1C48     		ldr	r0, .L35
 948 0498 4FF00001 		mov	r1, #0
 949 049c FFF7FEFF 		bl	SPI_Cmd
 470:../src/stm3210b_eval.c ****   
 471:../src/stm3210b_eval.c ****   /*!< DeInitializes the sFLASH_SPI */
 472:../src/stm3210b_eval.c ****   SPI_I2S_DeInit(sFLASH_SPI);
 950              		.loc 1 472 0
 951 04a0 1948     		ldr	r0, .L35
 952 04a2 FFF7FEFF 		bl	SPI_I2S_DeInit
 473:../src/stm3210b_eval.c ****   
 474:../src/stm3210b_eval.c ****   /*!< sFLASH_SPI Periph clock disable */
 475:../src/stm3210b_eval.c ****   RCC_APB2PeriphClockCmd(sFLASH_SPI_CLK, DISABLE);
 953              		.loc 1 475 0
 954 04a6 4FF48050 		mov	r0, #4096
 955 04aa 4FF00001 		mov	r1, #0
 956 04ae FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 476:../src/stm3210b_eval.c ****   
 477:../src/stm3210b_eval.c ****   /*!< Configure sFLASH_SPI pins: SCK */
 478:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = sFLASH_SPI_SCK_PIN;
 957              		.loc 1 478 0
 958 04b2 4FF02003 		mov	r3, #32
 959 04b6 BB80     		strh	r3, [r7, #4]	@ movhi
 479:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 960              		.loc 1 479 0
 961 04b8 4FF00403 		mov	r3, #4
 962 04bc FB71     		strb	r3, [r7, #7]
 480:../src/stm3210b_eval.c ****   GPIO_Init(sFLASH_SPI_SCK_GPIO_PORT, &GPIO_InitStructure);
 963              		.loc 1 480 0
 964 04be 07F10403 		add	r3, r7, #4
 965 04c2 1248     		ldr	r0, .L35+4
 966 04c4 1946     		mov	r1, r3
 967 04c6 FFF7FEFF 		bl	GPIO_Init
 481:../src/stm3210b_eval.c **** 
 482:../src/stm3210b_eval.c ****   /*!< Configure sFLASH_SPI pins: MISO */
 483:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = sFLASH_SPI_MISO_PIN;
 968              		.loc 1 483 0
 969 04ca 4FF04003 		mov	r3, #64
 970 04ce BB80     		strh	r3, [r7, #4]	@ movhi
 484:../src/stm3210b_eval.c ****   GPIO_Init(sFLASH_SPI_MISO_GPIO_PORT, &GPIO_InitStructure);
 971              		.loc 1 484 0
 972 04d0 07F10403 		add	r3, r7, #4
 973 04d4 0D48     		ldr	r0, .L35+4
 974 04d6 1946     		mov	r1, r3
 975 04d8 FFF7FEFF 		bl	GPIO_Init
 485:../src/stm3210b_eval.c **** 
 486:../src/stm3210b_eval.c ****   /*!< Configure sFLASH_SPI pins: MOSI */
 487:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = sFLASH_SPI_MOSI_PIN;
 976              		.loc 1 487 0
 977 04dc 4FF08003 		mov	r3, #128
 978 04e0 BB80     		strh	r3, [r7, #4]	@ movhi
 488:../src/stm3210b_eval.c ****   GPIO_Init(sFLASH_SPI_MOSI_GPIO_PORT, &GPIO_InitStructure);
 979              		.loc 1 488 0
 980 04e2 07F10403 		add	r3, r7, #4
 981 04e6 0948     		ldr	r0, .L35+4
 982 04e8 1946     		mov	r1, r3
 983 04ea FFF7FEFF 		bl	GPIO_Init
 489:../src/stm3210b_eval.c **** 
 490:../src/stm3210b_eval.c ****   /*!< Configure sFLASH_CS_PIN pin: sFLASH Card CS pin */
 491:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = sFLASH_CS_PIN;
 984              		.loc 1 491 0
 985 04ee 4FF01003 		mov	r3, #16
 986 04f2 BB80     		strh	r3, [r7, #4]	@ movhi
 492:../src/stm3210b_eval.c ****   GPIO_Init(sFLASH_CS_GPIO_PORT, &GPIO_InitStructure);
 987              		.loc 1 492 0
 988 04f4 07F10403 		add	r3, r7, #4
 989 04f8 0448     		ldr	r0, .L35+4
 990 04fa 1946     		mov	r1, r3
 991 04fc FFF7FEFF 		bl	GPIO_Init
 493:../src/stm3210b_eval.c **** }
 992              		.loc 1 493 0
 993 0500 07F10807 		add	r7, r7, #8
 994 0504 BD46     		mov	sp, r7
 995 0506 80BD     		pop	{r7, pc}
 996              	.L36:
 997              		.align	2
 998              	.L35:
 999 0508 00300140 		.word	1073819648
 1000 050c 00080140 		.word	1073809408
 1001              		.cfi_endproc
 1002              	.LFE38:
 1004              		.align	2
 1005              		.global	sFLASH_LowLevel_Init
 1006              		.thumb
 1007              		.thumb_func
 1009              	sFLASH_LowLevel_Init:
 1010              	.LFB39:
 494:../src/stm3210b_eval.c **** 
 495:../src/stm3210b_eval.c **** /**
 496:../src/stm3210b_eval.c ****   * @brief  Initializes the peripherals used by the SPI FLASH driver.
 497:../src/stm3210b_eval.c ****   * @param  None
 498:../src/stm3210b_eval.c ****   * @retval None
 499:../src/stm3210b_eval.c ****   */
 500:../src/stm3210b_eval.c **** void sFLASH_LowLevel_Init(void)
 501:../src/stm3210b_eval.c **** {
 1011              		.loc 1 501 0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 8
 1014              		@ frame_needed = 1, uses_anonymous_args = 0
 1015 0510 80B5     		push	{r7, lr}
 1016              	.LCFI30:
 1017              		.cfi_def_cfa_offset 8
 1018              		.cfi_offset 7, -8
 1019              		.cfi_offset 14, -4
 1020 0512 82B0     		sub	sp, sp, #8
 1021              	.LCFI31:
 1022              		.cfi_def_cfa_offset 16
 1023 0514 00AF     		add	r7, sp, #0
 1024              	.LCFI32:
 1025              		.cfi_def_cfa_register 7
 502:../src/stm3210b_eval.c ****   GPIO_InitTypeDef GPIO_InitStructure;
 503:../src/stm3210b_eval.c **** 
 504:../src/stm3210b_eval.c ****   /*!< sFLASH_SPI_CS_GPIO, sFLASH_SPI_MOSI_GPIO, sFLASH_SPI_MISO_GPIO 
 505:../src/stm3210b_eval.c ****        and sFLASH_SPI_SCK_GPIO Periph clock enable */
 506:../src/stm3210b_eval.c ****   RCC_APB2PeriphClockCmd(sFLASH_CS_GPIO_CLK | sFLASH_SPI_MOSI_GPIO_CLK | sFLASH_SPI_MISO_GPIO_CLK |
 1026              		.loc 1 506 0
 1027 0516 4FF00400 		mov	r0, #4
 1028 051a 4FF00101 		mov	r1, #1
 1029 051e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 507:../src/stm3210b_eval.c ****                          sFLASH_SPI_SCK_GPIO_CLK, ENABLE);
 508:../src/stm3210b_eval.c **** 
 509:../src/stm3210b_eval.c ****   /*!< sFLASH_SPI Periph clock enable */
 510:../src/stm3210b_eval.c ****   RCC_APB2PeriphClockCmd(sFLASH_SPI_CLK, ENABLE);
 1030              		.loc 1 510 0
 1031 0522 4FF48050 		mov	r0, #4096
 1032 0526 4FF00101 		mov	r1, #1
 1033 052a FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 511:../src/stm3210b_eval.c ****   
 512:../src/stm3210b_eval.c ****   /*!< Configure sFLASH_SPI pins: SCK */
 513:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = sFLASH_SPI_SCK_PIN;
 1034              		.loc 1 513 0
 1035 052e 4FF02003 		mov	r3, #32
 1036 0532 BB80     		strh	r3, [r7, #4]	@ movhi
 514:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 1037              		.loc 1 514 0
 1038 0534 4FF00303 		mov	r3, #3
 1039 0538 BB71     		strb	r3, [r7, #6]
 515:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 1040              		.loc 1 515 0
 1041 053a 4FF01803 		mov	r3, #24
 1042 053e FB71     		strb	r3, [r7, #7]
 516:../src/stm3210b_eval.c ****   GPIO_Init(sFLASH_SPI_SCK_GPIO_PORT, &GPIO_InitStructure);
 1043              		.loc 1 516 0
 1044 0540 07F10403 		add	r3, r7, #4
 1045 0544 1248     		ldr	r0, .L38
 1046 0546 1946     		mov	r1, r3
 1047 0548 FFF7FEFF 		bl	GPIO_Init
 517:../src/stm3210b_eval.c **** 
 518:../src/stm3210b_eval.c ****   /*!< Configure sFLASH_SPI pins: MISO */
 519:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = sFLASH_SPI_MISO_PIN;
 1048              		.loc 1 519 0
 1049 054c 4FF04003 		mov	r3, #64
 1050 0550 BB80     		strh	r3, [r7, #4]	@ movhi
 520:../src/stm3210b_eval.c ****   GPIO_Init(sFLASH_SPI_MISO_GPIO_PORT, &GPIO_InitStructure);
 1051              		.loc 1 520 0
 1052 0552 07F10403 		add	r3, r7, #4
 1053 0556 0E48     		ldr	r0, .L38
 1054 0558 1946     		mov	r1, r3
 1055 055a FFF7FEFF 		bl	GPIO_Init
 521:../src/stm3210b_eval.c **** 
 522:../src/stm3210b_eval.c ****   /*!< Configure sFLASH_SPI pins: MOSI */
 523:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = sFLASH_SPI_MOSI_PIN;
 1056              		.loc 1 523 0
 1057 055e 4FF08003 		mov	r3, #128
 1058 0562 BB80     		strh	r3, [r7, #4]	@ movhi
 524:../src/stm3210b_eval.c ****   GPIO_Init(sFLASH_SPI_MOSI_GPIO_PORT, &GPIO_InitStructure);
 1059              		.loc 1 524 0
 1060 0564 07F10403 		add	r3, r7, #4
 1061 0568 0948     		ldr	r0, .L38
 1062 056a 1946     		mov	r1, r3
 1063 056c FFF7FEFF 		bl	GPIO_Init
 525:../src/stm3210b_eval.c **** 
 526:../src/stm3210b_eval.c ****   /*!< Configure sFLASH_CS_PIN pin: sFLASH Card CS pin */
 527:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = sFLASH_CS_PIN;
 1064              		.loc 1 527 0
 1065 0570 4FF01003 		mov	r3, #16
 1066 0574 BB80     		strh	r3, [r7, #4]	@ movhi
 528:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
 1067              		.loc 1 528 0
 1068 0576 4FF01003 		mov	r3, #16
 1069 057a FB71     		strb	r3, [r7, #7]
 529:../src/stm3210b_eval.c ****   GPIO_Init(sFLASH_CS_GPIO_PORT, &GPIO_InitStructure);
 1070              		.loc 1 529 0
 1071 057c 07F10403 		add	r3, r7, #4
 1072 0580 0348     		ldr	r0, .L38
 1073 0582 1946     		mov	r1, r3
 1074 0584 FFF7FEFF 		bl	GPIO_Init
 530:../src/stm3210b_eval.c **** }
 1075              		.loc 1 530 0
 1076 0588 07F10807 		add	r7, r7, #8
 1077 058c BD46     		mov	sp, r7
 1078 058e 80BD     		pop	{r7, pc}
 1079              	.L39:
 1080              		.align	2
 1081              	.L38:
 1082 0590 00080140 		.word	1073809408
 1083              		.cfi_endproc
 1084              	.LFE39:
 1086              		.align	2
 1087              		.global	LM75_LowLevel_DeInit
 1088              		.thumb
 1089              		.thumb_func
 1091              	LM75_LowLevel_DeInit:
 1092              	.LFB40:
 531:../src/stm3210b_eval.c **** 
 532:../src/stm3210b_eval.c **** /**
 533:../src/stm3210b_eval.c ****   * @brief  DeInitializes the LM75_I2C.
 534:../src/stm3210b_eval.c ****   * @param  None
 535:../src/stm3210b_eval.c ****   * @retval None
 536:../src/stm3210b_eval.c ****   */
 537:../src/stm3210b_eval.c **** void LM75_LowLevel_DeInit(void)
 538:../src/stm3210b_eval.c **** {
 1093              		.loc 1 538 0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 8
 1096              		@ frame_needed = 1, uses_anonymous_args = 0
 1097 0594 80B5     		push	{r7, lr}
 1098              	.LCFI33:
 1099              		.cfi_def_cfa_offset 8
 1100              		.cfi_offset 7, -8
 1101              		.cfi_offset 14, -4
 1102 0596 82B0     		sub	sp, sp, #8
 1103              	.LCFI34:
 1104              		.cfi_def_cfa_offset 16
 1105 0598 00AF     		add	r7, sp, #0
 1106              	.LCFI35:
 1107              		.cfi_def_cfa_register 7
 539:../src/stm3210b_eval.c ****   GPIO_InitTypeDef  GPIO_InitStructure;
 540:../src/stm3210b_eval.c **** 
 541:../src/stm3210b_eval.c ****   /*!< Disable LM75_I2C */
 542:../src/stm3210b_eval.c ****   I2C_Cmd(LM75_I2C, DISABLE);
 1108              		.loc 1 542 0
 1109 059a 1848     		ldr	r0, .L41
 1110 059c 4FF00001 		mov	r1, #0
 1111 05a0 FFF7FEFF 		bl	I2C_Cmd
 543:../src/stm3210b_eval.c ****   /*!< DeInitializes the LM75_I2C */
 544:../src/stm3210b_eval.c ****   I2C_DeInit(LM75_I2C);
 1112              		.loc 1 544 0
 1113 05a4 1548     		ldr	r0, .L41
 1114 05a6 FFF7FEFF 		bl	I2C_DeInit
 545:../src/stm3210b_eval.c ****   
 546:../src/stm3210b_eval.c ****   /*!< LM75_I2C Periph clock disable */
 547:../src/stm3210b_eval.c ****   RCC_APB1PeriphClockCmd(LM75_I2C_CLK, DISABLE);
 1115              		.loc 1 547 0
 1116 05aa 4FF40010 		mov	r0, #2097152
 1117 05ae 4FF00001 		mov	r1, #0
 1118 05b2 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 548:../src/stm3210b_eval.c ****     
 549:../src/stm3210b_eval.c ****   /*!< Configure LM75_I2C pins: SCL */
 550:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = LM75_I2C_SCL_PIN;
 1119              		.loc 1 550 0
 1120 05b6 4FF04003 		mov	r3, #64
 1121 05ba BB80     		strh	r3, [r7, #4]	@ movhi
 551:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 1122              		.loc 1 551 0
 1123 05bc 4FF00403 		mov	r3, #4
 1124 05c0 FB71     		strb	r3, [r7, #7]
 552:../src/stm3210b_eval.c ****   GPIO_Init(LM75_I2C_SCL_GPIO_PORT, &GPIO_InitStructure);
 1125              		.loc 1 552 0
 1126 05c2 07F10403 		add	r3, r7, #4
 1127 05c6 0E48     		ldr	r0, .L41+4
 1128 05c8 1946     		mov	r1, r3
 1129 05ca FFF7FEFF 		bl	GPIO_Init
 553:../src/stm3210b_eval.c **** 
 554:../src/stm3210b_eval.c ****   /*!< Configure LM75_I2C pins: SDA */
 555:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = LM75_I2C_SDA_PIN;
 1130              		.loc 1 555 0
 1131 05ce 4FF08003 		mov	r3, #128
 1132 05d2 BB80     		strh	r3, [r7, #4]	@ movhi
 556:../src/stm3210b_eval.c ****   GPIO_Init(LM75_I2C_SDA_GPIO_PORT, &GPIO_InitStructure);
 1133              		.loc 1 556 0
 1134 05d4 07F10403 		add	r3, r7, #4
 1135 05d8 0948     		ldr	r0, .L41+4
 1136 05da 1946     		mov	r1, r3
 1137 05dc FFF7FEFF 		bl	GPIO_Init
 557:../src/stm3210b_eval.c **** 
 558:../src/stm3210b_eval.c ****   /*!< Configure LM75_I2C pin: SMBUS ALERT */
 559:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = LM75_I2C_SMBUSALERT_PIN;
 1138              		.loc 1 559 0
 1139 05e0 4FF02003 		mov	r3, #32
 1140 05e4 BB80     		strh	r3, [r7, #4]	@ movhi
 560:../src/stm3210b_eval.c ****   GPIO_Init(LM75_I2C_SMBUSALERT_GPIO_PORT, &GPIO_InitStructure);
 1141              		.loc 1 560 0
 1142 05e6 07F10403 		add	r3, r7, #4
 1143 05ea 0548     		ldr	r0, .L41+4
 1144 05ec 1946     		mov	r1, r3
 1145 05ee FFF7FEFF 		bl	GPIO_Init
 561:../src/stm3210b_eval.c **** }
 1146              		.loc 1 561 0
 1147 05f2 07F10807 		add	r7, r7, #8
 1148 05f6 BD46     		mov	sp, r7
 1149 05f8 80BD     		pop	{r7, pc}
 1150              	.L42:
 1151 05fa 00BF     		.align	2
 1152              	.L41:
 1153 05fc 00540040 		.word	1073763328
 1154 0600 000C0140 		.word	1073810432
 1155              		.cfi_endproc
 1156              	.LFE40:
 1158              		.align	2
 1159              		.global	LM75_LowLevel_Init
 1160              		.thumb
 1161              		.thumb_func
 1163              	LM75_LowLevel_Init:
 1164              	.LFB41:
 562:../src/stm3210b_eval.c **** 
 563:../src/stm3210b_eval.c **** /**
 564:../src/stm3210b_eval.c ****   * @brief  Initializes the LM75_I2C.
 565:../src/stm3210b_eval.c ****   * @param  None
 566:../src/stm3210b_eval.c ****   * @retval None
 567:../src/stm3210b_eval.c ****   */
 568:../src/stm3210b_eval.c **** void LM75_LowLevel_Init(void)
 569:../src/stm3210b_eval.c **** {
 1165              		.loc 1 569 0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 8
 1168              		@ frame_needed = 1, uses_anonymous_args = 0
 1169 0604 80B5     		push	{r7, lr}
 1170              	.LCFI36:
 1171              		.cfi_def_cfa_offset 8
 1172              		.cfi_offset 7, -8
 1173              		.cfi_offset 14, -4
 1174 0606 82B0     		sub	sp, sp, #8
 1175              	.LCFI37:
 1176              		.cfi_def_cfa_offset 16
 1177 0608 00AF     		add	r7, sp, #0
 1178              	.LCFI38:
 1179              		.cfi_def_cfa_register 7
 570:../src/stm3210b_eval.c ****   GPIO_InitTypeDef  GPIO_InitStructure;
 571:../src/stm3210b_eval.c **** 
 572:../src/stm3210b_eval.c ****   /*!< LM75_I2C Periph clock enable */
 573:../src/stm3210b_eval.c ****   RCC_APB1PeriphClockCmd(LM75_I2C_CLK, ENABLE);
 1180              		.loc 1 573 0
 1181 060a 4FF40010 		mov	r0, #2097152
 1182 060e 4FF00101 		mov	r1, #1
 1183 0612 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 574:../src/stm3210b_eval.c ****     
 575:../src/stm3210b_eval.c ****   /*!< LM75_I2C_SCL_GPIO_CLK, LM75_I2C_SDA_GPIO_CLK 
 576:../src/stm3210b_eval.c ****        and LM75_I2C_SMBUSALERT_GPIO_CLK Periph clock enable */
 577:../src/stm3210b_eval.c ****   RCC_APB2PeriphClockCmd(LM75_I2C_SCL_GPIO_CLK | LM75_I2C_SDA_GPIO_CLK |
 1184              		.loc 1 577 0
 1185 0616 4FF00800 		mov	r0, #8
 1186 061a 4FF00101 		mov	r1, #1
 1187 061e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 578:../src/stm3210b_eval.c ****                          LM75_I2C_SMBUSALERT_GPIO_CLK, ENABLE);
 579:../src/stm3210b_eval.c ****   
 580:../src/stm3210b_eval.c ****   /*!< Configure LM75_I2C pins: SCL */
 581:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = LM75_I2C_SCL_PIN;
 1188              		.loc 1 581 0
 1189 0622 4FF04003 		mov	r3, #64
 1190 0626 BB80     		strh	r3, [r7, #4]	@ movhi
 582:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 1191              		.loc 1 582 0
 1192 0628 4FF00303 		mov	r3, #3
 1193 062c BB71     		strb	r3, [r7, #6]
 583:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;
 1194              		.loc 1 583 0
 1195 062e 4FF01C03 		mov	r3, #28
 1196 0632 FB71     		strb	r3, [r7, #7]
 584:../src/stm3210b_eval.c ****   GPIO_Init(LM75_I2C_SCL_GPIO_PORT, &GPIO_InitStructure);
 1197              		.loc 1 584 0
 1198 0634 07F10403 		add	r3, r7, #4
 1199 0638 0E48     		ldr	r0, .L44
 1200 063a 1946     		mov	r1, r3
 1201 063c FFF7FEFF 		bl	GPIO_Init
 585:../src/stm3210b_eval.c **** 
 586:../src/stm3210b_eval.c ****   /*!< Configure LM75_I2C pins: SDA */
 587:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = LM75_I2C_SDA_PIN;
 1202              		.loc 1 587 0
 1203 0640 4FF08003 		mov	r3, #128
 1204 0644 BB80     		strh	r3, [r7, #4]	@ movhi
 588:../src/stm3210b_eval.c ****   GPIO_Init(LM75_I2C_SDA_GPIO_PORT, &GPIO_InitStructure);
 1205              		.loc 1 588 0
 1206 0646 07F10403 		add	r3, r7, #4
 1207 064a 0A48     		ldr	r0, .L44
 1208 064c 1946     		mov	r1, r3
 1209 064e FFF7FEFF 		bl	GPIO_Init
 589:../src/stm3210b_eval.c **** 
 590:../src/stm3210b_eval.c ****   /*!< Configure LM75_I2C pin: SMBUS ALERT */
 591:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Pin = LM75_I2C_SMBUSALERT_PIN;
 1210              		.loc 1 591 0
 1211 0652 4FF02003 		mov	r3, #32
 1212 0656 BB80     		strh	r3, [r7, #4]	@ movhi
 592:../src/stm3210b_eval.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
 1213              		.loc 1 592 0
 1214 0658 4FF04803 		mov	r3, #72
 1215 065c FB71     		strb	r3, [r7, #7]
 593:../src/stm3210b_eval.c ****   GPIO_Init(LM75_I2C_SMBUSALERT_GPIO_PORT, &GPIO_InitStructure); 
 1216              		.loc 1 593 0
 1217 065e 07F10403 		add	r3, r7, #4
 1218 0662 0448     		ldr	r0, .L44
 1219 0664 1946     		mov	r1, r3
 1220 0666 FFF7FEFF 		bl	GPIO_Init
 594:../src/stm3210b_eval.c **** }
 1221              		.loc 1 594 0
 1222 066a 07F10807 		add	r7, r7, #8
 1223 066e BD46     		mov	sp, r7
 1224 0670 80BD     		pop	{r7, pc}
 1225              	.L45:
 1226 0672 00BF     		.align	2
 1227              	.L44:
 1228 0674 000C0140 		.word	1073810432
 1229              		.cfi_endproc
 1230              	.LFE41:
 1232              	.Letext0:
 1233              		.file 2 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\inc/stm32_eval.h"
 1234              		.file 3 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 1235              		.file 4 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\inc/stm32f10x.h"
 1236              		.file 5 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\SPL\\inc/stm32f10x_exti.h"
 1237              		.file 6 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\SPL\\inc/stm32f10x_gpio.h"
 1238              		.file 7 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\SPL\\inc/stm32f10x_usart.h"
 1239              		.file 8 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\SPL\\inc/misc.h"
 1240              		.file 9 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\SPL\\inc/stm32f10x_spi.h"
 1241              		.file 10 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\CMSIS/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm3210b_eval.c
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:23     .data:00000000 GPIO_PORT
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:20     .data:00000000 $d
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:33     .rodata:00000000 GPIO_PIN
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:30     .rodata:00000000 $d
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:42     .rodata:00000008 GPIO_CLK
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:52     .data:00000010 BUTTON_PORT
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:66     .rodata:00000018 BUTTON_PIN
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:79     .rodata:00000028 BUTTON_CLK
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:92     .rodata:00000048 BUTTON_EXTI_LINE
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:105    .rodata:00000058 BUTTON_PORT_SOURCE
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:118    .rodata:00000068 BUTTON_PIN_SOURCE
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:131    .rodata:00000078 BUTTON_IRQn
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:145    .data:00000030 COM_USART
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:152    .data:00000038 COM_TX_PORT
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:159    .data:00000040 COM_RX_PORT
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:167    .rodata:00000088 COM_USART_CLK
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:174    .rodata:00000090 COM_TX_PORT_CLK
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:181    .rodata:00000098 COM_RX_PORT_CLK
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:188    .rodata:000000a0 COM_TX_PIN
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:195    .rodata:000000a4 COM_RX_PIN
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:199    .text:00000000 $t
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:204    .text:00000000 STM_EVAL_LEDInit
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:249    .text:0000003c $d
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:254    .text:00000044 $t
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:259    .text:00000044 STM_EVAL_LEDOn
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:294    .text:0000006c $d
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:299    .text:00000074 $t
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:304    .text:00000074 STM_EVAL_LEDOff
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:339    .text:0000009c $d
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:344    .text:000000a4 $t
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:349    .text:000000a4 STM_EVAL_LEDToggle
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:389    .text:000000d8 $d
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:394    .text:000000e0 $t
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:399    .text:000000e0 STM_EVAL_PBInit
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:515    .text:000001b0 $d
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:525    .text:000001cc $t
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:530    .text:000001cc STM_EVAL_PBGetState
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:568    .text:000001fc $d
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:573    .text:00000204 $t
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:578    .text:00000204 STM_EVAL_COMInit
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:691    .text:000002e0 $d
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:702    .text:00000300 $t
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:707    .text:00000300 SD_LowLevel_DeInit
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:785    .text:0000038c $d
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:792    .text:0000039c $t
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:797    .text:0000039c SD_LowLevel_Init
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:917    .text:00000480 $d
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:924    .text:00000490 $t
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:929    .text:00000490 sFLASH_LowLevel_DeInit
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:999    .text:00000508 $d
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:1004   .text:00000510 $t
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:1009   .text:00000510 sFLASH_LowLevel_Init
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:1082   .text:00000590 $d
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:1086   .text:00000594 $t
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:1091   .text:00000594 LM75_LowLevel_DeInit
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:1153   .text:000005fc $d
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:1158   .text:00000604 $t
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:1163   .text:00000604 LM75_LowLevel_Init
C:\Users\PC108\AppData\Local\Temp\cc4MiBIr.s:1228   .text:00000674 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.9001f459856fa07d79ce9793bb17c6cd
                           .group:00000000 wm4.stm32f10x.h.51.b859cb68ed44ee02c916b41cb8c68f1c
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.522.115ebb8291fa96f8c9e0b9a9b670f703
                           .group:00000000 wm4.stm32f10x_exti.h.56.8b2f216f9ded9d03a9eb42ed6973fc04
                           .group:00000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:00000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765
                           .group:00000000 wm4.stm32f10x_tim.h.25.21c6ec062f1e74898cb96a57da276fec
                           .group:00000000 wm4.stm32f10x_usart.h.25.29629c699b65db3f3efd3561f66b0bf6
                           .group:00000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:00000000 wm4.stm32_eval.h.162.056ba9d7147f0380483f859fba086f0c
                           .group:00000000 wm4.stm32f10x_spi.h.25.68b3d5ccfcf895f9fe505ce20c0c300f
                           .group:00000000 wm4.stm32f10x_i2c.h.25.7b6cbaea24c6f25f538f8516d1814cb2
                           .group:00000000 wm4.stm3210b_eval.h.66.69fea1b8652a917b45f1deb47ca76b86

UNDEFINED SYMBOLS
RCC_APB2PeriphClockCmd
GPIO_Init
GPIO_EXTILineConfig
EXTI_Init
NVIC_Init
GPIO_ReadInputDataBit
GPIO_PinRemapConfig
RCC_APB1PeriphClockCmd
USART_Init
USART_Cmd
SPI_Cmd
SPI_I2S_DeInit
SPI_Init
I2C_Cmd
I2C_DeInit
