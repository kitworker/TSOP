   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.thumb
  20              		.thumb_func
  22              	NVIC_EnableIRQ:
  23              	.LFB14:
  24              		.file 1 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\CMSIS/core_cm3.h"
   1:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**************************************************************************//**
   2:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @file     core_cm3.h
   3:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @version  V1.30
   5:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @date     30. October 2009
   6:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
   7:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @note
   8:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
  10:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @par
  11:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
  15:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @par
  16:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
  22:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  ******************************************************************************/
  23:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  24:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #ifndef __CM3_CORE_H__
  25:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __CM3_CORE_H__
  26:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  27:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
  29:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *   - Error 10: \n
  31:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     Error 10: Expecting ';'
  33:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * .
  34:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *   - Error 530: \n
  35:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     return(__regBasePri); \n
  36:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * . 
  38:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *   - Error 550: \n
  39:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * .
  42:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *   - Error 754: \n
  43:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * .
  46:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *   - Error 750: \n
  47:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * .
  50:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *   - Error 528: \n
  51:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * .
  54:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *   - Error 751: \n
  55:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     } InterruptType_Type; \n
  56:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * .
  58:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
  60:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
  61:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  62:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*lint -save */
  63:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*lint -e10  */
  64:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*lint -e530 */
  65:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*lint -e550 */
  66:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*lint -e754 */
  67:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*lint -e750 */
  68:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*lint -e528 */
  69:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*lint -e751 */
  70:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  71:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  72:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****     - CMSIS version number
  75:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****     - Cortex-M core registers and bitfields
  76:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****     - Cortex-M core peripheral base address
  77:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   @{
  78:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
  79:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  80:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #ifdef __cplusplus
  81:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  extern "C" {
  82:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif 
  83:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  84:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  88:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  90:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  92:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #if defined (__ICCARM__)
  93:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif
  95:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  96:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  97:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif
 100:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 101:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 102:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 103:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 104:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 105:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * IO definitions
 106:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 107:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * define access restrictions to peripheral registers
 108:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 109:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 110:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #ifdef __cplusplus
 111:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #else
 113:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif
 115:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 118:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 119:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 120:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*******************************************************************************
 121:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *                 Register Abstraction
 122:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  ******************************************************************************/
 123:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  @{
 125:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** */
 126:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 127:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 128:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   @{
 131:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 132:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** typedef struct
 133:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 134:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }  NVIC_Type;                                               
 148:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 150:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 151:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   @{
 154:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 155:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** typedef struct
 156:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 157:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** } SCB_Type;                                                
 177:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 178:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB CPUID Register Definitions */
 179:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 182:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 185:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 188:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 191:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 195:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 198:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 201:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 204:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 207:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 210:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 213:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 216:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 219:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 222:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 226:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 229:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 233:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 236:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 239:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 242:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 245:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 248:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 251:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB System Control Register Definitions */
 252:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 255:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 258:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 261:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 265:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 268:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 271:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 274:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 277:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 280:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 284:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 287:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 290:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 293:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 296:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 299:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 302:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 305:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 308:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 311:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****                                      
 314:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 317:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 320:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 323:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 327:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 330:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 333:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 337:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 340:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 343:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 347:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 350:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 353:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 356:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 360:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 361:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   memory mapped structure for SysTick
 363:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   @{
 364:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 365:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** typedef struct
 366:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 367:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** } SysTick_Type;
 372:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 373:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 377:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 380:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 383:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 386:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SysTick Reload Register Definitions */
 387:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 390:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SysTick Current Register Definitions */
 391:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 394:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 398:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 401:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 405:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 406:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   @{
 409:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 410:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** typedef struct
 411:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 412:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __O  union  
 413:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   {
 414:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** } ITM_Type;                                                
 445:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 446:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 450:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 454:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 457:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 460:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 463:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 466:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 469:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 472:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 475:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 479:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 483:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 487:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 491:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 494:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 498:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 499:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   memory mapped structure for Interrupt Type
 501:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   @{
 502:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 503:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** typedef struct
 504:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 505:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED0;
 506:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #else
 510:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED1;
 511:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif
 512:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** } InterruptType_Type;
 513:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 514:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 518:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 522:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 525:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 529:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 530:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   @{
 534:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 535:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** typedef struct
 536:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 537:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** } MPU_Type;                                                
 549:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 550:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* MPU Type Register */
 551:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 554:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 557:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 560:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* MPU Control Register */
 561:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 564:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 567:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 570:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* MPU Region Number Register */
 571:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 574:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* MPU Region Base Address Register */
 575:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 578:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 581:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 584:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 588:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 591:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 594:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 597:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 600:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 603:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 606:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 609:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 612:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif
 614:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 615:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 616:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   memory mapped structure for Core Debug Register
 618:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   @{
 619:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 620:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** typedef struct
 621:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 622:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** } CoreDebug_Type;
 627:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 628:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* Debug Halting Control and Status Register */
 629:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 632:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 635:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 638:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 641:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 644:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 647:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 650:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 653:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 656:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 659:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 662:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 665:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* Debug Core Register Selector Register */
 666:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 669:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 672:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 676:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 679:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 682:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 685:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 688:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 691:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 694:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 697:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 700:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 703:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 706:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 709:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 713:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 714:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 722:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 729:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif
 733:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 734:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 736:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 737:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*******************************************************************************
 738:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *                Hardware Abstraction Layer
 739:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  ******************************************************************************/
 740:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 741:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #if defined ( __CC_ARM   )
 742:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 745:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #elif defined ( __ICCARM__ )
 746:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 749:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #elif defined   (  __GNUC__  )
 750:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 753:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #elif defined   (  __TASKING__  )
 754:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 757:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif
 758:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 759:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 760:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 762:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* ARM armcc specific functions */
 764:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 765:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 768:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __NOP                             __nop
 769:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __WFI                             __wfi
 770:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __WFE                             __wfe
 771:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __SEV                             __sev
 772:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __ISB()                           __isb(0)
 773:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __DSB()                           __dsb(0)
 774:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __DMB()                           __dmb(0)
 775:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __REV                             __rev
 776:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __RBIT                            __rbit
 777:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 784:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 785:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 790:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 791:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 792:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 794:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return ProcessStackPointer
 795:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 796:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the actual process stack pointer
 797:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 798:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_PSP(void);
 799:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 800:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 801:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 803:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 805:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 808:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 810:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 811:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 813:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return Main Stack Pointer
 814:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 815:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Cortex processor register
 817:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 818:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_MSP(void);
 819:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 820:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 821:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 823:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 825:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 828:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 830:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 831:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 833:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param   value  value to reverse
 834:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return         reversed value
 835:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 836:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Reverse byte order in unsigned short value
 837:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 838:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 840:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 841:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 843:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param   value  value to reverse
 844:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return         reversed value
 845:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 846:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 848:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 850:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 851:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 853:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 854:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 856:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 858:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __CLREX(void);
 859:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 860:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 861:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Base Priority value
 862:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 863:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return BasePriority
 864:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 865:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the content of the base priority register
 866:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 867:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 869:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 870:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Base Priority value
 871:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 872:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  basePri  BasePriority
 873:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 874:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the base priority register
 875:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 876:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 878:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 879:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Priority Mask value
 880:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 881:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return PriMask
 882:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 883:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 885:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 887:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 888:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Priority Mask value
 889:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 890:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param   priMask  PriMask
 891:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 892:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 894:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 896:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 897:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Fault Mask value
 898:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 899:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return FaultMask
 900:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 901:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the content of the fault mask register
 902:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 903:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 905:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 906:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Fault Mask value
 907:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 908:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  faultMask faultMask value
 909:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 910:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the fault mask register
 911:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 912:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 914:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 915:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Control Register value
 916:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * 
 917:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return Control value
 918:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 919:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the content of the control register
 920:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 921:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 923:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 924:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Control Register value
 925:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 926:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  control  Control value
 927:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 928:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the control register
 929:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 930:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 932:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 934:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 935:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 937:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 939:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __CLREX                           __clrex
 940:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 941:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 942:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Base Priority value
 943:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 944:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return BasePriority
 945:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 946:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the content of the base priority register
 947:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 948:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 950:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   return(__regBasePri);
 952:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
 953:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 954:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 955:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Base Priority value
 956:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 957:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  basePri  BasePriority
 958:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 959:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the base priority register
 960:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 961:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 963:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
 966:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 967:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 968:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Priority Mask value
 969:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 970:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return PriMask
 971:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 972:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 974:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 976:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   return(__regPriMask);
 978:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
 979:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 980:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 981:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Priority Mask value
 982:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 983:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  priMask  PriMask
 984:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 985:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 987:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 989:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __regPriMask = (priMask);
 991:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
 992:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 993:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 994:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Fault Mask value
 995:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 996:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return FaultMask
 997:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 998:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the content of the fault mask register
 999:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1000:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
1002:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   return(__regFaultMask);
1004:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
1005:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1006:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1007:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Fault Mask value
1008:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1009:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  faultMask  faultMask value
1010:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1011:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the fault mask register
1012:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1013:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
1015:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
1018:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1019:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1020:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Control Register value
1021:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * 
1022:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return Control value
1023:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1024:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the content of the control register
1025:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1026:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
1028:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   return(__regControl);
1030:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
1031:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1032:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1033:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Control Register value
1034:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1035:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  control  Control value
1036:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1037:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the control register
1038:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1039:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
1041:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __regControl = control;
1043:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
1044:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1045:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1047:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1048:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1049:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* IAR iccarm specific functions */
1051:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1052:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1055:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1058:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1064:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1076:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1077:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1078:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1080:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return ProcessStackPointer
1081:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1082:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the actual process stack pointer
1083:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1084:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_PSP(void);
1085:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1086:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1087:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1089:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1091:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1094:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1096:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1097:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1099:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return Main Stack Pointer
1100:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1101:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Cortex processor register
1103:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1104:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_MSP(void);
1105:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1106:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1107:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1109:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1111:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1114:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1116:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1117:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1119:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  value  value to reverse
1120:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        reversed value
1121:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1122:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Reverse byte order in unsigned short value
1123:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1124:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1126:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1127:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Reverse bit order of value
1128:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1129:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  value  value to reverse
1130:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        reversed value
1131:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1132:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Reverse bit order of value
1133:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1134:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1136:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1137:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1139:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1140:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        value of (*address)
1141:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1142:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1144:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1146:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1147:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1149:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1150:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        value of (*address)
1151:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1152:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1154:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1156:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1157:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1159:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1160:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        value of (*address)
1161:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1162:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1164:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1166:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1167:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1169:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  value  value to store
1170:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1171:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        successful / failed
1172:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1173:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1175:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1177:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1178:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1180:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  value  value to store
1181:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1182:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        successful / failed
1183:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1184:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1186:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1188:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1189:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1191:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  value  value to store
1192:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1193:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        successful / failed
1194:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1195:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1197:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1199:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1200:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1201:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* GNU gcc specific functions */
1203:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1204:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1207:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1210:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1219:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1220:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1221:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1223:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return ProcessStackPointer
1224:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1225:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the actual process stack pointer
1226:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1227:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_PSP(void);
1228:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1229:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1230:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1232:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1234:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1235:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1237:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1239:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1240:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1242:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return Main Stack Pointer
1243:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1244:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Cortex processor register
1246:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1247:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_MSP(void);
1248:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1249:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1250:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1252:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1254:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1255:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1257:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1259:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1260:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Base Priority value
1261:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1262:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return BasePriority
1263:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1264:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the content of the base priority register
1265:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1266:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1268:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1269:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Base Priority value
1270:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1271:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  basePri  BasePriority
1272:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1273:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the base priority register
1274:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1275:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1277:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1278:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Priority Mask value
1279:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1280:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return PriMask
1281:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1282:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1284:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1286:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1287:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Priority Mask value
1288:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1289:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  priMask  PriMask
1290:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1291:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1293:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1295:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1296:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Fault Mask value
1297:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1298:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return FaultMask
1299:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1300:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the content of the fault mask register
1301:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1302:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1304:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1305:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Fault Mask value
1306:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1307:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  faultMask  faultMask value
1308:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1309:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the fault mask register
1310:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1311:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1313:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1314:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Control Register value
1315:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** * 
1316:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** *  @return Control value
1317:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1318:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the content of the control register
1319:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1320:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1322:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1323:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Control Register value
1324:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1325:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  control  Control value
1326:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1327:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the control register
1328:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1329:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1331:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1332:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1334:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  value  value to reverse
1335:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        reversed value
1336:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1337:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Reverse byte order in integer value
1338:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1339:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1341:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1342:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1344:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  value  value to reverse
1345:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        reversed value
1346:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1347:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Reverse byte order in unsigned short value
1348:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1349:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1351:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1352:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1354:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  value  value to reverse
1355:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        reversed value
1356:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1357:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1359:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1361:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1362:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Reverse bit order of value
1363:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1364:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  value  value to reverse
1365:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        reversed value
1366:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1367:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Reverse bit order of value
1368:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1369:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1371:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1372:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1374:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1375:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        value of (*address)
1376:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1377:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1379:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1381:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1382:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1384:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1385:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        value of (*address)
1386:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1387:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1389:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1391:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1392:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1394:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1395:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        value of (*address)
1396:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1397:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1399:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1401:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1402:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1404:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  value  value to store
1405:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1406:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        successful / failed
1407:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1408:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1410:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1412:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1413:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1415:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  value  value to store
1416:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1417:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        successful / failed
1418:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1419:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1421:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1423:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1424:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1426:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  value  value to store
1427:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1428:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        successful / failed
1429:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1430:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1432:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1434:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1435:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* TASKING carm specific functions */
1437:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1438:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*
1439:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Including the CMSIS ones.
1442:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1443:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1444:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif
1445:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1446:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1447:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   Core  Function Interface containing:
1449:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   - Core NVIC Functions
1450:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   - Core SysTick Functions
1451:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   - Core Reset Functions
1452:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** */
1453:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*@{*/
1454:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1455:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1457:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1458:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1460:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1462:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * The parameter priority_grouping is assigned to the field 
1464:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1468:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
1470:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   uint32_t reg_value;
1471:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   
1473:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   reg_value  =  (reg_value                       |
1476:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) | 
1477:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
1480:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1481:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1482:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1484:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return priority grouping field 
1485:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1486:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1489:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
1491:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
1493:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1494:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1495:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1497:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1499:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1502:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
  25              		.loc 1 1503 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 1, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 80B4     		push	{r7}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 7, -4
  34 0002 83B0     		sub	sp, sp, #12
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              	.LCFI2:
  39              		.cfi_def_cfa_register 7
  40 0006 0346     		mov	r3, r0
  41 0008 FB71     		strb	r3, [r7, #7]
1504:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  42              		.loc 1 1504 0
  43 000a 094B     		ldr	r3, .L2
  44 000c 97F90720 		ldrsb	r2, [r7, #7]
  45 0010 4FEA5212 		lsr	r2, r2, #5
  46 0014 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
  47 0016 01F01F01 		and	r1, r1, #31
  48 001a 4FF00100 		mov	r0, #1
  49 001e 00FA01F1 		lsl	r1, r0, r1
  50 0022 43F82210 		str	r1, [r3, r2, lsl #2]
1505:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
  51              		.loc 1 1505 0
  52 0026 07F10C07 		add	r7, r7, #12
  53 002a BD46     		mov	sp, r7
  54 002c 80BC     		pop	{r7}
  55 002e 7047     		bx	lr
  56              	.L3:
  57              		.align	2
  58              	.L2:
  59 0030 00E100E0 		.word	-536813312
  60              		.cfi_endproc
  61              	.LFE14:
  63              		.global	i
  64              		.bss
  67              	i:
  68 0000 00       		.space	1
  69              		.text
  70              		.align	2
  71              		.global	assert_failed
  72              		.thumb
  73              		.thumb_func
  75              	assert_failed:
  76              	.LFB29:
  77              		.file 2 "../src/main.c"
   1:../src/main.c **** ///**
   2:../src/main.c **** //  ******************************************************************************
   3:../src/main.c **** //  * @file    RC5_Receiver_Demo/src/main.c
   4:../src/main.c **** //  * @author  MCD Application Team
   5:../src/main.c **** //  * @version V1.0.0
   6:../src/main.c **** //  * @date    03/16/2010
   7:../src/main.c **** //  * @brief   Main program body
   8:../src/main.c **** //  ******************************************************************************
   9:../src/main.c **** //  * @copy
  10:../src/main.c **** //  *
  11:../src/main.c **** //  * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../src/main.c **** //  * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../src/main.c **** //  * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../src/main.c **** //  * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../src/main.c **** //  * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../src/main.c **** //  * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../src/main.c **** //  *
  18:../src/main.c **** //  * <h2><center>&copy; COPYRIGHT 2010 STMicroelectronics</center></h2>
  19:../src/main.c **** //  */
  20:../src/main.c **** //
  21:../src/main.c **** ///* Includes ------------------------------------------------------------------*/
  22:../src/main.c **** //#include "stm32f10x.h"
  23:../src/main.c **** //#include "stm32_eval.h"
  24:../src/main.c **** //#include "RC5_IR_Emul_Receiver.h"
  25:../src/main.c **** //#include <stdio.h>
  26:../src/main.c **** //
  27:../src/main.c **** ///** @addtogroup STM32F10x_StdPeriph_Examples
  28:../src/main.c **** //  * @{
  29:../src/main.c **** //  */
  30:../src/main.c **** //
  31:../src/main.c **** ///* Private typedef -----------------------------------------------------------*/
  32:../src/main.c **** ///* Private define ------------------------------------------------------------*/
  33:../src/main.c **** ///* Private macro -------------------------------------------------------------*/
  34:../src/main.c **** ///* Private variables ---------------------------------------------------------*/
  35:../src/main.c **** //
  36:../src/main.c **** ///* Table of different Addresses (devices) */
  37:../src/main.c **** //const char* RC5_Devices[32] = {
  38:../src/main.c **** //        "TV1" ,                  /* 0 */
  39:../src/main.c **** //        "TV2" ,                  /* 1 */
  40:../src/main.c **** //        "Video Text" ,           /* 2 */
  41:../src/main.c **** //        "Extension TV",          /* 3 */
  42:../src/main.c **** //        "LaserVideoPlayer",      /* 4 */
  43:../src/main.c **** //        "VCR1",                  /* 5 */
  44:../src/main.c **** //        "VCR2",                  /* 6 */
  45:../src/main.c **** //        "Reserved",              /* 7 */
  46:../src/main.c **** //        "Sat1",                  /* 8 */
  47:../src/main.c **** //        "Extension VCR",         /* 9 */
  48:../src/main.c **** //        "Sat2",                  /* 10 */
  49:../src/main.c **** //        "Reserved",              /* 11 */
  50:../src/main.c **** //        "CD Video",              /* 12 */
  51:../src/main.c **** //        "Reserved",              /* 13 */
  52:../src/main.c **** //        "CD Photo",              /* 14 */
  53:../src/main.c **** //        "Reserved",              /* 15 */
  54:../src/main.c **** //        "Preampli Audio 1",      /* 16 */
  55:../src/main.c **** //        "Tuner",                 /* 17 */
  56:../src/main.c **** //        "Analog Magneto",        /* 18 */
  57:../src/main.c **** //        "Preampli Audio 2",      /* 19 */
  58:../src/main.c **** //        "CD",                    /* 20 */
  59:../src/main.c **** //        "Rack Audio",            /* 21 */
  60:../src/main.c **** //        "Audio Sat Receiver",    /* 22 */
  61:../src/main.c **** //        "DDC Magneto",           /* 23 */
  62:../src/main.c **** //        "Reserved",              /* 24 */
  63:../src/main.c **** //        "Reserved",              /* 25 */
  64:../src/main.c **** //        "CDRW",                  /* 26 */
  65:../src/main.c **** //        "Reserved",              /* 27 */
  66:../src/main.c **** //        "Reserved",              /* 28 */
  67:../src/main.c **** //        "Reserved",              /* 29 */
  68:../src/main.c **** //        "Reserved",              /* 30 */
  69:../src/main.c **** //        "Reserved"               /* 31 */
  70:../src/main.c **** //       };
  71:../src/main.c **** //
  72:../src/main.c **** ///* Table of different commands (TV) */
  73:../src/main.c **** //const char* RC5_Commands[128] = {
  74:../src/main.c **** //        "Num0",                                       /* 0 */
  75:../src/main.c **** //        "Num1",                                       /* 1 */
  76:../src/main.c **** //        "Num2",                                       /* 2 */
  77:../src/main.c **** //        "Num3",                                       /* 3 */
  78:../src/main.c **** //        "Num4",                                       /* 4 */
  79:../src/main.c **** //        "Num5",                                       /* 5 */
  80:../src/main.c **** //        "Num6",                                       /* 6 */
  81:../src/main.c **** //        "Num7",                                       /* 7 */
  82:../src/main.c **** //        "Num8",                                       /* 8 */
  83:../src/main.c **** //        "Num9",                                       /* 9 */
  84:../src/main.c **** //        "TV Digits",                                  /* 10 */
  85:../src/main.c **** //        "TV Freq",                                    /* 11 */
  86:../src/main.c **** //        "TV StandBy",                                 /* 12 */
  87:../src/main.c **** //        "TV Mute On-Off",                             /* 13 */
  88:../src/main.c **** //        "TV Preference",                              /* 14 */
  89:../src/main.c **** //        "TV Display",                                 /* 15 */
  90:../src/main.c **** //        "Volume Up",                                  /* 16 */
  91:../src/main.c **** //        "Volume Down",                                /* 17 */
  92:../src/main.c **** //        "Brightness Up",                              /* 18 */
  93:../src/main.c **** //        "Brightness Down",                            /* 19 */
  94:../src/main.c **** //        "Color Saturation Up",                        /* 20 */
  95:../src/main.c **** //        "Color Saturation Down",                      /* 21 */
  96:../src/main.c **** //        "Bass Up",                                    /* 22 */
  97:../src/main.c **** //        "Bass Down",                                  /* 23 */
  98:../src/main.c **** //        "Treble Up",                                  /* 24 */
  99:../src/main.c **** //        "Treble Down",                                /* 25 */
 100:../src/main.c **** //        "Balance Right",                              /* 26 */
 101:../src/main.c **** //        "BalanceLeft",                                /* 27 */
 102:../src/main.c **** //        "TV Contrast Up",                             /* 28 */
 103:../src/main.c **** //        "TV Contrast Down",                           /* 29 */
 104:../src/main.c **** //        "TV Search Up",                               /* 30 */
 105:../src/main.c **** //        "TV tint-hue Down",                           /* 31 */
 106:../src/main.c **** //        "TV CH Prog Up",                              /* 32 */
 107:../src/main.c **** //        "TV CH ProgDown",                             /* 33 */
 108:../src/main.c **** //        "TV Last viewed program-channel",             /* 34 */
 109:../src/main.c **** //        "TV Select stereo sound channel-language",    /* 34 */
 110:../src/main.c **** //        "TV Spacial Stereo",                          /* 36 */
 111:../src/main.c **** //        "TV Stereo Mono",                             /* 37 */
 112:../src/main.c **** //        "TV Sleep Timer",                             /* 38 */
 113:../src/main.c **** //        "TV tint-hue Up",                             /* 39 */
 114:../src/main.c **** //        "TV RF Switch",                               /* 40 */
 115:../src/main.c **** //        "TV Store-VOTE",                              /* 41 */
 116:../src/main.c **** //        "TV Time",                                    /* 42 */
 117:../src/main.c **** //        "TV Scan Fwd Inc",                            /* 43 */
 118:../src/main.c **** //        "TV Decrement",                               /* 44 */
 119:../src/main.c **** //        "Reserved",                                   /* 45 */
 120:../src/main.c **** //        "TV Secondary control-menu",                  /* 46 */
 121:../src/main.c **** //        "TV Show Clock",                              /* 47 */
 122:../src/main.c **** //        "TV Pause",                                   /* 48 */
 123:../src/main.c **** //        "TV Erase Correct Entry",                     /* 49 */
 124:../src/main.c **** //        "TV Rewind",                                  /* 50 */
 125:../src/main.c **** //        "TV Goto",                                    /* 51 */
 126:../src/main.c **** //        "TV Wind",                                    /* 52 */
 127:../src/main.c **** //        "TV Play",                                    /* 53 */
 128:../src/main.c **** //        "TV Stop",                                    /* 54 */
 129:../src/main.c **** //        "TV Record",                                  /* 55 */
 130:../src/main.c **** //        "TV External 1",                              /* 56 */
 131:../src/main.c **** //        "TV External 2",                              /* 57 */
 132:../src/main.c **** //        "Reserved",                                   /* 58 */
 133:../src/main.c **** //        "TV Advance",                                 /* 59 */
 134:../src/main.c **** //        "TV TXT-TV toggle",                           /* 60 */
 135:../src/main.c **** //        "TV System StandBy",                          /* 61 */
 136:../src/main.c **** //        "TV Picture Crispener",                       /* 62 */
 137:../src/main.c **** //        "System Select",                              /* 63 */
 138:../src/main.c **** //        "Reserved",                                   /* 64 */
 139:../src/main.c **** //        "Reserved",                                   /* 65 */
 140:../src/main.c **** //        "Reserved",                                   /* 66 */
 141:../src/main.c **** //        "Reserved",                                   /* 67 */
 142:../src/main.c **** //        "Reserved",                                   /* 68 */
 143:../src/main.c **** //        "Reserved",                                   /* 69 */
 144:../src/main.c **** //        "TV Speech Music",                            /* 70 */
 145:../src/main.c **** //        "DIM Local Display",                          /* 71 */
 146:../src/main.c **** //        "Reserved",                                   /* 72 */
 147:../src/main.c **** //        "Reserved",                                   /* 73 */
 148:../src/main.c **** //        "Reserved",                                   /* 74 */
 149:../src/main.c **** //        "Reserved",                                   /* 75 */
 150:../src/main.c **** //        "Reserved",                                   /* 76 */
 151:../src/main.c **** //        "Increase Linear Control Setting",            /* 77 */
 152:../src/main.c **** //        "Decrease Linear Control Setting",            /* 78 */
 153:../src/main.c **** //        "TV Sound Scroll",                            /* 79 */
 154:../src/main.c **** //        "Step Up",                                    /* 80 */
 155:../src/main.c **** //        "Step Down",                                  /* 81 */
 156:../src/main.c **** //        "Menu On",                                    /* 82 */
 157:../src/main.c **** //        "Menu Off",                                   /* 83 */
 158:../src/main.c **** //        "AV Status",                                  /* 84 */
 159:../src/main.c **** //        "Step Left",                                  /* 85 */
 160:../src/main.c **** //        "Step Right",                                 /* 86 */
 161:../src/main.c **** //        "Acknowledge",                                /* 87 */
 162:../src/main.c **** //        "PIP On Off",                                 /* 88 */
 163:../src/main.c **** //        "PIP Shift",                                  /* 89 */
 164:../src/main.c **** //        "PIP Main Swap",                              /* 90 */
 165:../src/main.c **** //        "Strobe On Off",                              /* 91 */
 166:../src/main.c **** //        "Multi Strobe",                               /* 92 */
 167:../src/main.c **** //        "Main Frozen",                                /* 93 */
 168:../src/main.c **** //        "3div9 Multi scan",                           /* 94 */
 169:../src/main.c **** //        "PIPSelect",                                  /* 95 */
 170:../src/main.c **** //        "MultiPIP",                                   /* 96 */
 171:../src/main.c **** //        "Picture DNR",                                /* 97 */
 172:../src/main.c **** //        "Main Stored",                                /* 98 */
 173:../src/main.c **** //        "PIP Strobe",                                 /* 99 */
 174:../src/main.c **** //        "Recall Main Stored Picture",                 /* 100 */
 175:../src/main.c **** //        "PIP Freeze",                                 /* 101 */
 176:../src/main.c **** //        "PIP Step Up",                                /* 102 */
 177:../src/main.c **** //        "PIP Step Down",                              /* 103 */
 178:../src/main.c **** //        "TV PIP Size",                                /* 104 */
 179:../src/main.c **** //        "TV Picture Scroll",                          /* 105 */
 180:../src/main.c **** //        "TV Actuate Colored Or Other Special Keys",   /* 106 */
 181:../src/main.c **** //        "TV Red",                                     /* 107 */
 182:../src/main.c **** //        "TV Green",                                   /* 108 */
 183:../src/main.c **** //        "TV Yellow",                                  /* 109 */
 184:../src/main.c **** //        "TV Cyan",                                    /* 110 */
 185:../src/main.c **** //        "TV Index White",                             /* 111 */
 186:../src/main.c **** //        "TV Next",                                    /* 112 */
 187:../src/main.c **** //        "TV Previous",                                /* 113 */
 188:../src/main.c **** //        "Reserved",                                   /* 114 */
 189:../src/main.c **** //        "Reserved",                                   /* 115 */
 190:../src/main.c **** //        "Reserved",                                   /* 116 */
 191:../src/main.c **** //        "Reserved",                                   /* 117 */
 192:../src/main.c **** //        "Sub Mode",                                   /* 118 */
 193:../src/main.c **** //        "Option Sub Mode",                            /* 119 */
 194:../src/main.c **** //        "Reserved",                                   /* 120 */
 195:../src/main.c **** //        "Reserved",                                   /* 121 */
 196:../src/main.c **** //        "TV Store Open Close",                        /* 122 */
 197:../src/main.c **** //        "Connect",                                    /* 123 */
 198:../src/main.c **** //        "Disconnect",                                 /* 124 */
 199:../src/main.c **** //        "Reserved",                                   /* 125 */
 200:../src/main.c **** //        "TV Movie Expand",                            /* 126 */
 201:../src/main.c **** //        "TV Parental Access"                          /* 127 */
 202:../src/main.c **** //   };
 203:../src/main.c **** //
 204:../src/main.c **** //extern StatusYesOrNo RC5_FrameReceived;
 205:../src/main.c **** //RC5Frame_TypeDef RC5_Frame;
 206:../src/main.c **** //uint8_t RC5_TogglePrevious = 0;
 207:../src/main.c **** //StatusYesOrNo FirstTimeIssued = YES;
 208:../src/main.c **** //
 209:../src/main.c **** ///* Private function prototypes -----------------------------------------------*/
 210:../src/main.c **** //void RCC_Configuration(void);
 211:../src/main.c **** //
 212:../src/main.c **** //
 213:../src/main.c **** //#ifdef __GNUC__
 214:../src/main.c **** //  /* With GCC/RAISONANCE, small printf (option LD Linker->Libraries->Small printf
 215:../src/main.c **** //     set to 'Yes') calls __io_putchar() */
 216:../src/main.c **** //  #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
 217:../src/main.c **** //#else
 218:../src/main.c **** //  #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
 219:../src/main.c **** //#endif /* __GNUC__ */
 220:../src/main.c **** //
 221:../src/main.c **** ///* Private functions ---------------------------------------------------------*/
 222:../src/main.c **** //
 223:../src/main.c **** ///**
 224:../src/main.c **** //  * @brief  Main program
 225:../src/main.c **** //  * @param  None
 226:../src/main.c **** //  * @retval None
 227:../src/main.c **** //  */
 228:../src/main.c **** //int main(void)
 229:../src/main.c **** //{
 230:../src/main.c **** //
 231:../src/main.c **** //  /* System Clocks Configuration */
 232:../src/main.c **** //  RCC_Configuration();
 233:../src/main.c **** //
 234:../src/main.c **** //  /* Initialize RC5 reception */
 235:../src/main.c **** //  RC5_Receiver_Init();
 236:../src/main.c **** //
 237:../src/main.c **** //  /* Configure LED1 GPIO */
 238:../src/main.c **** //  //STM_EVAL_LEDInit(LED4);
 239:../src/main.c **** //  //STM_EVAL_LEDOn(LED4);
 240:../src/main.c **** //
 241:../src/main.c **** //
 242:../src/main.c **** //
 243:../src/main.c **** //  while (1)
 244:../src/main.c **** //  {
 245:../src/main.c **** //     /* If RC5 frame has been received, then decode it */
 246:../src/main.c **** //	  STM_EVAL_LEDInit(LED);
 247:../src/main.c **** //	  STM_EVAL_LEDOn(LED4);
 248:../src/main.c **** //     if (RC5_FrameReceived == YES)
 249:../src/main.c **** //     {
 250:../src/main.c **** //         /* Turn On LED1  */
 251:../src/main.c **** //         STM_EVAL_LEDOn(LED1);
 252:../src/main.c **** //
 253:../src/main.c **** //         /* Get the RC5 frame */
 254:../src/main.c **** //         RC5_Frame = RC5_Decode();
 255:../src/main.c **** //
 256:../src/main.c **** //         /* If the first time RC5 frame is received */
 257:../src/main.c **** //         if(FirstTimeIssued == YES)
 258:../src/main.c **** //         {
 259:../src/main.c **** //           /* Get and invert the toggle bit received at the first time to allow
 260:../src/main.c **** //             to enter the next condition at the first time */
 261:../src/main.c **** //           RC5_TogglePrevious = ~(RC5_Frame.ToggleBit)&0x01;
 262:../src/main.c **** //
 263:../src/main.c **** //           /* Initialize the variable to avoid to enter in this section next time */
 264:../src/main.c **** //           FirstTimeIssued = NO;
 265:../src/main.c **** //         }
 266:../src/main.c **** //
 267:../src/main.c **** //         if(RC5_Frame.ToggleBit != RC5_TogglePrevious)
 268:../src/main.c **** //		{
 269:../src/main.c **** //		  /* Print RC5 Toggle bit state */
 270:../src/main.c **** //		 // printf("\n\rRC5 Toggle bit: %d \n\r",RC5_Frame.ToggleBit);
 271:../src/main.c **** //        	 RC5_TogglePrevious = RC5_Frame.ToggleBit;
 272:../src/main.c **** //		}
 273:../src/main.c **** //         /* Turn Off LED1  */
 274:../src/main.c **** //         STM_EVAL_LEDOff(LED1);
 275:../src/main.c **** //
 276:../src/main.c **** //
 277:../src/main.c **** //     }
 278:../src/main.c **** //  }
 279:../src/main.c **** //
 280:../src/main.c **** //
 281:../src/main.c **** //}
 282:../src/main.c **** //
 283:../src/main.c **** //
 284:../src/main.c **** ///**
 285:../src/main.c **** //  * @brief  Configures the different system clocks.
 286:../src/main.c **** //  * @param  None
 287:../src/main.c **** //  * @retval None
 288:../src/main.c **** //  */
 289:../src/main.c **** //void RCC_Configuration(void)
 290:../src/main.c **** //{
 291:../src/main.c **** //  /* Setup the microcontroller system. Initialize the Embedded Flash Interface,
 292:../src/main.c **** //     initialize the PLL and update the SystemFrequency variable. */
 293:../src/main.c **** //  SystemInit();
 294:../src/main.c **** //
 295:../src/main.c **** //}
 296:../src/main.c **** //
 297:../src/main.c **** //
 298:../src/main.c **** //
 299:../src/main.c **** //
 300:../src/main.c **** ///**
 301:../src/main.c **** //  * @brief  Retargets the C library printf function to the USART.
 302:../src/main.c **** //  * @param  None
 303:../src/main.c **** //  * @retval None
 304:../src/main.c **** //  */
 305:../src/main.c **** //
 306:../src/main.c **** //
 307:../src/main.c **** 
 308:../src/main.c **** //
 309:../src/main.c **** ///**
 310:../src/main.c **** //  * @}
 311:../src/main.c **** //  */
 312:../src/main.c **** //
 313:../src/main.c **** ///******************* (C) COPYRIGHT 2010 STMicroelectronics *****END OF FILE****/
 314:../src/main.c **** 
 315:../src/main.c **** 
 316:../src/main.c **** #include "stm32f10x.h"
 317:../src/main.c **** #include "RC5_IR_Emul_Receiver.h"
 318:../src/main.c **** //#include  "stm3210b_eval.h"
 319:../src/main.c **** 
 320:../src/main.c **** //#include "stm32_eval.h"
 321:../src/main.c **** 
 322:../src/main.c **** #include <stdio.h>
 323:../src/main.c **** 
 324:../src/main.c **** uint8_t i=0;
 325:../src/main.c **** 
 326:../src/main.c **** #ifdef  USE_FULL_ASSERT
 327:../src/main.c **** 
 328:../src/main.c **** /**
 329:../src/main.c ****   * @brief  Reports the name of the source file and the source line number
 330:../src/main.c ****   *   where the assert_param error has occurred.
 331:../src/main.c ****   * @param  file: pointer to the source file name
 332:../src/main.c ****   * @param  line: assert_param error line source number
 333:../src/main.c ****   * @retval None
 334:../src/main.c ****   */
 335:../src/main.c **** void assert_failed(uint8_t* file, uint32_t line)
 336:../src/main.c **** {
  78              		.loc 2 336 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 8
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83 0034 80B4     		push	{r7}
  84              	.LCFI3:
  85              		.cfi_def_cfa_offset 4
  86              		.cfi_offset 7, -4
  87 0036 83B0     		sub	sp, sp, #12
  88              	.LCFI4:
  89              		.cfi_def_cfa_offset 16
  90 0038 00AF     		add	r7, sp, #0
  91              	.LCFI5:
  92              		.cfi_def_cfa_register 7
  93 003a 7860     		str	r0, [r7, #4]
  94 003c 3960     		str	r1, [r7, #0]
  95              	.L5:
 337:../src/main.c ****   /* User can add his own implementation to report the file name and line number,
 338:../src/main.c ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 339:../src/main.c **** 
 340:../src/main.c ****   while (1)
 341:../src/main.c ****   {}
  96              		.loc 2 341 0 discriminator 1
  97 003e FEE7     		b	.L5
  98              		.cfi_endproc
  99              	.LFE29:
 101              		.comm	RC5_Frame,3,4
 102              		.global	RC5_TogglePrevious
 103              		.bss
 106              	RC5_TogglePrevious:
 107 0001 00       		.space	1
 108              		.global	FirstTimeIssued
 109              		.data
 112              	FirstTimeIssued:
 113 0000 01       		.byte	1
 114              		.text
 115              		.align	2
 116              		.global	RCC_Configuration
 117              		.thumb
 118              		.thumb_func
 120              	RCC_Configuration:
 121              	.LFB30:
 342:../src/main.c **** }
 343:../src/main.c **** #endif
 344:../src/main.c **** 
 345:../src/main.c **** //=====
 346:../src/main.c **** extern StatusYesOrNo RC5_FrameReceived;
 347:../src/main.c **** RC5Frame_TypeDef RC5_Frame;
 348:../src/main.c **** uint8_t RC5_TogglePrevious = 0;
 349:../src/main.c **** StatusYesOrNo FirstTimeIssued = YES;
 350:../src/main.c **** //=====
 351:../src/main.c **** 
 352:../src/main.c **** 
 353:../src/main.c **** 
 354:../src/main.c **** void RCC_Configuration(void)
 355:../src/main.c **** {
 122              		.loc 2 355 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126 0040 80B5     		push	{r7, lr}
 127              	.LCFI6:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 7, -8
 130              		.cfi_offset 14, -4
 131 0042 00AF     		add	r7, sp, #0
 132              	.LCFI7:
 133              		.cfi_def_cfa_register 7
 356:../src/main.c ****   /* Setup the microcontroller system. Initialize the Embedded Flash Interface,
 357:../src/main.c ****      initialize the PLL and update the SystemFrequency variable. */
 358:../src/main.c ****   SystemInit();
 134              		.loc 2 358 0
 135 0044 FFF7FEFF 		bl	SystemInit
 359:../src/main.c **** 
 360:../src/main.c **** }
 136              		.loc 2 360 0
 137 0048 80BD     		pop	{r7, pc}
 138              		.cfi_endproc
 139              	.LFE30:
 141 004a 00BF     		.align	2
 142              		.global	main
 143              		.thumb
 144              		.thumb_func
 146              	main:
 147              	.LFB31:
 361:../src/main.c **** 
 362:../src/main.c **** void SetupUSART();
 363:../src/main.c **** 
 364:../src/main.c **** int main(void)
 365:../src/main.c **** {
 148              		.loc 2 365 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 8
 151              		@ frame_needed = 1, uses_anonymous_args = 0
 152 004c 80B5     		push	{r7, lr}
 153              	.LCFI8:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 004e 82B0     		sub	sp, sp, #8
 158              	.LCFI9:
 159              		.cfi_def_cfa_offset 16
 160 0050 00AF     		add	r7, sp, #0
 161              	.LCFI10:
 162              		.cfi_def_cfa_register 7
 366:../src/main.c ****   /* System Clocks Configuration */
 367:../src/main.c ****   RCC_Configuration();
 163              		.loc 2 367 0
 164 0052 FFF7FEFF 		bl	RCC_Configuration
 368:../src/main.c **** 
 369:../src/main.c ****   /* Initialize RC5 reception */
 370:../src/main.c ****   RC5_Receiver_Init();
 165              		.loc 2 370 0
 166 0056 FFF7FEFF 		bl	RC5_Receiver_Init
 371:../src/main.c **** 
 372:../src/main.c **** //  SetupUSART();
 373:../src/main.c **** 
 374:../src/main.c **** 
 375:../src/main.c ****   RCC->APB2ENR |= RCC_APB2ENR_IOPCEN;  // Enable PORTC Periph clock
 167              		.loc 2 375 0
 168 005a 2B4B     		ldr	r3, .L11
 169 005c 2A4A     		ldr	r2, .L11
 170 005e 9269     		ldr	r2, [r2, #24]
 171 0060 42F01002 		orr	r2, r2, #16
 172 0064 9A61     		str	r2, [r3, #24]
 376:../src/main.c ****   RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;  // Enable TIM3 Periph clock
 173              		.loc 2 376 0
 174 0066 284B     		ldr	r3, .L11
 175 0068 274A     		ldr	r2, .L11
 176 006a D269     		ldr	r2, [r2, #28]
 177 006c 42F00202 		orr	r2, r2, #2
 178 0070 DA61     		str	r2, [r3, #28]
 377:../src/main.c ****   // Clear PC8 and PC9 control register bits
 378:../src/main.c ****   GPIOC->CRH &= ~(GPIO_CRH_MODE8 | GPIO_CRH_CNF8 |
 179              		.loc 2 378 0
 180 0072 264B     		ldr	r3, .L11+4
 181 0074 254A     		ldr	r2, .L11+4
 182 0076 5268     		ldr	r2, [r2, #4]
 183 0078 22F0FF02 		bic	r2, r2, #255
 184 007c 5A60     		str	r2, [r3, #4]
 379:../src/main.c ****           GPIO_CRH_MODE9 | GPIO_CRH_CNF9);
 380:../src/main.c ****   // Configure PC8 and PC9 as Push Pull output at max 10Mhz
 381:../src/main.c ****   GPIOC->CRH |= GPIO_CRH_MODE8_0 | GPIO_CRH_MODE9_0;
 185              		.loc 2 381 0
 186 007e 234B     		ldr	r3, .L11+4
 187 0080 224A     		ldr	r2, .L11+4
 188 0082 5268     		ldr	r2, [r2, #4]
 189 0084 42F01102 		orr	r2, r2, #17
 190 0088 5A60     		str	r2, [r3, #4]
 382:../src/main.c ****   TIM3->PSC = SystemCoreClock / 1000 - 1; // 1000 tick/sec
 191              		.loc 2 382 0
 192 008a 214B     		ldr	r3, .L11+8
 193 008c 214A     		ldr	r2, .L11+12
 194 008e 1168     		ldr	r1, [r2, #0]
 195 0090 214A     		ldr	r2, .L11+16
 196 0092 A2FB0102 		umull	r0, r2, r2, r1
 197 0096 4FEA9212 		lsr	r2, r2, #6
 198 009a 92B2     		uxth	r2, r2
 199 009c 02F1FF32 		add	r2, r2, #-1
 200 00a0 92B2     		uxth	r2, r2
 201 00a2 1A85     		strh	r2, [r3, #40]	@ movhi
 383:../src/main.c ****   TIM3->ARR = 1000;  // 1 Interrupt/sec (1000/100)
 202              		.loc 2 383 0
 203 00a4 1A4B     		ldr	r3, .L11+8
 204 00a6 4FF47A72 		mov	r2, #1000
 205 00aa 9A85     		strh	r2, [r3, #44]	@ movhi
 384:../src/main.c ****   TIM3->DIER |= TIM_DIER_UIE; // Enable TIM3 interrupt
 206              		.loc 2 384 0
 207 00ac 184B     		ldr	r3, .L11+8
 208 00ae 184A     		ldr	r2, .L11+8
 209 00b0 9289     		ldrh	r2, [r2, #12]	@ movhi
 210 00b2 92B2     		uxth	r2, r2
 211 00b4 42F00102 		orr	r2, r2, #1
 212 00b8 92B2     		uxth	r2, r2
 213 00ba 9A81     		strh	r2, [r3, #12]	@ movhi
 385:../src/main.c ****   TIM3->CR1 |= TIM_CR1_CEN;   // Start count
 214              		.loc 2 385 0
 215 00bc 144B     		ldr	r3, .L11+8
 216 00be 144A     		ldr	r2, .L11+8
 217 00c0 1288     		ldrh	r2, [r2, #0]	@ movhi
 218 00c2 92B2     		uxth	r2, r2
 219 00c4 42F00102 		orr	r2, r2, #1
 220 00c8 92B2     		uxth	r2, r2
 221 00ca 1A80     		strh	r2, [r3, #0]	@ movhi
 386:../src/main.c ****   NVIC_EnableIRQ(TIM3_IRQn);  // Enable IRQ
 222              		.loc 2 386 0
 223 00cc 4FF01D00 		mov	r0, #29
 224 00d0 FFF796FF 		bl	NVIC_EnableIRQ
 225 00d4 00E0     		b	.L9
 226              	.L10:
 387:../src/main.c **** 
 388:../src/main.c ****   while(1) // Infinity loop
 389:../src/main.c ****   {
 390:../src/main.c **** 
 391:../src/main.c **** 	   if (RC5_FrameReceived == YES)
 392:../src/main.c **** 	   {
 393:../src/main.c **** 		   /* Turn On LED1  */
 394:../src/main.c **** 		//   STM_EVAL_LEDOn(LED1);
 395:../src/main.c **** 
 396:../src/main.c **** 		   /* Get the RC5 frame */
 397:../src/main.c **** 		   RC5_Frame = RC5_Decode();
 398:../src/main.c **** 
 399:../src/main.c **** //		   USART_SendData(USART1,RC5_Frame.Command);
 400:../src/main.c **** 	   }
 401:../src/main.c ****   }
 227              		.loc 2 401 0
 228 00d6 00BF     		nop
 229              	.L9:
 391:../src/main.c **** 	   if (RC5_FrameReceived == YES)
 230              		.loc 2 391 0
 231 00d8 104B     		ldr	r3, .L11+20
 232 00da 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 233 00dc 012B     		cmp	r3, #1
 234 00de FAD1     		bne	.L10
 397:../src/main.c **** 		   RC5_Frame = RC5_Decode();
 235              		.loc 2 397 0
 236 00e0 FFF7FEFF 		bl	RC5_Decode
 237 00e4 3870     		strb	r0, [r7, #0]
 238 00e6 C0F30723 		ubfx	r3, r0, #8, #8
 239 00ea 7B70     		strb	r3, [r7, #1]
 240 00ec C0F30743 		ubfx	r3, r0, #16, #8
 241 00f0 BB70     		strb	r3, [r7, #2]
 242 00f2 0B4B     		ldr	r3, .L11+24
 243 00f4 3A46     		mov	r2, r7
 244 00f6 1268     		ldr	r2, [r2, #0]
 245 00f8 1146     		mov	r1, r2	@ movhi
 246 00fa 1980     		strh	r1, [r3, #0]	@ movhi
 247 00fc 03F10203 		add	r3, r3, #2
 248 0100 4FEA1242 		lsr	r2, r2, #16
 249 0104 1A70     		strb	r2, [r3, #0]
 250              		.loc 2 401 0
 251 0106 E6E7     		b	.L10
 252              	.L12:
 253              		.align	2
 254              	.L11:
 255 0108 00100240 		.word	1073876992
 256 010c 00100140 		.word	1073811456
 257 0110 00040040 		.word	1073742848
 258 0114 00000000 		.word	SystemCoreClock
 259 0118 D34D6210 		.word	274877907
 260 011c 00000000 		.word	RC5_FrameReceived
 261 0120 00000000 		.word	RC5_Frame
 262              		.cfi_endproc
 263              	.LFE31:
 265              		.align	2
 266              		.global	SetupUSART
 267              		.thumb
 268              		.thumb_func
 270              	SetupUSART:
 271              	.LFB32:
 402:../src/main.c **** }
 403:../src/main.c **** 
 404:../src/main.c **** 
 405:../src/main.c **** /***************************************************************************//**
 406:../src/main.c ****  * @brief Init USART1
 407:../src/main.c ****  ******************************************************************************/
 408:../src/main.c **** void SetupUSART()
 409:../src/main.c **** {
 272              		.loc 2 409 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 24
 275              		@ frame_needed = 1, uses_anonymous_args = 0
 276 0124 80B5     		push	{r7, lr}
 277              	.LCFI11:
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 7, -8
 280              		.cfi_offset 14, -4
 281 0126 86B0     		sub	sp, sp, #24
 282              	.LCFI12:
 283              		.cfi_def_cfa_offset 32
 284 0128 00AF     		add	r7, sp, #0
 285              	.LCFI13:
 286              		.cfi_def_cfa_register 7
 410:../src/main.c **** 
 411:../src/main.c ****       GPIO_InitTypeDef  GPIO_InitStructure;
 412:../src/main.c ****       USART_InitTypeDef USART_InitStructure;
 413:../src/main.c **** 
 414:../src/main.c ****       /* Enable GPIOA clock                                                   */
 415:../src/main.c ****       RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
 287              		.loc 2 415 0
 288 012a 4FF00400 		mov	r0, #4
 289 012e 4FF00101 		mov	r1, #1
 290 0132 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 416:../src/main.c **** 
 417:../src/main.c ****       /* Configure USART1 Rx (PA10) as input floating                         */
 418:../src/main.c ****       GPIO_InitStructure.GPIO_Pin   = GPIO_Pin_10;
 291              		.loc 2 418 0
 292 0136 4FF48063 		mov	r3, #1024
 293 013a BB82     		strh	r3, [r7, #20]	@ movhi
 419:../src/main.c ****       GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_IN_FLOATING;
 294              		.loc 2 419 0
 295 013c 4FF00403 		mov	r3, #4
 296 0140 FB75     		strb	r3, [r7, #23]
 420:../src/main.c ****       GPIO_Init(GPIOA, &GPIO_InitStructure);
 297              		.loc 2 420 0
 298 0142 07F11403 		add	r3, r7, #20
 299 0146 1D48     		ldr	r0, .L14
 300 0148 1946     		mov	r1, r3
 301 014a FFF7FEFF 		bl	GPIO_Init
 421:../src/main.c **** 
 422:../src/main.c ****       /* Configure USART1 Tx (PA9) as alternate function push-pull            */
 423:../src/main.c ****       GPIO_InitStructure.GPIO_Pin   = GPIO_Pin_9;
 302              		.loc 2 423 0
 303 014e 4FF40073 		mov	r3, #512
 304 0152 BB82     		strh	r3, [r7, #20]	@ movhi
 424:../src/main.c ****       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 305              		.loc 2 424 0
 306 0154 4FF00303 		mov	r3, #3
 307 0158 BB75     		strb	r3, [r7, #22]
 425:../src/main.c ****       GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF_PP;
 308              		.loc 2 425 0
 309 015a 4FF01803 		mov	r3, #24
 310 015e FB75     		strb	r3, [r7, #23]
 426:../src/main.c ****       GPIO_Init(GPIOA, &GPIO_InitStructure);
 311              		.loc 2 426 0
 312 0160 07F11403 		add	r3, r7, #20
 313 0164 1548     		ldr	r0, .L14
 314 0166 1946     		mov	r1, r3
 315 0168 FFF7FEFF 		bl	GPIO_Init
 427:../src/main.c **** 
 428:../src/main.c ****       RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1,ENABLE);
 316              		.loc 2 428 0
 317 016c 4FF48040 		mov	r0, #16384
 318 0170 4FF00101 		mov	r1, #1
 319 0174 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 429:../src/main.c ****       /* USART1 configured as follow:
 430:../src/main.c ****             - BaudRate = 9600 baud
 431:../src/main.c ****             - Word Length = 8 Bits
 432:../src/main.c ****             - One Stop Bit
 433:../src/main.c ****             - No parity
 434:../src/main.c ****             - Hardware flow control disabled (RTS and CTS signals)
 435:../src/main.c ****             - Receive and transmit enabled
 436:../src/main.c ****             - USART Clock disabled
 437:../src/main.c ****             - USART CPOL: Clock is active low
 438:../src/main.c ****             - USART CPHA: Data is captured on the middle
 439:../src/main.c ****             - USART LastBit: The clock pulse of the last data bit is not output to
 440:../src/main.c ****                              the SCLK pin
 441:../src/main.c ****       */
 442:../src/main.c ****       USART_InitStructure.USART_BaudRate            = 9600;
 320              		.loc 2 442 0
 321 0178 4FF41653 		mov	r3, #9600
 322 017c 7B60     		str	r3, [r7, #4]
 443:../src/main.c ****       USART_InitStructure.USART_WordLength          = USART_WordLength_8b;
 323              		.loc 2 443 0
 324 017e 4FF00003 		mov	r3, #0
 325 0182 3B81     		strh	r3, [r7, #8]	@ movhi
 444:../src/main.c ****       USART_InitStructure.USART_StopBits            = USART_StopBits_1;
 326              		.loc 2 444 0
 327 0184 4FF00003 		mov	r3, #0
 328 0188 7B81     		strh	r3, [r7, #10]	@ movhi
 445:../src/main.c ****       USART_InitStructure.USART_Parity              = USART_Parity_No ;
 329              		.loc 2 445 0
 330 018a 4FF00003 		mov	r3, #0
 331 018e BB81     		strh	r3, [r7, #12]	@ movhi
 446:../src/main.c ****       USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 332              		.loc 2 446 0
 333 0190 4FF00003 		mov	r3, #0
 334 0194 3B82     		strh	r3, [r7, #16]	@ movhi
 447:../src/main.c ****       USART_InitStructure.USART_Mode                = USART_Mode_Rx | USART_Mode_Tx;
 335              		.loc 2 447 0
 336 0196 4FF00C03 		mov	r3, #12
 337 019a FB81     		strh	r3, [r7, #14]	@ movhi
 448:../src/main.c ****       USART_Init(USART1, &USART_InitStructure);
 338              		.loc 2 448 0
 339 019c 07F10403 		add	r3, r7, #4
 340 01a0 0748     		ldr	r0, .L14+4
 341 01a2 1946     		mov	r1, r3
 342 01a4 FFF7FEFF 		bl	USART_Init
 449:../src/main.c ****       USART_Cmd(USART1, ENABLE);
 343              		.loc 2 449 0
 344 01a8 0548     		ldr	r0, .L14+4
 345 01aa 4FF00101 		mov	r1, #1
 346 01ae FFF7FEFF 		bl	USART_Cmd
 450:../src/main.c **** }
 347              		.loc 2 450 0
 348 01b2 07F11807 		add	r7, r7, #24
 349 01b6 BD46     		mov	sp, r7
 350 01b8 80BD     		pop	{r7, pc}
 351              	.L15:
 352 01ba 00BF     		.align	2
 353              	.L14:
 354 01bc 00080140 		.word	1073809408
 355 01c0 00380140 		.word	1073821696
 356              		.cfi_endproc
 357              	.LFE32:
 359              		.align	2
 360              		.global	TIM3_IRQHandler
 361              		.thumb
 362              		.thumb_func
 364              	TIM3_IRQHandler:
 365              	.LFB33:
 451:../src/main.c **** void TIM3_IRQHandler(void)
 452:../src/main.c **** {
 366              		.loc 2 452 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371 01c4 80B4     		push	{r7}
 372              	.LCFI14:
 373              		.cfi_def_cfa_offset 4
 374              		.cfi_offset 7, -4
 375 01c6 00AF     		add	r7, sp, #0
 376              	.LCFI15:
 377              		.cfi_def_cfa_register 7
 453:../src/main.c **** 
 454:../src/main.c **** //	/* Sample each bit of RC5 frame */
 455:../src/main.c **** //	RC5_Sample_Data();
 456:../src/main.c **** 
 457:../src/main.c ****   TIM3->SR &= ~TIM_SR_UIF; //Clean UIF Flag
 378              		.loc 2 457 0
 379 01c8 164B     		ldr	r3, .L19
 380 01ca 164A     		ldr	r2, .L19
 381 01cc 128A     		ldrh	r2, [r2, #16]	@ movhi
 382 01ce 92B2     		uxth	r2, r2
 383 01d0 22F00102 		bic	r2, r2, #1
 384 01d4 92B2     		uxth	r2, r2
 385 01d6 1A82     		strh	r2, [r3, #16]	@ movhi
 458:../src/main.c ****   if (1 == (i++ & 0x1)) {
 386              		.loc 2 458 0
 387 01d8 134B     		ldr	r3, .L19+4
 388 01da 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 389 01dc 1A46     		mov	r2, r3
 390 01de 02F00102 		and	r2, r2, #1
 391 01e2 002A     		cmp	r2, #0
 392 01e4 0CBF     		ite	eq
 393 01e6 0022     		moveq	r2, #0
 394 01e8 0122     		movne	r2, #1
 395 01ea D2B2     		uxtb	r2, r2
 396 01ec 03F10103 		add	r3, r3, #1
 397 01f0 D9B2     		uxtb	r1, r3
 398 01f2 0D4B     		ldr	r3, .L19+4
 399 01f4 1970     		strb	r1, [r3, #0]
 400 01f6 002A     		cmp	r2, #0
 401 01f8 08D0     		beq	.L17
 459:../src/main.c ****     GPIOC->BSRR = GPIO_BSRR_BS8;   // Set PC8 bit
 402              		.loc 2 459 0
 403 01fa 0C4B     		ldr	r3, .L19+8
 404 01fc 4FF48072 		mov	r2, #256
 405 0200 1A61     		str	r2, [r3, #16]
 460:../src/main.c ****     GPIOC->BSRR = GPIO_BSRR_BR9;   // Reset PC9 bit
 406              		.loc 2 460 0
 407 0202 0A4B     		ldr	r3, .L19+8
 408 0204 4FF00072 		mov	r2, #33554432
 409 0208 1A61     		str	r2, [r3, #16]
 410 020a 07E0     		b	.L16
 411              	.L17:
 461:../src/main.c ****   } else {
 462:../src/main.c ****     GPIOC->BSRR = GPIO_BSRR_BS9;   // Set PC9 bit
 412              		.loc 2 462 0
 413 020c 074B     		ldr	r3, .L19+8
 414 020e 4FF40072 		mov	r2, #512
 415 0212 1A61     		str	r2, [r3, #16]
 463:../src/main.c ****     GPIOC->BSRR = GPIO_BSRR_BR8;   // Reset PC8 bit
 416              		.loc 2 463 0
 417 0214 054B     		ldr	r3, .L19+8
 418 0216 4FF08072 		mov	r2, #16777216
 419 021a 1A61     		str	r2, [r3, #16]
 420              	.L16:
 464:../src/main.c ****   }
 465:../src/main.c **** }
 421              		.loc 2 465 0
 422 021c BD46     		mov	sp, r7
 423 021e 80BC     		pop	{r7}
 424 0220 7047     		bx	lr
 425              	.L20:
 426 0222 00BF     		.align	2
 427              	.L19:
 428 0224 00040040 		.word	1073742848
 429 0228 00000000 		.word	i
 430 022c 00100140 		.word	1073811456
 431              		.cfi_endproc
 432              	.LFE33:
 434              	.Letext0:
 435              		.file 3 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\CMSIS/stm32f10x.h"
 436              		.file 4 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 437              		.file 5 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\SPL\\inc/stm32f10x_gpio.h"
 438              		.file 6 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\SPL\\inc/stm32f10x_usart.h"
 439              		.file 7 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\inc/RC5_IR_Emul_Receiver.h"
 440              		.file 8 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\CMSIS/system_stm32f10x.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\PC108\AppData\Local\Temp\ccaqxiP2.s:18     .text:00000000 $t
C:\Users\PC108\AppData\Local\Temp\ccaqxiP2.s:22     .text:00000000 NVIC_EnableIRQ
C:\Users\PC108\AppData\Local\Temp\ccaqxiP2.s:59     .text:00000030 $d
C:\Users\PC108\AppData\Local\Temp\ccaqxiP2.s:67     .bss:00000000 i
C:\Users\PC108\AppData\Local\Temp\ccaqxiP2.s:68     .bss:00000000 $d
C:\Users\PC108\AppData\Local\Temp\ccaqxiP2.s:70     .text:00000034 $t
C:\Users\PC108\AppData\Local\Temp\ccaqxiP2.s:75     .text:00000034 assert_failed
                            *COM*:00000003 RC5_Frame
C:\Users\PC108\AppData\Local\Temp\ccaqxiP2.s:106    .bss:00000001 RC5_TogglePrevious
C:\Users\PC108\AppData\Local\Temp\ccaqxiP2.s:112    .data:00000000 FirstTimeIssued
C:\Users\PC108\AppData\Local\Temp\ccaqxiP2.s:120    .text:00000040 RCC_Configuration
C:\Users\PC108\AppData\Local\Temp\ccaqxiP2.s:146    .text:0000004c main
C:\Users\PC108\AppData\Local\Temp\ccaqxiP2.s:255    .text:00000108 $d
C:\Users\PC108\AppData\Local\Temp\ccaqxiP2.s:265    .text:00000124 $t
C:\Users\PC108\AppData\Local\Temp\ccaqxiP2.s:270    .text:00000124 SetupUSART
C:\Users\PC108\AppData\Local\Temp\ccaqxiP2.s:354    .text:000001bc $d
C:\Users\PC108\AppData\Local\Temp\ccaqxiP2.s:359    .text:000001c4 $t
C:\Users\PC108\AppData\Local\Temp\ccaqxiP2.s:364    .text:000001c4 TIM3_IRQHandler
C:\Users\PC108\AppData\Local\Temp\ccaqxiP2.s:428    .text:00000224 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.9001f459856fa07d79ce9793bb17c6cd
                           .group:00000000 wm4.stm32f10x.h.51.b859cb68ed44ee02c916b41cb8c68f1c
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.522.115ebb8291fa96f8c9e0b9a9b670f703
                           .group:00000000 wm4.stm32f10x_exti.h.56.8b2f216f9ded9d03a9eb42ed6973fc04
                           .group:00000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:00000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765
                           .group:00000000 wm4.stm32f10x_tim.h.25.21c6ec062f1e74898cb96a57da276fec
                           .group:00000000 wm4.stm32f10x_usart.h.25.29629c699b65db3f3efd3561f66b0bf6
                           .group:00000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:00000000 wm4.RC5_IR_Emul_Receiver.h.23.514b849e0fcde80a7fd70e659ba7c460
                           .group:00000000 wm4.newlib.h.8.e1d498e57c12962fc6d7be5061a6981a
                           .group:00000000 wm4.config.h.148.52fe83653334d06815a0c57b59a3e584
                           .group:00000000 wm4._ansi.h.23.95dee4059009fe3ab635a191bb73dc66
                           .group:00000000 wm4.stdio.h.31.f48311dde756a2aec27351b58a280fb9
                           .group:00000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._default_types.h.6.1dbd2e581fd590860c7c17f21d147e91
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.58b23a9f0faf0e7f2dfe7e2d33154afd
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.stddef.h.40.cf962ebbec441b3ac67502735f0765db
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.f2bfdfeee9f340633702c07fad9b5e01
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.1f4bc553faa62c5c69dd9cb47f9f1417

UNDEFINED SYMBOLS
SystemInit
RC5_Receiver_Init
RC5_Decode
SystemCoreClock
RC5_FrameReceived
RCC_APB2PeriphClockCmd
GPIO_Init
USART_Init
USART_Cmd
