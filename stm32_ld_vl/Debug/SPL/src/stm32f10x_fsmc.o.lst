   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_fsmc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  20              	.LC0:
  21 0000 2E2E2F53 		.ascii	"../SPL/src/stm32f10x_fsmc.c\000"
  21      504C2F73 
  21      72632F73 
  21      746D3332 
  21      66313078 
  22              		.text
  23              		.align	2
  24              		.global	FSMC_NORSRAMDeInit
  25              		.thumb
  26              		.thumb_func
  28              	FSMC_NORSRAMDeInit:
  29              	.LFB29:
  30              		.file 1 "../SPL/src/stm32f10x_fsmc.c"
   1:../SPL/src/stm32f10x_fsmc.c **** /**
   2:../SPL/src/stm32f10x_fsmc.c ****   ******************************************************************************
   3:../SPL/src/stm32f10x_fsmc.c ****   * @file    stm32f10x_fsmc.c
   4:../SPL/src/stm32f10x_fsmc.c ****   * @author  MCD Application Team
   5:../SPL/src/stm32f10x_fsmc.c ****   * @version V3.5.0
   6:../SPL/src/stm32f10x_fsmc.c ****   * @date    11-March-2011
   7:../SPL/src/stm32f10x_fsmc.c ****   * @brief   This file provides all the FSMC firmware functions.
   8:../SPL/src/stm32f10x_fsmc.c ****   ******************************************************************************
   9:../SPL/src/stm32f10x_fsmc.c ****   * @attention
  10:../SPL/src/stm32f10x_fsmc.c ****   *
  11:../SPL/src/stm32f10x_fsmc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../SPL/src/stm32f10x_fsmc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../SPL/src/stm32f10x_fsmc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../SPL/src/stm32f10x_fsmc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../SPL/src/stm32f10x_fsmc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../SPL/src/stm32f10x_fsmc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../SPL/src/stm32f10x_fsmc.c ****   *
  18:../SPL/src/stm32f10x_fsmc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../SPL/src/stm32f10x_fsmc.c ****   ******************************************************************************
  20:../SPL/src/stm32f10x_fsmc.c ****   */
  21:../SPL/src/stm32f10x_fsmc.c **** 
  22:../SPL/src/stm32f10x_fsmc.c **** /* Includes ------------------------------------------------------------------*/
  23:../SPL/src/stm32f10x_fsmc.c **** #include "stm32f10x_fsmc.h"
  24:../SPL/src/stm32f10x_fsmc.c **** #include "stm32f10x_rcc.h"
  25:../SPL/src/stm32f10x_fsmc.c **** 
  26:../SPL/src/stm32f10x_fsmc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../SPL/src/stm32f10x_fsmc.c ****   * @{
  28:../SPL/src/stm32f10x_fsmc.c ****   */
  29:../SPL/src/stm32f10x_fsmc.c **** 
  30:../SPL/src/stm32f10x_fsmc.c **** /** @defgroup FSMC 
  31:../SPL/src/stm32f10x_fsmc.c ****   * @brief FSMC driver modules
  32:../SPL/src/stm32f10x_fsmc.c ****   * @{
  33:../SPL/src/stm32f10x_fsmc.c ****   */ 
  34:../SPL/src/stm32f10x_fsmc.c **** 
  35:../SPL/src/stm32f10x_fsmc.c **** /** @defgroup FSMC_Private_TypesDefinitions
  36:../SPL/src/stm32f10x_fsmc.c ****   * @{
  37:../SPL/src/stm32f10x_fsmc.c ****   */ 
  38:../SPL/src/stm32f10x_fsmc.c **** /**
  39:../SPL/src/stm32f10x_fsmc.c ****   * @}
  40:../SPL/src/stm32f10x_fsmc.c ****   */
  41:../SPL/src/stm32f10x_fsmc.c **** 
  42:../SPL/src/stm32f10x_fsmc.c **** /** @defgroup FSMC_Private_Defines
  43:../SPL/src/stm32f10x_fsmc.c ****   * @{
  44:../SPL/src/stm32f10x_fsmc.c ****   */
  45:../SPL/src/stm32f10x_fsmc.c **** 
  46:../SPL/src/stm32f10x_fsmc.c **** /* --------------------- FSMC registers bit mask ---------------------------- */
  47:../SPL/src/stm32f10x_fsmc.c **** 
  48:../SPL/src/stm32f10x_fsmc.c **** /* FSMC BCRx Mask */
  49:../SPL/src/stm32f10x_fsmc.c **** #define BCR_MBKEN_Set                       ((uint32_t)0x00000001)
  50:../SPL/src/stm32f10x_fsmc.c **** #define BCR_MBKEN_Reset                     ((uint32_t)0x000FFFFE)
  51:../SPL/src/stm32f10x_fsmc.c **** #define BCR_FACCEN_Set                      ((uint32_t)0x00000040)
  52:../SPL/src/stm32f10x_fsmc.c **** 
  53:../SPL/src/stm32f10x_fsmc.c **** /* FSMC PCRx Mask */
  54:../SPL/src/stm32f10x_fsmc.c **** #define PCR_PBKEN_Set                       ((uint32_t)0x00000004)
  55:../SPL/src/stm32f10x_fsmc.c **** #define PCR_PBKEN_Reset                     ((uint32_t)0x000FFFFB)
  56:../SPL/src/stm32f10x_fsmc.c **** #define PCR_ECCEN_Set                       ((uint32_t)0x00000040)
  57:../SPL/src/stm32f10x_fsmc.c **** #define PCR_ECCEN_Reset                     ((uint32_t)0x000FFFBF)
  58:../SPL/src/stm32f10x_fsmc.c **** #define PCR_MemoryType_NAND                 ((uint32_t)0x00000008)
  59:../SPL/src/stm32f10x_fsmc.c **** /**
  60:../SPL/src/stm32f10x_fsmc.c ****   * @}
  61:../SPL/src/stm32f10x_fsmc.c ****   */
  62:../SPL/src/stm32f10x_fsmc.c **** 
  63:../SPL/src/stm32f10x_fsmc.c **** /** @defgroup FSMC_Private_Macros
  64:../SPL/src/stm32f10x_fsmc.c ****   * @{
  65:../SPL/src/stm32f10x_fsmc.c ****   */
  66:../SPL/src/stm32f10x_fsmc.c **** 
  67:../SPL/src/stm32f10x_fsmc.c **** /**
  68:../SPL/src/stm32f10x_fsmc.c ****   * @}
  69:../SPL/src/stm32f10x_fsmc.c ****   */
  70:../SPL/src/stm32f10x_fsmc.c **** 
  71:../SPL/src/stm32f10x_fsmc.c **** /** @defgroup FSMC_Private_Variables
  72:../SPL/src/stm32f10x_fsmc.c ****   * @{
  73:../SPL/src/stm32f10x_fsmc.c ****   */
  74:../SPL/src/stm32f10x_fsmc.c **** 
  75:../SPL/src/stm32f10x_fsmc.c **** /**
  76:../SPL/src/stm32f10x_fsmc.c ****   * @}
  77:../SPL/src/stm32f10x_fsmc.c ****   */
  78:../SPL/src/stm32f10x_fsmc.c **** 
  79:../SPL/src/stm32f10x_fsmc.c **** /** @defgroup FSMC_Private_FunctionPrototypes
  80:../SPL/src/stm32f10x_fsmc.c ****   * @{
  81:../SPL/src/stm32f10x_fsmc.c ****   */
  82:../SPL/src/stm32f10x_fsmc.c **** 
  83:../SPL/src/stm32f10x_fsmc.c **** /**
  84:../SPL/src/stm32f10x_fsmc.c ****   * @}
  85:../SPL/src/stm32f10x_fsmc.c ****   */
  86:../SPL/src/stm32f10x_fsmc.c **** 
  87:../SPL/src/stm32f10x_fsmc.c **** /** @defgroup FSMC_Private_Functions
  88:../SPL/src/stm32f10x_fsmc.c ****   * @{
  89:../SPL/src/stm32f10x_fsmc.c ****   */
  90:../SPL/src/stm32f10x_fsmc.c **** 
  91:../SPL/src/stm32f10x_fsmc.c **** /**
  92:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Deinitializes the FSMC NOR/SRAM Banks registers to their default 
  93:../SPL/src/stm32f10x_fsmc.c ****   *         reset values.
  94:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
  95:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be one of the following values:
  96:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank1_NORSRAM1: FSMC Bank1 NOR/SRAM1  
  97:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank1_NORSRAM2: FSMC Bank1 NOR/SRAM2 
  98:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank1_NORSRAM3: FSMC Bank1 NOR/SRAM3 
  99:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank1_NORSRAM4: FSMC Bank1 NOR/SRAM4 
 100:../SPL/src/stm32f10x_fsmc.c ****   * @retval None
 101:../SPL/src/stm32f10x_fsmc.c ****   */
 102:../SPL/src/stm32f10x_fsmc.c **** void FSMC_NORSRAMDeInit(uint32_t FSMC_Bank)
 103:../SPL/src/stm32f10x_fsmc.c **** {
  31              		.loc 1 103 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 8
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35 0000 80B5     		push	{r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 82B0     		sub	sp, sp, #8
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 16
  43 0004 00AF     		add	r7, sp, #0
  44              	.LCFI2:
  45              		.cfi_def_cfa_register 7
  46 0006 7860     		str	r0, [r7, #4]
 104:../SPL/src/stm32f10x_fsmc.c ****   /* Check the parameter */
 105:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_NORSRAM_BANK(FSMC_Bank));
  47              		.loc 1 105 0
  48 0008 7B68     		ldr	r3, [r7, #4]
  49 000a 002B     		cmp	r3, #0
  50 000c 0DD0     		beq	.L2
  51              		.loc 1 105 0 is_stmt 0 discriminator 1
  52 000e 7B68     		ldr	r3, [r7, #4]
  53 0010 022B     		cmp	r3, #2
  54 0012 0AD0     		beq	.L2
  55              		.loc 1 105 0 discriminator 2
  56 0014 7B68     		ldr	r3, [r7, #4]
  57 0016 042B     		cmp	r3, #4
  58 0018 07D0     		beq	.L2
  59              		.loc 1 105 0 discriminator 3
  60 001a 7B68     		ldr	r3, [r7, #4]
  61 001c 062B     		cmp	r3, #6
  62 001e 04D0     		beq	.L2
  63              		.loc 1 105 0 discriminator 4
  64 0020 1448     		ldr	r0, .L5
  65 0022 4FF06901 		mov	r1, #105
  66 0026 FFF7FEFF 		bl	assert_failed
  67              	.L2:
 106:../SPL/src/stm32f10x_fsmc.c ****   
 107:../SPL/src/stm32f10x_fsmc.c ****   /* FSMC_Bank1_NORSRAM1 */
 108:../SPL/src/stm32f10x_fsmc.c ****   if(FSMC_Bank == FSMC_Bank1_NORSRAM1)
  68              		.loc 1 108 0 is_stmt 1
  69 002a 7B68     		ldr	r3, [r7, #4]
  70 002c 002B     		cmp	r3, #0
  71 002e 07D1     		bne	.L3
 109:../SPL/src/stm32f10x_fsmc.c ****   {
 110:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] = 0x000030DB;    
  72              		.loc 1 110 0
  73 0030 4FF02043 		mov	r3, #-1610612736
  74 0034 7A68     		ldr	r2, [r7, #4]
  75 0036 43F2DB01 		movw	r1, #12507
  76 003a 43F82210 		str	r1, [r3, r2, lsl #2]
  77 003e 06E0     		b	.L4
  78              	.L3:
 111:../SPL/src/stm32f10x_fsmc.c ****   }
 112:../SPL/src/stm32f10x_fsmc.c ****   /* FSMC_Bank1_NORSRAM2,  FSMC_Bank1_NORSRAM3 or FSMC_Bank1_NORSRAM4 */
 113:../SPL/src/stm32f10x_fsmc.c ****   else
 114:../SPL/src/stm32f10x_fsmc.c ****   {   
 115:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] = 0x000030D2; 
  79              		.loc 1 115 0
  80 0040 4FF02043 		mov	r3, #-1610612736
  81 0044 7A68     		ldr	r2, [r7, #4]
  82 0046 43F2D201 		movw	r1, #12498
  83 004a 43F82210 		str	r1, [r3, r2, lsl #2]
  84              	.L4:
 116:../SPL/src/stm32f10x_fsmc.c ****   }
 117:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_Bank + 1] = 0x0FFFFFFF;
  85              		.loc 1 117 0
  86 004e 4FF02043 		mov	r3, #-1610612736
  87 0052 7A68     		ldr	r2, [r7, #4]
  88 0054 02F10102 		add	r2, r2, #1
  89 0058 6FF07041 		mvn	r1, #-268435456
  90 005c 43F82210 		str	r1, [r3, r2, lsl #2]
 118:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank1E->BWTR[FSMC_Bank] = 0x0FFFFFFF;  
  91              		.loc 1 118 0
  92 0060 054B     		ldr	r3, .L5+4
  93 0062 7A68     		ldr	r2, [r7, #4]
  94 0064 6FF07041 		mvn	r1, #-268435456
  95 0068 43F82210 		str	r1, [r3, r2, lsl #2]
 119:../SPL/src/stm32f10x_fsmc.c **** }
  96              		.loc 1 119 0
  97 006c 07F10807 		add	r7, r7, #8
  98 0070 BD46     		mov	sp, r7
  99 0072 80BD     		pop	{r7, pc}
 100              	.L6:
 101              		.align	2
 102              	.L5:
 103 0074 00000000 		.word	.LC0
 104 0078 040100A0 		.word	-1610612476
 105              		.cfi_endproc
 106              	.LFE29:
 108              		.align	2
 109              		.global	FSMC_NANDDeInit
 110              		.thumb
 111              		.thumb_func
 113              	FSMC_NANDDeInit:
 114              	.LFB30:
 120:../SPL/src/stm32f10x_fsmc.c **** 
 121:../SPL/src/stm32f10x_fsmc.c **** /**
 122:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Deinitializes the FSMC NAND Banks registers to their default reset values.
 123:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 124:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be one of the following values:
 125:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 126:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank3_NAND: FSMC Bank3 NAND 
 127:../SPL/src/stm32f10x_fsmc.c ****   * @retval None
 128:../SPL/src/stm32f10x_fsmc.c ****   */
 129:../SPL/src/stm32f10x_fsmc.c **** void FSMC_NANDDeInit(uint32_t FSMC_Bank)
 130:../SPL/src/stm32f10x_fsmc.c **** {
 115              		.loc 1 130 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 8
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 007c 80B5     		push	{r7, lr}
 120              	.LCFI3:
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 7, -8
 123              		.cfi_offset 14, -4
 124 007e 82B0     		sub	sp, sp, #8
 125              	.LCFI4:
 126              		.cfi_def_cfa_offset 16
 127 0080 00AF     		add	r7, sp, #0
 128              	.LCFI5:
 129              		.cfi_def_cfa_register 7
 130 0082 7860     		str	r0, [r7, #4]
 131:../SPL/src/stm32f10x_fsmc.c ****   /* Check the parameter */
 132:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_NAND_BANK(FSMC_Bank));
 131              		.loc 1 132 0
 132 0084 7B68     		ldr	r3, [r7, #4]
 133 0086 102B     		cmp	r3, #16
 134 0088 08D0     		beq	.L8
 135              		.loc 1 132 0 is_stmt 0 discriminator 1
 136 008a 7B68     		ldr	r3, [r7, #4]
 137 008c B3F5807F 		cmp	r3, #256
 138 0090 04D0     		beq	.L8
 139              		.loc 1 132 0 discriminator 2
 140 0092 1648     		ldr	r0, .L11
 141 0094 4FF08401 		mov	r1, #132
 142 0098 FFF7FEFF 		bl	assert_failed
 143              	.L8:
 133:../SPL/src/stm32f10x_fsmc.c ****   
 134:../SPL/src/stm32f10x_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 144              		.loc 1 134 0 is_stmt 1
 145 009c 7B68     		ldr	r3, [r7, #4]
 146 009e 102B     		cmp	r3, #16
 147 00a0 10D1     		bne	.L9
 135:../SPL/src/stm32f10x_fsmc.c ****   {
 136:../SPL/src/stm32f10x_fsmc.c ****     /* Set the FSMC_Bank2 registers to their reset values */
 137:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank2->PCR2 = 0x00000018;
 148              		.loc 1 137 0
 149 00a2 134B     		ldr	r3, .L11+4
 150 00a4 4FF01802 		mov	r2, #24
 151 00a8 1A60     		str	r2, [r3, #0]
 138:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank2->SR2 = 0x00000040;
 152              		.loc 1 138 0
 153 00aa 114B     		ldr	r3, .L11+4
 154 00ac 4FF04002 		mov	r2, #64
 155 00b0 5A60     		str	r2, [r3, #4]
 139:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank2->PMEM2 = 0xFCFCFCFC;
 156              		.loc 1 139 0
 157 00b2 0F4B     		ldr	r3, .L11+4
 158 00b4 4FF0FC32 		mov	r2, #-50529028
 159 00b8 9A60     		str	r2, [r3, #8]
 140:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank2->PATT2 = 0xFCFCFCFC;  
 160              		.loc 1 140 0
 161 00ba 0D4B     		ldr	r3, .L11+4
 162 00bc 4FF0FC32 		mov	r2, #-50529028
 163 00c0 DA60     		str	r2, [r3, #12]
 164 00c2 0FE0     		b	.L7
 165              	.L9:
 141:../SPL/src/stm32f10x_fsmc.c ****   }
 142:../SPL/src/stm32f10x_fsmc.c ****   /* FSMC_Bank3_NAND */  
 143:../SPL/src/stm32f10x_fsmc.c ****   else
 144:../SPL/src/stm32f10x_fsmc.c ****   {
 145:../SPL/src/stm32f10x_fsmc.c ****     /* Set the FSMC_Bank3 registers to their reset values */
 146:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank3->PCR3 = 0x00000018;
 166              		.loc 1 146 0
 167 00c4 0B4B     		ldr	r3, .L11+8
 168 00c6 4FF01802 		mov	r2, #24
 169 00ca 1A60     		str	r2, [r3, #0]
 147:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank3->SR3 = 0x00000040;
 170              		.loc 1 147 0
 171 00cc 094B     		ldr	r3, .L11+8
 172 00ce 4FF04002 		mov	r2, #64
 173 00d2 5A60     		str	r2, [r3, #4]
 148:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank3->PMEM3 = 0xFCFCFCFC;
 174              		.loc 1 148 0
 175 00d4 074B     		ldr	r3, .L11+8
 176 00d6 4FF0FC32 		mov	r2, #-50529028
 177 00da 9A60     		str	r2, [r3, #8]
 149:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank3->PATT3 = 0xFCFCFCFC; 
 178              		.loc 1 149 0
 179 00dc 054B     		ldr	r3, .L11+8
 180 00de 4FF0FC32 		mov	r2, #-50529028
 181 00e2 DA60     		str	r2, [r3, #12]
 182              	.L7:
 150:../SPL/src/stm32f10x_fsmc.c ****   }  
 151:../SPL/src/stm32f10x_fsmc.c **** }
 183              		.loc 1 151 0
 184 00e4 07F10807 		add	r7, r7, #8
 185 00e8 BD46     		mov	sp, r7
 186 00ea 80BD     		pop	{r7, pc}
 187              	.L12:
 188              		.align	2
 189              	.L11:
 190 00ec 00000000 		.word	.LC0
 191 00f0 600000A0 		.word	-1610612640
 192 00f4 800000A0 		.word	-1610612608
 193              		.cfi_endproc
 194              	.LFE30:
 196              		.align	2
 197              		.global	FSMC_PCCARDDeInit
 198              		.thumb
 199              		.thumb_func
 201              	FSMC_PCCARDDeInit:
 202              	.LFB31:
 152:../SPL/src/stm32f10x_fsmc.c **** 
 153:../SPL/src/stm32f10x_fsmc.c **** /**
 154:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Deinitializes the FSMC PCCARD Bank registers to their default reset values.
 155:../SPL/src/stm32f10x_fsmc.c ****   * @param  None                       
 156:../SPL/src/stm32f10x_fsmc.c ****   * @retval None
 157:../SPL/src/stm32f10x_fsmc.c ****   */
 158:../SPL/src/stm32f10x_fsmc.c **** void FSMC_PCCARDDeInit(void)
 159:../SPL/src/stm32f10x_fsmc.c **** {
 203              		.loc 1 159 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 208 00f8 80B4     		push	{r7}
 209              	.LCFI6:
 210              		.cfi_def_cfa_offset 4
 211              		.cfi_offset 7, -4
 212 00fa 00AF     		add	r7, sp, #0
 213              	.LCFI7:
 214              		.cfi_def_cfa_register 7
 160:../SPL/src/stm32f10x_fsmc.c ****   /* Set the FSMC_Bank4 registers to their reset values */
 161:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank4->PCR4 = 0x00000018; 
 215              		.loc 1 161 0
 216 00fc 0B4B     		ldr	r3, .L14
 217 00fe 4FF01802 		mov	r2, #24
 218 0102 1A60     		str	r2, [r3, #0]
 162:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank4->SR4 = 0x00000000;	
 219              		.loc 1 162 0
 220 0104 094B     		ldr	r3, .L14
 221 0106 4FF00002 		mov	r2, #0
 222 010a 5A60     		str	r2, [r3, #4]
 163:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank4->PMEM4 = 0xFCFCFCFC;
 223              		.loc 1 163 0
 224 010c 074B     		ldr	r3, .L14
 225 010e 4FF0FC32 		mov	r2, #-50529028
 226 0112 9A60     		str	r2, [r3, #8]
 164:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank4->PATT4 = 0xFCFCFCFC;
 227              		.loc 1 164 0
 228 0114 054B     		ldr	r3, .L14
 229 0116 4FF0FC32 		mov	r2, #-50529028
 230 011a DA60     		str	r2, [r3, #12]
 165:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank4->PIO4 = 0xFCFCFCFC;
 231              		.loc 1 165 0
 232 011c 034B     		ldr	r3, .L14
 233 011e 4FF0FC32 		mov	r2, #-50529028
 234 0122 1A61     		str	r2, [r3, #16]
 166:../SPL/src/stm32f10x_fsmc.c **** }
 235              		.loc 1 166 0
 236 0124 BD46     		mov	sp, r7
 237 0126 80BC     		pop	{r7}
 238 0128 7047     		bx	lr
 239              	.L15:
 240 012a 00BF     		.align	2
 241              	.L14:
 242 012c A00000A0 		.word	-1610612576
 243              		.cfi_endproc
 244              	.LFE31:
 246              		.align	2
 247              		.global	FSMC_NORSRAMInit
 248              		.thumb
 249              		.thumb_func
 251              	FSMC_NORSRAMInit:
 252              	.LFB32:
 167:../SPL/src/stm32f10x_fsmc.c **** 
 168:../SPL/src/stm32f10x_fsmc.c **** /**
 169:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Initializes the FSMC NOR/SRAM Banks according to the specified
 170:../SPL/src/stm32f10x_fsmc.c ****   *         parameters in the FSMC_NORSRAMInitStruct.
 171:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_NORSRAMInitStruct : pointer to a FSMC_NORSRAMInitTypeDef
 172:../SPL/src/stm32f10x_fsmc.c ****   *         structure that contains the configuration information for 
 173:../SPL/src/stm32f10x_fsmc.c ****   *        the FSMC NOR/SRAM specified Banks.                       
 174:../SPL/src/stm32f10x_fsmc.c ****   * @retval None
 175:../SPL/src/stm32f10x_fsmc.c ****   */
 176:../SPL/src/stm32f10x_fsmc.c **** void FSMC_NORSRAMInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
 177:../SPL/src/stm32f10x_fsmc.c **** { 
 253              		.loc 1 177 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 8
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0130 80B5     		push	{r7, lr}
 258              	.LCFI8:
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 7, -8
 261              		.cfi_offset 14, -4
 262 0132 82B0     		sub	sp, sp, #8
 263              	.LCFI9:
 264              		.cfi_def_cfa_offset 16
 265 0134 00AF     		add	r7, sp, #0
 266              	.LCFI10:
 267              		.cfi_def_cfa_register 7
 268 0136 7860     		str	r0, [r7, #4]
 178:../SPL/src/stm32f10x_fsmc.c ****   /* Check the parameters */
 179:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_NORSRAM_BANK(FSMC_NORSRAMInitStruct->FSMC_Bank));
 269              		.loc 1 179 0
 270 0138 7B68     		ldr	r3, [r7, #4]
 271 013a 1B68     		ldr	r3, [r3, #0]
 272 013c 002B     		cmp	r3, #0
 273 013e 10D0     		beq	.L17
 274              		.loc 1 179 0 is_stmt 0 discriminator 1
 275 0140 7B68     		ldr	r3, [r7, #4]
 276 0142 1B68     		ldr	r3, [r3, #0]
 277 0144 022B     		cmp	r3, #2
 278 0146 0CD0     		beq	.L17
 279              		.loc 1 179 0 discriminator 2
 280 0148 7B68     		ldr	r3, [r7, #4]
 281 014a 1B68     		ldr	r3, [r3, #0]
 282 014c 042B     		cmp	r3, #4
 283 014e 08D0     		beq	.L17
 284              		.loc 1 179 0 discriminator 3
 285 0150 7B68     		ldr	r3, [r7, #4]
 286 0152 1B68     		ldr	r3, [r3, #0]
 287 0154 062B     		cmp	r3, #6
 288 0156 04D0     		beq	.L17
 289              		.loc 1 179 0 discriminator 4
 290 0158 A348     		ldr	r0, .L48
 291 015a 4FF0B301 		mov	r1, #179
 292 015e FFF7FEFF 		bl	assert_failed
 293              	.L17:
 180:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_MUX(FSMC_NORSRAMInitStruct->FSMC_DataAddressMux));
 294              		.loc 1 180 0 is_stmt 1
 295 0162 7B68     		ldr	r3, [r7, #4]
 296 0164 5B68     		ldr	r3, [r3, #4]
 297 0166 002B     		cmp	r3, #0
 298 0168 08D0     		beq	.L18
 299              		.loc 1 180 0 is_stmt 0 discriminator 1
 300 016a 7B68     		ldr	r3, [r7, #4]
 301 016c 5B68     		ldr	r3, [r3, #4]
 302 016e 022B     		cmp	r3, #2
 303 0170 04D0     		beq	.L18
 304              		.loc 1 180 0 discriminator 2
 305 0172 9D48     		ldr	r0, .L48
 306 0174 4FF0B401 		mov	r1, #180
 307 0178 FFF7FEFF 		bl	assert_failed
 308              	.L18:
 181:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_MEMORY(FSMC_NORSRAMInitStruct->FSMC_MemoryType));
 309              		.loc 1 181 0 is_stmt 1
 310 017c 7B68     		ldr	r3, [r7, #4]
 311 017e 9B68     		ldr	r3, [r3, #8]
 312 0180 002B     		cmp	r3, #0
 313 0182 0CD0     		beq	.L19
 314              		.loc 1 181 0 is_stmt 0 discriminator 1
 315 0184 7B68     		ldr	r3, [r7, #4]
 316 0186 9B68     		ldr	r3, [r3, #8]
 317 0188 042B     		cmp	r3, #4
 318 018a 08D0     		beq	.L19
 319              		.loc 1 181 0 discriminator 2
 320 018c 7B68     		ldr	r3, [r7, #4]
 321 018e 9B68     		ldr	r3, [r3, #8]
 322 0190 082B     		cmp	r3, #8
 323 0192 04D0     		beq	.L19
 324              		.loc 1 181 0 discriminator 3
 325 0194 9448     		ldr	r0, .L48
 326 0196 4FF0B501 		mov	r1, #181
 327 019a FFF7FEFF 		bl	assert_failed
 328              	.L19:
 182:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_MEMORY_WIDTH(FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth));
 329              		.loc 1 182 0 is_stmt 1
 330 019e 7B68     		ldr	r3, [r7, #4]
 331 01a0 DB68     		ldr	r3, [r3, #12]
 332 01a2 002B     		cmp	r3, #0
 333 01a4 08D0     		beq	.L20
 334              		.loc 1 182 0 is_stmt 0 discriminator 1
 335 01a6 7B68     		ldr	r3, [r7, #4]
 336 01a8 DB68     		ldr	r3, [r3, #12]
 337 01aa 102B     		cmp	r3, #16
 338 01ac 04D0     		beq	.L20
 339              		.loc 1 182 0 discriminator 2
 340 01ae 8E48     		ldr	r0, .L48
 341 01b0 4FF0B601 		mov	r1, #182
 342 01b4 FFF7FEFF 		bl	assert_failed
 343              	.L20:
 183:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_BURSTMODE(FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode));
 344              		.loc 1 183 0 is_stmt 1
 345 01b8 7B68     		ldr	r3, [r7, #4]
 346 01ba 1B69     		ldr	r3, [r3, #16]
 347 01bc 002B     		cmp	r3, #0
 348 01be 09D0     		beq	.L21
 349              		.loc 1 183 0 is_stmt 0 discriminator 1
 350 01c0 7B68     		ldr	r3, [r7, #4]
 351 01c2 1B69     		ldr	r3, [r3, #16]
 352 01c4 B3F5807F 		cmp	r3, #256
 353 01c8 04D0     		beq	.L21
 354              		.loc 1 183 0 discriminator 2
 355 01ca 8748     		ldr	r0, .L48
 356 01cc 4FF0B701 		mov	r1, #183
 357 01d0 FFF7FEFF 		bl	assert_failed
 358              	.L21:
 184:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_ASYNWAIT(FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait));
 359              		.loc 1 184 0 is_stmt 1
 360 01d4 7B68     		ldr	r3, [r7, #4]
 361 01d6 5B69     		ldr	r3, [r3, #20]
 362 01d8 002B     		cmp	r3, #0
 363 01da 09D0     		beq	.L22
 364              		.loc 1 184 0 is_stmt 0 discriminator 1
 365 01dc 7B68     		ldr	r3, [r7, #4]
 366 01de 5B69     		ldr	r3, [r3, #20]
 367 01e0 B3F5004F 		cmp	r3, #32768
 368 01e4 04D0     		beq	.L22
 369              		.loc 1 184 0 discriminator 2
 370 01e6 8048     		ldr	r0, .L48
 371 01e8 4FF0B801 		mov	r1, #184
 372 01ec FFF7FEFF 		bl	assert_failed
 373              	.L22:
 185:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_WAIT_POLARITY(FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity));
 374              		.loc 1 185 0 is_stmt 1
 375 01f0 7B68     		ldr	r3, [r7, #4]
 376 01f2 9B69     		ldr	r3, [r3, #24]
 377 01f4 002B     		cmp	r3, #0
 378 01f6 09D0     		beq	.L23
 379              		.loc 1 185 0 is_stmt 0 discriminator 1
 380 01f8 7B68     		ldr	r3, [r7, #4]
 381 01fa 9B69     		ldr	r3, [r3, #24]
 382 01fc B3F5007F 		cmp	r3, #512
 383 0200 04D0     		beq	.L23
 384              		.loc 1 185 0 discriminator 2
 385 0202 7948     		ldr	r0, .L48
 386 0204 4FF0B901 		mov	r1, #185
 387 0208 FFF7FEFF 		bl	assert_failed
 388              	.L23:
 186:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_WRAP_MODE(FSMC_NORSRAMInitStruct->FSMC_WrapMode));
 389              		.loc 1 186 0 is_stmt 1
 390 020c 7B68     		ldr	r3, [r7, #4]
 391 020e DB69     		ldr	r3, [r3, #28]
 392 0210 002B     		cmp	r3, #0
 393 0212 09D0     		beq	.L24
 394              		.loc 1 186 0 is_stmt 0 discriminator 1
 395 0214 7B68     		ldr	r3, [r7, #4]
 396 0216 DB69     		ldr	r3, [r3, #28]
 397 0218 B3F5806F 		cmp	r3, #1024
 398 021c 04D0     		beq	.L24
 399              		.loc 1 186 0 discriminator 2
 400 021e 7248     		ldr	r0, .L48
 401 0220 4FF0BA01 		mov	r1, #186
 402 0224 FFF7FEFF 		bl	assert_failed
 403              	.L24:
 187:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_WAIT_SIGNAL_ACTIVE(FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive));
 404              		.loc 1 187 0 is_stmt 1
 405 0228 7B68     		ldr	r3, [r7, #4]
 406 022a 1B6A     		ldr	r3, [r3, #32]
 407 022c 002B     		cmp	r3, #0
 408 022e 09D0     		beq	.L25
 409              		.loc 1 187 0 is_stmt 0 discriminator 1
 410 0230 7B68     		ldr	r3, [r7, #4]
 411 0232 1B6A     		ldr	r3, [r3, #32]
 412 0234 B3F5006F 		cmp	r3, #2048
 413 0238 04D0     		beq	.L25
 414              		.loc 1 187 0 discriminator 2
 415 023a 6B48     		ldr	r0, .L48
 416 023c 4FF0BB01 		mov	r1, #187
 417 0240 FFF7FEFF 		bl	assert_failed
 418              	.L25:
 188:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_WRITE_OPERATION(FSMC_NORSRAMInitStruct->FSMC_WriteOperation));
 419              		.loc 1 188 0 is_stmt 1
 420 0244 7B68     		ldr	r3, [r7, #4]
 421 0246 5B6A     		ldr	r3, [r3, #36]
 422 0248 002B     		cmp	r3, #0
 423 024a 09D0     		beq	.L26
 424              		.loc 1 188 0 is_stmt 0 discriminator 1
 425 024c 7B68     		ldr	r3, [r7, #4]
 426 024e 5B6A     		ldr	r3, [r3, #36]
 427 0250 B3F5805F 		cmp	r3, #4096
 428 0254 04D0     		beq	.L26
 429              		.loc 1 188 0 discriminator 2
 430 0256 6448     		ldr	r0, .L48
 431 0258 4FF0BC01 		mov	r1, #188
 432 025c FFF7FEFF 		bl	assert_failed
 433              	.L26:
 189:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_WAITE_SIGNAL(FSMC_NORSRAMInitStruct->FSMC_WaitSignal));
 434              		.loc 1 189 0 is_stmt 1
 435 0260 7B68     		ldr	r3, [r7, #4]
 436 0262 9B6A     		ldr	r3, [r3, #40]
 437 0264 002B     		cmp	r3, #0
 438 0266 09D0     		beq	.L27
 439              		.loc 1 189 0 is_stmt 0 discriminator 1
 440 0268 7B68     		ldr	r3, [r7, #4]
 441 026a 9B6A     		ldr	r3, [r3, #40]
 442 026c B3F5005F 		cmp	r3, #8192
 443 0270 04D0     		beq	.L27
 444              		.loc 1 189 0 discriminator 2
 445 0272 5D48     		ldr	r0, .L48
 446 0274 4FF0BD01 		mov	r1, #189
 447 0278 FFF7FEFF 		bl	assert_failed
 448              	.L27:
 190:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_EXTENDED_MODE(FSMC_NORSRAMInitStruct->FSMC_ExtendedMode));
 449              		.loc 1 190 0 is_stmt 1
 450 027c 7B68     		ldr	r3, [r7, #4]
 451 027e DB6A     		ldr	r3, [r3, #44]
 452 0280 002B     		cmp	r3, #0
 453 0282 09D0     		beq	.L28
 454              		.loc 1 190 0 is_stmt 0 discriminator 1
 455 0284 7B68     		ldr	r3, [r7, #4]
 456 0286 DB6A     		ldr	r3, [r3, #44]
 457 0288 B3F5804F 		cmp	r3, #16384
 458 028c 04D0     		beq	.L28
 459              		.loc 1 190 0 discriminator 2
 460 028e 5648     		ldr	r0, .L48
 461 0290 4FF0BE01 		mov	r1, #190
 462 0294 FFF7FEFF 		bl	assert_failed
 463              	.L28:
 191:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_WRITE_BURST(FSMC_NORSRAMInitStruct->FSMC_WriteBurst));  
 464              		.loc 1 191 0 is_stmt 1
 465 0298 7B68     		ldr	r3, [r7, #4]
 466 029a 1B6B     		ldr	r3, [r3, #48]
 467 029c 002B     		cmp	r3, #0
 468 029e 09D0     		beq	.L29
 469              		.loc 1 191 0 is_stmt 0 discriminator 1
 470 02a0 7B68     		ldr	r3, [r7, #4]
 471 02a2 1B6B     		ldr	r3, [r3, #48]
 472 02a4 B3F5002F 		cmp	r3, #524288
 473 02a8 04D0     		beq	.L29
 474              		.loc 1 191 0 discriminator 2
 475 02aa 4F48     		ldr	r0, .L48
 476 02ac 4FF0BF01 		mov	r1, #191
 477 02b0 FFF7FEFF 		bl	assert_failed
 478              	.L29:
 192:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_ADDRESS_SETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_
 479              		.loc 1 192 0 is_stmt 1
 480 02b4 7B68     		ldr	r3, [r7, #4]
 481 02b6 5B6B     		ldr	r3, [r3, #52]
 482 02b8 1B68     		ldr	r3, [r3, #0]
 483 02ba 0F2B     		cmp	r3, #15
 484 02bc 04D9     		bls	.L30
 485              		.loc 1 192 0 is_stmt 0 discriminator 1
 486 02be 4A48     		ldr	r0, .L48
 487 02c0 4FF0C001 		mov	r1, #192
 488 02c4 FFF7FEFF 		bl	assert_failed
 489              	.L30:
 193:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_ADDRESS_HOLD_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_A
 490              		.loc 1 193 0 is_stmt 1
 491 02c8 7B68     		ldr	r3, [r7, #4]
 492 02ca 5B6B     		ldr	r3, [r3, #52]
 493 02cc 5B68     		ldr	r3, [r3, #4]
 494 02ce 0F2B     		cmp	r3, #15
 495 02d0 04D9     		bls	.L31
 496              		.loc 1 193 0 is_stmt 0 discriminator 1
 497 02d2 4548     		ldr	r0, .L48
 498 02d4 4FF0C101 		mov	r1, #193
 499 02d8 FFF7FEFF 		bl	assert_failed
 500              	.L31:
 194:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_DATASETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_Data
 501              		.loc 1 194 0 is_stmt 1
 502 02dc 7B68     		ldr	r3, [r7, #4]
 503 02de 5B6B     		ldr	r3, [r3, #52]
 504 02e0 9B68     		ldr	r3, [r3, #8]
 505 02e2 002B     		cmp	r3, #0
 506 02e4 04D0     		beq	.L32
 507              		.loc 1 194 0 is_stmt 0 discriminator 2
 508 02e6 7B68     		ldr	r3, [r7, #4]
 509 02e8 5B6B     		ldr	r3, [r3, #52]
 510 02ea 9B68     		ldr	r3, [r3, #8]
 511 02ec FF2B     		cmp	r3, #255
 512 02ee 04D9     		bls	.L33
 513              	.L32:
 514              		.loc 1 194 0 discriminator 1
 515 02f0 3D48     		ldr	r0, .L48
 516 02f2 4FF0C201 		mov	r1, #194
 517 02f6 FFF7FEFF 		bl	assert_failed
 518              	.L33:
 195:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_TURNAROUND_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_Bus
 519              		.loc 1 195 0 is_stmt 1
 520 02fa 7B68     		ldr	r3, [r7, #4]
 521 02fc 5B6B     		ldr	r3, [r3, #52]
 522 02fe DB68     		ldr	r3, [r3, #12]
 523 0300 0F2B     		cmp	r3, #15
 524 0302 04D9     		bls	.L34
 525              		.loc 1 195 0 is_stmt 0 discriminator 1
 526 0304 3848     		ldr	r0, .L48
 527 0306 4FF0C301 		mov	r1, #195
 528 030a FFF7FEFF 		bl	assert_failed
 529              	.L34:
 196:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_CLK_DIV(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision
 530              		.loc 1 196 0 is_stmt 1
 531 030e 7B68     		ldr	r3, [r7, #4]
 532 0310 5B6B     		ldr	r3, [r3, #52]
 533 0312 1B69     		ldr	r3, [r3, #16]
 534 0314 0F2B     		cmp	r3, #15
 535 0316 04D9     		bls	.L35
 536              		.loc 1 196 0 is_stmt 0 discriminator 1
 537 0318 3348     		ldr	r0, .L48
 538 031a 4FF0C401 		mov	r1, #196
 539 031e FFF7FEFF 		bl	assert_failed
 540              	.L35:
 197:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_DATA_LATENCY(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLa
 541              		.loc 1 197 0 is_stmt 1
 542 0322 7B68     		ldr	r3, [r7, #4]
 543 0324 5B6B     		ldr	r3, [r3, #52]
 544 0326 5B69     		ldr	r3, [r3, #20]
 545 0328 0F2B     		cmp	r3, #15
 546 032a 04D9     		bls	.L36
 547              		.loc 1 197 0 is_stmt 0 discriminator 1
 548 032c 2E48     		ldr	r0, .L48
 549 032e 4FF0C501 		mov	r1, #197
 550 0332 FFF7FEFF 		bl	assert_failed
 551              	.L36:
 198:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_ACCESS_MODE(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessM
 552              		.loc 1 198 0 is_stmt 1
 553 0336 7B68     		ldr	r3, [r7, #4]
 554 0338 5B6B     		ldr	r3, [r3, #52]
 555 033a 9B69     		ldr	r3, [r3, #24]
 556 033c 002B     		cmp	r3, #0
 557 033e 16D0     		beq	.L37
 558              		.loc 1 198 0 is_stmt 0 discriminator 1
 559 0340 7B68     		ldr	r3, [r7, #4]
 560 0342 5B6B     		ldr	r3, [r3, #52]
 561 0344 9B69     		ldr	r3, [r3, #24]
 562 0346 B3F1805F 		cmp	r3, #268435456
 563 034a 10D0     		beq	.L37
 564              		.loc 1 198 0 discriminator 2
 565 034c 7B68     		ldr	r3, [r7, #4]
 566 034e 5B6B     		ldr	r3, [r3, #52]
 567 0350 9B69     		ldr	r3, [r3, #24]
 568 0352 B3F1005F 		cmp	r3, #536870912
 569 0356 0AD0     		beq	.L37
 570              		.loc 1 198 0 discriminator 3
 571 0358 7B68     		ldr	r3, [r7, #4]
 572 035a 5B6B     		ldr	r3, [r3, #52]
 573 035c 9B69     		ldr	r3, [r3, #24]
 574 035e B3F1405F 		cmp	r3, #805306368
 575 0362 04D0     		beq	.L37
 576              		.loc 1 198 0 discriminator 4
 577 0364 2048     		ldr	r0, .L48
 578 0366 4FF0C601 		mov	r1, #198
 579 036a FFF7FEFF 		bl	assert_failed
 580              	.L37:
 199:../SPL/src/stm32f10x_fsmc.c ****   
 200:../SPL/src/stm32f10x_fsmc.c ****   /* Bank1 NOR/SRAM control register configuration */ 
 201:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 581              		.loc 1 201 0 is_stmt 1
 582 036e 4FF02043 		mov	r3, #-1610612736
 583 0372 7A68     		ldr	r2, [r7, #4]
 584 0374 1268     		ldr	r2, [r2, #0]
 202:../SPL/src/stm32f10x_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_DataAddressMux |
 585              		.loc 1 202 0
 586 0376 7968     		ldr	r1, [r7, #4]
 587 0378 4868     		ldr	r0, [r1, #4]
 203:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryType |
 588              		.loc 1 203 0
 589 037a 7968     		ldr	r1, [r7, #4]
 590 037c 8968     		ldr	r1, [r1, #8]
 202:../SPL/src/stm32f10x_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_DataAddressMux |
 591              		.loc 1 202 0
 592 037e 0843     		orrs	r0, r0, r1
 204:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth |
 593              		.loc 1 204 0
 594 0380 7968     		ldr	r1, [r7, #4]
 595 0382 C968     		ldr	r1, [r1, #12]
 203:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryType |
 596              		.loc 1 203 0
 597 0384 0843     		orrs	r0, r0, r1
 205:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode |
 598              		.loc 1 205 0
 599 0386 7968     		ldr	r1, [r7, #4]
 600 0388 0969     		ldr	r1, [r1, #16]
 204:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth |
 601              		.loc 1 204 0
 602 038a 0843     		orrs	r0, r0, r1
 206:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait |
 603              		.loc 1 206 0
 604 038c 7968     		ldr	r1, [r7, #4]
 605 038e 4969     		ldr	r1, [r1, #20]
 205:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode |
 606              		.loc 1 205 0
 607 0390 0843     		orrs	r0, r0, r1
 207:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity |
 608              		.loc 1 207 0
 609 0392 7968     		ldr	r1, [r7, #4]
 610 0394 8969     		ldr	r1, [r1, #24]
 206:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait |
 611              		.loc 1 206 0
 612 0396 0843     		orrs	r0, r0, r1
 208:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WrapMode |
 613              		.loc 1 208 0
 614 0398 7968     		ldr	r1, [r7, #4]
 615 039a C969     		ldr	r1, [r1, #28]
 207:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity |
 616              		.loc 1 207 0
 617 039c 0843     		orrs	r0, r0, r1
 209:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive |
 618              		.loc 1 209 0
 619 039e 7968     		ldr	r1, [r7, #4]
 620 03a0 096A     		ldr	r1, [r1, #32]
 208:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WrapMode |
 621              		.loc 1 208 0
 622 03a2 0843     		orrs	r0, r0, r1
 210:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WriteOperation |
 623              		.loc 1 210 0
 624 03a4 7968     		ldr	r1, [r7, #4]
 625 03a6 496A     		ldr	r1, [r1, #36]
 209:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive |
 626              		.loc 1 209 0
 627 03a8 0843     		orrs	r0, r0, r1
 211:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignal |
 628              		.loc 1 211 0
 629 03aa 7968     		ldr	r1, [r7, #4]
 630 03ac 896A     		ldr	r1, [r1, #40]
 210:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WriteOperation |
 631              		.loc 1 210 0
 632 03ae 0843     		orrs	r0, r0, r1
 212:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_ExtendedMode |
 633              		.loc 1 212 0
 634 03b0 7968     		ldr	r1, [r7, #4]
 635 03b2 C96A     		ldr	r1, [r1, #44]
 211:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignal |
 636              		.loc 1 211 0
 637 03b4 0843     		orrs	r0, r0, r1
 213:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WriteBurst;
 638              		.loc 1 213 0
 639 03b6 7968     		ldr	r1, [r7, #4]
 640 03b8 096B     		ldr	r1, [r1, #48]
 212:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_ExtendedMode |
 641              		.loc 1 212 0
 642 03ba 0143     		orrs	r1, r1, r0
 201:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 643              		.loc 1 201 0
 644 03bc 43F82210 		str	r1, [r3, r2, lsl #2]
 214:../SPL/src/stm32f10x_fsmc.c **** 
 215:../SPL/src/stm32f10x_fsmc.c ****   if(FSMC_NORSRAMInitStruct->FSMC_MemoryType == FSMC_MemoryType_NOR)
 645              		.loc 1 215 0
 646 03c0 7B68     		ldr	r3, [r7, #4]
 647 03c2 9B68     		ldr	r3, [r3, #8]
 648 03c4 082B     		cmp	r3, #8
 649 03c6 11D1     		bne	.L38
 216:../SPL/src/stm32f10x_fsmc.c ****   {
 217:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] |= (uint32_t)BCR_FACCEN_Set;
 650              		.loc 1 217 0
 651 03c8 4FF02043 		mov	r3, #-1610612736
 652 03cc 7A68     		ldr	r2, [r7, #4]
 653 03ce 1268     		ldr	r2, [r2, #0]
 654 03d0 4FF02041 		mov	r1, #-1610612736
 655 03d4 7868     		ldr	r0, [r7, #4]
 656 03d6 0068     		ldr	r0, [r0, #0]
 657 03d8 51F82010 		ldr	r1, [r1, r0, lsl #2]
 658 03dc 41F04001 		orr	r1, r1, #64
 659 03e0 43F82210 		str	r1, [r3, r2, lsl #2]
 660 03e4 02E0     		b	.L49
 661              	.L50:
 662 03e6 00BF     		.align	2
 663              	.L48:
 664 03e8 00000000 		.word	.LC0
 665              	.L49:
 666              	.L38:
 218:../SPL/src/stm32f10x_fsmc.c ****   }
 219:../SPL/src/stm32f10x_fsmc.c ****   
 220:../SPL/src/stm32f10x_fsmc.c ****   /* Bank1 NOR/SRAM timing register configuration */
 221:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank+1] = 
 667              		.loc 1 221 0
 668 03ec 4FF02043 		mov	r3, #-1610612736
 669 03f0 7A68     		ldr	r2, [r7, #4]
 670 03f2 1268     		ldr	r2, [r2, #0]
 671 03f4 02F10102 		add	r2, r2, #1
 222:../SPL/src/stm32f10x_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime |
 672              		.loc 1 222 0
 673 03f8 7968     		ldr	r1, [r7, #4]
 674 03fa 496B     		ldr	r1, [r1, #52]
 675 03fc 0868     		ldr	r0, [r1, #0]
 223:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime << 4) |
 676              		.loc 1 223 0
 677 03fe 7968     		ldr	r1, [r7, #4]
 678 0400 496B     		ldr	r1, [r1, #52]
 679 0402 4968     		ldr	r1, [r1, #4]
 680 0404 4FEA0111 		lsl	r1, r1, #4
 222:../SPL/src/stm32f10x_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime |
 681              		.loc 1 222 0
 682 0408 0843     		orrs	r0, r0, r1
 224:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime << 8) |
 683              		.loc 1 224 0
 684 040a 7968     		ldr	r1, [r7, #4]
 685 040c 496B     		ldr	r1, [r1, #52]
 686 040e 8968     		ldr	r1, [r1, #8]
 687 0410 4FEA0121 		lsl	r1, r1, #8
 223:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime << 4) |
 688              		.loc 1 223 0
 689 0414 0843     		orrs	r0, r0, r1
 225:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration << 16) 
 690              		.loc 1 225 0
 691 0416 7968     		ldr	r1, [r7, #4]
 692 0418 496B     		ldr	r1, [r1, #52]
 693 041a C968     		ldr	r1, [r1, #12]
 694 041c 4FEA0141 		lsl	r1, r1, #16
 224:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime << 8) |
 695              		.loc 1 224 0
 696 0420 0843     		orrs	r0, r0, r1
 226:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision << 20) |
 697              		.loc 1 226 0
 698 0422 7968     		ldr	r1, [r7, #4]
 699 0424 496B     		ldr	r1, [r1, #52]
 700 0426 0969     		ldr	r1, [r1, #16]
 701 0428 4FEA0151 		lsl	r1, r1, #20
 225:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration << 16) 
 702              		.loc 1 225 0
 703 042c 0843     		orrs	r0, r0, r1
 227:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency << 24) |
 704              		.loc 1 227 0
 705 042e 7968     		ldr	r1, [r7, #4]
 706 0430 496B     		ldr	r1, [r1, #52]
 707 0432 4969     		ldr	r1, [r1, #20]
 708 0434 4FEA0161 		lsl	r1, r1, #24
 226:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision << 20) |
 709              		.loc 1 226 0
 710 0438 0843     		orrs	r0, r0, r1
 228:../SPL/src/stm32f10x_fsmc.c ****              FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode;
 711              		.loc 1 228 0
 712 043a 7968     		ldr	r1, [r7, #4]
 713 043c 496B     		ldr	r1, [r1, #52]
 714 043e 8969     		ldr	r1, [r1, #24]
 227:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency << 24) |
 715              		.loc 1 227 0
 716 0440 0143     		orrs	r1, r1, r0
 221:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank+1] = 
 717              		.loc 1 221 0
 718 0442 43F82210 		str	r1, [r3, r2, lsl #2]
 229:../SPL/src/stm32f10x_fsmc.c ****             
 230:../SPL/src/stm32f10x_fsmc.c ****     
 231:../SPL/src/stm32f10x_fsmc.c ****   /* Bank1 NOR/SRAM timing register for write configuration, if extended mode is used */
 232:../SPL/src/stm32f10x_fsmc.c ****   if(FSMC_NORSRAMInitStruct->FSMC_ExtendedMode == FSMC_ExtendedMode_Enable)
 719              		.loc 1 232 0
 720 0446 7B68     		ldr	r3, [r7, #4]
 721 0448 DB6A     		ldr	r3, [r3, #44]
 722 044a B3F5804F 		cmp	r3, #16384
 723 044e 77D1     		bne	.L39
 233:../SPL/src/stm32f10x_fsmc.c ****   {
 234:../SPL/src/stm32f10x_fsmc.c ****     assert_param(IS_FSMC_ADDRESS_SETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_Ad
 724              		.loc 1 234 0
 725 0450 7B68     		ldr	r3, [r7, #4]
 726 0452 9B6B     		ldr	r3, [r3, #56]
 727 0454 1B68     		ldr	r3, [r3, #0]
 728 0456 0F2B     		cmp	r3, #15
 729 0458 04D9     		bls	.L40
 730              		.loc 1 234 0 is_stmt 0 discriminator 1
 731 045a 3F48     		ldr	r0, .L51
 732 045c 4FF0EA01 		mov	r1, #234
 733 0460 FFF7FEFF 		bl	assert_failed
 734              	.L40:
 235:../SPL/src/stm32f10x_fsmc.c ****     assert_param(IS_FSMC_ADDRESS_HOLD_TIME(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_Add
 735              		.loc 1 235 0 is_stmt 1
 736 0464 7B68     		ldr	r3, [r7, #4]
 737 0466 9B6B     		ldr	r3, [r3, #56]
 738 0468 5B68     		ldr	r3, [r3, #4]
 739 046a 0F2B     		cmp	r3, #15
 740 046c 04D9     		bls	.L41
 741              		.loc 1 235 0 is_stmt 0 discriminator 1
 742 046e 3A48     		ldr	r0, .L51
 743 0470 4FF0EB01 		mov	r1, #235
 744 0474 FFF7FEFF 		bl	assert_failed
 745              	.L41:
 236:../SPL/src/stm32f10x_fsmc.c ****     assert_param(IS_FSMC_DATASETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSe
 746              		.loc 1 236 0 is_stmt 1
 747 0478 7B68     		ldr	r3, [r7, #4]
 748 047a 9B6B     		ldr	r3, [r3, #56]
 749 047c 9B68     		ldr	r3, [r3, #8]
 750 047e 002B     		cmp	r3, #0
 751 0480 04D0     		beq	.L42
 752              		.loc 1 236 0 is_stmt 0 discriminator 2
 753 0482 7B68     		ldr	r3, [r7, #4]
 754 0484 9B6B     		ldr	r3, [r3, #56]
 755 0486 9B68     		ldr	r3, [r3, #8]
 756 0488 FF2B     		cmp	r3, #255
 757 048a 04D9     		bls	.L43
 758              	.L42:
 759              		.loc 1 236 0 discriminator 1
 760 048c 3248     		ldr	r0, .L51
 761 048e 4FF0EC01 		mov	r1, #236
 762 0492 FFF7FEFF 		bl	assert_failed
 763              	.L43:
 237:../SPL/src/stm32f10x_fsmc.c ****     assert_param(IS_FSMC_CLK_DIV(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision))
 764              		.loc 1 237 0 is_stmt 1
 765 0496 7B68     		ldr	r3, [r7, #4]
 766 0498 9B6B     		ldr	r3, [r3, #56]
 767 049a 1B69     		ldr	r3, [r3, #16]
 768 049c 0F2B     		cmp	r3, #15
 769 049e 04D9     		bls	.L44
 770              		.loc 1 237 0 is_stmt 0 discriminator 1
 771 04a0 2D48     		ldr	r0, .L51
 772 04a2 4FF0ED01 		mov	r1, #237
 773 04a6 FFF7FEFF 		bl	assert_failed
 774              	.L44:
 238:../SPL/src/stm32f10x_fsmc.c ****     assert_param(IS_FSMC_DATA_LATENCY(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLate
 775              		.loc 1 238 0 is_stmt 1
 776 04aa 7B68     		ldr	r3, [r7, #4]
 777 04ac 9B6B     		ldr	r3, [r3, #56]
 778 04ae 5B69     		ldr	r3, [r3, #20]
 779 04b0 0F2B     		cmp	r3, #15
 780 04b2 04D9     		bls	.L45
 781              		.loc 1 238 0 is_stmt 0 discriminator 1
 782 04b4 2848     		ldr	r0, .L51
 783 04b6 4FF0EE01 		mov	r1, #238
 784 04ba FFF7FEFF 		bl	assert_failed
 785              	.L45:
 239:../SPL/src/stm32f10x_fsmc.c ****     assert_param(IS_FSMC_ACCESS_MODE(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMod
 786              		.loc 1 239 0 is_stmt 1
 787 04be 7B68     		ldr	r3, [r7, #4]
 788 04c0 9B6B     		ldr	r3, [r3, #56]
 789 04c2 9B69     		ldr	r3, [r3, #24]
 790 04c4 002B     		cmp	r3, #0
 791 04c6 16D0     		beq	.L46
 792              		.loc 1 239 0 is_stmt 0 discriminator 1
 793 04c8 7B68     		ldr	r3, [r7, #4]
 794 04ca 9B6B     		ldr	r3, [r3, #56]
 795 04cc 9B69     		ldr	r3, [r3, #24]
 796 04ce B3F1805F 		cmp	r3, #268435456
 797 04d2 10D0     		beq	.L46
 798              		.loc 1 239 0 discriminator 2
 799 04d4 7B68     		ldr	r3, [r7, #4]
 800 04d6 9B6B     		ldr	r3, [r3, #56]
 801 04d8 9B69     		ldr	r3, [r3, #24]
 802 04da B3F1005F 		cmp	r3, #536870912
 803 04de 0AD0     		beq	.L46
 804              		.loc 1 239 0 discriminator 3
 805 04e0 7B68     		ldr	r3, [r7, #4]
 806 04e2 9B6B     		ldr	r3, [r3, #56]
 807 04e4 9B69     		ldr	r3, [r3, #24]
 808 04e6 B3F1405F 		cmp	r3, #805306368
 809 04ea 04D0     		beq	.L46
 810              		.loc 1 239 0 discriminator 4
 811 04ec 1A48     		ldr	r0, .L51
 812 04ee 4FF0EF01 		mov	r1, #239
 813 04f2 FFF7FEFF 		bl	assert_failed
 814              	.L46:
 240:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 815              		.loc 1 240 0 is_stmt 1
 816 04f6 194B     		ldr	r3, .L51+4
 817 04f8 7A68     		ldr	r2, [r7, #4]
 818 04fa 1268     		ldr	r2, [r2, #0]
 241:../SPL/src/stm32f10x_fsmc.c ****               (uint32_t)FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime |
 819              		.loc 1 241 0
 820 04fc 7968     		ldr	r1, [r7, #4]
 821 04fe 896B     		ldr	r1, [r1, #56]
 822 0500 0868     		ldr	r0, [r1, #0]
 242:../SPL/src/stm32f10x_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime << 4 )|
 823              		.loc 1 242 0
 824 0502 7968     		ldr	r1, [r7, #4]
 825 0504 896B     		ldr	r1, [r1, #56]
 826 0506 4968     		ldr	r1, [r1, #4]
 827 0508 4FEA0111 		lsl	r1, r1, #4
 241:../SPL/src/stm32f10x_fsmc.c ****               (uint32_t)FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime |
 828              		.loc 1 241 0
 829 050c 0843     		orrs	r0, r0, r1
 243:../SPL/src/stm32f10x_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime << 8) |
 830              		.loc 1 243 0
 831 050e 7968     		ldr	r1, [r7, #4]
 832 0510 896B     		ldr	r1, [r1, #56]
 833 0512 8968     		ldr	r1, [r1, #8]
 834 0514 4FEA0121 		lsl	r1, r1, #8
 242:../SPL/src/stm32f10x_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime << 4 )|
 835              		.loc 1 242 0
 836 0518 0843     		orrs	r0, r0, r1
 244:../SPL/src/stm32f10x_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision << 20) |
 837              		.loc 1 244 0
 838 051a 7968     		ldr	r1, [r7, #4]
 839 051c 896B     		ldr	r1, [r1, #56]
 840 051e 0969     		ldr	r1, [r1, #16]
 841 0520 4FEA0151 		lsl	r1, r1, #20
 243:../SPL/src/stm32f10x_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime << 8) |
 842              		.loc 1 243 0
 843 0524 0843     		orrs	r0, r0, r1
 245:../SPL/src/stm32f10x_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency << 24) |
 844              		.loc 1 245 0
 845 0526 7968     		ldr	r1, [r7, #4]
 846 0528 896B     		ldr	r1, [r1, #56]
 847 052a 4969     		ldr	r1, [r1, #20]
 848 052c 4FEA0161 		lsl	r1, r1, #24
 244:../SPL/src/stm32f10x_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision << 20) |
 849              		.loc 1 244 0
 850 0530 0843     		orrs	r0, r0, r1
 246:../SPL/src/stm32f10x_fsmc.c ****                FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMode;
 851              		.loc 1 246 0
 852 0532 7968     		ldr	r1, [r7, #4]
 853 0534 896B     		ldr	r1, [r1, #56]
 854 0536 8969     		ldr	r1, [r1, #24]
 245:../SPL/src/stm32f10x_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency << 24) |
 855              		.loc 1 245 0
 856 0538 0143     		orrs	r1, r1, r0
 240:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 857              		.loc 1 240 0
 858 053a 43F82210 		str	r1, [r3, r2, lsl #2]
 859 053e 06E0     		b	.L16
 860              	.L39:
 247:../SPL/src/stm32f10x_fsmc.c ****   }
 248:../SPL/src/stm32f10x_fsmc.c ****   else
 249:../SPL/src/stm32f10x_fsmc.c ****   {
 250:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 0x0FFFFFFF;
 861              		.loc 1 250 0
 862 0540 064B     		ldr	r3, .L51+4
 863 0542 7A68     		ldr	r2, [r7, #4]
 864 0544 1268     		ldr	r2, [r2, #0]
 865 0546 6FF07041 		mvn	r1, #-268435456
 866 054a 43F82210 		str	r1, [r3, r2, lsl #2]
 867              	.L16:
 251:../SPL/src/stm32f10x_fsmc.c ****   }
 252:../SPL/src/stm32f10x_fsmc.c **** }
 868              		.loc 1 252 0
 869 054e 07F10807 		add	r7, r7, #8
 870 0552 BD46     		mov	sp, r7
 871 0554 80BD     		pop	{r7, pc}
 872              	.L52:
 873 0556 00BF     		.align	2
 874              	.L51:
 875 0558 00000000 		.word	.LC0
 876 055c 040100A0 		.word	-1610612476
 877              		.cfi_endproc
 878              	.LFE32:
 880              		.align	2
 881              		.global	FSMC_NANDInit
 882              		.thumb
 883              		.thumb_func
 885              	FSMC_NANDInit:
 886              	.LFB33:
 253:../SPL/src/stm32f10x_fsmc.c **** 
 254:../SPL/src/stm32f10x_fsmc.c **** /**
 255:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Initializes the FSMC NAND Banks according to the specified 
 256:../SPL/src/stm32f10x_fsmc.c ****   *         parameters in the FSMC_NANDInitStruct.
 257:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_NANDInitStruct : pointer to a FSMC_NANDInitTypeDef 
 258:../SPL/src/stm32f10x_fsmc.c ****   *         structure that contains the configuration information for the FSMC 
 259:../SPL/src/stm32f10x_fsmc.c ****   *         NAND specified Banks.                       
 260:../SPL/src/stm32f10x_fsmc.c ****   * @retval None
 261:../SPL/src/stm32f10x_fsmc.c ****   */
 262:../SPL/src/stm32f10x_fsmc.c **** void FSMC_NANDInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
 263:../SPL/src/stm32f10x_fsmc.c **** {
 887              		.loc 1 263 0
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 24
 890              		@ frame_needed = 1, uses_anonymous_args = 0
 891 0560 80B5     		push	{r7, lr}
 892              	.LCFI11:
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 7, -8
 895              		.cfi_offset 14, -4
 896 0562 86B0     		sub	sp, sp, #24
 897              	.LCFI12:
 898              		.cfi_def_cfa_offset 32
 899 0564 00AF     		add	r7, sp, #0
 900              	.LCFI13:
 901              		.cfi_def_cfa_register 7
 902 0566 7860     		str	r0, [r7, #4]
 264:../SPL/src/stm32f10x_fsmc.c ****   uint32_t tmppcr = 0x00000000, tmppmem = 0x00000000, tmppatt = 0x00000000; 
 903              		.loc 1 264 0
 904 0568 4FF00003 		mov	r3, #0
 905 056c 7B61     		str	r3, [r7, #20]
 906 056e 4FF00003 		mov	r3, #0
 907 0572 3B61     		str	r3, [r7, #16]
 908 0574 4FF00003 		mov	r3, #0
 909 0578 FB60     		str	r3, [r7, #12]
 265:../SPL/src/stm32f10x_fsmc.c ****     
 266:../SPL/src/stm32f10x_fsmc.c ****   /* Check the parameters */
 267:../SPL/src/stm32f10x_fsmc.c ****   assert_param( IS_FSMC_NAND_BANK(FSMC_NANDInitStruct->FSMC_Bank));
 910              		.loc 1 267 0
 911 057a 7B68     		ldr	r3, [r7, #4]
 912 057c 1B68     		ldr	r3, [r3, #0]
 913 057e 102B     		cmp	r3, #16
 914 0580 09D0     		beq	.L54
 915              		.loc 1 267 0 is_stmt 0 discriminator 1
 916 0582 7B68     		ldr	r3, [r7, #4]
 917 0584 1B68     		ldr	r3, [r3, #0]
 918 0586 B3F5807F 		cmp	r3, #256
 919 058a 04D0     		beq	.L54
 920              		.loc 1 267 0 discriminator 2
 921 058c 8748     		ldr	r0, .L71
 922 058e 40F20B11 		movw	r1, #267
 923 0592 FFF7FEFF 		bl	assert_failed
 924              	.L54:
 268:../SPL/src/stm32f10x_fsmc.c ****   assert_param( IS_FSMC_WAIT_FEATURE(FSMC_NANDInitStruct->FSMC_Waitfeature));
 925              		.loc 1 268 0 is_stmt 1
 926 0596 7B68     		ldr	r3, [r7, #4]
 927 0598 5B68     		ldr	r3, [r3, #4]
 928 059a 002B     		cmp	r3, #0
 929 059c 08D0     		beq	.L55
 930              		.loc 1 268 0 is_stmt 0 discriminator 1
 931 059e 7B68     		ldr	r3, [r7, #4]
 932 05a0 5B68     		ldr	r3, [r3, #4]
 933 05a2 022B     		cmp	r3, #2
 934 05a4 04D0     		beq	.L55
 935              		.loc 1 268 0 discriminator 2
 936 05a6 8148     		ldr	r0, .L71
 937 05a8 4FF48671 		mov	r1, #268
 938 05ac FFF7FEFF 		bl	assert_failed
 939              	.L55:
 269:../SPL/src/stm32f10x_fsmc.c ****   assert_param( IS_FSMC_MEMORY_WIDTH(FSMC_NANDInitStruct->FSMC_MemoryDataWidth));
 940              		.loc 1 269 0 is_stmt 1
 941 05b0 7B68     		ldr	r3, [r7, #4]
 942 05b2 9B68     		ldr	r3, [r3, #8]
 943 05b4 002B     		cmp	r3, #0
 944 05b6 08D0     		beq	.L56
 945              		.loc 1 269 0 is_stmt 0 discriminator 1
 946 05b8 7B68     		ldr	r3, [r7, #4]
 947 05ba 9B68     		ldr	r3, [r3, #8]
 948 05bc 102B     		cmp	r3, #16
 949 05be 04D0     		beq	.L56
 950              		.loc 1 269 0 discriminator 2
 951 05c0 7A48     		ldr	r0, .L71
 952 05c2 40F20D11 		movw	r1, #269
 953 05c6 FFF7FEFF 		bl	assert_failed
 954              	.L56:
 270:../SPL/src/stm32f10x_fsmc.c ****   assert_param( IS_FSMC_ECC_STATE(FSMC_NANDInitStruct->FSMC_ECC));
 955              		.loc 1 270 0 is_stmt 1
 956 05ca 7B68     		ldr	r3, [r7, #4]
 957 05cc DB68     		ldr	r3, [r3, #12]
 958 05ce 002B     		cmp	r3, #0
 959 05d0 08D0     		beq	.L57
 960              		.loc 1 270 0 is_stmt 0 discriminator 1
 961 05d2 7B68     		ldr	r3, [r7, #4]
 962 05d4 DB68     		ldr	r3, [r3, #12]
 963 05d6 402B     		cmp	r3, #64
 964 05d8 04D0     		beq	.L57
 965              		.loc 1 270 0 discriminator 2
 966 05da 7448     		ldr	r0, .L71
 967 05dc 4FF48771 		mov	r1, #270
 968 05e0 FFF7FEFF 		bl	assert_failed
 969              	.L57:
 271:../SPL/src/stm32f10x_fsmc.c ****   assert_param( IS_FSMC_ECCPAGE_SIZE(FSMC_NANDInitStruct->FSMC_ECCPageSize));
 970              		.loc 1 271 0 is_stmt 1
 971 05e4 7B68     		ldr	r3, [r7, #4]
 972 05e6 1B69     		ldr	r3, [r3, #16]
 973 05e8 002B     		cmp	r3, #0
 974 05ea 1DD0     		beq	.L58
 975              		.loc 1 271 0 is_stmt 0 discriminator 1
 976 05ec 7B68     		ldr	r3, [r7, #4]
 977 05ee 1B69     		ldr	r3, [r3, #16]
 978 05f0 B3F5003F 		cmp	r3, #131072
 979 05f4 18D0     		beq	.L58
 980              		.loc 1 271 0 discriminator 2
 981 05f6 7B68     		ldr	r3, [r7, #4]
 982 05f8 1B69     		ldr	r3, [r3, #16]
 983 05fa B3F5802F 		cmp	r3, #262144
 984 05fe 13D0     		beq	.L58
 985              		.loc 1 271 0 discriminator 3
 986 0600 7B68     		ldr	r3, [r7, #4]
 987 0602 1B69     		ldr	r3, [r3, #16]
 988 0604 B3F5C02F 		cmp	r3, #393216
 989 0608 0ED0     		beq	.L58
 990              		.loc 1 271 0 discriminator 4
 991 060a 7B68     		ldr	r3, [r7, #4]
 992 060c 1B69     		ldr	r3, [r3, #16]
 993 060e B3F5002F 		cmp	r3, #524288
 994 0612 09D0     		beq	.L58
 995              		.loc 1 271 0 discriminator 5
 996 0614 7B68     		ldr	r3, [r7, #4]
 997 0616 1B69     		ldr	r3, [r3, #16]
 998 0618 B3F5202F 		cmp	r3, #655360
 999 061c 04D0     		beq	.L58
 1000              		.loc 1 271 0 discriminator 6
 1001 061e 6348     		ldr	r0, .L71
 1002 0620 40F20F11 		movw	r1, #271
 1003 0624 FFF7FEFF 		bl	assert_failed
 1004              	.L58:
 272:../SPL/src/stm32f10x_fsmc.c ****   assert_param( IS_FSMC_TCLR_TIME(FSMC_NANDInitStruct->FSMC_TCLRSetupTime));
 1005              		.loc 1 272 0 is_stmt 1
 1006 0628 7B68     		ldr	r3, [r7, #4]
 1007 062a 5B69     		ldr	r3, [r3, #20]
 1008 062c FF2B     		cmp	r3, #255
 1009 062e 04D9     		bls	.L59
 1010              		.loc 1 272 0 is_stmt 0 discriminator 1
 1011 0630 5E48     		ldr	r0, .L71
 1012 0632 4FF48871 		mov	r1, #272
 1013 0636 FFF7FEFF 		bl	assert_failed
 1014              	.L59:
 273:../SPL/src/stm32f10x_fsmc.c ****   assert_param( IS_FSMC_TAR_TIME(FSMC_NANDInitStruct->FSMC_TARSetupTime));
 1015              		.loc 1 273 0 is_stmt 1
 1016 063a 7B68     		ldr	r3, [r7, #4]
 1017 063c 9B69     		ldr	r3, [r3, #24]
 1018 063e FF2B     		cmp	r3, #255
 1019 0640 04D9     		bls	.L60
 1020              		.loc 1 273 0 is_stmt 0 discriminator 1
 1021 0642 5A48     		ldr	r0, .L71
 1022 0644 40F21111 		movw	r1, #273
 1023 0648 FFF7FEFF 		bl	assert_failed
 1024              	.L60:
 274:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 1025              		.loc 1 274 0 is_stmt 1
 1026 064c 7B68     		ldr	r3, [r7, #4]
 1027 064e DB69     		ldr	r3, [r3, #28]
 1028 0650 1B68     		ldr	r3, [r3, #0]
 1029 0652 FF2B     		cmp	r3, #255
 1030 0654 04D9     		bls	.L61
 1031              		.loc 1 274 0 is_stmt 0 discriminator 1
 1032 0656 5548     		ldr	r0, .L71
 1033 0658 4FF48971 		mov	r1, #274
 1034 065c FFF7FEFF 		bl	assert_failed
 1035              	.L61:
 275:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupT
 1036              		.loc 1 275 0 is_stmt 1
 1037 0660 7B68     		ldr	r3, [r7, #4]
 1038 0662 DB69     		ldr	r3, [r3, #28]
 1039 0664 5B68     		ldr	r3, [r3, #4]
 1040 0666 FF2B     		cmp	r3, #255
 1041 0668 04D9     		bls	.L62
 1042              		.loc 1 275 0 is_stmt 0 discriminator 1
 1043 066a 5048     		ldr	r0, .L71
 1044 066c 40F21311 		movw	r1, #275
 1045 0670 FFF7FEFF 		bl	assert_failed
 1046              	.L62:
 276:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupT
 1047              		.loc 1 276 0 is_stmt 1
 1048 0674 7B68     		ldr	r3, [r7, #4]
 1049 0676 DB69     		ldr	r3, [r3, #28]
 1050 0678 9B68     		ldr	r3, [r3, #8]
 1051 067a FF2B     		cmp	r3, #255
 1052 067c 04D9     		bls	.L63
 1053              		.loc 1 276 0 is_stmt 0 discriminator 1
 1054 067e 4B48     		ldr	r0, .L71
 1055 0680 4FF48A71 		mov	r1, #276
 1056 0684 FFF7FEFF 		bl	assert_failed
 1057              	.L63:
 277:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTim
 1058              		.loc 1 277 0 is_stmt 1
 1059 0688 7B68     		ldr	r3, [r7, #4]
 1060 068a DB69     		ldr	r3, [r3, #28]
 1061 068c DB68     		ldr	r3, [r3, #12]
 1062 068e FF2B     		cmp	r3, #255
 1063 0690 04D9     		bls	.L64
 1064              		.loc 1 277 0 is_stmt 0 discriminator 1
 1065 0692 4648     		ldr	r0, .L71
 1066 0694 40F21511 		movw	r1, #277
 1067 0698 FFF7FEFF 		bl	assert_failed
 1068              	.L64:
 278:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 1069              		.loc 1 278 0 is_stmt 1
 1070 069c 7B68     		ldr	r3, [r7, #4]
 1071 069e 1B6A     		ldr	r3, [r3, #32]
 1072 06a0 1B68     		ldr	r3, [r3, #0]
 1073 06a2 FF2B     		cmp	r3, #255
 1074 06a4 04D9     		bls	.L65
 1075              		.loc 1 278 0 is_stmt 0 discriminator 1
 1076 06a6 4148     		ldr	r0, .L71
 1077 06a8 4FF48B71 		mov	r1, #278
 1078 06ac FFF7FEFF 		bl	assert_failed
 1079              	.L65:
 279:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSet
 1080              		.loc 1 279 0 is_stmt 1
 1081 06b0 7B68     		ldr	r3, [r7, #4]
 1082 06b2 1B6A     		ldr	r3, [r3, #32]
 1083 06b4 5B68     		ldr	r3, [r3, #4]
 1084 06b6 FF2B     		cmp	r3, #255
 1085 06b8 04D9     		bls	.L66
 1086              		.loc 1 279 0 is_stmt 0 discriminator 1
 1087 06ba 3C48     		ldr	r0, .L71
 1088 06bc 40F21711 		movw	r1, #279
 1089 06c0 FFF7FEFF 		bl	assert_failed
 1090              	.L66:
 280:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSet
 1091              		.loc 1 280 0 is_stmt 1
 1092 06c4 7B68     		ldr	r3, [r7, #4]
 1093 06c6 1B6A     		ldr	r3, [r3, #32]
 1094 06c8 9B68     		ldr	r3, [r3, #8]
 1095 06ca FF2B     		cmp	r3, #255
 1096 06cc 04D9     		bls	.L67
 1097              		.loc 1 280 0 is_stmt 0 discriminator 1
 1098 06ce 3748     		ldr	r0, .L71
 1099 06d0 4FF48C71 		mov	r1, #280
 1100 06d4 FFF7FEFF 		bl	assert_failed
 1101              	.L67:
 281:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetup
 1102              		.loc 1 281 0 is_stmt 1
 1103 06d8 7B68     		ldr	r3, [r7, #4]
 1104 06da 1B6A     		ldr	r3, [r3, #32]
 1105 06dc DB68     		ldr	r3, [r3, #12]
 1106 06de FF2B     		cmp	r3, #255
 1107 06e0 04D9     		bls	.L68
 1108              		.loc 1 281 0 is_stmt 0 discriminator 1
 1109 06e2 3248     		ldr	r0, .L71
 1110 06e4 40F21911 		movw	r1, #281
 1111 06e8 FFF7FEFF 		bl	assert_failed
 1112              	.L68:
 282:../SPL/src/stm32f10x_fsmc.c ****   
 283:../SPL/src/stm32f10x_fsmc.c ****   /* Set the tmppcr value according to FSMC_NANDInitStruct parameters */
 284:../SPL/src/stm32f10x_fsmc.c ****   tmppcr = (uint32_t)FSMC_NANDInitStruct->FSMC_Waitfeature |
 1113              		.loc 1 284 0 is_stmt 1
 1114 06ec 7B68     		ldr	r3, [r7, #4]
 1115 06ee 5A68     		ldr	r2, [r3, #4]
 285:../SPL/src/stm32f10x_fsmc.c ****             PCR_MemoryType_NAND |
 286:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NANDInitStruct->FSMC_MemoryDataWidth |
 1116              		.loc 1 286 0
 1117 06f0 7B68     		ldr	r3, [r7, #4]
 1118 06f2 9B68     		ldr	r3, [r3, #8]
 285:../SPL/src/stm32f10x_fsmc.c ****             PCR_MemoryType_NAND |
 1119              		.loc 1 285 0
 1120 06f4 1A43     		orrs	r2, r2, r3
 287:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECC |
 1121              		.loc 1 287 0
 1122 06f6 7B68     		ldr	r3, [r7, #4]
 1123 06f8 DB68     		ldr	r3, [r3, #12]
 286:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NANDInitStruct->FSMC_MemoryDataWidth |
 1124              		.loc 1 286 0
 1125 06fa 1A43     		orrs	r2, r2, r3
 288:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECCPageSize |
 1126              		.loc 1 288 0
 1127 06fc 7B68     		ldr	r3, [r7, #4]
 1128 06fe 1B69     		ldr	r3, [r3, #16]
 287:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECC |
 1129              		.loc 1 287 0
 1130 0700 1A43     		orrs	r2, r2, r3
 289:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_TCLRSetupTime << 9 )|
 1131              		.loc 1 289 0
 1132 0702 7B68     		ldr	r3, [r7, #4]
 1133 0704 5B69     		ldr	r3, [r3, #20]
 1134 0706 4FEA4323 		lsl	r3, r3, #9
 288:../SPL/src/stm32f10x_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECCPageSize |
 1135              		.loc 1 288 0
 1136 070a 1A43     		orrs	r2, r2, r3
 290:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_TARSetupTime << 13);
 1137              		.loc 1 290 0
 1138 070c 7B68     		ldr	r3, [r7, #4]
 1139 070e 9B69     		ldr	r3, [r3, #24]
 1140 0710 4FEA4333 		lsl	r3, r3, #13
 289:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_TCLRSetupTime << 9 )|
 1141              		.loc 1 289 0
 1142 0714 1343     		orrs	r3, r3, r2
 284:../SPL/src/stm32f10x_fsmc.c ****   tmppcr = (uint32_t)FSMC_NANDInitStruct->FSMC_Waitfeature |
 1143              		.loc 1 284 0
 1144 0716 43F00803 		orr	r3, r3, #8
 1145 071a 7B61     		str	r3, [r7, #20]
 291:../SPL/src/stm32f10x_fsmc.c ****             
 292:../SPL/src/stm32f10x_fsmc.c ****   /* Set tmppmem value according to FSMC_CommonSpaceTimingStructure parameters */
 293:../SPL/src/stm32f10x_fsmc.c ****   tmppmem = (uint32_t)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
 1146              		.loc 1 293 0
 1147 071c 7B68     		ldr	r3, [r7, #4]
 1148 071e DB69     		ldr	r3, [r3, #28]
 1149 0720 1A68     		ldr	r2, [r3, #0]
 294:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 1150              		.loc 1 294 0
 1151 0722 7B68     		ldr	r3, [r7, #4]
 1152 0724 DB69     		ldr	r3, [r3, #28]
 1153 0726 5B68     		ldr	r3, [r3, #4]
 1154 0728 4FEA0323 		lsl	r3, r3, #8
 293:../SPL/src/stm32f10x_fsmc.c ****   tmppmem = (uint32_t)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
 1155              		.loc 1 293 0
 1156 072c 1A43     		orrs	r2, r2, r3
 295:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 1157              		.loc 1 295 0
 1158 072e 7B68     		ldr	r3, [r7, #4]
 1159 0730 DB69     		ldr	r3, [r3, #28]
 1160 0732 9B68     		ldr	r3, [r3, #8]
 1161 0734 4FEA0343 		lsl	r3, r3, #16
 294:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 1162              		.loc 1 294 0
 1163 0738 1A43     		orrs	r2, r2, r3
 296:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
 1164              		.loc 1 296 0
 1165 073a 7B68     		ldr	r3, [r7, #4]
 1166 073c DB69     		ldr	r3, [r3, #28]
 1167 073e DB68     		ldr	r3, [r3, #12]
 1168 0740 4FEA0363 		lsl	r3, r3, #24
 293:../SPL/src/stm32f10x_fsmc.c ****   tmppmem = (uint32_t)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
 1169              		.loc 1 293 0
 1170 0744 1343     		orrs	r3, r3, r2
 1171 0746 3B61     		str	r3, [r7, #16]
 297:../SPL/src/stm32f10x_fsmc.c ****             
 298:../SPL/src/stm32f10x_fsmc.c ****   /* Set tmppatt value according to FSMC_AttributeSpaceTimingStructure parameters */
 299:../SPL/src/stm32f10x_fsmc.c ****   tmppatt = (uint32_t)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
 1172              		.loc 1 299 0
 1173 0748 7B68     		ldr	r3, [r7, #4]
 1174 074a 1B6A     		ldr	r3, [r3, #32]
 1175 074c 1A68     		ldr	r2, [r3, #0]
 300:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 1176              		.loc 1 300 0
 1177 074e 7B68     		ldr	r3, [r7, #4]
 1178 0750 1B6A     		ldr	r3, [r3, #32]
 1179 0752 5B68     		ldr	r3, [r3, #4]
 1180 0754 4FEA0323 		lsl	r3, r3, #8
 299:../SPL/src/stm32f10x_fsmc.c ****   tmppatt = (uint32_t)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
 1181              		.loc 1 299 0
 1182 0758 1A43     		orrs	r2, r2, r3
 301:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 1183              		.loc 1 301 0
 1184 075a 7B68     		ldr	r3, [r7, #4]
 1185 075c 1B6A     		ldr	r3, [r3, #32]
 1186 075e 9B68     		ldr	r3, [r3, #8]
 1187 0760 4FEA0343 		lsl	r3, r3, #16
 300:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 1188              		.loc 1 300 0
 1189 0764 1A43     		orrs	r2, r2, r3
 302:../SPL/src/stm32f10x_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime << 24);
 1190              		.loc 1 302 0
 1191 0766 7B68     		ldr	r3, [r7, #4]
 1192 0768 1B6A     		ldr	r3, [r3, #32]
 1193 076a DB68     		ldr	r3, [r3, #12]
 1194 076c 4FEA0363 		lsl	r3, r3, #24
 299:../SPL/src/stm32f10x_fsmc.c ****   tmppatt = (uint32_t)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
 1195              		.loc 1 299 0
 1196 0770 1343     		orrs	r3, r3, r2
 1197 0772 FB60     		str	r3, [r7, #12]
 303:../SPL/src/stm32f10x_fsmc.c ****   
 304:../SPL/src/stm32f10x_fsmc.c ****   if(FSMC_NANDInitStruct->FSMC_Bank == FSMC_Bank2_NAND)
 1198              		.loc 1 304 0
 1199 0774 7B68     		ldr	r3, [r7, #4]
 1200 0776 1B68     		ldr	r3, [r3, #0]
 1201 0778 102B     		cmp	r3, #16
 1202 077a 09D1     		bne	.L69
 305:../SPL/src/stm32f10x_fsmc.c ****   {
 306:../SPL/src/stm32f10x_fsmc.c ****     /* FSMC_Bank2_NAND registers configuration */
 307:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank2->PCR2 = tmppcr;
 1203              		.loc 1 307 0
 1204 077c 0C4B     		ldr	r3, .L71+4
 1205 077e 7A69     		ldr	r2, [r7, #20]
 1206 0780 1A60     		str	r2, [r3, #0]
 308:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank2->PMEM2 = tmppmem;
 1207              		.loc 1 308 0
 1208 0782 0B4B     		ldr	r3, .L71+4
 1209 0784 3A69     		ldr	r2, [r7, #16]
 1210 0786 9A60     		str	r2, [r3, #8]
 309:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank2->PATT2 = tmppatt;
 1211              		.loc 1 309 0
 1212 0788 094B     		ldr	r3, .L71+4
 1213 078a FA68     		ldr	r2, [r7, #12]
 1214 078c DA60     		str	r2, [r3, #12]
 1215 078e 08E0     		b	.L53
 1216              	.L69:
 310:../SPL/src/stm32f10x_fsmc.c ****   }
 311:../SPL/src/stm32f10x_fsmc.c ****   else
 312:../SPL/src/stm32f10x_fsmc.c ****   {
 313:../SPL/src/stm32f10x_fsmc.c ****     /* FSMC_Bank3_NAND registers configuration */
 314:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank3->PCR3 = tmppcr;
 1217              		.loc 1 314 0
 1218 0790 084B     		ldr	r3, .L71+8
 1219 0792 7A69     		ldr	r2, [r7, #20]
 1220 0794 1A60     		str	r2, [r3, #0]
 315:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank3->PMEM3 = tmppmem;
 1221              		.loc 1 315 0
 1222 0796 074B     		ldr	r3, .L71+8
 1223 0798 3A69     		ldr	r2, [r7, #16]
 1224 079a 9A60     		str	r2, [r3, #8]
 316:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank3->PATT3 = tmppatt;
 1225              		.loc 1 316 0
 1226 079c 054B     		ldr	r3, .L71+8
 1227 079e FA68     		ldr	r2, [r7, #12]
 1228 07a0 DA60     		str	r2, [r3, #12]
 1229              	.L53:
 317:../SPL/src/stm32f10x_fsmc.c ****   }
 318:../SPL/src/stm32f10x_fsmc.c **** }
 1230              		.loc 1 318 0
 1231 07a2 07F11807 		add	r7, r7, #24
 1232 07a6 BD46     		mov	sp, r7
 1233 07a8 80BD     		pop	{r7, pc}
 1234              	.L72:
 1235 07aa 00BF     		.align	2
 1236              	.L71:
 1237 07ac 00000000 		.word	.LC0
 1238 07b0 600000A0 		.word	-1610612640
 1239 07b4 800000A0 		.word	-1610612608
 1240              		.cfi_endproc
 1241              	.LFE33:
 1243              		.align	2
 1244              		.global	FSMC_PCCARDInit
 1245              		.thumb
 1246              		.thumb_func
 1248              	FSMC_PCCARDInit:
 1249              	.LFB34:
 319:../SPL/src/stm32f10x_fsmc.c **** 
 320:../SPL/src/stm32f10x_fsmc.c **** /**
 321:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Initializes the FSMC PCCARD Bank according to the specified 
 322:../SPL/src/stm32f10x_fsmc.c ****   *         parameters in the FSMC_PCCARDInitStruct.
 323:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_PCCARDInitStruct : pointer to a FSMC_PCCARDInitTypeDef
 324:../SPL/src/stm32f10x_fsmc.c ****   *         structure that contains the configuration information for the FSMC 
 325:../SPL/src/stm32f10x_fsmc.c ****   *         PCCARD Bank.                       
 326:../SPL/src/stm32f10x_fsmc.c ****   * @retval None
 327:../SPL/src/stm32f10x_fsmc.c ****   */
 328:../SPL/src/stm32f10x_fsmc.c **** void FSMC_PCCARDInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)
 329:../SPL/src/stm32f10x_fsmc.c **** {
 1250              		.loc 1 329 0
 1251              		.cfi_startproc
 1252              		@ args = 0, pretend = 0, frame = 8
 1253              		@ frame_needed = 1, uses_anonymous_args = 0
 1254 07b8 80B5     		push	{r7, lr}
 1255              	.LCFI14:
 1256              		.cfi_def_cfa_offset 8
 1257              		.cfi_offset 7, -8
 1258              		.cfi_offset 14, -4
 1259 07ba 82B0     		sub	sp, sp, #8
 1260              	.LCFI15:
 1261              		.cfi_def_cfa_offset 16
 1262 07bc 00AF     		add	r7, sp, #0
 1263              	.LCFI16:
 1264              		.cfi_def_cfa_register 7
 1265 07be 7860     		str	r0, [r7, #4]
 330:../SPL/src/stm32f10x_fsmc.c ****   /* Check the parameters */
 331:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_WAIT_FEATURE(FSMC_PCCARDInitStruct->FSMC_Waitfeature));
 1266              		.loc 1 331 0
 1267 07c0 7B68     		ldr	r3, [r7, #4]
 1268 07c2 1B68     		ldr	r3, [r3, #0]
 1269 07c4 002B     		cmp	r3, #0
 1270 07c6 08D0     		beq	.L74
 1271              		.loc 1 331 0 is_stmt 0 discriminator 1
 1272 07c8 7B68     		ldr	r3, [r7, #4]
 1273 07ca 1B68     		ldr	r3, [r3, #0]
 1274 07cc 022B     		cmp	r3, #2
 1275 07ce 04D0     		beq	.L74
 1276              		.loc 1 331 0 discriminator 2
 1277 07d0 7348     		ldr	r0, .L89
 1278 07d2 40F24B11 		movw	r1, #331
 1279 07d6 FFF7FEFF 		bl	assert_failed
 1280              	.L74:
 332:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_TCLR_TIME(FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime));
 1281              		.loc 1 332 0 is_stmt 1
 1282 07da 7B68     		ldr	r3, [r7, #4]
 1283 07dc 5B68     		ldr	r3, [r3, #4]
 1284 07de FF2B     		cmp	r3, #255
 1285 07e0 04D9     		bls	.L75
 1286              		.loc 1 332 0 is_stmt 0 discriminator 1
 1287 07e2 6F48     		ldr	r0, .L89
 1288 07e4 4FF4A671 		mov	r1, #332
 1289 07e8 FFF7FEFF 		bl	assert_failed
 1290              	.L75:
 333:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_TAR_TIME(FSMC_PCCARDInitStruct->FSMC_TARSetupTime));
 1291              		.loc 1 333 0 is_stmt 1
 1292 07ec 7B68     		ldr	r3, [r7, #4]
 1293 07ee 9B68     		ldr	r3, [r3, #8]
 1294 07f0 FF2B     		cmp	r3, #255
 1295 07f2 04D9     		bls	.L76
 1296              		.loc 1 333 0 is_stmt 0 discriminator 1
 1297 07f4 6A48     		ldr	r0, .L89
 1298 07f6 40F24D11 		movw	r1, #333
 1299 07fa FFF7FEFF 		bl	assert_failed
 1300              	.L76:
 334:../SPL/src/stm32f10x_fsmc.c ****  
 335:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTi
 1301              		.loc 1 335 0 is_stmt 1
 1302 07fe 7B68     		ldr	r3, [r7, #4]
 1303 0800 DB68     		ldr	r3, [r3, #12]
 1304 0802 1B68     		ldr	r3, [r3, #0]
 1305 0804 FF2B     		cmp	r3, #255
 1306 0806 04D9     		bls	.L77
 1307              		.loc 1 335 0 is_stmt 0 discriminator 1
 1308 0808 6548     		ldr	r0, .L89
 1309 080a 40F24F11 		movw	r1, #335
 1310 080e FFF7FEFF 		bl	assert_failed
 1311              	.L77:
 336:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetu
 1312              		.loc 1 336 0 is_stmt 1
 1313 0812 7B68     		ldr	r3, [r7, #4]
 1314 0814 DB68     		ldr	r3, [r3, #12]
 1315 0816 5B68     		ldr	r3, [r3, #4]
 1316 0818 FF2B     		cmp	r3, #255
 1317 081a 04D9     		bls	.L78
 1318              		.loc 1 336 0 is_stmt 0 discriminator 1
 1319 081c 6048     		ldr	r0, .L89
 1320 081e 4FF4A871 		mov	r1, #336
 1321 0822 FFF7FEFF 		bl	assert_failed
 1322              	.L78:
 337:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetu
 1323              		.loc 1 337 0 is_stmt 1
 1324 0826 7B68     		ldr	r3, [r7, #4]
 1325 0828 DB68     		ldr	r3, [r3, #12]
 1326 082a 9B68     		ldr	r3, [r3, #8]
 1327 082c FF2B     		cmp	r3, #255
 1328 082e 04D9     		bls	.L79
 1329              		.loc 1 337 0 is_stmt 0 discriminator 1
 1330 0830 5B48     		ldr	r0, .L89
 1331 0832 40F25111 		movw	r1, #337
 1332 0836 FFF7FEFF 		bl	assert_failed
 1333              	.L79:
 338:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupT
 1334              		.loc 1 338 0 is_stmt 1
 1335 083a 7B68     		ldr	r3, [r7, #4]
 1336 083c DB68     		ldr	r3, [r3, #12]
 1337 083e DB68     		ldr	r3, [r3, #12]
 1338 0840 FF2B     		cmp	r3, #255
 1339 0842 04D9     		bls	.L80
 1340              		.loc 1 338 0 is_stmt 0 discriminator 1
 1341 0844 5648     		ldr	r0, .L89
 1342 0846 4FF4A971 		mov	r1, #338
 1343 084a FFF7FEFF 		bl	assert_failed
 1344              	.L80:
 339:../SPL/src/stm32f10x_fsmc.c ****   
 340:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_Setu
 1345              		.loc 1 340 0 is_stmt 1
 1346 084e 7B68     		ldr	r3, [r7, #4]
 1347 0850 1B69     		ldr	r3, [r3, #16]
 1348 0852 1B68     		ldr	r3, [r3, #0]
 1349 0854 FF2B     		cmp	r3, #255
 1350 0856 04D9     		bls	.L81
 1351              		.loc 1 340 0 is_stmt 0 discriminator 1
 1352 0858 5148     		ldr	r0, .L89
 1353 085a 4FF4AA71 		mov	r1, #340
 1354 085e FFF7FEFF 		bl	assert_failed
 1355              	.L81:
 341:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitS
 1356              		.loc 1 341 0 is_stmt 1
 1357 0862 7B68     		ldr	r3, [r7, #4]
 1358 0864 1B69     		ldr	r3, [r3, #16]
 1359 0866 5B68     		ldr	r3, [r3, #4]
 1360 0868 FF2B     		cmp	r3, #255
 1361 086a 04D9     		bls	.L82
 1362              		.loc 1 341 0 is_stmt 0 discriminator 1
 1363 086c 4C48     		ldr	r0, .L89
 1364 086e 40F25511 		movw	r1, #341
 1365 0872 FFF7FEFF 		bl	assert_failed
 1366              	.L82:
 342:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldS
 1367              		.loc 1 342 0 is_stmt 1
 1368 0876 7B68     		ldr	r3, [r7, #4]
 1369 0878 1B69     		ldr	r3, [r3, #16]
 1370 087a 9B68     		ldr	r3, [r3, #8]
 1371 087c FF2B     		cmp	r3, #255
 1372 087e 04D9     		bls	.L83
 1373              		.loc 1 342 0 is_stmt 0 discriminator 1
 1374 0880 4748     		ldr	r0, .L89
 1375 0882 4FF4AB71 		mov	r1, #342
 1376 0886 FFF7FEFF 		bl	assert_failed
 1377              	.L83:
 343:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSet
 1378              		.loc 1 343 0 is_stmt 1
 1379 088a 7B68     		ldr	r3, [r7, #4]
 1380 088c 1B69     		ldr	r3, [r3, #16]
 1381 088e DB68     		ldr	r3, [r3, #12]
 1382 0890 FF2B     		cmp	r3, #255
 1383 0892 04D9     		bls	.L84
 1384              		.loc 1 343 0 is_stmt 0 discriminator 1
 1385 0894 4248     		ldr	r0, .L89
 1386 0896 40F25711 		movw	r1, #343
 1387 089a FFF7FEFF 		bl	assert_failed
 1388              	.L84:
 344:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime))
 1389              		.loc 1 344 0 is_stmt 1
 1390 089e 7B68     		ldr	r3, [r7, #4]
 1391 08a0 5B69     		ldr	r3, [r3, #20]
 1392 08a2 1B68     		ldr	r3, [r3, #0]
 1393 08a4 FF2B     		cmp	r3, #255
 1394 08a6 04D9     		bls	.L85
 1395              		.loc 1 344 0 is_stmt 0 discriminator 1
 1396 08a8 3D48     		ldr	r0, .L89
 1397 08aa 4FF4AC71 		mov	r1, #344
 1398 08ae FFF7FEFF 		bl	assert_failed
 1399              	.L85:
 345:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTim
 1400              		.loc 1 345 0 is_stmt 1
 1401 08b2 7B68     		ldr	r3, [r7, #4]
 1402 08b4 5B69     		ldr	r3, [r3, #20]
 1403 08b6 5B68     		ldr	r3, [r3, #4]
 1404 08b8 FF2B     		cmp	r3, #255
 1405 08ba 04D9     		bls	.L86
 1406              		.loc 1 345 0 is_stmt 0 discriminator 1
 1407 08bc 3848     		ldr	r0, .L89
 1408 08be 40F25911 		movw	r1, #345
 1409 08c2 FFF7FEFF 		bl	assert_failed
 1410              	.L86:
 346:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTim
 1411              		.loc 1 346 0 is_stmt 1
 1412 08c6 7B68     		ldr	r3, [r7, #4]
 1413 08c8 5B69     		ldr	r3, [r3, #20]
 1414 08ca 9B68     		ldr	r3, [r3, #8]
 1415 08cc FF2B     		cmp	r3, #255
 1416 08ce 04D9     		bls	.L87
 1417              		.loc 1 346 0 is_stmt 0 discriminator 1
 1418 08d0 3348     		ldr	r0, .L89
 1419 08d2 4FF4AD71 		mov	r1, #346
 1420 08d6 FFF7FEFF 		bl	assert_failed
 1421              	.L87:
 347:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime)
 1422              		.loc 1 347 0 is_stmt 1
 1423 08da 7B68     		ldr	r3, [r7, #4]
 1424 08dc 5B69     		ldr	r3, [r3, #20]
 1425 08de DB68     		ldr	r3, [r3, #12]
 1426 08e0 FF2B     		cmp	r3, #255
 1427 08e2 04D9     		bls	.L88
 1428              		.loc 1 347 0 is_stmt 0 discriminator 1
 1429 08e4 2E48     		ldr	r0, .L89
 1430 08e6 40F25B11 		movw	r1, #347
 1431 08ea FFF7FEFF 		bl	assert_failed
 1432              	.L88:
 348:../SPL/src/stm32f10x_fsmc.c ****   
 349:../SPL/src/stm32f10x_fsmc.c ****   /* Set the PCR4 register value according to FSMC_PCCARDInitStruct parameters */
 350:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank4->PCR4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_Waitfeature |
 1433              		.loc 1 350 0 is_stmt 1
 1434 08ee 2D4B     		ldr	r3, .L89+4
 1435 08f0 7A68     		ldr	r2, [r7, #4]
 1436 08f2 1168     		ldr	r1, [r2, #0]
 351:../SPL/src/stm32f10x_fsmc.c ****                      FSMC_MemoryDataWidth_16b |  
 352:../SPL/src/stm32f10x_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
 1437              		.loc 1 352 0
 1438 08f4 7A68     		ldr	r2, [r7, #4]
 1439 08f6 5268     		ldr	r2, [r2, #4]
 1440 08f8 4FEA4222 		lsl	r2, r2, #9
 351:../SPL/src/stm32f10x_fsmc.c ****                      FSMC_MemoryDataWidth_16b |  
 1441              		.loc 1 351 0
 1442 08fc 1143     		orrs	r1, r1, r2
 353:../SPL/src/stm32f10x_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_TARSetupTime << 13);
 1443              		.loc 1 353 0
 1444 08fe 7A68     		ldr	r2, [r7, #4]
 1445 0900 9268     		ldr	r2, [r2, #8]
 1446 0902 4FEA4232 		lsl	r2, r2, #13
 352:../SPL/src/stm32f10x_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
 1447              		.loc 1 352 0
 1448 0906 0A43     		orrs	r2, r2, r1
 1449 0908 42F01002 		orr	r2, r2, #16
 350:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank4->PCR4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_Waitfeature |
 1450              		.loc 1 350 0
 1451 090c 1A60     		str	r2, [r3, #0]
 354:../SPL/src/stm32f10x_fsmc.c ****             
 355:../SPL/src/stm32f10x_fsmc.c ****   /* Set PMEM4 register value according to FSMC_CommonSpaceTimingStructure parameters */
 356:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank4->PMEM4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 1452              		.loc 1 356 0
 1453 090e 254B     		ldr	r3, .L89+4
 1454 0910 7A68     		ldr	r2, [r7, #4]
 1455 0912 D268     		ldr	r2, [r2, #12]
 1456 0914 1168     		ldr	r1, [r2, #0]
 357:../SPL/src/stm32f10x_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8
 1457              		.loc 1 357 0
 1458 0916 7A68     		ldr	r2, [r7, #4]
 1459 0918 D268     		ldr	r2, [r2, #12]
 1460 091a 5268     		ldr	r2, [r2, #4]
 1461 091c 4FEA0222 		lsl	r2, r2, #8
 356:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank4->PMEM4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 1462              		.loc 1 356 0
 1463 0920 1143     		orrs	r1, r1, r2
 358:../SPL/src/stm32f10x_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 1
 1464              		.loc 1 358 0
 1465 0922 7A68     		ldr	r2, [r7, #4]
 1466 0924 D268     		ldr	r2, [r2, #12]
 1467 0926 9268     		ldr	r2, [r2, #8]
 1468 0928 4FEA0242 		lsl	r2, r2, #16
 357:../SPL/src/stm32f10x_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8
 1469              		.loc 1 357 0
 1470 092c 1143     		orrs	r1, r1, r2
 359:../SPL/src/stm32f10x_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24
 1471              		.loc 1 359 0
 1472 092e 7A68     		ldr	r2, [r7, #4]
 1473 0930 D268     		ldr	r2, [r2, #12]
 1474 0932 D268     		ldr	r2, [r2, #12]
 1475 0934 4FEA0262 		lsl	r2, r2, #24
 358:../SPL/src/stm32f10x_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 1
 1476              		.loc 1 358 0
 1477 0938 0A43     		orrs	r2, r2, r1
 356:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank4->PMEM4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 1478              		.loc 1 356 0
 1479 093a 9A60     		str	r2, [r3, #8]
 360:../SPL/src/stm32f10x_fsmc.c ****             
 361:../SPL/src/stm32f10x_fsmc.c ****   /* Set PATT4 register value according to FSMC_AttributeSpaceTimingStructure parameters */
 362:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank4->PATT4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 1480              		.loc 1 362 0
 1481 093c 194B     		ldr	r3, .L89+4
 1482 093e 7A68     		ldr	r2, [r7, #4]
 1483 0940 1269     		ldr	r2, [r2, #16]
 1484 0942 1168     		ldr	r1, [r2, #0]
 363:../SPL/src/stm32f10x_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime <
 1485              		.loc 1 363 0
 1486 0944 7A68     		ldr	r2, [r7, #4]
 1487 0946 1269     		ldr	r2, [r2, #16]
 1488 0948 5268     		ldr	r2, [r2, #4]
 1489 094a 4FEA0222 		lsl	r2, r2, #8
 362:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank4->PATT4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 1490              		.loc 1 362 0
 1491 094e 1143     		orrs	r1, r1, r2
 364:../SPL/src/stm32f10x_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime <
 1492              		.loc 1 364 0
 1493 0950 7A68     		ldr	r2, [r7, #4]
 1494 0952 1269     		ldr	r2, [r2, #16]
 1495 0954 9268     		ldr	r2, [r2, #8]
 1496 0956 4FEA0242 		lsl	r2, r2, #16
 363:../SPL/src/stm32f10x_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime <
 1497              		.loc 1 363 0
 1498 095a 1143     		orrs	r1, r1, r2
 365:../SPL/src/stm32f10x_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime <<
 1499              		.loc 1 365 0
 1500 095c 7A68     		ldr	r2, [r7, #4]
 1501 095e 1269     		ldr	r2, [r2, #16]
 1502 0960 D268     		ldr	r2, [r2, #12]
 1503 0962 4FEA0262 		lsl	r2, r2, #24
 364:../SPL/src/stm32f10x_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime <
 1504              		.loc 1 364 0
 1505 0966 0A43     		orrs	r2, r2, r1
 362:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank4->PATT4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 1506              		.loc 1 362 0
 1507 0968 DA60     		str	r2, [r3, #12]
 366:../SPL/src/stm32f10x_fsmc.c ****             
 367:../SPL/src/stm32f10x_fsmc.c ****   /* Set PIO4 register value according to FSMC_IOSpaceTimingStructure parameters */
 368:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank4->PIO4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
 1508              		.loc 1 368 0
 1509 096a 0E4B     		ldr	r3, .L89+4
 1510 096c 7A68     		ldr	r2, [r7, #4]
 1511 096e 5269     		ldr	r2, [r2, #20]
 1512 0970 1168     		ldr	r1, [r2, #0]
 369:../SPL/src/stm32f10x_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 1513              		.loc 1 369 0
 1514 0972 7A68     		ldr	r2, [r7, #4]
 1515 0974 5269     		ldr	r2, [r2, #20]
 1516 0976 5268     		ldr	r2, [r2, #4]
 1517 0978 4FEA0222 		lsl	r2, r2, #8
 368:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank4->PIO4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
 1518              		.loc 1 368 0
 1519 097c 1143     		orrs	r1, r1, r2
 370:../SPL/src/stm32f10x_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 1520              		.loc 1 370 0
 1521 097e 7A68     		ldr	r2, [r7, #4]
 1522 0980 5269     		ldr	r2, [r2, #20]
 1523 0982 9268     		ldr	r2, [r2, #8]
 1524 0984 4FEA0242 		lsl	r2, r2, #16
 369:../SPL/src/stm32f10x_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 1525              		.loc 1 369 0
 1526 0988 1143     		orrs	r1, r1, r2
 371:../SPL/src/stm32f10x_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime << 24);   
 1527              		.loc 1 371 0
 1528 098a 7A68     		ldr	r2, [r7, #4]
 1529 098c 5269     		ldr	r2, [r2, #20]
 1530 098e D268     		ldr	r2, [r2, #12]
 1531 0990 4FEA0262 		lsl	r2, r2, #24
 370:../SPL/src/stm32f10x_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 1532              		.loc 1 370 0
 1533 0994 0A43     		orrs	r2, r2, r1
 368:../SPL/src/stm32f10x_fsmc.c ****   FSMC_Bank4->PIO4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
 1534              		.loc 1 368 0
 1535 0996 1A61     		str	r2, [r3, #16]
 372:../SPL/src/stm32f10x_fsmc.c **** }
 1536              		.loc 1 372 0
 1537 0998 07F10807 		add	r7, r7, #8
 1538 099c BD46     		mov	sp, r7
 1539 099e 80BD     		pop	{r7, pc}
 1540              	.L90:
 1541              		.align	2
 1542              	.L89:
 1543 09a0 00000000 		.word	.LC0
 1544 09a4 A00000A0 		.word	-1610612576
 1545              		.cfi_endproc
 1546              	.LFE34:
 1548              		.align	2
 1549              		.global	FSMC_NORSRAMStructInit
 1550              		.thumb
 1551              		.thumb_func
 1553              	FSMC_NORSRAMStructInit:
 1554              	.LFB35:
 373:../SPL/src/stm32f10x_fsmc.c **** 
 374:../SPL/src/stm32f10x_fsmc.c **** /**
 375:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Fills each FSMC_NORSRAMInitStruct member with its default value.
 376:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_NORSRAMInitStruct: pointer to a FSMC_NORSRAMInitTypeDef 
 377:../SPL/src/stm32f10x_fsmc.c ****   *         structure which will be initialized.
 378:../SPL/src/stm32f10x_fsmc.c ****   * @retval None
 379:../SPL/src/stm32f10x_fsmc.c ****   */
 380:../SPL/src/stm32f10x_fsmc.c **** void FSMC_NORSRAMStructInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
 381:../SPL/src/stm32f10x_fsmc.c **** {  
 1555              		.loc 1 381 0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 8
 1558              		@ frame_needed = 1, uses_anonymous_args = 0
 1559              		@ link register save eliminated.
 1560 09a8 80B4     		push	{r7}
 1561              	.LCFI17:
 1562              		.cfi_def_cfa_offset 4
 1563              		.cfi_offset 7, -4
 1564 09aa 83B0     		sub	sp, sp, #12
 1565              	.LCFI18:
 1566              		.cfi_def_cfa_offset 16
 1567 09ac 00AF     		add	r7, sp, #0
 1568              	.LCFI19:
 1569              		.cfi_def_cfa_register 7
 1570 09ae 7860     		str	r0, [r7, #4]
 382:../SPL/src/stm32f10x_fsmc.c ****   /* Reset NOR/SRAM Init structure parameters values */
 383:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_Bank = FSMC_Bank1_NORSRAM1;
 1571              		.loc 1 383 0
 1572 09b0 7B68     		ldr	r3, [r7, #4]
 1573 09b2 4FF00002 		mov	r2, #0
 1574 09b6 1A60     		str	r2, [r3, #0]
 384:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_DataAddressMux = FSMC_DataAddressMux_Enable;
 1575              		.loc 1 384 0
 1576 09b8 7B68     		ldr	r3, [r7, #4]
 1577 09ba 4FF00202 		mov	r2, #2
 1578 09be 5A60     		str	r2, [r3, #4]
 385:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_MemoryType = FSMC_MemoryType_SRAM;
 1579              		.loc 1 385 0
 1580 09c0 7B68     		ldr	r3, [r7, #4]
 1581 09c2 4FF00002 		mov	r2, #0
 1582 09c6 9A60     		str	r2, [r3, #8]
 386:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_8b;
 1583              		.loc 1 386 0
 1584 09c8 7B68     		ldr	r3, [r7, #4]
 1585 09ca 4FF00002 		mov	r2, #0
 1586 09ce DA60     		str	r2, [r3, #12]
 387:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
 1587              		.loc 1 387 0
 1588 09d0 7B68     		ldr	r3, [r7, #4]
 1589 09d2 4FF00002 		mov	r2, #0
 1590 09d6 1A61     		str	r2, [r3, #16]
 388:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait = FSMC_AsynchronousWait_Disable;
 1591              		.loc 1 388 0
 1592 09d8 7B68     		ldr	r3, [r7, #4]
 1593 09da 4FF00002 		mov	r2, #0
 1594 09de 5A61     		str	r2, [r3, #20]
 389:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
 1595              		.loc 1 389 0
 1596 09e0 7B68     		ldr	r3, [r7, #4]
 1597 09e2 4FF00002 		mov	r2, #0
 1598 09e6 9A61     		str	r2, [r3, #24]
 390:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WrapMode = FSMC_WrapMode_Disable;
 1599              		.loc 1 390 0
 1600 09e8 7B68     		ldr	r3, [r7, #4]
 1601 09ea 4FF00002 		mov	r2, #0
 1602 09ee DA61     		str	r2, [r3, #28]
 391:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
 1603              		.loc 1 391 0
 1604 09f0 7B68     		ldr	r3, [r7, #4]
 1605 09f2 4FF00002 		mov	r2, #0
 1606 09f6 1A62     		str	r2, [r3, #32]
 392:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteOperation = FSMC_WriteOperation_Enable;
 1607              		.loc 1 392 0
 1608 09f8 7B68     		ldr	r3, [r7, #4]
 1609 09fa 4FF48052 		mov	r2, #4096
 1610 09fe 5A62     		str	r2, [r3, #36]
 393:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WaitSignal = FSMC_WaitSignal_Enable;
 1611              		.loc 1 393 0
 1612 0a00 7B68     		ldr	r3, [r7, #4]
 1613 0a02 4FF40052 		mov	r2, #8192
 1614 0a06 9A62     		str	r2, [r3, #40]
 394:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ExtendedMode = FSMC_ExtendedMode_Disable;
 1615              		.loc 1 394 0
 1616 0a08 7B68     		ldr	r3, [r7, #4]
 1617 0a0a 4FF00002 		mov	r2, #0
 1618 0a0e DA62     		str	r2, [r3, #44]
 395:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteBurst = FSMC_WriteBurst_Disable;
 1619              		.loc 1 395 0
 1620 0a10 7B68     		ldr	r3, [r7, #4]
 1621 0a12 4FF00002 		mov	r2, #0
 1622 0a16 1A63     		str	r2, [r3, #48]
 396:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime = 0xF;
 1623              		.loc 1 396 0
 1624 0a18 7B68     		ldr	r3, [r7, #4]
 1625 0a1a 5B6B     		ldr	r3, [r3, #52]
 1626 0a1c 4FF00F02 		mov	r2, #15
 1627 0a20 1A60     		str	r2, [r3, #0]
 397:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime = 0xF;
 1628              		.loc 1 397 0
 1629 0a22 7B68     		ldr	r3, [r7, #4]
 1630 0a24 5B6B     		ldr	r3, [r3, #52]
 1631 0a26 4FF00F02 		mov	r2, #15
 1632 0a2a 5A60     		str	r2, [r3, #4]
 398:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime = 0xFF;
 1633              		.loc 1 398 0
 1634 0a2c 7B68     		ldr	r3, [r7, #4]
 1635 0a2e 5B6B     		ldr	r3, [r3, #52]
 1636 0a30 4FF0FF02 		mov	r2, #255
 1637 0a34 9A60     		str	r2, [r3, #8]
 399:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration = 0xF;
 1638              		.loc 1 399 0
 1639 0a36 7B68     		ldr	r3, [r7, #4]
 1640 0a38 5B6B     		ldr	r3, [r3, #52]
 1641 0a3a 4FF00F02 		mov	r2, #15
 1642 0a3e DA60     		str	r2, [r3, #12]
 400:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision = 0xF;
 1643              		.loc 1 400 0
 1644 0a40 7B68     		ldr	r3, [r7, #4]
 1645 0a42 5B6B     		ldr	r3, [r3, #52]
 1646 0a44 4FF00F02 		mov	r2, #15
 1647 0a48 1A61     		str	r2, [r3, #16]
 401:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency = 0xF;
 1648              		.loc 1 401 0
 1649 0a4a 7B68     		ldr	r3, [r7, #4]
 1650 0a4c 5B6B     		ldr	r3, [r3, #52]
 1651 0a4e 4FF00F02 		mov	r2, #15
 1652 0a52 5A61     		str	r2, [r3, #20]
 402:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode = FSMC_AccessMode_A; 
 1653              		.loc 1 402 0
 1654 0a54 7B68     		ldr	r3, [r7, #4]
 1655 0a56 5B6B     		ldr	r3, [r3, #52]
 1656 0a58 4FF00002 		mov	r2, #0
 1657 0a5c 9A61     		str	r2, [r3, #24]
 403:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime = 0xF;
 1658              		.loc 1 403 0
 1659 0a5e 7B68     		ldr	r3, [r7, #4]
 1660 0a60 9B6B     		ldr	r3, [r3, #56]
 1661 0a62 4FF00F02 		mov	r2, #15
 1662 0a66 1A60     		str	r2, [r3, #0]
 404:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime = 0xF;
 1663              		.loc 1 404 0
 1664 0a68 7B68     		ldr	r3, [r7, #4]
 1665 0a6a 9B6B     		ldr	r3, [r3, #56]
 1666 0a6c 4FF00F02 		mov	r2, #15
 1667 0a70 5A60     		str	r2, [r3, #4]
 405:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime = 0xFF;
 1668              		.loc 1 405 0
 1669 0a72 7B68     		ldr	r3, [r7, #4]
 1670 0a74 9B6B     		ldr	r3, [r3, #56]
 1671 0a76 4FF0FF02 		mov	r2, #255
 1672 0a7a 9A60     		str	r2, [r3, #8]
 406:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_BusTurnAroundDuration = 0xF;
 1673              		.loc 1 406 0
 1674 0a7c 7B68     		ldr	r3, [r7, #4]
 1675 0a7e 9B6B     		ldr	r3, [r3, #56]
 1676 0a80 4FF00F02 		mov	r2, #15
 1677 0a84 DA60     		str	r2, [r3, #12]
 407:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision = 0xF;
 1678              		.loc 1 407 0
 1679 0a86 7B68     		ldr	r3, [r7, #4]
 1680 0a88 9B6B     		ldr	r3, [r3, #56]
 1681 0a8a 4FF00F02 		mov	r2, #15
 1682 0a8e 1A61     		str	r2, [r3, #16]
 408:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency = 0xF;
 1683              		.loc 1 408 0
 1684 0a90 7B68     		ldr	r3, [r7, #4]
 1685 0a92 9B6B     		ldr	r3, [r3, #56]
 1686 0a94 4FF00F02 		mov	r2, #15
 1687 0a98 5A61     		str	r2, [r3, #20]
 409:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMode = FSMC_AccessMode_A;
 1688              		.loc 1 409 0
 1689 0a9a 7B68     		ldr	r3, [r7, #4]
 1690 0a9c 9B6B     		ldr	r3, [r3, #56]
 1691 0a9e 4FF00002 		mov	r2, #0
 1692 0aa2 9A61     		str	r2, [r3, #24]
 410:../SPL/src/stm32f10x_fsmc.c **** }
 1693              		.loc 1 410 0
 1694 0aa4 07F10C07 		add	r7, r7, #12
 1695 0aa8 BD46     		mov	sp, r7
 1696 0aaa 80BC     		pop	{r7}
 1697 0aac 7047     		bx	lr
 1698              		.cfi_endproc
 1699              	.LFE35:
 1701 0aae 00BF     		.align	2
 1702              		.global	FSMC_NANDStructInit
 1703              		.thumb
 1704              		.thumb_func
 1706              	FSMC_NANDStructInit:
 1707              	.LFB36:
 411:../SPL/src/stm32f10x_fsmc.c **** 
 412:../SPL/src/stm32f10x_fsmc.c **** /**
 413:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Fills each FSMC_NANDInitStruct member with its default value.
 414:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_NANDInitStruct: pointer to a FSMC_NANDInitTypeDef 
 415:../SPL/src/stm32f10x_fsmc.c ****   *         structure which will be initialized.
 416:../SPL/src/stm32f10x_fsmc.c ****   * @retval None
 417:../SPL/src/stm32f10x_fsmc.c ****   */
 418:../SPL/src/stm32f10x_fsmc.c **** void FSMC_NANDStructInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
 419:../SPL/src/stm32f10x_fsmc.c **** { 
 1708              		.loc 1 419 0
 1709              		.cfi_startproc
 1710              		@ args = 0, pretend = 0, frame = 8
 1711              		@ frame_needed = 1, uses_anonymous_args = 0
 1712              		@ link register save eliminated.
 1713 0ab0 80B4     		push	{r7}
 1714              	.LCFI20:
 1715              		.cfi_def_cfa_offset 4
 1716              		.cfi_offset 7, -4
 1717 0ab2 83B0     		sub	sp, sp, #12
 1718              	.LCFI21:
 1719              		.cfi_def_cfa_offset 16
 1720 0ab4 00AF     		add	r7, sp, #0
 1721              	.LCFI22:
 1722              		.cfi_def_cfa_register 7
 1723 0ab6 7860     		str	r0, [r7, #4]
 420:../SPL/src/stm32f10x_fsmc.c ****   /* Reset NAND Init structure parameters values */
 421:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NANDInitStruct->FSMC_Bank = FSMC_Bank2_NAND;
 1724              		.loc 1 421 0
 1725 0ab8 7B68     		ldr	r3, [r7, #4]
 1726 0aba 4FF01002 		mov	r2, #16
 1727 0abe 1A60     		str	r2, [r3, #0]
 422:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NANDInitStruct->FSMC_Waitfeature = FSMC_Waitfeature_Disable;
 1728              		.loc 1 422 0
 1729 0ac0 7B68     		ldr	r3, [r7, #4]
 1730 0ac2 4FF00002 		mov	r2, #0
 1731 0ac6 5A60     		str	r2, [r3, #4]
 423:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NANDInitStruct->FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_8b;
 1732              		.loc 1 423 0
 1733 0ac8 7B68     		ldr	r3, [r7, #4]
 1734 0aca 4FF00002 		mov	r2, #0
 1735 0ace 9A60     		str	r2, [r3, #8]
 424:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NANDInitStruct->FSMC_ECC = FSMC_ECC_Disable;
 1736              		.loc 1 424 0
 1737 0ad0 7B68     		ldr	r3, [r7, #4]
 1738 0ad2 4FF00002 		mov	r2, #0
 1739 0ad6 DA60     		str	r2, [r3, #12]
 425:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NANDInitStruct->FSMC_ECCPageSize = FSMC_ECCPageSize_256Bytes;
 1740              		.loc 1 425 0
 1741 0ad8 7B68     		ldr	r3, [r7, #4]
 1742 0ada 4FF00002 		mov	r2, #0
 1743 0ade 1A61     		str	r2, [r3, #16]
 426:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NANDInitStruct->FSMC_TCLRSetupTime = 0x0;
 1744              		.loc 1 426 0
 1745 0ae0 7B68     		ldr	r3, [r7, #4]
 1746 0ae2 4FF00002 		mov	r2, #0
 1747 0ae6 5A61     		str	r2, [r3, #20]
 427:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NANDInitStruct->FSMC_TARSetupTime = 0x0;
 1748              		.loc 1 427 0
 1749 0ae8 7B68     		ldr	r3, [r7, #4]
 1750 0aea 4FF00002 		mov	r2, #0
 1751 0aee 9A61     		str	r2, [r3, #24]
 428:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 1752              		.loc 1 428 0
 1753 0af0 7B68     		ldr	r3, [r7, #4]
 1754 0af2 DB69     		ldr	r3, [r3, #28]
 1755 0af4 4FF0FC02 		mov	r2, #252
 1756 0af8 1A60     		str	r2, [r3, #0]
 429:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 1757              		.loc 1 429 0
 1758 0afa 7B68     		ldr	r3, [r7, #4]
 1759 0afc DB69     		ldr	r3, [r3, #28]
 1760 0afe 4FF0FC02 		mov	r2, #252
 1761 0b02 5A60     		str	r2, [r3, #4]
 430:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 1762              		.loc 1 430 0
 1763 0b04 7B68     		ldr	r3, [r7, #4]
 1764 0b06 DB69     		ldr	r3, [r3, #28]
 1765 0b08 4FF0FC02 		mov	r2, #252
 1766 0b0c 9A60     		str	r2, [r3, #8]
 431:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
 1767              		.loc 1 431 0
 1768 0b0e 7B68     		ldr	r3, [r7, #4]
 1769 0b10 DB69     		ldr	r3, [r3, #28]
 1770 0b12 4FF0FC02 		mov	r2, #252
 1771 0b16 DA60     		str	r2, [r3, #12]
 432:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 1772              		.loc 1 432 0
 1773 0b18 7B68     		ldr	r3, [r7, #4]
 1774 0b1a 1B6A     		ldr	r3, [r3, #32]
 1775 0b1c 4FF0FC02 		mov	r2, #252
 1776 0b20 1A60     		str	r2, [r3, #0]
 433:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 1777              		.loc 1 433 0
 1778 0b22 7B68     		ldr	r3, [r7, #4]
 1779 0b24 1B6A     		ldr	r3, [r3, #32]
 1780 0b26 4FF0FC02 		mov	r2, #252
 1781 0b2a 5A60     		str	r2, [r3, #4]
 434:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 1782              		.loc 1 434 0
 1783 0b2c 7B68     		ldr	r3, [r7, #4]
 1784 0b2e 1B6A     		ldr	r3, [r3, #32]
 1785 0b30 4FF0FC02 		mov	r2, #252
 1786 0b34 9A60     		str	r2, [r3, #8]
 435:../SPL/src/stm32f10x_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;	  
 1787              		.loc 1 435 0
 1788 0b36 7B68     		ldr	r3, [r7, #4]
 1789 0b38 1B6A     		ldr	r3, [r3, #32]
 1790 0b3a 4FF0FC02 		mov	r2, #252
 1791 0b3e DA60     		str	r2, [r3, #12]
 436:../SPL/src/stm32f10x_fsmc.c **** }
 1792              		.loc 1 436 0
 1793 0b40 07F10C07 		add	r7, r7, #12
 1794 0b44 BD46     		mov	sp, r7
 1795 0b46 80BC     		pop	{r7}
 1796 0b48 7047     		bx	lr
 1797              		.cfi_endproc
 1798              	.LFE36:
 1800 0b4a 00BF     		.align	2
 1801              		.global	FSMC_PCCARDStructInit
 1802              		.thumb
 1803              		.thumb_func
 1805              	FSMC_PCCARDStructInit:
 1806              	.LFB37:
 437:../SPL/src/stm32f10x_fsmc.c **** 
 438:../SPL/src/stm32f10x_fsmc.c **** /**
 439:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Fills each FSMC_PCCARDInitStruct member with its default value.
 440:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_PCCARDInitStruct: pointer to a FSMC_PCCARDInitTypeDef 
 441:../SPL/src/stm32f10x_fsmc.c ****   *         structure which will be initialized.
 442:../SPL/src/stm32f10x_fsmc.c ****   * @retval None
 443:../SPL/src/stm32f10x_fsmc.c ****   */
 444:../SPL/src/stm32f10x_fsmc.c **** void FSMC_PCCARDStructInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)
 445:../SPL/src/stm32f10x_fsmc.c **** {
 1807              		.loc 1 445 0
 1808              		.cfi_startproc
 1809              		@ args = 0, pretend = 0, frame = 8
 1810              		@ frame_needed = 1, uses_anonymous_args = 0
 1811              		@ link register save eliminated.
 1812 0b4c 80B4     		push	{r7}
 1813              	.LCFI23:
 1814              		.cfi_def_cfa_offset 4
 1815              		.cfi_offset 7, -4
 1816 0b4e 83B0     		sub	sp, sp, #12
 1817              	.LCFI24:
 1818              		.cfi_def_cfa_offset 16
 1819 0b50 00AF     		add	r7, sp, #0
 1820              	.LCFI25:
 1821              		.cfi_def_cfa_register 7
 1822 0b52 7860     		str	r0, [r7, #4]
 446:../SPL/src/stm32f10x_fsmc.c ****   /* Reset PCCARD Init structure parameters values */
 447:../SPL/src/stm32f10x_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_Waitfeature = FSMC_Waitfeature_Disable;
 1823              		.loc 1 447 0
 1824 0b54 7B68     		ldr	r3, [r7, #4]
 1825 0b56 4FF00002 		mov	r2, #0
 1826 0b5a 1A60     		str	r2, [r3, #0]
 448:../SPL/src/stm32f10x_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime = 0x0;
 1827              		.loc 1 448 0
 1828 0b5c 7B68     		ldr	r3, [r7, #4]
 1829 0b5e 4FF00002 		mov	r2, #0
 1830 0b62 5A60     		str	r2, [r3, #4]
 449:../SPL/src/stm32f10x_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_TARSetupTime = 0x0;
 1831              		.loc 1 449 0
 1832 0b64 7B68     		ldr	r3, [r7, #4]
 1833 0b66 4FF00002 		mov	r2, #0
 1834 0b6a 9A60     		str	r2, [r3, #8]
 450:../SPL/src/stm32f10x_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 1835              		.loc 1 450 0
 1836 0b6c 7B68     		ldr	r3, [r7, #4]
 1837 0b6e DB68     		ldr	r3, [r3, #12]
 1838 0b70 4FF0FC02 		mov	r2, #252
 1839 0b74 1A60     		str	r2, [r3, #0]
 451:../SPL/src/stm32f10x_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 1840              		.loc 1 451 0
 1841 0b76 7B68     		ldr	r3, [r7, #4]
 1842 0b78 DB68     		ldr	r3, [r3, #12]
 1843 0b7a 4FF0FC02 		mov	r2, #252
 1844 0b7e 5A60     		str	r2, [r3, #4]
 452:../SPL/src/stm32f10x_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 1845              		.loc 1 452 0
 1846 0b80 7B68     		ldr	r3, [r7, #4]
 1847 0b82 DB68     		ldr	r3, [r3, #12]
 1848 0b84 4FF0FC02 		mov	r2, #252
 1849 0b88 9A60     		str	r2, [r3, #8]
 453:../SPL/src/stm32f10x_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
 1850              		.loc 1 453 0
 1851 0b8a 7B68     		ldr	r3, [r7, #4]
 1852 0b8c DB68     		ldr	r3, [r3, #12]
 1853 0b8e 4FF0FC02 		mov	r2, #252
 1854 0b92 DA60     		str	r2, [r3, #12]
 454:../SPL/src/stm32f10x_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 1855              		.loc 1 454 0
 1856 0b94 7B68     		ldr	r3, [r7, #4]
 1857 0b96 1B69     		ldr	r3, [r3, #16]
 1858 0b98 4FF0FC02 		mov	r2, #252
 1859 0b9c 1A60     		str	r2, [r3, #0]
 455:../SPL/src/stm32f10x_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 1860              		.loc 1 455 0
 1861 0b9e 7B68     		ldr	r3, [r7, #4]
 1862 0ba0 1B69     		ldr	r3, [r3, #16]
 1863 0ba2 4FF0FC02 		mov	r2, #252
 1864 0ba6 5A60     		str	r2, [r3, #4]
 456:../SPL/src/stm32f10x_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 1865              		.loc 1 456 0
 1866 0ba8 7B68     		ldr	r3, [r7, #4]
 1867 0baa 1B69     		ldr	r3, [r3, #16]
 1868 0bac 4FF0FC02 		mov	r2, #252
 1869 0bb0 9A60     		str	r2, [r3, #8]
 457:../SPL/src/stm32f10x_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;	
 1870              		.loc 1 457 0
 1871 0bb2 7B68     		ldr	r3, [r7, #4]
 1872 0bb4 1B69     		ldr	r3, [r3, #16]
 1873 0bb6 4FF0FC02 		mov	r2, #252
 1874 0bba DA60     		str	r2, [r3, #12]
 458:../SPL/src/stm32f10x_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 1875              		.loc 1 458 0
 1876 0bbc 7B68     		ldr	r3, [r7, #4]
 1877 0bbe 5B69     		ldr	r3, [r3, #20]
 1878 0bc0 4FF0FC02 		mov	r2, #252
 1879 0bc4 1A60     		str	r2, [r3, #0]
 459:../SPL/src/stm32f10x_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 1880              		.loc 1 459 0
 1881 0bc6 7B68     		ldr	r3, [r7, #4]
 1882 0bc8 5B69     		ldr	r3, [r3, #20]
 1883 0bca 4FF0FC02 		mov	r2, #252
 1884 0bce 5A60     		str	r2, [r3, #4]
 460:../SPL/src/stm32f10x_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 1885              		.loc 1 460 0
 1886 0bd0 7B68     		ldr	r3, [r7, #4]
 1887 0bd2 5B69     		ldr	r3, [r3, #20]
 1888 0bd4 4FF0FC02 		mov	r2, #252
 1889 0bd8 9A60     		str	r2, [r3, #8]
 461:../SPL/src/stm32f10x_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
 1890              		.loc 1 461 0
 1891 0bda 7B68     		ldr	r3, [r7, #4]
 1892 0bdc 5B69     		ldr	r3, [r3, #20]
 1893 0bde 4FF0FC02 		mov	r2, #252
 1894 0be2 DA60     		str	r2, [r3, #12]
 462:../SPL/src/stm32f10x_fsmc.c **** }
 1895              		.loc 1 462 0
 1896 0be4 07F10C07 		add	r7, r7, #12
 1897 0be8 BD46     		mov	sp, r7
 1898 0bea 80BC     		pop	{r7}
 1899 0bec 7047     		bx	lr
 1900              		.cfi_endproc
 1901              	.LFE37:
 1903 0bee 00BF     		.align	2
 1904              		.global	FSMC_NORSRAMCmd
 1905              		.thumb
 1906              		.thumb_func
 1908              	FSMC_NORSRAMCmd:
 1909              	.LFB38:
 463:../SPL/src/stm32f10x_fsmc.c **** 
 464:../SPL/src/stm32f10x_fsmc.c **** /**
 465:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Enables or disables the specified NOR/SRAM Memory Bank.
 466:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 467:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be one of the following values:
 468:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank1_NORSRAM1: FSMC Bank1 NOR/SRAM1  
 469:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank1_NORSRAM2: FSMC Bank1 NOR/SRAM2 
 470:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank1_NORSRAM3: FSMC Bank1 NOR/SRAM3 
 471:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank1_NORSRAM4: FSMC Bank1 NOR/SRAM4 
 472:../SPL/src/stm32f10x_fsmc.c ****   * @param  NewState: new state of the FSMC_Bank. This parameter can be: ENABLE or DISABLE.
 473:../SPL/src/stm32f10x_fsmc.c ****   * @retval None
 474:../SPL/src/stm32f10x_fsmc.c ****   */
 475:../SPL/src/stm32f10x_fsmc.c **** void FSMC_NORSRAMCmd(uint32_t FSMC_Bank, FunctionalState NewState)
 476:../SPL/src/stm32f10x_fsmc.c **** {
 1910              		.loc 1 476 0
 1911              		.cfi_startproc
 1912              		@ args = 0, pretend = 0, frame = 8
 1913              		@ frame_needed = 1, uses_anonymous_args = 0
 1914 0bf0 80B5     		push	{r7, lr}
 1915              	.LCFI26:
 1916              		.cfi_def_cfa_offset 8
 1917              		.cfi_offset 7, -8
 1918              		.cfi_offset 14, -4
 1919 0bf2 82B0     		sub	sp, sp, #8
 1920              	.LCFI27:
 1921              		.cfi_def_cfa_offset 16
 1922 0bf4 00AF     		add	r7, sp, #0
 1923              	.LCFI28:
 1924              		.cfi_def_cfa_register 7
 1925 0bf6 7860     		str	r0, [r7, #4]
 1926 0bf8 0B46     		mov	r3, r1
 1927 0bfa FB70     		strb	r3, [r7, #3]
 477:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_NORSRAM_BANK(FSMC_Bank));
 1928              		.loc 1 477 0
 1929 0bfc 7B68     		ldr	r3, [r7, #4]
 1930 0bfe 002B     		cmp	r3, #0
 1931 0c00 0DD0     		beq	.L95
 1932              		.loc 1 477 0 is_stmt 0 discriminator 1
 1933 0c02 7B68     		ldr	r3, [r7, #4]
 1934 0c04 022B     		cmp	r3, #2
 1935 0c06 0AD0     		beq	.L95
 1936              		.loc 1 477 0 discriminator 2
 1937 0c08 7B68     		ldr	r3, [r7, #4]
 1938 0c0a 042B     		cmp	r3, #4
 1939 0c0c 07D0     		beq	.L95
 1940              		.loc 1 477 0 discriminator 3
 1941 0c0e 7B68     		ldr	r3, [r7, #4]
 1942 0c10 062B     		cmp	r3, #6
 1943 0c12 04D0     		beq	.L95
 1944              		.loc 1 477 0 discriminator 4
 1945 0c14 1748     		ldr	r0, .L99
 1946 0c16 40F2DD11 		movw	r1, #477
 1947 0c1a FFF7FEFF 		bl	assert_failed
 1948              	.L95:
 478:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1949              		.loc 1 478 0 is_stmt 1
 1950 0c1e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1951 0c20 002B     		cmp	r3, #0
 1952 0c22 07D0     		beq	.L96
 1953              		.loc 1 478 0 is_stmt 0 discriminator 1
 1954 0c24 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1955 0c26 012B     		cmp	r3, #1
 1956 0c28 04D0     		beq	.L96
 1957              		.loc 1 478 0 discriminator 2
 1958 0c2a 1248     		ldr	r0, .L99
 1959 0c2c 4FF4EF71 		mov	r1, #478
 1960 0c30 FFF7FEFF 		bl	assert_failed
 1961              	.L96:
 479:../SPL/src/stm32f10x_fsmc.c ****   
 480:../SPL/src/stm32f10x_fsmc.c ****   if (NewState != DISABLE)
 1962              		.loc 1 480 0 is_stmt 1
 1963 0c34 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1964 0c36 002B     		cmp	r3, #0
 1965 0c38 0CD0     		beq	.L97
 481:../SPL/src/stm32f10x_fsmc.c ****   {
 482:../SPL/src/stm32f10x_fsmc.c ****     /* Enable the selected NOR/SRAM Bank by setting the PBKEN bit in the BCRx register */
 483:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] |= BCR_MBKEN_Set;
 1966              		.loc 1 483 0
 1967 0c3a 4FF02043 		mov	r3, #-1610612736
 1968 0c3e 4FF02042 		mov	r2, #-1610612736
 1969 0c42 7968     		ldr	r1, [r7, #4]
 1970 0c44 52F82120 		ldr	r2, [r2, r1, lsl #2]
 1971 0c48 42F00101 		orr	r1, r2, #1
 1972 0c4c 7A68     		ldr	r2, [r7, #4]
 1973 0c4e 43F82210 		str	r1, [r3, r2, lsl #2]
 1974 0c52 0BE0     		b	.L94
 1975              	.L97:
 484:../SPL/src/stm32f10x_fsmc.c ****   }
 485:../SPL/src/stm32f10x_fsmc.c ****   else
 486:../SPL/src/stm32f10x_fsmc.c ****   {
 487:../SPL/src/stm32f10x_fsmc.c ****     /* Disable the selected NOR/SRAM Bank by clearing the PBKEN bit in the BCRx register */
 488:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] &= BCR_MBKEN_Reset;
 1976              		.loc 1 488 0
 1977 0c54 4FF02042 		mov	r2, #-1610612736
 1978 0c58 4FF02043 		mov	r3, #-1610612736
 1979 0c5c 7968     		ldr	r1, [r7, #4]
 1980 0c5e 53F82110 		ldr	r1, [r3, r1, lsl #2]
 1981 0c62 054B     		ldr	r3, .L99+4
 1982 0c64 0B40     		ands	r3, r3, r1
 1983 0c66 7968     		ldr	r1, [r7, #4]
 1984 0c68 42F82130 		str	r3, [r2, r1, lsl #2]
 1985              	.L94:
 489:../SPL/src/stm32f10x_fsmc.c ****   }
 490:../SPL/src/stm32f10x_fsmc.c **** }
 1986              		.loc 1 490 0
 1987 0c6c 07F10807 		add	r7, r7, #8
 1988 0c70 BD46     		mov	sp, r7
 1989 0c72 80BD     		pop	{r7, pc}
 1990              	.L100:
 1991              		.align	2
 1992              	.L99:
 1993 0c74 00000000 		.word	.LC0
 1994 0c78 FEFF0F00 		.word	1048574
 1995              		.cfi_endproc
 1996              	.LFE38:
 1998              		.align	2
 1999              		.global	FSMC_NANDCmd
 2000              		.thumb
 2001              		.thumb_func
 2003              	FSMC_NANDCmd:
 2004              	.LFB39:
 491:../SPL/src/stm32f10x_fsmc.c **** 
 492:../SPL/src/stm32f10x_fsmc.c **** /**
 493:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Enables or disables the specified NAND Memory Bank.
 494:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 495:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be one of the following values:
 496:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 497:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 498:../SPL/src/stm32f10x_fsmc.c ****   * @param  NewState: new state of the FSMC_Bank. This parameter can be: ENABLE or DISABLE.
 499:../SPL/src/stm32f10x_fsmc.c ****   * @retval None
 500:../SPL/src/stm32f10x_fsmc.c ****   */
 501:../SPL/src/stm32f10x_fsmc.c **** void FSMC_NANDCmd(uint32_t FSMC_Bank, FunctionalState NewState)
 502:../SPL/src/stm32f10x_fsmc.c **** {
 2005              		.loc 1 502 0
 2006              		.cfi_startproc
 2007              		@ args = 0, pretend = 0, frame = 8
 2008              		@ frame_needed = 1, uses_anonymous_args = 0
 2009 0c7c 80B5     		push	{r7, lr}
 2010              	.LCFI29:
 2011              		.cfi_def_cfa_offset 8
 2012              		.cfi_offset 7, -8
 2013              		.cfi_offset 14, -4
 2014 0c7e 82B0     		sub	sp, sp, #8
 2015              	.LCFI30:
 2016              		.cfi_def_cfa_offset 16
 2017 0c80 00AF     		add	r7, sp, #0
 2018              	.LCFI31:
 2019              		.cfi_def_cfa_register 7
 2020 0c82 7860     		str	r0, [r7, #4]
 2021 0c84 0B46     		mov	r3, r1
 2022 0c86 FB70     		strb	r3, [r7, #3]
 503:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_NAND_BANK(FSMC_Bank));
 2023              		.loc 1 503 0
 2024 0c88 7B68     		ldr	r3, [r7, #4]
 2025 0c8a 102B     		cmp	r3, #16
 2026 0c8c 08D0     		beq	.L102
 2027              		.loc 1 503 0 is_stmt 0 discriminator 1
 2028 0c8e 7B68     		ldr	r3, [r7, #4]
 2029 0c90 B3F5807F 		cmp	r3, #256
 2030 0c94 04D0     		beq	.L102
 2031              		.loc 1 503 0 discriminator 2
 2032 0c96 1C48     		ldr	r0, .L108
 2033 0c98 40F2F711 		movw	r1, #503
 2034 0c9c FFF7FEFF 		bl	assert_failed
 2035              	.L102:
 504:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2036              		.loc 1 504 0 is_stmt 1
 2037 0ca0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2038 0ca2 002B     		cmp	r3, #0
 2039 0ca4 07D0     		beq	.L103
 2040              		.loc 1 504 0 is_stmt 0 discriminator 1
 2041 0ca6 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2042 0ca8 012B     		cmp	r3, #1
 2043 0caa 04D0     		beq	.L103
 2044              		.loc 1 504 0 discriminator 2
 2045 0cac 1648     		ldr	r0, .L108
 2046 0cae 4FF4FC71 		mov	r1, #504
 2047 0cb2 FFF7FEFF 		bl	assert_failed
 2048              	.L103:
 505:../SPL/src/stm32f10x_fsmc.c ****   
 506:../SPL/src/stm32f10x_fsmc.c ****   if (NewState != DISABLE)
 2049              		.loc 1 506 0 is_stmt 1
 2050 0cb6 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2051 0cb8 002B     		cmp	r3, #0
 2052 0cba 10D0     		beq	.L104
 507:../SPL/src/stm32f10x_fsmc.c ****   {
 508:../SPL/src/stm32f10x_fsmc.c ****     /* Enable the selected NAND Bank by setting the PBKEN bit in the PCRx register */
 509:../SPL/src/stm32f10x_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 2053              		.loc 1 509 0
 2054 0cbc 7B68     		ldr	r3, [r7, #4]
 2055 0cbe 102B     		cmp	r3, #16
 2056 0cc0 06D1     		bne	.L105
 510:../SPL/src/stm32f10x_fsmc.c ****     {
 511:../SPL/src/stm32f10x_fsmc.c ****       FSMC_Bank2->PCR2 |= PCR_PBKEN_Set;
 2057              		.loc 1 511 0
 2058 0cc2 124B     		ldr	r3, .L108+4
 2059 0cc4 114A     		ldr	r2, .L108+4
 2060 0cc6 1268     		ldr	r2, [r2, #0]
 2061 0cc8 42F00402 		orr	r2, r2, #4
 2062 0ccc 1A60     		str	r2, [r3, #0]
 2063 0cce 16E0     		b	.L101
 2064              	.L105:
 512:../SPL/src/stm32f10x_fsmc.c ****     }
 513:../SPL/src/stm32f10x_fsmc.c ****     else
 514:../SPL/src/stm32f10x_fsmc.c ****     {
 515:../SPL/src/stm32f10x_fsmc.c ****       FSMC_Bank3->PCR3 |= PCR_PBKEN_Set;
 2065              		.loc 1 515 0
 2066 0cd0 0F4B     		ldr	r3, .L108+8
 2067 0cd2 0F4A     		ldr	r2, .L108+8
 2068 0cd4 1268     		ldr	r2, [r2, #0]
 2069 0cd6 42F00402 		orr	r2, r2, #4
 2070 0cda 1A60     		str	r2, [r3, #0]
 2071 0cdc 0FE0     		b	.L101
 2072              	.L104:
 516:../SPL/src/stm32f10x_fsmc.c ****     }
 517:../SPL/src/stm32f10x_fsmc.c ****   }
 518:../SPL/src/stm32f10x_fsmc.c ****   else
 519:../SPL/src/stm32f10x_fsmc.c ****   {
 520:../SPL/src/stm32f10x_fsmc.c ****     /* Disable the selected NAND Bank by clearing the PBKEN bit in the PCRx register */
 521:../SPL/src/stm32f10x_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 2073              		.loc 1 521 0
 2074 0cde 7B68     		ldr	r3, [r7, #4]
 2075 0ce0 102B     		cmp	r3, #16
 2076 0ce2 06D1     		bne	.L107
 522:../SPL/src/stm32f10x_fsmc.c ****     {
 523:../SPL/src/stm32f10x_fsmc.c ****       FSMC_Bank2->PCR2 &= PCR_PBKEN_Reset;
 2077              		.loc 1 523 0
 2078 0ce4 094A     		ldr	r2, .L108+4
 2079 0ce6 094B     		ldr	r3, .L108+4
 2080 0ce8 1968     		ldr	r1, [r3, #0]
 2081 0cea 0A4B     		ldr	r3, .L108+12
 2082 0cec 0B40     		ands	r3, r3, r1
 2083 0cee 1360     		str	r3, [r2, #0]
 2084 0cf0 05E0     		b	.L101
 2085              	.L107:
 524:../SPL/src/stm32f10x_fsmc.c ****     }
 525:../SPL/src/stm32f10x_fsmc.c ****     else
 526:../SPL/src/stm32f10x_fsmc.c ****     {
 527:../SPL/src/stm32f10x_fsmc.c ****       FSMC_Bank3->PCR3 &= PCR_PBKEN_Reset;
 2086              		.loc 1 527 0
 2087 0cf2 074A     		ldr	r2, .L108+8
 2088 0cf4 064B     		ldr	r3, .L108+8
 2089 0cf6 1968     		ldr	r1, [r3, #0]
 2090 0cf8 064B     		ldr	r3, .L108+12
 2091 0cfa 0B40     		ands	r3, r3, r1
 2092 0cfc 1360     		str	r3, [r2, #0]
 2093              	.L101:
 528:../SPL/src/stm32f10x_fsmc.c ****     }
 529:../SPL/src/stm32f10x_fsmc.c ****   }
 530:../SPL/src/stm32f10x_fsmc.c **** }
 2094              		.loc 1 530 0
 2095 0cfe 07F10807 		add	r7, r7, #8
 2096 0d02 BD46     		mov	sp, r7
 2097 0d04 80BD     		pop	{r7, pc}
 2098              	.L109:
 2099 0d06 00BF     		.align	2
 2100              	.L108:
 2101 0d08 00000000 		.word	.LC0
 2102 0d0c 600000A0 		.word	-1610612640
 2103 0d10 800000A0 		.word	-1610612608
 2104 0d14 FBFF0F00 		.word	1048571
 2105              		.cfi_endproc
 2106              	.LFE39:
 2108              		.align	2
 2109              		.global	FSMC_PCCARDCmd
 2110              		.thumb
 2111              		.thumb_func
 2113              	FSMC_PCCARDCmd:
 2114              	.LFB40:
 531:../SPL/src/stm32f10x_fsmc.c **** 
 532:../SPL/src/stm32f10x_fsmc.c **** /**
 533:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Enables or disables the PCCARD Memory Bank.
 534:../SPL/src/stm32f10x_fsmc.c ****   * @param  NewState: new state of the PCCARD Memory Bank.  
 535:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be: ENABLE or DISABLE.
 536:../SPL/src/stm32f10x_fsmc.c ****   * @retval None
 537:../SPL/src/stm32f10x_fsmc.c ****   */
 538:../SPL/src/stm32f10x_fsmc.c **** void FSMC_PCCARDCmd(FunctionalState NewState)
 539:../SPL/src/stm32f10x_fsmc.c **** {
 2115              		.loc 1 539 0
 2116              		.cfi_startproc
 2117              		@ args = 0, pretend = 0, frame = 8
 2118              		@ frame_needed = 1, uses_anonymous_args = 0
 2119 0d18 80B5     		push	{r7, lr}
 2120              	.LCFI32:
 2121              		.cfi_def_cfa_offset 8
 2122              		.cfi_offset 7, -8
 2123              		.cfi_offset 14, -4
 2124 0d1a 82B0     		sub	sp, sp, #8
 2125              	.LCFI33:
 2126              		.cfi_def_cfa_offset 16
 2127 0d1c 00AF     		add	r7, sp, #0
 2128              	.LCFI34:
 2129              		.cfi_def_cfa_register 7
 2130 0d1e 0346     		mov	r3, r0
 2131 0d20 FB71     		strb	r3, [r7, #7]
 540:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2132              		.loc 1 540 0
 2133 0d22 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2134 0d24 002B     		cmp	r3, #0
 2135 0d26 07D0     		beq	.L111
 2136              		.loc 1 540 0 is_stmt 0 discriminator 1
 2137 0d28 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2138 0d2a 012B     		cmp	r3, #1
 2139 0d2c 04D0     		beq	.L111
 2140              		.loc 1 540 0 discriminator 2
 2141 0d2e 0C48     		ldr	r0, .L114
 2142 0d30 4FF40771 		mov	r1, #540
 2143 0d34 FFF7FEFF 		bl	assert_failed
 2144              	.L111:
 541:../SPL/src/stm32f10x_fsmc.c ****   
 542:../SPL/src/stm32f10x_fsmc.c ****   if (NewState != DISABLE)
 2145              		.loc 1 542 0 is_stmt 1
 2146 0d38 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2147 0d3a 002B     		cmp	r3, #0
 2148 0d3c 06D0     		beq	.L112
 543:../SPL/src/stm32f10x_fsmc.c ****   {
 544:../SPL/src/stm32f10x_fsmc.c ****     /* Enable the PCCARD Bank by setting the PBKEN bit in the PCR4 register */
 545:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank4->PCR4 |= PCR_PBKEN_Set;
 2149              		.loc 1 545 0
 2150 0d3e 094B     		ldr	r3, .L114+4
 2151 0d40 084A     		ldr	r2, .L114+4
 2152 0d42 1268     		ldr	r2, [r2, #0]
 2153 0d44 42F00402 		orr	r2, r2, #4
 2154 0d48 1A60     		str	r2, [r3, #0]
 2155 0d4a 05E0     		b	.L110
 2156              	.L112:
 546:../SPL/src/stm32f10x_fsmc.c ****   }
 547:../SPL/src/stm32f10x_fsmc.c ****   else
 548:../SPL/src/stm32f10x_fsmc.c ****   {
 549:../SPL/src/stm32f10x_fsmc.c ****     /* Disable the PCCARD Bank by clearing the PBKEN bit in the PCR4 register */
 550:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank4->PCR4 &= PCR_PBKEN_Reset;
 2157              		.loc 1 550 0
 2158 0d4c 054A     		ldr	r2, .L114+4
 2159 0d4e 054B     		ldr	r3, .L114+4
 2160 0d50 1968     		ldr	r1, [r3, #0]
 2161 0d52 054B     		ldr	r3, .L114+8
 2162 0d54 0B40     		ands	r3, r3, r1
 2163 0d56 1360     		str	r3, [r2, #0]
 2164              	.L110:
 551:../SPL/src/stm32f10x_fsmc.c ****   }
 552:../SPL/src/stm32f10x_fsmc.c **** }
 2165              		.loc 1 552 0
 2166 0d58 07F10807 		add	r7, r7, #8
 2167 0d5c BD46     		mov	sp, r7
 2168 0d5e 80BD     		pop	{r7, pc}
 2169              	.L115:
 2170              		.align	2
 2171              	.L114:
 2172 0d60 00000000 		.word	.LC0
 2173 0d64 A00000A0 		.word	-1610612576
 2174 0d68 FBFF0F00 		.word	1048571
 2175              		.cfi_endproc
 2176              	.LFE40:
 2178              		.align	2
 2179              		.global	FSMC_NANDECCCmd
 2180              		.thumb
 2181              		.thumb_func
 2183              	FSMC_NANDECCCmd:
 2184              	.LFB41:
 553:../SPL/src/stm32f10x_fsmc.c **** 
 554:../SPL/src/stm32f10x_fsmc.c **** /**
 555:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Enables or disables the FSMC NAND ECC feature.
 556:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 557:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be one of the following values:
 558:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 559:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 560:../SPL/src/stm32f10x_fsmc.c ****   * @param  NewState: new state of the FSMC NAND ECC feature.  
 561:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be: ENABLE or DISABLE.
 562:../SPL/src/stm32f10x_fsmc.c ****   * @retval None
 563:../SPL/src/stm32f10x_fsmc.c ****   */
 564:../SPL/src/stm32f10x_fsmc.c **** void FSMC_NANDECCCmd(uint32_t FSMC_Bank, FunctionalState NewState)
 565:../SPL/src/stm32f10x_fsmc.c **** {
 2185              		.loc 1 565 0
 2186              		.cfi_startproc
 2187              		@ args = 0, pretend = 0, frame = 8
 2188              		@ frame_needed = 1, uses_anonymous_args = 0
 2189 0d6c 80B5     		push	{r7, lr}
 2190              	.LCFI35:
 2191              		.cfi_def_cfa_offset 8
 2192              		.cfi_offset 7, -8
 2193              		.cfi_offset 14, -4
 2194 0d6e 82B0     		sub	sp, sp, #8
 2195              	.LCFI36:
 2196              		.cfi_def_cfa_offset 16
 2197 0d70 00AF     		add	r7, sp, #0
 2198              	.LCFI37:
 2199              		.cfi_def_cfa_register 7
 2200 0d72 7860     		str	r0, [r7, #4]
 2201 0d74 0B46     		mov	r3, r1
 2202 0d76 FB70     		strb	r3, [r7, #3]
 566:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_NAND_BANK(FSMC_Bank));
 2203              		.loc 1 566 0
 2204 0d78 7B68     		ldr	r3, [r7, #4]
 2205 0d7a 102B     		cmp	r3, #16
 2206 0d7c 08D0     		beq	.L117
 2207              		.loc 1 566 0 is_stmt 0 discriminator 1
 2208 0d7e 7B68     		ldr	r3, [r7, #4]
 2209 0d80 B3F5807F 		cmp	r3, #256
 2210 0d84 04D0     		beq	.L117
 2211              		.loc 1 566 0 discriminator 2
 2212 0d86 1C48     		ldr	r0, .L123
 2213 0d88 40F23621 		movw	r1, #566
 2214 0d8c FFF7FEFF 		bl	assert_failed
 2215              	.L117:
 567:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2216              		.loc 1 567 0 is_stmt 1
 2217 0d90 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2218 0d92 002B     		cmp	r3, #0
 2219 0d94 07D0     		beq	.L118
 2220              		.loc 1 567 0 is_stmt 0 discriminator 1
 2221 0d96 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2222 0d98 012B     		cmp	r3, #1
 2223 0d9a 04D0     		beq	.L118
 2224              		.loc 1 567 0 discriminator 2
 2225 0d9c 1648     		ldr	r0, .L123
 2226 0d9e 40F23721 		movw	r1, #567
 2227 0da2 FFF7FEFF 		bl	assert_failed
 2228              	.L118:
 568:../SPL/src/stm32f10x_fsmc.c ****   
 569:../SPL/src/stm32f10x_fsmc.c ****   if (NewState != DISABLE)
 2229              		.loc 1 569 0 is_stmt 1
 2230 0da6 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2231 0da8 002B     		cmp	r3, #0
 2232 0daa 10D0     		beq	.L119
 570:../SPL/src/stm32f10x_fsmc.c ****   {
 571:../SPL/src/stm32f10x_fsmc.c ****     /* Enable the selected NAND Bank ECC function by setting the ECCEN bit in the PCRx register */
 572:../SPL/src/stm32f10x_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 2233              		.loc 1 572 0
 2234 0dac 7B68     		ldr	r3, [r7, #4]
 2235 0dae 102B     		cmp	r3, #16
 2236 0db0 06D1     		bne	.L120
 573:../SPL/src/stm32f10x_fsmc.c ****     {
 574:../SPL/src/stm32f10x_fsmc.c ****       FSMC_Bank2->PCR2 |= PCR_ECCEN_Set;
 2237              		.loc 1 574 0
 2238 0db2 124B     		ldr	r3, .L123+4
 2239 0db4 114A     		ldr	r2, .L123+4
 2240 0db6 1268     		ldr	r2, [r2, #0]
 2241 0db8 42F04002 		orr	r2, r2, #64
 2242 0dbc 1A60     		str	r2, [r3, #0]
 2243 0dbe 16E0     		b	.L116
 2244              	.L120:
 575:../SPL/src/stm32f10x_fsmc.c ****     }
 576:../SPL/src/stm32f10x_fsmc.c ****     else
 577:../SPL/src/stm32f10x_fsmc.c ****     {
 578:../SPL/src/stm32f10x_fsmc.c ****       FSMC_Bank3->PCR3 |= PCR_ECCEN_Set;
 2245              		.loc 1 578 0
 2246 0dc0 0F4B     		ldr	r3, .L123+8
 2247 0dc2 0F4A     		ldr	r2, .L123+8
 2248 0dc4 1268     		ldr	r2, [r2, #0]
 2249 0dc6 42F04002 		orr	r2, r2, #64
 2250 0dca 1A60     		str	r2, [r3, #0]
 2251 0dcc 0FE0     		b	.L116
 2252              	.L119:
 579:../SPL/src/stm32f10x_fsmc.c ****     }
 580:../SPL/src/stm32f10x_fsmc.c ****   }
 581:../SPL/src/stm32f10x_fsmc.c ****   else
 582:../SPL/src/stm32f10x_fsmc.c ****   {
 583:../SPL/src/stm32f10x_fsmc.c ****     /* Disable the selected NAND Bank ECC function by clearing the ECCEN bit in the PCRx register *
 584:../SPL/src/stm32f10x_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 2253              		.loc 1 584 0
 2254 0dce 7B68     		ldr	r3, [r7, #4]
 2255 0dd0 102B     		cmp	r3, #16
 2256 0dd2 06D1     		bne	.L122
 585:../SPL/src/stm32f10x_fsmc.c ****     {
 586:../SPL/src/stm32f10x_fsmc.c ****       FSMC_Bank2->PCR2 &= PCR_ECCEN_Reset;
 2257              		.loc 1 586 0
 2258 0dd4 094A     		ldr	r2, .L123+4
 2259 0dd6 094B     		ldr	r3, .L123+4
 2260 0dd8 1968     		ldr	r1, [r3, #0]
 2261 0dda 0A4B     		ldr	r3, .L123+12
 2262 0ddc 0B40     		ands	r3, r3, r1
 2263 0dde 1360     		str	r3, [r2, #0]
 2264 0de0 05E0     		b	.L116
 2265              	.L122:
 587:../SPL/src/stm32f10x_fsmc.c ****     }
 588:../SPL/src/stm32f10x_fsmc.c ****     else
 589:../SPL/src/stm32f10x_fsmc.c ****     {
 590:../SPL/src/stm32f10x_fsmc.c ****       FSMC_Bank3->PCR3 &= PCR_ECCEN_Reset;
 2266              		.loc 1 590 0
 2267 0de2 074A     		ldr	r2, .L123+8
 2268 0de4 064B     		ldr	r3, .L123+8
 2269 0de6 1968     		ldr	r1, [r3, #0]
 2270 0de8 064B     		ldr	r3, .L123+12
 2271 0dea 0B40     		ands	r3, r3, r1
 2272 0dec 1360     		str	r3, [r2, #0]
 2273              	.L116:
 591:../SPL/src/stm32f10x_fsmc.c ****     }
 592:../SPL/src/stm32f10x_fsmc.c ****   }
 593:../SPL/src/stm32f10x_fsmc.c **** }
 2274              		.loc 1 593 0
 2275 0dee 07F10807 		add	r7, r7, #8
 2276 0df2 BD46     		mov	sp, r7
 2277 0df4 80BD     		pop	{r7, pc}
 2278              	.L124:
 2279 0df6 00BF     		.align	2
 2280              	.L123:
 2281 0df8 00000000 		.word	.LC0
 2282 0dfc 600000A0 		.word	-1610612640
 2283 0e00 800000A0 		.word	-1610612608
 2284 0e04 BFFF0F00 		.word	1048511
 2285              		.cfi_endproc
 2286              	.LFE41:
 2288              		.align	2
 2289              		.global	FSMC_GetECC
 2290              		.thumb
 2291              		.thumb_func
 2293              	FSMC_GetECC:
 2294              	.LFB42:
 594:../SPL/src/stm32f10x_fsmc.c **** 
 595:../SPL/src/stm32f10x_fsmc.c **** /**
 596:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Returns the error correction code register value.
 597:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 598:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be one of the following values:
 599:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 600:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 601:../SPL/src/stm32f10x_fsmc.c ****   * @retval The Error Correction Code (ECC) value.
 602:../SPL/src/stm32f10x_fsmc.c ****   */
 603:../SPL/src/stm32f10x_fsmc.c **** uint32_t FSMC_GetECC(uint32_t FSMC_Bank)
 604:../SPL/src/stm32f10x_fsmc.c **** {
 2295              		.loc 1 604 0
 2296              		.cfi_startproc
 2297              		@ args = 0, pretend = 0, frame = 16
 2298              		@ frame_needed = 1, uses_anonymous_args = 0
 2299              		@ link register save eliminated.
 2300 0e08 80B4     		push	{r7}
 2301              	.LCFI38:
 2302              		.cfi_def_cfa_offset 4
 2303              		.cfi_offset 7, -4
 2304 0e0a 85B0     		sub	sp, sp, #20
 2305              	.LCFI39:
 2306              		.cfi_def_cfa_offset 24
 2307 0e0c 00AF     		add	r7, sp, #0
 2308              	.LCFI40:
 2309              		.cfi_def_cfa_register 7
 2310 0e0e 7860     		str	r0, [r7, #4]
 605:../SPL/src/stm32f10x_fsmc.c ****   uint32_t eccval = 0x00000000;
 2311              		.loc 1 605 0
 2312 0e10 4FF00003 		mov	r3, #0
 2313 0e14 FB60     		str	r3, [r7, #12]
 606:../SPL/src/stm32f10x_fsmc.c ****   
 607:../SPL/src/stm32f10x_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 2314              		.loc 1 607 0
 2315 0e16 7B68     		ldr	r3, [r7, #4]
 2316 0e18 102B     		cmp	r3, #16
 2317 0e1a 03D1     		bne	.L126
 608:../SPL/src/stm32f10x_fsmc.c ****   {
 609:../SPL/src/stm32f10x_fsmc.c ****     /* Get the ECCR2 register value */
 610:../SPL/src/stm32f10x_fsmc.c ****     eccval = FSMC_Bank2->ECCR2;
 2318              		.loc 1 610 0
 2319 0e1c 064B     		ldr	r3, .L129
 2320 0e1e 5B69     		ldr	r3, [r3, #20]
 2321 0e20 FB60     		str	r3, [r7, #12]
 2322 0e22 02E0     		b	.L127
 2323              	.L126:
 611:../SPL/src/stm32f10x_fsmc.c ****   }
 612:../SPL/src/stm32f10x_fsmc.c ****   else
 613:../SPL/src/stm32f10x_fsmc.c ****   {
 614:../SPL/src/stm32f10x_fsmc.c ****     /* Get the ECCR3 register value */
 615:../SPL/src/stm32f10x_fsmc.c ****     eccval = FSMC_Bank3->ECCR3;
 2324              		.loc 1 615 0
 2325 0e24 054B     		ldr	r3, .L129+4
 2326 0e26 5B69     		ldr	r3, [r3, #20]
 2327 0e28 FB60     		str	r3, [r7, #12]
 2328              	.L127:
 616:../SPL/src/stm32f10x_fsmc.c ****   }
 617:../SPL/src/stm32f10x_fsmc.c ****   /* Return the error correction code value */
 618:../SPL/src/stm32f10x_fsmc.c ****   return(eccval);
 2329              		.loc 1 618 0
 2330 0e2a FB68     		ldr	r3, [r7, #12]
 619:../SPL/src/stm32f10x_fsmc.c **** }
 2331              		.loc 1 619 0
 2332 0e2c 1846     		mov	r0, r3
 2333 0e2e 07F11407 		add	r7, r7, #20
 2334 0e32 BD46     		mov	sp, r7
 2335 0e34 80BC     		pop	{r7}
 2336 0e36 7047     		bx	lr
 2337              	.L130:
 2338              		.align	2
 2339              	.L129:
 2340 0e38 600000A0 		.word	-1610612640
 2341 0e3c 800000A0 		.word	-1610612608
 2342              		.cfi_endproc
 2343              	.LFE42:
 2345              		.align	2
 2346              		.global	FSMC_ITConfig
 2347              		.thumb
 2348              		.thumb_func
 2350              	FSMC_ITConfig:
 2351              	.LFB43:
 620:../SPL/src/stm32f10x_fsmc.c **** 
 621:../SPL/src/stm32f10x_fsmc.c **** /**
 622:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Enables or disables the specified FSMC interrupts.
 623:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 624:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be one of the following values:
 625:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 626:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 627:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 628:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_IT: specifies the FSMC interrupt sources to be enabled or disabled.
 629:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be any combination of the following values:
 630:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_IT_RisingEdge: Rising edge detection interrupt. 
 631:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_IT_Level: Level edge detection interrupt.
 632:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_IT_FallingEdge: Falling edge detection interrupt.
 633:../SPL/src/stm32f10x_fsmc.c ****   * @param  NewState: new state of the specified FSMC interrupts.
 634:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be: ENABLE or DISABLE.
 635:../SPL/src/stm32f10x_fsmc.c ****   * @retval None
 636:../SPL/src/stm32f10x_fsmc.c ****   */
 637:../SPL/src/stm32f10x_fsmc.c **** void FSMC_ITConfig(uint32_t FSMC_Bank, uint32_t FSMC_IT, FunctionalState NewState)
 638:../SPL/src/stm32f10x_fsmc.c **** {
 2352              		.loc 1 638 0
 2353              		.cfi_startproc
 2354              		@ args = 0, pretend = 0, frame = 16
 2355              		@ frame_needed = 1, uses_anonymous_args = 0
 2356 0e40 80B5     		push	{r7, lr}
 2357              	.LCFI41:
 2358              		.cfi_def_cfa_offset 8
 2359              		.cfi_offset 7, -8
 2360              		.cfi_offset 14, -4
 2361 0e42 84B0     		sub	sp, sp, #16
 2362              	.LCFI42:
 2363              		.cfi_def_cfa_offset 24
 2364 0e44 00AF     		add	r7, sp, #0
 2365              	.LCFI43:
 2366              		.cfi_def_cfa_register 7
 2367 0e46 F860     		str	r0, [r7, #12]
 2368 0e48 B960     		str	r1, [r7, #8]
 2369 0e4a 1346     		mov	r3, r2
 2370 0e4c FB71     		strb	r3, [r7, #7]
 639:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_IT_BANK(FSMC_Bank));
 2371              		.loc 1 639 0
 2372 0e4e FB68     		ldr	r3, [r7, #12]
 2373 0e50 102B     		cmp	r3, #16
 2374 0e52 0CD0     		beq	.L132
 2375              		.loc 1 639 0 is_stmt 0 discriminator 1
 2376 0e54 FB68     		ldr	r3, [r7, #12]
 2377 0e56 B3F5807F 		cmp	r3, #256
 2378 0e5a 08D0     		beq	.L132
 2379              		.loc 1 639 0 discriminator 2
 2380 0e5c FB68     		ldr	r3, [r7, #12]
 2381 0e5e B3F5805F 		cmp	r3, #4096
 2382 0e62 04D0     		beq	.L132
 2383              		.loc 1 639 0 discriminator 3
 2384 0e64 3048     		ldr	r0, .L142
 2385 0e66 40F27F21 		movw	r1, #639
 2386 0e6a FFF7FEFF 		bl	assert_failed
 2387              	.L132:
 640:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_IT(FSMC_IT));	
 2388              		.loc 1 640 0 is_stmt 1
 2389 0e6e BB68     		ldr	r3, [r7, #8]
 2390 0e70 23F03803 		bic	r3, r3, #56
 2391 0e74 002B     		cmp	r3, #0
 2392 0e76 02D1     		bne	.L133
 2393              		.loc 1 640 0 is_stmt 0 discriminator 2
 2394 0e78 BB68     		ldr	r3, [r7, #8]
 2395 0e7a 002B     		cmp	r3, #0
 2396 0e7c 04D1     		bne	.L134
 2397              	.L133:
 2398              		.loc 1 640 0 discriminator 1
 2399 0e7e 2A48     		ldr	r0, .L142
 2400 0e80 4FF42071 		mov	r1, #640
 2401 0e84 FFF7FEFF 		bl	assert_failed
 2402              	.L134:
 641:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2403              		.loc 1 641 0 is_stmt 1
 2404 0e88 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2405 0e8a 002B     		cmp	r3, #0
 2406 0e8c 07D0     		beq	.L135
 2407              		.loc 1 641 0 is_stmt 0 discriminator 1
 2408 0e8e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2409 0e90 012B     		cmp	r3, #1
 2410 0e92 04D0     		beq	.L135
 2411              		.loc 1 641 0 discriminator 2
 2412 0e94 2448     		ldr	r0, .L142
 2413 0e96 40F28121 		movw	r1, #641
 2414 0e9a FFF7FEFF 		bl	assert_failed
 2415              	.L135:
 642:../SPL/src/stm32f10x_fsmc.c ****   
 643:../SPL/src/stm32f10x_fsmc.c ****   if (NewState != DISABLE)
 2416              		.loc 1 643 0 is_stmt 1
 2417 0e9e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2418 0ea0 002B     		cmp	r3, #0
 2419 0ea2 1BD0     		beq	.L136
 644:../SPL/src/stm32f10x_fsmc.c ****   {
 645:../SPL/src/stm32f10x_fsmc.c ****     /* Enable the selected FSMC_Bank2 interrupts */
 646:../SPL/src/stm32f10x_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 2420              		.loc 1 646 0
 2421 0ea4 FB68     		ldr	r3, [r7, #12]
 2422 0ea6 102B     		cmp	r3, #16
 2423 0ea8 06D1     		bne	.L137
 647:../SPL/src/stm32f10x_fsmc.c ****     {
 648:../SPL/src/stm32f10x_fsmc.c ****       FSMC_Bank2->SR2 |= FSMC_IT;
 2424              		.loc 1 648 0
 2425 0eaa 204B     		ldr	r3, .L142+4
 2426 0eac 1F4A     		ldr	r2, .L142+4
 2427 0eae 5168     		ldr	r1, [r2, #4]
 2428 0eb0 BA68     		ldr	r2, [r7, #8]
 2429 0eb2 0A43     		orrs	r2, r2, r1
 2430 0eb4 5A60     		str	r2, [r3, #4]
 2431 0eb6 32E0     		b	.L131
 2432              	.L137:
 649:../SPL/src/stm32f10x_fsmc.c ****     }
 650:../SPL/src/stm32f10x_fsmc.c ****     /* Enable the selected FSMC_Bank3 interrupts */
 651:../SPL/src/stm32f10x_fsmc.c ****     else if (FSMC_Bank == FSMC_Bank3_NAND)
 2433              		.loc 1 651 0
 2434 0eb8 FB68     		ldr	r3, [r7, #12]
 2435 0eba B3F5807F 		cmp	r3, #256
 2436 0ebe 06D1     		bne	.L139
 652:../SPL/src/stm32f10x_fsmc.c ****     {
 653:../SPL/src/stm32f10x_fsmc.c ****       FSMC_Bank3->SR3 |= FSMC_IT;
 2437              		.loc 1 653 0
 2438 0ec0 1B4B     		ldr	r3, .L142+8
 2439 0ec2 1B4A     		ldr	r2, .L142+8
 2440 0ec4 5168     		ldr	r1, [r2, #4]
 2441 0ec6 BA68     		ldr	r2, [r7, #8]
 2442 0ec8 0A43     		orrs	r2, r2, r1
 2443 0eca 5A60     		str	r2, [r3, #4]
 2444 0ecc 27E0     		b	.L131
 2445              	.L139:
 654:../SPL/src/stm32f10x_fsmc.c ****     }
 655:../SPL/src/stm32f10x_fsmc.c ****     /* Enable the selected FSMC_Bank4 interrupts */
 656:../SPL/src/stm32f10x_fsmc.c ****     else
 657:../SPL/src/stm32f10x_fsmc.c ****     {
 658:../SPL/src/stm32f10x_fsmc.c ****       FSMC_Bank4->SR4 |= FSMC_IT;    
 2446              		.loc 1 658 0
 2447 0ece 194B     		ldr	r3, .L142+12
 2448 0ed0 184A     		ldr	r2, .L142+12
 2449 0ed2 5168     		ldr	r1, [r2, #4]
 2450 0ed4 BA68     		ldr	r2, [r7, #8]
 2451 0ed6 0A43     		orrs	r2, r2, r1
 2452 0ed8 5A60     		str	r2, [r3, #4]
 2453 0eda 20E0     		b	.L131
 2454              	.L136:
 659:../SPL/src/stm32f10x_fsmc.c ****     }
 660:../SPL/src/stm32f10x_fsmc.c ****   }
 661:../SPL/src/stm32f10x_fsmc.c ****   else
 662:../SPL/src/stm32f10x_fsmc.c ****   {
 663:../SPL/src/stm32f10x_fsmc.c ****     /* Disable the selected FSMC_Bank2 interrupts */
 664:../SPL/src/stm32f10x_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 2455              		.loc 1 664 0
 2456 0edc FB68     		ldr	r3, [r7, #12]
 2457 0ede 102B     		cmp	r3, #16
 2458 0ee0 08D1     		bne	.L140
 665:../SPL/src/stm32f10x_fsmc.c ****     {
 666:../SPL/src/stm32f10x_fsmc.c ****       
 667:../SPL/src/stm32f10x_fsmc.c ****       FSMC_Bank2->SR2 &= (uint32_t)~FSMC_IT;
 2459              		.loc 1 667 0
 2460 0ee2 124B     		ldr	r3, .L142+4
 2461 0ee4 114A     		ldr	r2, .L142+4
 2462 0ee6 5168     		ldr	r1, [r2, #4]
 2463 0ee8 BA68     		ldr	r2, [r7, #8]
 2464 0eea 6FEA0202 		mvn	r2, r2
 2465 0eee 0A40     		ands	r2, r2, r1
 2466 0ef0 5A60     		str	r2, [r3, #4]
 2467 0ef2 14E0     		b	.L131
 2468              	.L140:
 668:../SPL/src/stm32f10x_fsmc.c ****     }
 669:../SPL/src/stm32f10x_fsmc.c ****     /* Disable the selected FSMC_Bank3 interrupts */
 670:../SPL/src/stm32f10x_fsmc.c ****     else if (FSMC_Bank == FSMC_Bank3_NAND)
 2469              		.loc 1 670 0
 2470 0ef4 FB68     		ldr	r3, [r7, #12]
 2471 0ef6 B3F5807F 		cmp	r3, #256
 2472 0efa 08D1     		bne	.L141
 671:../SPL/src/stm32f10x_fsmc.c ****     {
 672:../SPL/src/stm32f10x_fsmc.c ****       FSMC_Bank3->SR3 &= (uint32_t)~FSMC_IT;
 2473              		.loc 1 672 0
 2474 0efc 0C4B     		ldr	r3, .L142+8
 2475 0efe 0C4A     		ldr	r2, .L142+8
 2476 0f00 5168     		ldr	r1, [r2, #4]
 2477 0f02 BA68     		ldr	r2, [r7, #8]
 2478 0f04 6FEA0202 		mvn	r2, r2
 2479 0f08 0A40     		ands	r2, r2, r1
 2480 0f0a 5A60     		str	r2, [r3, #4]
 2481 0f0c 07E0     		b	.L131
 2482              	.L141:
 673:../SPL/src/stm32f10x_fsmc.c ****     }
 674:../SPL/src/stm32f10x_fsmc.c ****     /* Disable the selected FSMC_Bank4 interrupts */
 675:../SPL/src/stm32f10x_fsmc.c ****     else
 676:../SPL/src/stm32f10x_fsmc.c ****     {
 677:../SPL/src/stm32f10x_fsmc.c ****       FSMC_Bank4->SR4 &= (uint32_t)~FSMC_IT;    
 2483              		.loc 1 677 0
 2484 0f0e 094B     		ldr	r3, .L142+12
 2485 0f10 084A     		ldr	r2, .L142+12
 2486 0f12 5168     		ldr	r1, [r2, #4]
 2487 0f14 BA68     		ldr	r2, [r7, #8]
 2488 0f16 6FEA0202 		mvn	r2, r2
 2489 0f1a 0A40     		ands	r2, r2, r1
 2490 0f1c 5A60     		str	r2, [r3, #4]
 2491              	.L131:
 678:../SPL/src/stm32f10x_fsmc.c ****     }
 679:../SPL/src/stm32f10x_fsmc.c ****   }
 680:../SPL/src/stm32f10x_fsmc.c **** }
 2492              		.loc 1 680 0
 2493 0f1e 07F11007 		add	r7, r7, #16
 2494 0f22 BD46     		mov	sp, r7
 2495 0f24 80BD     		pop	{r7, pc}
 2496              	.L143:
 2497 0f26 00BF     		.align	2
 2498              	.L142:
 2499 0f28 00000000 		.word	.LC0
 2500 0f2c 600000A0 		.word	-1610612640
 2501 0f30 800000A0 		.word	-1610612608
 2502 0f34 A00000A0 		.word	-1610612576
 2503              		.cfi_endproc
 2504              	.LFE43:
 2506              		.align	2
 2507              		.global	FSMC_GetFlagStatus
 2508              		.thumb
 2509              		.thumb_func
 2511              	FSMC_GetFlagStatus:
 2512              	.LFB44:
 681:../SPL/src/stm32f10x_fsmc.c **** 
 682:../SPL/src/stm32f10x_fsmc.c **** /**
 683:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Checks whether the specified FSMC flag is set or not.
 684:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 685:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be one of the following values:
 686:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 687:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 688:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 689:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_FLAG: specifies the flag to check.
 690:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be one of the following values:
 691:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_FLAG_RisingEdge: Rising egde detection Flag.
 692:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_FLAG_Level: Level detection Flag.
 693:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_FLAG_FallingEdge: Falling egde detection Flag.
 694:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_FLAG_FEMPT: Fifo empty Flag. 
 695:../SPL/src/stm32f10x_fsmc.c ****   * @retval The new state of FSMC_FLAG (SET or RESET).
 696:../SPL/src/stm32f10x_fsmc.c ****   */
 697:../SPL/src/stm32f10x_fsmc.c **** FlagStatus FSMC_GetFlagStatus(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)
 698:../SPL/src/stm32f10x_fsmc.c **** {
 2513              		.loc 1 698 0
 2514              		.cfi_startproc
 2515              		@ args = 0, pretend = 0, frame = 16
 2516              		@ frame_needed = 1, uses_anonymous_args = 0
 2517 0f38 80B5     		push	{r7, lr}
 2518              	.LCFI44:
 2519              		.cfi_def_cfa_offset 8
 2520              		.cfi_offset 7, -8
 2521              		.cfi_offset 14, -4
 2522 0f3a 84B0     		sub	sp, sp, #16
 2523              	.LCFI45:
 2524              		.cfi_def_cfa_offset 24
 2525 0f3c 00AF     		add	r7, sp, #0
 2526              	.LCFI46:
 2527              		.cfi_def_cfa_register 7
 2528 0f3e 7860     		str	r0, [r7, #4]
 2529 0f40 3960     		str	r1, [r7, #0]
 699:../SPL/src/stm32f10x_fsmc.c ****   FlagStatus bitstatus = RESET;
 2530              		.loc 1 699 0
 2531 0f42 4FF00003 		mov	r3, #0
 2532 0f46 FB73     		strb	r3, [r7, #15]
 700:../SPL/src/stm32f10x_fsmc.c ****   uint32_t tmpsr = 0x00000000;
 2533              		.loc 1 700 0
 2534 0f48 4FF00003 		mov	r3, #0
 2535 0f4c BB60     		str	r3, [r7, #8]
 701:../SPL/src/stm32f10x_fsmc.c ****   
 702:../SPL/src/stm32f10x_fsmc.c ****   /* Check the parameters */
 703:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_GETFLAG_BANK(FSMC_Bank));
 2536              		.loc 1 703 0
 2537 0f4e 7B68     		ldr	r3, [r7, #4]
 2538 0f50 102B     		cmp	r3, #16
 2539 0f52 0CD0     		beq	.L145
 2540              		.loc 1 703 0 is_stmt 0 discriminator 1
 2541 0f54 7B68     		ldr	r3, [r7, #4]
 2542 0f56 B3F5807F 		cmp	r3, #256
 2543 0f5a 08D0     		beq	.L145
 2544              		.loc 1 703 0 discriminator 2
 2545 0f5c 7B68     		ldr	r3, [r7, #4]
 2546 0f5e B3F5805F 		cmp	r3, #4096
 2547 0f62 04D0     		beq	.L145
 2548              		.loc 1 703 0 discriminator 3
 2549 0f64 1C48     		ldr	r0, .L153
 2550 0f66 40F2BF21 		movw	r1, #703
 2551 0f6a FFF7FEFF 		bl	assert_failed
 2552              	.L145:
 704:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_GET_FLAG(FSMC_FLAG));
 2553              		.loc 1 704 0 is_stmt 1
 2554 0f6e 3B68     		ldr	r3, [r7, #0]
 2555 0f70 012B     		cmp	r3, #1
 2556 0f72 0DD0     		beq	.L146
 2557              		.loc 1 704 0 is_stmt 0 discriminator 1
 2558 0f74 3B68     		ldr	r3, [r7, #0]
 2559 0f76 022B     		cmp	r3, #2
 2560 0f78 0AD0     		beq	.L146
 2561              		.loc 1 704 0 discriminator 2
 2562 0f7a 3B68     		ldr	r3, [r7, #0]
 2563 0f7c 042B     		cmp	r3, #4
 2564 0f7e 07D0     		beq	.L146
 2565              		.loc 1 704 0 discriminator 3
 2566 0f80 3B68     		ldr	r3, [r7, #0]
 2567 0f82 402B     		cmp	r3, #64
 2568 0f84 04D0     		beq	.L146
 2569              		.loc 1 704 0 discriminator 4
 2570 0f86 1448     		ldr	r0, .L153
 2571 0f88 4FF43071 		mov	r1, #704
 2572 0f8c FFF7FEFF 		bl	assert_failed
 2573              	.L146:
 705:../SPL/src/stm32f10x_fsmc.c ****   
 706:../SPL/src/stm32f10x_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 2574              		.loc 1 706 0 is_stmt 1
 2575 0f90 7B68     		ldr	r3, [r7, #4]
 2576 0f92 102B     		cmp	r3, #16
 2577 0f94 03D1     		bne	.L147
 707:../SPL/src/stm32f10x_fsmc.c ****   {
 708:../SPL/src/stm32f10x_fsmc.c ****     tmpsr = FSMC_Bank2->SR2;
 2578              		.loc 1 708 0
 2579 0f96 114B     		ldr	r3, .L153+4
 2580 0f98 5B68     		ldr	r3, [r3, #4]
 2581 0f9a BB60     		str	r3, [r7, #8]
 2582 0f9c 0AE0     		b	.L148
 2583              	.L147:
 709:../SPL/src/stm32f10x_fsmc.c ****   }  
 710:../SPL/src/stm32f10x_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 2584              		.loc 1 710 0
 2585 0f9e 7B68     		ldr	r3, [r7, #4]
 2586 0fa0 B3F5807F 		cmp	r3, #256
 2587 0fa4 03D1     		bne	.L149
 711:../SPL/src/stm32f10x_fsmc.c ****   {
 712:../SPL/src/stm32f10x_fsmc.c ****     tmpsr = FSMC_Bank3->SR3;
 2588              		.loc 1 712 0
 2589 0fa6 0E4B     		ldr	r3, .L153+8
 2590 0fa8 5B68     		ldr	r3, [r3, #4]
 2591 0faa BB60     		str	r3, [r7, #8]
 2592 0fac 02E0     		b	.L148
 2593              	.L149:
 713:../SPL/src/stm32f10x_fsmc.c ****   }
 714:../SPL/src/stm32f10x_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 715:../SPL/src/stm32f10x_fsmc.c ****   else
 716:../SPL/src/stm32f10x_fsmc.c ****   {
 717:../SPL/src/stm32f10x_fsmc.c ****     tmpsr = FSMC_Bank4->SR4;
 2594              		.loc 1 717 0
 2595 0fae 0D4B     		ldr	r3, .L153+12
 2596 0fb0 5B68     		ldr	r3, [r3, #4]
 2597 0fb2 BB60     		str	r3, [r7, #8]
 2598              	.L148:
 718:../SPL/src/stm32f10x_fsmc.c ****   } 
 719:../SPL/src/stm32f10x_fsmc.c ****   
 720:../SPL/src/stm32f10x_fsmc.c ****   /* Get the flag status */
 721:../SPL/src/stm32f10x_fsmc.c ****   if ((tmpsr & FSMC_FLAG) != (uint16_t)RESET )
 2599              		.loc 1 721 0
 2600 0fb4 BA68     		ldr	r2, [r7, #8]
 2601 0fb6 3B68     		ldr	r3, [r7, #0]
 2602 0fb8 1340     		ands	r3, r3, r2
 2603 0fba 002B     		cmp	r3, #0
 2604 0fbc 03D0     		beq	.L150
 722:../SPL/src/stm32f10x_fsmc.c ****   {
 723:../SPL/src/stm32f10x_fsmc.c ****     bitstatus = SET;
 2605              		.loc 1 723 0
 2606 0fbe 4FF00103 		mov	r3, #1
 2607 0fc2 FB73     		strb	r3, [r7, #15]
 2608 0fc4 02E0     		b	.L151
 2609              	.L150:
 724:../SPL/src/stm32f10x_fsmc.c ****   }
 725:../SPL/src/stm32f10x_fsmc.c ****   else
 726:../SPL/src/stm32f10x_fsmc.c ****   {
 727:../SPL/src/stm32f10x_fsmc.c ****     bitstatus = RESET;
 2610              		.loc 1 727 0
 2611 0fc6 4FF00003 		mov	r3, #0
 2612 0fca FB73     		strb	r3, [r7, #15]
 2613              	.L151:
 728:../SPL/src/stm32f10x_fsmc.c ****   }
 729:../SPL/src/stm32f10x_fsmc.c ****   /* Return the flag status */
 730:../SPL/src/stm32f10x_fsmc.c ****   return bitstatus;
 2614              		.loc 1 730 0
 2615 0fcc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 731:../SPL/src/stm32f10x_fsmc.c **** }
 2616              		.loc 1 731 0
 2617 0fce 1846     		mov	r0, r3
 2618 0fd0 07F11007 		add	r7, r7, #16
 2619 0fd4 BD46     		mov	sp, r7
 2620 0fd6 80BD     		pop	{r7, pc}
 2621              	.L154:
 2622              		.align	2
 2623              	.L153:
 2624 0fd8 00000000 		.word	.LC0
 2625 0fdc 600000A0 		.word	-1610612640
 2626 0fe0 800000A0 		.word	-1610612608
 2627 0fe4 A00000A0 		.word	-1610612576
 2628              		.cfi_endproc
 2629              	.LFE44:
 2631              		.align	2
 2632              		.global	FSMC_ClearFlag
 2633              		.thumb
 2634              		.thumb_func
 2636              	FSMC_ClearFlag:
 2637              	.LFB45:
 732:../SPL/src/stm32f10x_fsmc.c **** 
 733:../SPL/src/stm32f10x_fsmc.c **** /**
 734:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Clears the FSMC's pending flags.
 735:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 736:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be one of the following values:
 737:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 738:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 739:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 740:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_FLAG: specifies the flag to clear.
 741:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be any combination of the following values:
 742:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_FLAG_RisingEdge: Rising egde detection Flag.
 743:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_FLAG_Level: Level detection Flag.
 744:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_FLAG_FallingEdge: Falling egde detection Flag.
 745:../SPL/src/stm32f10x_fsmc.c ****   * @retval None
 746:../SPL/src/stm32f10x_fsmc.c ****   */
 747:../SPL/src/stm32f10x_fsmc.c **** void FSMC_ClearFlag(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)
 748:../SPL/src/stm32f10x_fsmc.c **** {
 2638              		.loc 1 748 0
 2639              		.cfi_startproc
 2640              		@ args = 0, pretend = 0, frame = 8
 2641              		@ frame_needed = 1, uses_anonymous_args = 0
 2642 0fe8 80B5     		push	{r7, lr}
 2643              	.LCFI47:
 2644              		.cfi_def_cfa_offset 8
 2645              		.cfi_offset 7, -8
 2646              		.cfi_offset 14, -4
 2647 0fea 82B0     		sub	sp, sp, #8
 2648              	.LCFI48:
 2649              		.cfi_def_cfa_offset 16
 2650 0fec 00AF     		add	r7, sp, #0
 2651              	.LCFI49:
 2652              		.cfi_def_cfa_register 7
 2653 0fee 7860     		str	r0, [r7, #4]
 2654 0ff0 3960     		str	r1, [r7, #0]
 749:../SPL/src/stm32f10x_fsmc.c ****  /* Check the parameters */
 750:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_GETFLAG_BANK(FSMC_Bank));
 2655              		.loc 1 750 0
 2656 0ff2 7B68     		ldr	r3, [r7, #4]
 2657 0ff4 102B     		cmp	r3, #16
 2658 0ff6 0CD0     		beq	.L156
 2659              		.loc 1 750 0 is_stmt 0 discriminator 1
 2660 0ff8 7B68     		ldr	r3, [r7, #4]
 2661 0ffa B3F5807F 		cmp	r3, #256
 2662 0ffe 08D0     		beq	.L156
 2663              		.loc 1 750 0 discriminator 2
 2664 1000 7B68     		ldr	r3, [r7, #4]
 2665 1002 B3F5805F 		cmp	r3, #4096
 2666 1006 04D0     		beq	.L156
 2667              		.loc 1 750 0 discriminator 3
 2668 1008 1B48     		ldr	r0, .L162
 2669 100a 40F2EE21 		movw	r1, #750
 2670 100e FFF7FEFF 		bl	assert_failed
 2671              	.L156:
 751:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_CLEAR_FLAG(FSMC_FLAG)) ;
 2672              		.loc 1 751 0 is_stmt 1
 2673 1012 3B68     		ldr	r3, [r7, #0]
 2674 1014 23F00703 		bic	r3, r3, #7
 2675 1018 002B     		cmp	r3, #0
 2676 101a 02D1     		bne	.L157
 2677              		.loc 1 751 0 is_stmt 0 discriminator 2
 2678 101c 3B68     		ldr	r3, [r7, #0]
 2679 101e 002B     		cmp	r3, #0
 2680 1020 04D1     		bne	.L158
 2681              	.L157:
 2682              		.loc 1 751 0 discriminator 1
 2683 1022 1548     		ldr	r0, .L162
 2684 1024 40F2EF21 		movw	r1, #751
 2685 1028 FFF7FEFF 		bl	assert_failed
 2686              	.L158:
 752:../SPL/src/stm32f10x_fsmc.c ****     
 753:../SPL/src/stm32f10x_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 2687              		.loc 1 753 0 is_stmt 1
 2688 102c 7B68     		ldr	r3, [r7, #4]
 2689 102e 102B     		cmp	r3, #16
 2690 1030 08D1     		bne	.L159
 754:../SPL/src/stm32f10x_fsmc.c ****   {
 755:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank2->SR2 &= ~FSMC_FLAG; 
 2691              		.loc 1 755 0
 2692 1032 124B     		ldr	r3, .L162+4
 2693 1034 114A     		ldr	r2, .L162+4
 2694 1036 5168     		ldr	r1, [r2, #4]
 2695 1038 3A68     		ldr	r2, [r7, #0]
 2696 103a 6FEA0202 		mvn	r2, r2
 2697 103e 0A40     		ands	r2, r2, r1
 2698 1040 5A60     		str	r2, [r3, #4]
 2699 1042 14E0     		b	.L155
 2700              	.L159:
 756:../SPL/src/stm32f10x_fsmc.c ****   }  
 757:../SPL/src/stm32f10x_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 2701              		.loc 1 757 0
 2702 1044 7B68     		ldr	r3, [r7, #4]
 2703 1046 B3F5807F 		cmp	r3, #256
 2704 104a 08D1     		bne	.L161
 758:../SPL/src/stm32f10x_fsmc.c ****   {
 759:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank3->SR3 &= ~FSMC_FLAG;
 2705              		.loc 1 759 0
 2706 104c 0C4B     		ldr	r3, .L162+8
 2707 104e 0C4A     		ldr	r2, .L162+8
 2708 1050 5168     		ldr	r1, [r2, #4]
 2709 1052 3A68     		ldr	r2, [r7, #0]
 2710 1054 6FEA0202 		mvn	r2, r2
 2711 1058 0A40     		ands	r2, r2, r1
 2712 105a 5A60     		str	r2, [r3, #4]
 2713 105c 07E0     		b	.L155
 2714              	.L161:
 760:../SPL/src/stm32f10x_fsmc.c ****   }
 761:../SPL/src/stm32f10x_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 762:../SPL/src/stm32f10x_fsmc.c ****   else
 763:../SPL/src/stm32f10x_fsmc.c ****   {
 764:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank4->SR4 &= ~FSMC_FLAG;
 2715              		.loc 1 764 0
 2716 105e 094B     		ldr	r3, .L162+12
 2717 1060 084A     		ldr	r2, .L162+12
 2718 1062 5168     		ldr	r1, [r2, #4]
 2719 1064 3A68     		ldr	r2, [r7, #0]
 2720 1066 6FEA0202 		mvn	r2, r2
 2721 106a 0A40     		ands	r2, r2, r1
 2722 106c 5A60     		str	r2, [r3, #4]
 2723              	.L155:
 765:../SPL/src/stm32f10x_fsmc.c ****   }
 766:../SPL/src/stm32f10x_fsmc.c **** }
 2724              		.loc 1 766 0
 2725 106e 07F10807 		add	r7, r7, #8
 2726 1072 BD46     		mov	sp, r7
 2727 1074 80BD     		pop	{r7, pc}
 2728              	.L163:
 2729 1076 00BF     		.align	2
 2730              	.L162:
 2731 1078 00000000 		.word	.LC0
 2732 107c 600000A0 		.word	-1610612640
 2733 1080 800000A0 		.word	-1610612608
 2734 1084 A00000A0 		.word	-1610612576
 2735              		.cfi_endproc
 2736              	.LFE45:
 2738              		.align	2
 2739              		.global	FSMC_GetITStatus
 2740              		.thumb
 2741              		.thumb_func
 2743              	FSMC_GetITStatus:
 2744              	.LFB46:
 767:../SPL/src/stm32f10x_fsmc.c **** 
 768:../SPL/src/stm32f10x_fsmc.c **** /**
 769:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Checks whether the specified FSMC interrupt has occurred or not.
 770:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 771:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be one of the following values:
 772:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 773:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 774:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 775:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_IT: specifies the FSMC interrupt source to check.
 776:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be one of the following values:
 777:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_IT_RisingEdge: Rising edge detection interrupt. 
 778:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_IT_Level: Level edge detection interrupt.
 779:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_IT_FallingEdge: Falling edge detection interrupt. 
 780:../SPL/src/stm32f10x_fsmc.c ****   * @retval The new state of FSMC_IT (SET or RESET).
 781:../SPL/src/stm32f10x_fsmc.c ****   */
 782:../SPL/src/stm32f10x_fsmc.c **** ITStatus FSMC_GetITStatus(uint32_t FSMC_Bank, uint32_t FSMC_IT)
 783:../SPL/src/stm32f10x_fsmc.c **** {
 2745              		.loc 1 783 0
 2746              		.cfi_startproc
 2747              		@ args = 0, pretend = 0, frame = 24
 2748              		@ frame_needed = 1, uses_anonymous_args = 0
 2749 1088 80B5     		push	{r7, lr}
 2750              	.LCFI50:
 2751              		.cfi_def_cfa_offset 8
 2752              		.cfi_offset 7, -8
 2753              		.cfi_offset 14, -4
 2754 108a 86B0     		sub	sp, sp, #24
 2755              	.LCFI51:
 2756              		.cfi_def_cfa_offset 32
 2757 108c 00AF     		add	r7, sp, #0
 2758              	.LCFI52:
 2759              		.cfi_def_cfa_register 7
 2760 108e 7860     		str	r0, [r7, #4]
 2761 1090 3960     		str	r1, [r7, #0]
 784:../SPL/src/stm32f10x_fsmc.c ****   ITStatus bitstatus = RESET;
 2762              		.loc 1 784 0
 2763 1092 4FF00003 		mov	r3, #0
 2764 1096 FB75     		strb	r3, [r7, #23]
 785:../SPL/src/stm32f10x_fsmc.c ****   uint32_t tmpsr = 0x0, itstatus = 0x0, itenable = 0x0; 
 2765              		.loc 1 785 0
 2766 1098 4FF00003 		mov	r3, #0
 2767 109c 3B61     		str	r3, [r7, #16]
 2768 109e 4FF00003 		mov	r3, #0
 2769 10a2 FB60     		str	r3, [r7, #12]
 2770 10a4 4FF00003 		mov	r3, #0
 2771 10a8 BB60     		str	r3, [r7, #8]
 786:../SPL/src/stm32f10x_fsmc.c ****   
 787:../SPL/src/stm32f10x_fsmc.c ****   /* Check the parameters */
 788:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_IT_BANK(FSMC_Bank));
 2772              		.loc 1 788 0
 2773 10aa 7B68     		ldr	r3, [r7, #4]
 2774 10ac 102B     		cmp	r3, #16
 2775 10ae 0CD0     		beq	.L165
 2776              		.loc 1 788 0 is_stmt 0 discriminator 1
 2777 10b0 7B68     		ldr	r3, [r7, #4]
 2778 10b2 B3F5807F 		cmp	r3, #256
 2779 10b6 08D0     		beq	.L165
 2780              		.loc 1 788 0 discriminator 2
 2781 10b8 7B68     		ldr	r3, [r7, #4]
 2782 10ba B3F5805F 		cmp	r3, #4096
 2783 10be 04D0     		beq	.L165
 2784              		.loc 1 788 0 discriminator 3
 2785 10c0 2048     		ldr	r0, .L173
 2786 10c2 4FF44571 		mov	r1, #788
 2787 10c6 FFF7FEFF 		bl	assert_failed
 2788              	.L165:
 789:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_GET_IT(FSMC_IT));
 2789              		.loc 1 789 0 is_stmt 1
 2790 10ca 3B68     		ldr	r3, [r7, #0]
 2791 10cc 082B     		cmp	r3, #8
 2792 10ce 0AD0     		beq	.L166
 2793              		.loc 1 789 0 is_stmt 0 discriminator 1
 2794 10d0 3B68     		ldr	r3, [r7, #0]
 2795 10d2 102B     		cmp	r3, #16
 2796 10d4 07D0     		beq	.L166
 2797              		.loc 1 789 0 discriminator 2
 2798 10d6 3B68     		ldr	r3, [r7, #0]
 2799 10d8 202B     		cmp	r3, #32
 2800 10da 04D0     		beq	.L166
 2801              		.loc 1 789 0 discriminator 3
 2802 10dc 1948     		ldr	r0, .L173
 2803 10de 40F21531 		movw	r1, #789
 2804 10e2 FFF7FEFF 		bl	assert_failed
 2805              	.L166:
 790:../SPL/src/stm32f10x_fsmc.c ****   
 791:../SPL/src/stm32f10x_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 2806              		.loc 1 791 0 is_stmt 1
 2807 10e6 7B68     		ldr	r3, [r7, #4]
 2808 10e8 102B     		cmp	r3, #16
 2809 10ea 03D1     		bne	.L167
 792:../SPL/src/stm32f10x_fsmc.c ****   {
 793:../SPL/src/stm32f10x_fsmc.c ****     tmpsr = FSMC_Bank2->SR2;
 2810              		.loc 1 793 0
 2811 10ec 164B     		ldr	r3, .L173+4
 2812 10ee 5B68     		ldr	r3, [r3, #4]
 2813 10f0 3B61     		str	r3, [r7, #16]
 2814 10f2 0AE0     		b	.L168
 2815              	.L167:
 794:../SPL/src/stm32f10x_fsmc.c ****   }  
 795:../SPL/src/stm32f10x_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 2816              		.loc 1 795 0
 2817 10f4 7B68     		ldr	r3, [r7, #4]
 2818 10f6 B3F5807F 		cmp	r3, #256
 2819 10fa 03D1     		bne	.L169
 796:../SPL/src/stm32f10x_fsmc.c ****   {
 797:../SPL/src/stm32f10x_fsmc.c ****     tmpsr = FSMC_Bank3->SR3;
 2820              		.loc 1 797 0
 2821 10fc 134B     		ldr	r3, .L173+8
 2822 10fe 5B68     		ldr	r3, [r3, #4]
 2823 1100 3B61     		str	r3, [r7, #16]
 2824 1102 02E0     		b	.L168
 2825              	.L169:
 798:../SPL/src/stm32f10x_fsmc.c ****   }
 799:../SPL/src/stm32f10x_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 800:../SPL/src/stm32f10x_fsmc.c ****   else
 801:../SPL/src/stm32f10x_fsmc.c ****   {
 802:../SPL/src/stm32f10x_fsmc.c ****     tmpsr = FSMC_Bank4->SR4;
 2826              		.loc 1 802 0
 2827 1104 124B     		ldr	r3, .L173+12
 2828 1106 5B68     		ldr	r3, [r3, #4]
 2829 1108 3B61     		str	r3, [r7, #16]
 2830              	.L168:
 803:../SPL/src/stm32f10x_fsmc.c ****   } 
 804:../SPL/src/stm32f10x_fsmc.c ****   
 805:../SPL/src/stm32f10x_fsmc.c ****   itstatus = tmpsr & FSMC_IT;
 2831              		.loc 1 805 0
 2832 110a 3A69     		ldr	r2, [r7, #16]
 2833 110c 3B68     		ldr	r3, [r7, #0]
 2834 110e 1340     		ands	r3, r3, r2
 2835 1110 FB60     		str	r3, [r7, #12]
 806:../SPL/src/stm32f10x_fsmc.c ****   
 807:../SPL/src/stm32f10x_fsmc.c ****   itenable = tmpsr & (FSMC_IT >> 3);
 2836              		.loc 1 807 0
 2837 1112 3B68     		ldr	r3, [r7, #0]
 2838 1114 4FEAD302 		lsr	r2, r3, #3
 2839 1118 3B69     		ldr	r3, [r7, #16]
 2840 111a 1340     		ands	r3, r3, r2
 2841 111c BB60     		str	r3, [r7, #8]
 808:../SPL/src/stm32f10x_fsmc.c ****   if ((itstatus != (uint32_t)RESET)  && (itenable != (uint32_t)RESET))
 2842              		.loc 1 808 0
 2843 111e FB68     		ldr	r3, [r7, #12]
 2844 1120 002B     		cmp	r3, #0
 2845 1122 06D0     		beq	.L170
 2846              		.loc 1 808 0 is_stmt 0 discriminator 1
 2847 1124 BB68     		ldr	r3, [r7, #8]
 2848 1126 002B     		cmp	r3, #0
 2849 1128 03D0     		beq	.L170
 809:../SPL/src/stm32f10x_fsmc.c ****   {
 810:../SPL/src/stm32f10x_fsmc.c ****     bitstatus = SET;
 2850              		.loc 1 810 0 is_stmt 1
 2851 112a 4FF00103 		mov	r3, #1
 2852 112e FB75     		strb	r3, [r7, #23]
 2853 1130 02E0     		b	.L171
 2854              	.L170:
 811:../SPL/src/stm32f10x_fsmc.c ****   }
 812:../SPL/src/stm32f10x_fsmc.c ****   else
 813:../SPL/src/stm32f10x_fsmc.c ****   {
 814:../SPL/src/stm32f10x_fsmc.c ****     bitstatus = RESET;
 2855              		.loc 1 814 0
 2856 1132 4FF00003 		mov	r3, #0
 2857 1136 FB75     		strb	r3, [r7, #23]
 2858              	.L171:
 815:../SPL/src/stm32f10x_fsmc.c ****   }
 816:../SPL/src/stm32f10x_fsmc.c ****   return bitstatus; 
 2859              		.loc 1 816 0
 2860 1138 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 817:../SPL/src/stm32f10x_fsmc.c **** }
 2861              		.loc 1 817 0
 2862 113a 1846     		mov	r0, r3
 2863 113c 07F11807 		add	r7, r7, #24
 2864 1140 BD46     		mov	sp, r7
 2865 1142 80BD     		pop	{r7, pc}
 2866              	.L174:
 2867              		.align	2
 2868              	.L173:
 2869 1144 00000000 		.word	.LC0
 2870 1148 600000A0 		.word	-1610612640
 2871 114c 800000A0 		.word	-1610612608
 2872 1150 A00000A0 		.word	-1610612576
 2873              		.cfi_endproc
 2874              	.LFE46:
 2876              		.align	2
 2877              		.global	FSMC_ClearITPendingBit
 2878              		.thumb
 2879              		.thumb_func
 2881              	FSMC_ClearITPendingBit:
 2882              	.LFB47:
 818:../SPL/src/stm32f10x_fsmc.c **** 
 819:../SPL/src/stm32f10x_fsmc.c **** /**
 820:../SPL/src/stm32f10x_fsmc.c ****   * @brief  Clears the FSMC's interrupt pending bits.
 821:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 822:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be one of the following values:
 823:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 824:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 825:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 826:../SPL/src/stm32f10x_fsmc.c ****   * @param  FSMC_IT: specifies the interrupt pending bit to clear.
 827:../SPL/src/stm32f10x_fsmc.c ****   *   This parameter can be any combination of the following values:
 828:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_IT_RisingEdge: Rising edge detection interrupt. 
 829:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_IT_Level: Level edge detection interrupt.
 830:../SPL/src/stm32f10x_fsmc.c ****   *     @arg FSMC_IT_FallingEdge: Falling edge detection interrupt.
 831:../SPL/src/stm32f10x_fsmc.c ****   * @retval None
 832:../SPL/src/stm32f10x_fsmc.c ****   */
 833:../SPL/src/stm32f10x_fsmc.c **** void FSMC_ClearITPendingBit(uint32_t FSMC_Bank, uint32_t FSMC_IT)
 834:../SPL/src/stm32f10x_fsmc.c **** {
 2883              		.loc 1 834 0
 2884              		.cfi_startproc
 2885              		@ args = 0, pretend = 0, frame = 8
 2886              		@ frame_needed = 1, uses_anonymous_args = 0
 2887 1154 80B5     		push	{r7, lr}
 2888              	.LCFI53:
 2889              		.cfi_def_cfa_offset 8
 2890              		.cfi_offset 7, -8
 2891              		.cfi_offset 14, -4
 2892 1156 82B0     		sub	sp, sp, #8
 2893              	.LCFI54:
 2894              		.cfi_def_cfa_offset 16
 2895 1158 00AF     		add	r7, sp, #0
 2896              	.LCFI55:
 2897              		.cfi_def_cfa_register 7
 2898 115a 7860     		str	r0, [r7, #4]
 2899 115c 3960     		str	r1, [r7, #0]
 835:../SPL/src/stm32f10x_fsmc.c ****   /* Check the parameters */
 836:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_IT_BANK(FSMC_Bank));
 2900              		.loc 1 836 0
 2901 115e 7B68     		ldr	r3, [r7, #4]
 2902 1160 102B     		cmp	r3, #16
 2903 1162 0CD0     		beq	.L176
 2904              		.loc 1 836 0 is_stmt 0 discriminator 1
 2905 1164 7B68     		ldr	r3, [r7, #4]
 2906 1166 B3F5807F 		cmp	r3, #256
 2907 116a 08D0     		beq	.L176
 2908              		.loc 1 836 0 discriminator 2
 2909 116c 7B68     		ldr	r3, [r7, #4]
 2910 116e B3F5805F 		cmp	r3, #4096
 2911 1172 04D0     		beq	.L176
 2912              		.loc 1 836 0 discriminator 3
 2913 1174 1E48     		ldr	r0, .L182
 2914 1176 4FF45171 		mov	r1, #836
 2915 117a FFF7FEFF 		bl	assert_failed
 2916              	.L176:
 837:../SPL/src/stm32f10x_fsmc.c ****   assert_param(IS_FSMC_IT(FSMC_IT));
 2917              		.loc 1 837 0 is_stmt 1
 2918 117e 3B68     		ldr	r3, [r7, #0]
 2919 1180 23F03803 		bic	r3, r3, #56
 2920 1184 002B     		cmp	r3, #0
 2921 1186 02D1     		bne	.L177
 2922              		.loc 1 837 0 is_stmt 0 discriminator 2
 2923 1188 3B68     		ldr	r3, [r7, #0]
 2924 118a 002B     		cmp	r3, #0
 2925 118c 04D1     		bne	.L178
 2926              	.L177:
 2927              		.loc 1 837 0 discriminator 1
 2928 118e 1848     		ldr	r0, .L182
 2929 1190 40F24531 		movw	r1, #837
 2930 1194 FFF7FEFF 		bl	assert_failed
 2931              	.L178:
 838:../SPL/src/stm32f10x_fsmc.c ****     
 839:../SPL/src/stm32f10x_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 2932              		.loc 1 839 0 is_stmt 1
 2933 1198 7B68     		ldr	r3, [r7, #4]
 2934 119a 102B     		cmp	r3, #16
 2935 119c 0AD1     		bne	.L179
 840:../SPL/src/stm32f10x_fsmc.c ****   {
 841:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank2->SR2 &= ~(FSMC_IT >> 3); 
 2936              		.loc 1 841 0
 2937 119e 154B     		ldr	r3, .L182+4
 2938 11a0 144A     		ldr	r2, .L182+4
 2939 11a2 5168     		ldr	r1, [r2, #4]
 2940 11a4 3A68     		ldr	r2, [r7, #0]
 2941 11a6 4FEAD202 		lsr	r2, r2, #3
 2942 11aa 6FEA0202 		mvn	r2, r2
 2943 11ae 0A40     		ands	r2, r2, r1
 2944 11b0 5A60     		str	r2, [r3, #4]
 2945 11b2 18E0     		b	.L175
 2946              	.L179:
 842:../SPL/src/stm32f10x_fsmc.c ****   }  
 843:../SPL/src/stm32f10x_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 2947              		.loc 1 843 0
 2948 11b4 7B68     		ldr	r3, [r7, #4]
 2949 11b6 B3F5807F 		cmp	r3, #256
 2950 11ba 0AD1     		bne	.L181
 844:../SPL/src/stm32f10x_fsmc.c ****   {
 845:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank3->SR3 &= ~(FSMC_IT >> 3);
 2951              		.loc 1 845 0
 2952 11bc 0E4B     		ldr	r3, .L182+8
 2953 11be 0E4A     		ldr	r2, .L182+8
 2954 11c0 5168     		ldr	r1, [r2, #4]
 2955 11c2 3A68     		ldr	r2, [r7, #0]
 2956 11c4 4FEAD202 		lsr	r2, r2, #3
 2957 11c8 6FEA0202 		mvn	r2, r2
 2958 11cc 0A40     		ands	r2, r2, r1
 2959 11ce 5A60     		str	r2, [r3, #4]
 2960 11d0 09E0     		b	.L175
 2961              	.L181:
 846:../SPL/src/stm32f10x_fsmc.c ****   }
 847:../SPL/src/stm32f10x_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 848:../SPL/src/stm32f10x_fsmc.c ****   else
 849:../SPL/src/stm32f10x_fsmc.c ****   {
 850:../SPL/src/stm32f10x_fsmc.c ****     FSMC_Bank4->SR4 &= ~(FSMC_IT >> 3);
 2962              		.loc 1 850 0
 2963 11d2 0A4B     		ldr	r3, .L182+12
 2964 11d4 094A     		ldr	r2, .L182+12
 2965 11d6 5168     		ldr	r1, [r2, #4]
 2966 11d8 3A68     		ldr	r2, [r7, #0]
 2967 11da 4FEAD202 		lsr	r2, r2, #3
 2968 11de 6FEA0202 		mvn	r2, r2
 2969 11e2 0A40     		ands	r2, r2, r1
 2970 11e4 5A60     		str	r2, [r3, #4]
 2971              	.L175:
 851:../SPL/src/stm32f10x_fsmc.c ****   }
 852:../SPL/src/stm32f10x_fsmc.c **** }
 2972              		.loc 1 852 0
 2973 11e6 07F10807 		add	r7, r7, #8
 2974 11ea BD46     		mov	sp, r7
 2975 11ec 80BD     		pop	{r7, pc}
 2976              	.L183:
 2977 11ee 00BF     		.align	2
 2978              	.L182:
 2979 11f0 00000000 		.word	.LC0
 2980 11f4 600000A0 		.word	-1610612640
 2981 11f8 800000A0 		.word	-1610612608
 2982 11fc A00000A0 		.word	-1610612576
 2983              		.cfi_endproc
 2984              	.LFE47:
 2986              	.Letext0:
 2987              		.file 2 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 2988              		.file 3 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\CMSIS/stm32f10x.h"
 2989              		.file 4 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\SPL\\inc/stm32f10x_fsmc.h"
 2990              		.file 5 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\CMSIS/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_fsmc.c
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:19     .rodata:00000000 $d
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:23     .text:00000000 $t
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:28     .text:00000000 FSMC_NORSRAMDeInit
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:103    .text:00000074 $d
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:108    .text:0000007c $t
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:113    .text:0000007c FSMC_NANDDeInit
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:190    .text:000000ec $d
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:196    .text:000000f8 $t
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:201    .text:000000f8 FSMC_PCCARDDeInit
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:242    .text:0000012c $d
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:246    .text:00000130 $t
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:251    .text:00000130 FSMC_NORSRAMInit
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:664    .text:000003e8 $d
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:668    .text:000003ec $t
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:875    .text:00000558 $d
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:880    .text:00000560 $t
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:885    .text:00000560 FSMC_NANDInit
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:1237   .text:000007ac $d
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:1243   .text:000007b8 $t
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:1248   .text:000007b8 FSMC_PCCARDInit
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:1543   .text:000009a0 $d
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:1548   .text:000009a8 $t
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:1553   .text:000009a8 FSMC_NORSRAMStructInit
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:1706   .text:00000ab0 FSMC_NANDStructInit
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:1805   .text:00000b4c FSMC_PCCARDStructInit
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:1908   .text:00000bf0 FSMC_NORSRAMCmd
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:1993   .text:00000c74 $d
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:1998   .text:00000c7c $t
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2003   .text:00000c7c FSMC_NANDCmd
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2101   .text:00000d08 $d
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2108   .text:00000d18 $t
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2113   .text:00000d18 FSMC_PCCARDCmd
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2172   .text:00000d60 $d
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2178   .text:00000d6c $t
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2183   .text:00000d6c FSMC_NANDECCCmd
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2281   .text:00000df8 $d
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2288   .text:00000e08 $t
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2293   .text:00000e08 FSMC_GetECC
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2340   .text:00000e38 $d
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2345   .text:00000e40 $t
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2350   .text:00000e40 FSMC_ITConfig
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2499   .text:00000f28 $d
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2506   .text:00000f38 $t
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2511   .text:00000f38 FSMC_GetFlagStatus
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2624   .text:00000fd8 $d
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2631   .text:00000fe8 $t
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2636   .text:00000fe8 FSMC_ClearFlag
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2731   .text:00001078 $d
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2738   .text:00001088 $t
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2743   .text:00001088 FSMC_GetITStatus
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2869   .text:00001144 $d
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2876   .text:00001154 $t
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2881   .text:00001154 FSMC_ClearITPendingBit
C:\Users\PC108\AppData\Local\Temp\ccZqNBvU.s:2979   .text:000011f0 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.9001f459856fa07d79ce9793bb17c6cd
                           .group:00000000 wm4.stm32f10x.h.51.b859cb68ed44ee02c916b41cb8c68f1c
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.522.115ebb8291fa96f8c9e0b9a9b670f703
                           .group:00000000 wm4.stm32f10x_exti.h.56.8b2f216f9ded9d03a9eb42ed6973fc04
                           .group:00000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:00000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765
                           .group:00000000 wm4.stm32f10x_tim.h.25.21c6ec062f1e74898cb96a57da276fec
                           .group:00000000 wm4.stm32f10x_usart.h.25.29629c699b65db3f3efd3561f66b0bf6
                           .group:00000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:00000000 wm4.stm32f10x_fsmc.h.249.addafa799f80b37b762a4815ce5c7dc5

UNDEFINED SYMBOLS
assert_failed
