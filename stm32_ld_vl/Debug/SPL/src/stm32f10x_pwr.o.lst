   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_pwr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.thumb
  20              		.thumb_func
  22              	__WFI:
  23              	.LFB5:
  24              		.file 1 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\CMSIS/core_cm3.h"
   1:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**************************************************************************//**
   2:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @file     core_cm3.h
   3:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @version  V1.30
   5:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @date     30. October 2009
   6:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
   7:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @note
   8:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
  10:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @par
  11:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
  15:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @par
  16:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
  22:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  ******************************************************************************/
  23:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  24:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #ifndef __CM3_CORE_H__
  25:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __CM3_CORE_H__
  26:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  27:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
  29:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *   - Error 10: \n
  31:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     Error 10: Expecting ';'
  33:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * .
  34:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *   - Error 530: \n
  35:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     return(__regBasePri); \n
  36:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * . 
  38:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *   - Error 550: \n
  39:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * .
  42:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *   - Error 754: \n
  43:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * .
  46:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *   - Error 750: \n
  47:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * .
  50:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *   - Error 528: \n
  51:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * .
  54:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *   - Error 751: \n
  55:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     } InterruptType_Type; \n
  56:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * .
  58:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
  60:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
  61:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  62:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*lint -save */
  63:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*lint -e10  */
  64:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*lint -e530 */
  65:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*lint -e550 */
  66:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*lint -e754 */
  67:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*lint -e750 */
  68:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*lint -e528 */
  69:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*lint -e751 */
  70:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  71:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  72:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****     - CMSIS version number
  75:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****     - Cortex-M core registers and bitfields
  76:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****     - Cortex-M core peripheral base address
  77:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   @{
  78:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
  79:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  80:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #ifdef __cplusplus
  81:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  extern "C" {
  82:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif 
  83:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  84:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  88:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  90:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  92:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #if defined (__ICCARM__)
  93:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif
  95:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  96:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
  97:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif
 100:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 101:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 102:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 103:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 104:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 105:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * IO definitions
 106:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 107:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * define access restrictions to peripheral registers
 108:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 109:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 110:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #ifdef __cplusplus
 111:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #else
 113:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif
 115:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 118:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 119:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 120:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*******************************************************************************
 121:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *                 Register Abstraction
 122:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  ******************************************************************************/
 123:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  @{
 125:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** */
 126:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 127:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 128:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   @{
 131:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 132:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** typedef struct
 133:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 134:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }  NVIC_Type;                                               
 148:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 150:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 151:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   @{
 154:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 155:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** typedef struct
 156:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 157:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** } SCB_Type;                                                
 177:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 178:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB CPUID Register Definitions */
 179:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 182:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 185:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 188:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 191:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 195:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 198:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 201:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 204:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 207:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 210:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 213:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 216:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 219:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 222:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 226:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 229:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 233:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 236:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 239:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 242:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 245:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 248:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 251:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB System Control Register Definitions */
 252:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 255:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 258:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 261:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 265:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 268:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 271:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 274:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 277:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 280:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 284:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 287:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 290:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 293:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 296:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 299:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 302:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 305:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 308:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 311:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****                                      
 314:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 317:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 320:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 323:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 327:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 330:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 333:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 337:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 340:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 343:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 347:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 350:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 353:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 356:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 360:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 361:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   memory mapped structure for SysTick
 363:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   @{
 364:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 365:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** typedef struct
 366:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 367:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** } SysTick_Type;
 372:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 373:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 377:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 380:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 383:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 386:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SysTick Reload Register Definitions */
 387:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 390:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SysTick Current Register Definitions */
 391:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 394:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 398:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 401:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 405:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 406:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   @{
 409:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 410:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** typedef struct
 411:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 412:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __O  union  
 413:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   {
 414:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** } ITM_Type;                                                
 445:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 446:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 450:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 454:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 457:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 460:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 463:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 466:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 469:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 472:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 475:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 479:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 483:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 487:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 491:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 494:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 498:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 499:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   memory mapped structure for Interrupt Type
 501:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   @{
 502:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 503:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** typedef struct
 504:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 505:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED0;
 506:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #else
 510:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****        uint32_t RESERVED1;
 511:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif
 512:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** } InterruptType_Type;
 513:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 514:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 518:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 522:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 525:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 529:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 530:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   @{
 534:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 535:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** typedef struct
 536:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 537:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** } MPU_Type;                                                
 549:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 550:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* MPU Type Register */
 551:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 554:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 557:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 560:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* MPU Control Register */
 561:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 564:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 567:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 570:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* MPU Region Number Register */
 571:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 574:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* MPU Region Base Address Register */
 575:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 578:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 581:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 584:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 588:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 591:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 594:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 597:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 600:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 603:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 606:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 609:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 612:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif
 614:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 615:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 616:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   memory mapped structure for Core Debug Register
 618:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   @{
 619:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 620:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** typedef struct
 621:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 622:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** } CoreDebug_Type;
 627:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 628:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* Debug Halting Control and Status Register */
 629:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 632:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 635:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 638:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 641:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 644:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 647:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 650:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 653:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 656:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 659:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 662:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 665:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* Debug Core Register Selector Register */
 666:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 669:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 672:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 676:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 679:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 682:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 685:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 688:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 691:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 694:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 697:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 700:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 703:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 706:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 709:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 713:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 714:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 722:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 729:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif
 733:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 734:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 736:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 737:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /*******************************************************************************
 738:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *                Hardware Abstraction Layer
 739:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  ******************************************************************************/
 740:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 741:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #if defined ( __CC_ARM   )
 742:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 745:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #elif defined ( __ICCARM__ )
 746:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 749:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #elif defined   (  __GNUC__  )
 750:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 753:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #elif defined   (  __TASKING__  )
 754:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 757:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif
 758:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 759:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 760:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 762:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* ARM armcc specific functions */
 764:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 765:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 768:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __NOP                             __nop
 769:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __WFI                             __wfi
 770:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __WFE                             __wfe
 771:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __SEV                             __sev
 772:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __ISB()                           __isb(0)
 773:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __DSB()                           __dsb(0)
 774:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __DMB()                           __dmb(0)
 775:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __REV                             __rev
 776:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __RBIT                            __rbit
 777:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 784:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 785:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 790:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 791:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 792:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 794:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return ProcessStackPointer
 795:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 796:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the actual process stack pointer
 797:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 798:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_PSP(void);
 799:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 800:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 801:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 803:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 805:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 808:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 810:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 811:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 813:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return Main Stack Pointer
 814:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 815:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Cortex processor register
 817:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 818:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_MSP(void);
 819:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 820:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 821:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 823:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 825:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 828:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 830:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 831:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 833:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param   value  value to reverse
 834:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return         reversed value
 835:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 836:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Reverse byte order in unsigned short value
 837:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 838:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 840:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 841:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 843:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param   value  value to reverse
 844:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return         reversed value
 845:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 846:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 848:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 850:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 851:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 853:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 854:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 856:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 858:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __CLREX(void);
 859:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 860:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 861:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Base Priority value
 862:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 863:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return BasePriority
 864:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 865:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the content of the base priority register
 866:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 867:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 869:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 870:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Base Priority value
 871:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 872:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  basePri  BasePriority
 873:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 874:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the base priority register
 875:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 876:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 878:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 879:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Priority Mask value
 880:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 881:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return PriMask
 882:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 883:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 885:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 887:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 888:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Priority Mask value
 889:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 890:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param   priMask  PriMask
 891:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 892:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 894:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 896:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 897:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Fault Mask value
 898:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 899:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return FaultMask
 900:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 901:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the content of the fault mask register
 902:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 903:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 905:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 906:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Fault Mask value
 907:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 908:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  faultMask faultMask value
 909:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 910:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the fault mask register
 911:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 912:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 914:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 915:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Control Register value
 916:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * 
 917:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return Control value
 918:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 919:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the content of the control register
 920:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 921:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 923:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 924:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Control Register value
 925:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 926:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  control  Control value
 927:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 928:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the control register
 929:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 930:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 932:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 934:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 935:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 937:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 939:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __CLREX                           __clrex
 940:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 941:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 942:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Base Priority value
 943:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 944:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return BasePriority
 945:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 946:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the content of the base priority register
 947:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 948:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 950:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   return(__regBasePri);
 952:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
 953:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 954:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 955:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Base Priority value
 956:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 957:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  basePri  BasePriority
 958:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 959:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the base priority register
 960:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 961:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 963:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
 966:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 967:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 968:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Priority Mask value
 969:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 970:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return PriMask
 971:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 972:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 974:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 976:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   return(__regPriMask);
 978:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
 979:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 980:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 981:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Priority Mask value
 982:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 983:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  priMask  PriMask
 984:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 985:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
 987:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
 989:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __regPriMask = (priMask);
 991:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
 992:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
 993:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
 994:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Fault Mask value
 995:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 996:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return FaultMask
 997:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
 998:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the content of the fault mask register
 999:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1000:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
1002:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   return(__regFaultMask);
1004:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
1005:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1006:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1007:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Fault Mask value
1008:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1009:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  faultMask  faultMask value
1010:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1011:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the fault mask register
1012:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1013:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
1015:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
1018:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1019:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1020:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Control Register value
1021:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * 
1022:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return Control value
1023:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1024:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the content of the control register
1025:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1026:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
1028:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   return(__regControl);
1030:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
1031:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1032:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1033:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Control Register value
1034:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1035:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  control  Control value
1036:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1037:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Set the control register
1038:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1039:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** {
1041:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****   __regControl = control;
1043:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** }
1044:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1045:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1047:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1048:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1049:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* IAR iccarm specific functions */
1051:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1052:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1055:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1058:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1064:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1076:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1077:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1078:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1080:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return ProcessStackPointer
1081:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1082:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the actual process stack pointer
1083:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1084:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_PSP(void);
1085:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1086:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1087:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1089:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1091:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1094:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1096:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1097:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1099:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return Main Stack Pointer
1100:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1101:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Cortex processor register
1103:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1104:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __get_MSP(void);
1105:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1106:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1107:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1109:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1111:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1114:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1116:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1117:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1119:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  value  value to reverse
1120:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        reversed value
1121:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1122:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Reverse byte order in unsigned short value
1123:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1124:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1126:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1127:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  Reverse bit order of value
1128:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1129:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  value  value to reverse
1130:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        reversed value
1131:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1132:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Reverse bit order of value
1133:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1134:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1136:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1137:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1139:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1140:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        value of (*address)
1141:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1142:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1144:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1146:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1147:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1149:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1150:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        value of (*address)
1151:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1152:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1154:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1156:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1157:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1159:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1160:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        value of (*address)
1161:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1162:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1164:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1166:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1167:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1169:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  value  value to store
1170:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1171:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        successful / failed
1172:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1173:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1175:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1177:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1178:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1180:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  value  value to store
1181:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1182:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        successful / failed
1183:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1184:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1186:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1188:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /**
1189:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1191:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  value  value to store
1192:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1193:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * @return        successful / failed
1194:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  *
1195:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h ****  */
1197:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1199:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1200:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1201:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** /* GNU gcc specific functions */
1203:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1204:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1207:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** 
1210:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
  25              		.loc 1 1211 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 1, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 80B4     		push	{r7}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 7, -4
  34 0002 00AF     		add	r7, sp, #0
  35              	.LCFI1:
  36              		.cfi_def_cfa_register 7
  37              		.loc 1 1211 0
  38              	@ 1211 "C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS/core_cm3.h" 1
  39 0004 30BF     		wfi
  40              	@ 0 "" 2
  41              		.thumb
  42 0006 BD46     		mov	sp, r7
  43 0008 80BC     		pop	{r7}
  44 000a 7047     		bx	lr
  45              		.cfi_endproc
  46              	.LFE5:
  48              		.align	2
  49              		.thumb
  50              		.thumb_func
  52              	__WFE:
  53              	.LFB6:
1212:C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS\core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
  54              		.loc 1 1212 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 1, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59 000c 80B4     		push	{r7}
  60              	.LCFI2:
  61              		.cfi_def_cfa_offset 4
  62              		.cfi_offset 7, -4
  63 000e 00AF     		add	r7, sp, #0
  64              	.LCFI3:
  65              		.cfi_def_cfa_register 7
  66              		.loc 1 1212 0
  67              	@ 1212 "C:\Users\PC108\Export_project\stm32_ld_vl\CMSIS/core_cm3.h" 1
  68 0010 20BF     		wfe
  69              	@ 0 "" 2
  70              		.thumb
  71 0012 BD46     		mov	sp, r7
  72 0014 80BC     		pop	{r7}
  73 0016 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE6:
  77              		.align	2
  78              		.global	PWR_DeInit
  79              		.thumb
  80              		.thumb_func
  82              	PWR_DeInit:
  83              	.LFB29:
  84              		.file 2 "../SPL/src/stm32f10x_pwr.c"
   1:../SPL/src/stm32f10x_pwr.c **** /**
   2:../SPL/src/stm32f10x_pwr.c ****   ******************************************************************************
   3:../SPL/src/stm32f10x_pwr.c ****   * @file    stm32f10x_pwr.c
   4:../SPL/src/stm32f10x_pwr.c ****   * @author  MCD Application Team
   5:../SPL/src/stm32f10x_pwr.c ****   * @version V3.5.0
   6:../SPL/src/stm32f10x_pwr.c ****   * @date    11-March-2011
   7:../SPL/src/stm32f10x_pwr.c ****   * @brief   This file provides all the PWR firmware functions.
   8:../SPL/src/stm32f10x_pwr.c ****   ******************************************************************************
   9:../SPL/src/stm32f10x_pwr.c ****   * @attention
  10:../SPL/src/stm32f10x_pwr.c ****   *
  11:../SPL/src/stm32f10x_pwr.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../SPL/src/stm32f10x_pwr.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../SPL/src/stm32f10x_pwr.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../SPL/src/stm32f10x_pwr.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../SPL/src/stm32f10x_pwr.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../SPL/src/stm32f10x_pwr.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../SPL/src/stm32f10x_pwr.c ****   *
  18:../SPL/src/stm32f10x_pwr.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../SPL/src/stm32f10x_pwr.c ****   ******************************************************************************
  20:../SPL/src/stm32f10x_pwr.c ****   */
  21:../SPL/src/stm32f10x_pwr.c **** 
  22:../SPL/src/stm32f10x_pwr.c **** /* Includes ------------------------------------------------------------------*/
  23:../SPL/src/stm32f10x_pwr.c **** #include "stm32f10x_pwr.h"
  24:../SPL/src/stm32f10x_pwr.c **** #include "stm32f10x_rcc.h"
  25:../SPL/src/stm32f10x_pwr.c **** 
  26:../SPL/src/stm32f10x_pwr.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../SPL/src/stm32f10x_pwr.c ****   * @{
  28:../SPL/src/stm32f10x_pwr.c ****   */
  29:../SPL/src/stm32f10x_pwr.c **** 
  30:../SPL/src/stm32f10x_pwr.c **** /** @defgroup PWR 
  31:../SPL/src/stm32f10x_pwr.c ****   * @brief PWR driver modules
  32:../SPL/src/stm32f10x_pwr.c ****   * @{
  33:../SPL/src/stm32f10x_pwr.c ****   */ 
  34:../SPL/src/stm32f10x_pwr.c **** 
  35:../SPL/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_TypesDefinitions
  36:../SPL/src/stm32f10x_pwr.c ****   * @{
  37:../SPL/src/stm32f10x_pwr.c ****   */
  38:../SPL/src/stm32f10x_pwr.c **** 
  39:../SPL/src/stm32f10x_pwr.c **** /**
  40:../SPL/src/stm32f10x_pwr.c ****   * @}
  41:../SPL/src/stm32f10x_pwr.c ****   */
  42:../SPL/src/stm32f10x_pwr.c **** 
  43:../SPL/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_Defines
  44:../SPL/src/stm32f10x_pwr.c ****   * @{
  45:../SPL/src/stm32f10x_pwr.c ****   */
  46:../SPL/src/stm32f10x_pwr.c **** 
  47:../SPL/src/stm32f10x_pwr.c **** /* --------- PWR registers bit address in the alias region ---------- */
  48:../SPL/src/stm32f10x_pwr.c **** #define PWR_OFFSET               (PWR_BASE - PERIPH_BASE)
  49:../SPL/src/stm32f10x_pwr.c **** 
  50:../SPL/src/stm32f10x_pwr.c **** /* --- CR Register ---*/
  51:../SPL/src/stm32f10x_pwr.c **** 
  52:../SPL/src/stm32f10x_pwr.c **** /* Alias word address of DBP bit */
  53:../SPL/src/stm32f10x_pwr.c **** #define CR_OFFSET                (PWR_OFFSET + 0x00)
  54:../SPL/src/stm32f10x_pwr.c **** #define DBP_BitNumber            0x08
  55:../SPL/src/stm32f10x_pwr.c **** #define CR_DBP_BB                (PERIPH_BB_BASE + (CR_OFFSET * 32) + (DBP_BitNumber * 4))
  56:../SPL/src/stm32f10x_pwr.c **** 
  57:../SPL/src/stm32f10x_pwr.c **** /* Alias word address of PVDE bit */
  58:../SPL/src/stm32f10x_pwr.c **** #define PVDE_BitNumber           0x04
  59:../SPL/src/stm32f10x_pwr.c **** #define CR_PVDE_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PVDE_BitNumber * 4))
  60:../SPL/src/stm32f10x_pwr.c **** 
  61:../SPL/src/stm32f10x_pwr.c **** /* --- CSR Register ---*/
  62:../SPL/src/stm32f10x_pwr.c **** 
  63:../SPL/src/stm32f10x_pwr.c **** /* Alias word address of EWUP bit */
  64:../SPL/src/stm32f10x_pwr.c **** #define CSR_OFFSET               (PWR_OFFSET + 0x04)
  65:../SPL/src/stm32f10x_pwr.c **** #define EWUP_BitNumber           0x08
  66:../SPL/src/stm32f10x_pwr.c **** #define CSR_EWUP_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (EWUP_BitNumber * 4))
  67:../SPL/src/stm32f10x_pwr.c **** 
  68:../SPL/src/stm32f10x_pwr.c **** /* ------------------ PWR registers bit mask ------------------------ */
  69:../SPL/src/stm32f10x_pwr.c **** 
  70:../SPL/src/stm32f10x_pwr.c **** /* CR register bit mask */
  71:../SPL/src/stm32f10x_pwr.c **** #define CR_DS_MASK               ((uint32_t)0xFFFFFFFC)
  72:../SPL/src/stm32f10x_pwr.c **** #define CR_PLS_MASK              ((uint32_t)0xFFFFFF1F)
  73:../SPL/src/stm32f10x_pwr.c **** 
  74:../SPL/src/stm32f10x_pwr.c **** 
  75:../SPL/src/stm32f10x_pwr.c **** /**
  76:../SPL/src/stm32f10x_pwr.c ****   * @}
  77:../SPL/src/stm32f10x_pwr.c ****   */
  78:../SPL/src/stm32f10x_pwr.c **** 
  79:../SPL/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_Macros
  80:../SPL/src/stm32f10x_pwr.c ****   * @{
  81:../SPL/src/stm32f10x_pwr.c ****   */
  82:../SPL/src/stm32f10x_pwr.c **** 
  83:../SPL/src/stm32f10x_pwr.c **** /**
  84:../SPL/src/stm32f10x_pwr.c ****   * @}
  85:../SPL/src/stm32f10x_pwr.c ****   */
  86:../SPL/src/stm32f10x_pwr.c **** 
  87:../SPL/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_Variables
  88:../SPL/src/stm32f10x_pwr.c ****   * @{
  89:../SPL/src/stm32f10x_pwr.c ****   */
  90:../SPL/src/stm32f10x_pwr.c **** 
  91:../SPL/src/stm32f10x_pwr.c **** /**
  92:../SPL/src/stm32f10x_pwr.c ****   * @}
  93:../SPL/src/stm32f10x_pwr.c ****   */
  94:../SPL/src/stm32f10x_pwr.c **** 
  95:../SPL/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_FunctionPrototypes
  96:../SPL/src/stm32f10x_pwr.c ****   * @{
  97:../SPL/src/stm32f10x_pwr.c ****   */
  98:../SPL/src/stm32f10x_pwr.c **** 
  99:../SPL/src/stm32f10x_pwr.c **** /**
 100:../SPL/src/stm32f10x_pwr.c ****   * @}
 101:../SPL/src/stm32f10x_pwr.c ****   */
 102:../SPL/src/stm32f10x_pwr.c **** 
 103:../SPL/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_Functions
 104:../SPL/src/stm32f10x_pwr.c ****   * @{
 105:../SPL/src/stm32f10x_pwr.c ****   */
 106:../SPL/src/stm32f10x_pwr.c **** 
 107:../SPL/src/stm32f10x_pwr.c **** /**
 108:../SPL/src/stm32f10x_pwr.c ****   * @brief  Deinitializes the PWR peripheral registers to their default reset values.
 109:../SPL/src/stm32f10x_pwr.c ****   * @param  None
 110:../SPL/src/stm32f10x_pwr.c ****   * @retval None
 111:../SPL/src/stm32f10x_pwr.c ****   */
 112:../SPL/src/stm32f10x_pwr.c **** void PWR_DeInit(void)
 113:../SPL/src/stm32f10x_pwr.c **** {
  85              		.loc 2 113 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 1, uses_anonymous_args = 0
  89 0018 80B5     		push	{r7, lr}
  90              	.LCFI4:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 7, -8
  93              		.cfi_offset 14, -4
  94 001a 00AF     		add	r7, sp, #0
  95              	.LCFI5:
  96              		.cfi_def_cfa_register 7
 114:../SPL/src/stm32f10x_pwr.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, ENABLE);
  97              		.loc 2 114 0
  98 001c 4FF08050 		mov	r0, #268435456
  99 0020 4FF00101 		mov	r1, #1
 100 0024 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 115:../SPL/src/stm32f10x_pwr.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, DISABLE);
 101              		.loc 2 115 0
 102 0028 4FF08050 		mov	r0, #268435456
 103 002c 4FF00001 		mov	r1, #0
 104 0030 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 116:../SPL/src/stm32f10x_pwr.c **** }
 105              		.loc 2 116 0
 106 0034 80BD     		pop	{r7, pc}
 107              		.cfi_endproc
 108              	.LFE29:
 110              		.section	.rodata
 111              		.align	2
 112              	.LC0:
 113 0000 2E2E2F53 		.ascii	"../SPL/src/stm32f10x_pwr.c\000"
 113      504C2F73 
 113      72632F73 
 113      746D3332 
 113      66313078 
 114 001b 00       		.text
 115 0036 00BF     		.align	2
 116              		.global	PWR_BackupAccessCmd
 117              		.thumb
 118              		.thumb_func
 120              	PWR_BackupAccessCmd:
 121              	.LFB30:
 117:../SPL/src/stm32f10x_pwr.c **** 
 118:../SPL/src/stm32f10x_pwr.c **** /**
 119:../SPL/src/stm32f10x_pwr.c ****   * @brief  Enables or disables access to the RTC and backup registers.
 120:../SPL/src/stm32f10x_pwr.c ****   * @param  NewState: new state of the access to the RTC and backup registers.
 121:../SPL/src/stm32f10x_pwr.c ****   *   This parameter can be: ENABLE or DISABLE.
 122:../SPL/src/stm32f10x_pwr.c ****   * @retval None
 123:../SPL/src/stm32f10x_pwr.c ****   */
 124:../SPL/src/stm32f10x_pwr.c **** void PWR_BackupAccessCmd(FunctionalState NewState)
 125:../SPL/src/stm32f10x_pwr.c **** {
 122              		.loc 2 125 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 8
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126 0038 80B5     		push	{r7, lr}
 127              	.LCFI6:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 7, -8
 130              		.cfi_offset 14, -4
 131 003a 82B0     		sub	sp, sp, #8
 132              	.LCFI7:
 133              		.cfi_def_cfa_offset 16
 134 003c 00AF     		add	r7, sp, #0
 135              	.LCFI8:
 136              		.cfi_def_cfa_register 7
 137 003e 0346     		mov	r3, r0
 138 0040 FB71     		strb	r3, [r7, #7]
 126:../SPL/src/stm32f10x_pwr.c ****   /* Check the parameters */
 127:../SPL/src/stm32f10x_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 139              		.loc 2 127 0
 140 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 141 0044 002B     		cmp	r3, #0
 142 0046 07D0     		beq	.L5
 143              		.loc 2 127 0 is_stmt 0 discriminator 1
 144 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 145 004a 012B     		cmp	r3, #1
 146 004c 04D0     		beq	.L5
 147              		.loc 2 127 0 discriminator 2
 148 004e 0648     		ldr	r0, .L6
 149 0050 4FF07F01 		mov	r1, #127
 150 0054 FFF7FEFF 		bl	assert_failed
 151              	.L5:
 128:../SPL/src/stm32f10x_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)NewState;
 152              		.loc 2 128 0 is_stmt 1
 153 0058 044B     		ldr	r3, .L6+4
 154 005a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 155 005c 1A60     		str	r2, [r3, #0]
 129:../SPL/src/stm32f10x_pwr.c **** }
 156              		.loc 2 129 0
 157 005e 07F10807 		add	r7, r7, #8
 158 0062 BD46     		mov	sp, r7
 159 0064 80BD     		pop	{r7, pc}
 160              	.L7:
 161 0066 00BF     		.align	2
 162              	.L6:
 163 0068 00000000 		.word	.LC0
 164 006c 20000E42 		.word	1108213792
 165              		.cfi_endproc
 166              	.LFE30:
 168              		.align	2
 169              		.global	PWR_PVDCmd
 170              		.thumb
 171              		.thumb_func
 173              	PWR_PVDCmd:
 174              	.LFB31:
 130:../SPL/src/stm32f10x_pwr.c **** 
 131:../SPL/src/stm32f10x_pwr.c **** /**
 132:../SPL/src/stm32f10x_pwr.c ****   * @brief  Enables or disables the Power Voltage Detector(PVD).
 133:../SPL/src/stm32f10x_pwr.c ****   * @param  NewState: new state of the PVD.
 134:../SPL/src/stm32f10x_pwr.c ****   *   This parameter can be: ENABLE or DISABLE.
 135:../SPL/src/stm32f10x_pwr.c ****   * @retval None
 136:../SPL/src/stm32f10x_pwr.c ****   */
 137:../SPL/src/stm32f10x_pwr.c **** void PWR_PVDCmd(FunctionalState NewState)
 138:../SPL/src/stm32f10x_pwr.c **** {
 175              		.loc 2 138 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 8
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0070 80B5     		push	{r7, lr}
 180              	.LCFI9:
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 7, -8
 183              		.cfi_offset 14, -4
 184 0072 82B0     		sub	sp, sp, #8
 185              	.LCFI10:
 186              		.cfi_def_cfa_offset 16
 187 0074 00AF     		add	r7, sp, #0
 188              	.LCFI11:
 189              		.cfi_def_cfa_register 7
 190 0076 0346     		mov	r3, r0
 191 0078 FB71     		strb	r3, [r7, #7]
 139:../SPL/src/stm32f10x_pwr.c ****   /* Check the parameters */
 140:../SPL/src/stm32f10x_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 192              		.loc 2 140 0
 193 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 194 007c 002B     		cmp	r3, #0
 195 007e 07D0     		beq	.L9
 196              		.loc 2 140 0 is_stmt 0 discriminator 1
 197 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 198 0082 012B     		cmp	r3, #1
 199 0084 04D0     		beq	.L9
 200              		.loc 2 140 0 discriminator 2
 201 0086 0648     		ldr	r0, .L10
 202 0088 4FF08C01 		mov	r1, #140
 203 008c FFF7FEFF 		bl	assert_failed
 204              	.L9:
 141:../SPL/src/stm32f10x_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)NewState;
 205              		.loc 2 141 0 is_stmt 1
 206 0090 044B     		ldr	r3, .L10+4
 207 0092 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 208 0094 1A60     		str	r2, [r3, #0]
 142:../SPL/src/stm32f10x_pwr.c **** }
 209              		.loc 2 142 0
 210 0096 07F10807 		add	r7, r7, #8
 211 009a BD46     		mov	sp, r7
 212 009c 80BD     		pop	{r7, pc}
 213              	.L11:
 214 009e 00BF     		.align	2
 215              	.L10:
 216 00a0 00000000 		.word	.LC0
 217 00a4 10000E42 		.word	1108213776
 218              		.cfi_endproc
 219              	.LFE31:
 221              		.align	2
 222              		.global	PWR_PVDLevelConfig
 223              		.thumb
 224              		.thumb_func
 226              	PWR_PVDLevelConfig:
 227              	.LFB32:
 143:../SPL/src/stm32f10x_pwr.c **** 
 144:../SPL/src/stm32f10x_pwr.c **** /**
 145:../SPL/src/stm32f10x_pwr.c ****   * @brief  Configures the voltage threshold detected by the Power Voltage Detector(PVD).
 146:../SPL/src/stm32f10x_pwr.c ****   * @param  PWR_PVDLevel: specifies the PVD detection level
 147:../SPL/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 148:../SPL/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V2: PVD detection level set to 2.2V
 149:../SPL/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V3: PVD detection level set to 2.3V
 150:../SPL/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V4: PVD detection level set to 2.4V
 151:../SPL/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V5: PVD detection level set to 2.5V
 152:../SPL/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V6: PVD detection level set to 2.6V
 153:../SPL/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V7: PVD detection level set to 2.7V
 154:../SPL/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V8: PVD detection level set to 2.8V
 155:../SPL/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V9: PVD detection level set to 2.9V
 156:../SPL/src/stm32f10x_pwr.c ****   * @retval None
 157:../SPL/src/stm32f10x_pwr.c ****   */
 158:../SPL/src/stm32f10x_pwr.c **** void PWR_PVDLevelConfig(uint32_t PWR_PVDLevel)
 159:../SPL/src/stm32f10x_pwr.c **** {
 228              		.loc 2 159 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 16
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232 00a8 80B5     		push	{r7, lr}
 233              	.LCFI12:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 7, -8
 236              		.cfi_offset 14, -4
 237 00aa 84B0     		sub	sp, sp, #16
 238              	.LCFI13:
 239              		.cfi_def_cfa_offset 24
 240 00ac 00AF     		add	r7, sp, #0
 241              	.LCFI14:
 242              		.cfi_def_cfa_register 7
 243 00ae 7860     		str	r0, [r7, #4]
 160:../SPL/src/stm32f10x_pwr.c ****   uint32_t tmpreg = 0;
 244              		.loc 2 160 0
 245 00b0 4FF00003 		mov	r3, #0
 246 00b4 FB60     		str	r3, [r7, #12]
 161:../SPL/src/stm32f10x_pwr.c ****   /* Check the parameters */
 162:../SPL/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_PVD_LEVEL(PWR_PVDLevel));
 247              		.loc 2 162 0
 248 00b6 7B68     		ldr	r3, [r7, #4]
 249 00b8 002B     		cmp	r3, #0
 250 00ba 19D0     		beq	.L13
 251              		.loc 2 162 0 is_stmt 0 discriminator 1
 252 00bc 7B68     		ldr	r3, [r7, #4]
 253 00be 202B     		cmp	r3, #32
 254 00c0 16D0     		beq	.L13
 255              		.loc 2 162 0 discriminator 2
 256 00c2 7B68     		ldr	r3, [r7, #4]
 257 00c4 402B     		cmp	r3, #64
 258 00c6 13D0     		beq	.L13
 259              		.loc 2 162 0 discriminator 3
 260 00c8 7B68     		ldr	r3, [r7, #4]
 261 00ca 602B     		cmp	r3, #96
 262 00cc 10D0     		beq	.L13
 263              		.loc 2 162 0 discriminator 4
 264 00ce 7B68     		ldr	r3, [r7, #4]
 265 00d0 802B     		cmp	r3, #128
 266 00d2 0DD0     		beq	.L13
 267              		.loc 2 162 0 discriminator 5
 268 00d4 7B68     		ldr	r3, [r7, #4]
 269 00d6 A02B     		cmp	r3, #160
 270 00d8 0AD0     		beq	.L13
 271              		.loc 2 162 0 discriminator 6
 272 00da 7B68     		ldr	r3, [r7, #4]
 273 00dc C02B     		cmp	r3, #192
 274 00de 07D0     		beq	.L13
 275              		.loc 2 162 0 discriminator 7
 276 00e0 7B68     		ldr	r3, [r7, #4]
 277 00e2 E02B     		cmp	r3, #224
 278 00e4 04D0     		beq	.L13
 279              		.loc 2 162 0 discriminator 8
 280 00e6 0B48     		ldr	r0, .L14
 281 00e8 4FF0A201 		mov	r1, #162
 282 00ec FFF7FEFF 		bl	assert_failed
 283              	.L13:
 163:../SPL/src/stm32f10x_pwr.c ****   tmpreg = PWR->CR;
 284              		.loc 2 163 0 is_stmt 1
 285 00f0 094B     		ldr	r3, .L14+4
 286 00f2 1B68     		ldr	r3, [r3, #0]
 287 00f4 FB60     		str	r3, [r7, #12]
 164:../SPL/src/stm32f10x_pwr.c ****   /* Clear PLS[7:5] bits */
 165:../SPL/src/stm32f10x_pwr.c ****   tmpreg &= CR_PLS_MASK;
 288              		.loc 2 165 0
 289 00f6 FB68     		ldr	r3, [r7, #12]
 290 00f8 23F0E003 		bic	r3, r3, #224
 291 00fc FB60     		str	r3, [r7, #12]
 166:../SPL/src/stm32f10x_pwr.c ****   /* Set PLS[7:5] bits according to PWR_PVDLevel value */
 167:../SPL/src/stm32f10x_pwr.c ****   tmpreg |= PWR_PVDLevel;
 292              		.loc 2 167 0
 293 00fe FA68     		ldr	r2, [r7, #12]
 294 0100 7B68     		ldr	r3, [r7, #4]
 295 0102 1343     		orrs	r3, r3, r2
 296 0104 FB60     		str	r3, [r7, #12]
 168:../SPL/src/stm32f10x_pwr.c ****   /* Store the new value */
 169:../SPL/src/stm32f10x_pwr.c ****   PWR->CR = tmpreg;
 297              		.loc 2 169 0
 298 0106 044B     		ldr	r3, .L14+4
 299 0108 FA68     		ldr	r2, [r7, #12]
 300 010a 1A60     		str	r2, [r3, #0]
 170:../SPL/src/stm32f10x_pwr.c **** }
 301              		.loc 2 170 0
 302 010c 07F11007 		add	r7, r7, #16
 303 0110 BD46     		mov	sp, r7
 304 0112 80BD     		pop	{r7, pc}
 305              	.L15:
 306              		.align	2
 307              	.L14:
 308 0114 00000000 		.word	.LC0
 309 0118 00700040 		.word	1073770496
 310              		.cfi_endproc
 311              	.LFE32:
 313              		.align	2
 314              		.global	PWR_WakeUpPinCmd
 315              		.thumb
 316              		.thumb_func
 318              	PWR_WakeUpPinCmd:
 319              	.LFB33:
 171:../SPL/src/stm32f10x_pwr.c **** 
 172:../SPL/src/stm32f10x_pwr.c **** /**
 173:../SPL/src/stm32f10x_pwr.c ****   * @brief  Enables or disables the WakeUp Pin functionality.
 174:../SPL/src/stm32f10x_pwr.c ****   * @param  NewState: new state of the WakeUp Pin functionality.
 175:../SPL/src/stm32f10x_pwr.c ****   *   This parameter can be: ENABLE or DISABLE.
 176:../SPL/src/stm32f10x_pwr.c ****   * @retval None
 177:../SPL/src/stm32f10x_pwr.c ****   */
 178:../SPL/src/stm32f10x_pwr.c **** void PWR_WakeUpPinCmd(FunctionalState NewState)
 179:../SPL/src/stm32f10x_pwr.c **** {
 320              		.loc 2 179 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 8
 323              		@ frame_needed = 1, uses_anonymous_args = 0
 324 011c 80B5     		push	{r7, lr}
 325              	.LCFI15:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 7, -8
 328              		.cfi_offset 14, -4
 329 011e 82B0     		sub	sp, sp, #8
 330              	.LCFI16:
 331              		.cfi_def_cfa_offset 16
 332 0120 00AF     		add	r7, sp, #0
 333              	.LCFI17:
 334              		.cfi_def_cfa_register 7
 335 0122 0346     		mov	r3, r0
 336 0124 FB71     		strb	r3, [r7, #7]
 180:../SPL/src/stm32f10x_pwr.c ****   /* Check the parameters */
 181:../SPL/src/stm32f10x_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 337              		.loc 2 181 0
 338 0126 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 339 0128 002B     		cmp	r3, #0
 340 012a 07D0     		beq	.L17
 341              		.loc 2 181 0 is_stmt 0 discriminator 1
 342 012c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 343 012e 012B     		cmp	r3, #1
 344 0130 04D0     		beq	.L17
 345              		.loc 2 181 0 discriminator 2
 346 0132 0648     		ldr	r0, .L18
 347 0134 4FF0B501 		mov	r1, #181
 348 0138 FFF7FEFF 		bl	assert_failed
 349              	.L17:
 182:../SPL/src/stm32f10x_pwr.c ****   *(__IO uint32_t *) CSR_EWUP_BB = (uint32_t)NewState;
 350              		.loc 2 182 0 is_stmt 1
 351 013c 044B     		ldr	r3, .L18+4
 352 013e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 353 0140 1A60     		str	r2, [r3, #0]
 183:../SPL/src/stm32f10x_pwr.c **** }
 354              		.loc 2 183 0
 355 0142 07F10807 		add	r7, r7, #8
 356 0146 BD46     		mov	sp, r7
 357 0148 80BD     		pop	{r7, pc}
 358              	.L19:
 359 014a 00BF     		.align	2
 360              	.L18:
 361 014c 00000000 		.word	.LC0
 362 0150 A0000E42 		.word	1108213920
 363              		.cfi_endproc
 364              	.LFE33:
 366              		.align	2
 367              		.global	PWR_EnterSTOPMode
 368              		.thumb
 369              		.thumb_func
 371              	PWR_EnterSTOPMode:
 372              	.LFB34:
 184:../SPL/src/stm32f10x_pwr.c **** 
 185:../SPL/src/stm32f10x_pwr.c **** /**
 186:../SPL/src/stm32f10x_pwr.c ****   * @brief  Enters STOP mode.
 187:../SPL/src/stm32f10x_pwr.c ****   * @param  PWR_Regulator: specifies the regulator state in STOP mode.
 188:../SPL/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 189:../SPL/src/stm32f10x_pwr.c ****   *     @arg PWR_Regulator_ON: STOP mode with regulator ON
 190:../SPL/src/stm32f10x_pwr.c ****   *     @arg PWR_Regulator_LowPower: STOP mode with regulator in low power mode
 191:../SPL/src/stm32f10x_pwr.c ****   * @param  PWR_STOPEntry: specifies if STOP mode in entered with WFI or WFE instruction.
 192:../SPL/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 193:../SPL/src/stm32f10x_pwr.c ****   *     @arg PWR_STOPEntry_WFI: enter STOP mode with WFI instruction
 194:../SPL/src/stm32f10x_pwr.c ****   *     @arg PWR_STOPEntry_WFE: enter STOP mode with WFE instruction
 195:../SPL/src/stm32f10x_pwr.c ****   * @retval None
 196:../SPL/src/stm32f10x_pwr.c ****   */
 197:../SPL/src/stm32f10x_pwr.c **** void PWR_EnterSTOPMode(uint32_t PWR_Regulator, uint8_t PWR_STOPEntry)
 198:../SPL/src/stm32f10x_pwr.c **** {
 373              		.loc 2 198 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 16
 376              		@ frame_needed = 1, uses_anonymous_args = 0
 377 0154 80B5     		push	{r7, lr}
 378              	.LCFI18:
 379              		.cfi_def_cfa_offset 8
 380              		.cfi_offset 7, -8
 381              		.cfi_offset 14, -4
 382 0156 84B0     		sub	sp, sp, #16
 383              	.LCFI19:
 384              		.cfi_def_cfa_offset 24
 385 0158 00AF     		add	r7, sp, #0
 386              	.LCFI20:
 387              		.cfi_def_cfa_register 7
 388 015a 7860     		str	r0, [r7, #4]
 389 015c 0B46     		mov	r3, r1
 390 015e FB70     		strb	r3, [r7, #3]
 199:../SPL/src/stm32f10x_pwr.c ****   uint32_t tmpreg = 0;
 391              		.loc 2 199 0
 392 0160 4FF00003 		mov	r3, #0
 393 0164 FB60     		str	r3, [r7, #12]
 200:../SPL/src/stm32f10x_pwr.c ****   /* Check the parameters */
 201:../SPL/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_REGULATOR(PWR_Regulator));
 394              		.loc 2 201 0
 395 0166 7B68     		ldr	r3, [r7, #4]
 396 0168 002B     		cmp	r3, #0
 397 016a 07D0     		beq	.L21
 398              		.loc 2 201 0 is_stmt 0 discriminator 1
 399 016c 7B68     		ldr	r3, [r7, #4]
 400 016e 012B     		cmp	r3, #1
 401 0170 04D0     		beq	.L21
 402              		.loc 2 201 0 discriminator 2
 403 0172 1B48     		ldr	r0, .L25
 404 0174 4FF0C901 		mov	r1, #201
 405 0178 FFF7FEFF 		bl	assert_failed
 406              	.L21:
 202:../SPL/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(PWR_STOPEntry));
 407              		.loc 2 202 0 is_stmt 1
 408 017c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 409 017e 012B     		cmp	r3, #1
 410 0180 07D0     		beq	.L22
 411              		.loc 2 202 0 is_stmt 0 discriminator 1
 412 0182 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 413 0184 022B     		cmp	r3, #2
 414 0186 04D0     		beq	.L22
 415              		.loc 2 202 0 discriminator 2
 416 0188 1548     		ldr	r0, .L25
 417 018a 4FF0CA01 		mov	r1, #202
 418 018e FFF7FEFF 		bl	assert_failed
 419              	.L22:
 203:../SPL/src/stm32f10x_pwr.c ****   
 204:../SPL/src/stm32f10x_pwr.c ****   /* Select the regulator state in STOP mode ---------------------------------*/
 205:../SPL/src/stm32f10x_pwr.c ****   tmpreg = PWR->CR;
 420              		.loc 2 205 0 is_stmt 1
 421 0192 144B     		ldr	r3, .L25+4
 422 0194 1B68     		ldr	r3, [r3, #0]
 423 0196 FB60     		str	r3, [r7, #12]
 206:../SPL/src/stm32f10x_pwr.c ****   /* Clear PDDS and LPDS bits */
 207:../SPL/src/stm32f10x_pwr.c ****   tmpreg &= CR_DS_MASK;
 424              		.loc 2 207 0
 425 0198 FB68     		ldr	r3, [r7, #12]
 426 019a 23F00303 		bic	r3, r3, #3
 427 019e FB60     		str	r3, [r7, #12]
 208:../SPL/src/stm32f10x_pwr.c ****   /* Set LPDS bit according to PWR_Regulator value */
 209:../SPL/src/stm32f10x_pwr.c ****   tmpreg |= PWR_Regulator;
 428              		.loc 2 209 0
 429 01a0 FA68     		ldr	r2, [r7, #12]
 430 01a2 7B68     		ldr	r3, [r7, #4]
 431 01a4 1343     		orrs	r3, r3, r2
 432 01a6 FB60     		str	r3, [r7, #12]
 210:../SPL/src/stm32f10x_pwr.c ****   /* Store the new value */
 211:../SPL/src/stm32f10x_pwr.c ****   PWR->CR = tmpreg;
 433              		.loc 2 211 0
 434 01a8 0E4B     		ldr	r3, .L25+4
 435 01aa FA68     		ldr	r2, [r7, #12]
 436 01ac 1A60     		str	r2, [r3, #0]
 212:../SPL/src/stm32f10x_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 213:../SPL/src/stm32f10x_pwr.c ****   SCB->SCR |= SCB_SCR_SLEEPDEEP;
 437              		.loc 2 213 0
 438 01ae 0E4B     		ldr	r3, .L25+8
 439 01b0 0D4A     		ldr	r2, .L25+8
 440 01b2 1269     		ldr	r2, [r2, #16]
 441 01b4 42F00402 		orr	r2, r2, #4
 442 01b8 1A61     		str	r2, [r3, #16]
 214:../SPL/src/stm32f10x_pwr.c ****   
 215:../SPL/src/stm32f10x_pwr.c ****   /* Select STOP mode entry --------------------------------------------------*/
 216:../SPL/src/stm32f10x_pwr.c ****   if(PWR_STOPEntry == PWR_STOPEntry_WFI)
 443              		.loc 2 216 0
 444 01ba FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 445 01bc 012B     		cmp	r3, #1
 446 01be 02D1     		bne	.L23
 217:../SPL/src/stm32f10x_pwr.c ****   {   
 218:../SPL/src/stm32f10x_pwr.c ****     /* Request Wait For Interrupt */
 219:../SPL/src/stm32f10x_pwr.c ****     __WFI();
 447              		.loc 2 219 0
 448 01c0 FFF71EFF 		bl	__WFI
 449 01c4 01E0     		b	.L24
 450              	.L23:
 220:../SPL/src/stm32f10x_pwr.c ****   }
 221:../SPL/src/stm32f10x_pwr.c ****   else
 222:../SPL/src/stm32f10x_pwr.c ****   {
 223:../SPL/src/stm32f10x_pwr.c ****     /* Request Wait For Event */
 224:../SPL/src/stm32f10x_pwr.c ****     __WFE();
 451              		.loc 2 224 0
 452 01c6 FFF721FF 		bl	__WFE
 453              	.L24:
 225:../SPL/src/stm32f10x_pwr.c ****   }
 226:../SPL/src/stm32f10x_pwr.c ****   
 227:../SPL/src/stm32f10x_pwr.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 228:../SPL/src/stm32f10x_pwr.c ****   SCB->SCR &= (uint32_t)~((uint32_t)SCB_SCR_SLEEPDEEP);  
 454              		.loc 2 228 0
 455 01ca 074B     		ldr	r3, .L25+8
 456 01cc 064A     		ldr	r2, .L25+8
 457 01ce 1269     		ldr	r2, [r2, #16]
 458 01d0 22F00402 		bic	r2, r2, #4
 459 01d4 1A61     		str	r2, [r3, #16]
 229:../SPL/src/stm32f10x_pwr.c **** }
 460              		.loc 2 229 0
 461 01d6 07F11007 		add	r7, r7, #16
 462 01da BD46     		mov	sp, r7
 463 01dc 80BD     		pop	{r7, pc}
 464              	.L26:
 465 01de 00BF     		.align	2
 466              	.L25:
 467 01e0 00000000 		.word	.LC0
 468 01e4 00700040 		.word	1073770496
 469 01e8 00ED00E0 		.word	-536810240
 470              		.cfi_endproc
 471              	.LFE34:
 473              		.align	2
 474              		.global	PWR_EnterSTANDBYMode
 475              		.thumb
 476              		.thumb_func
 478              	PWR_EnterSTANDBYMode:
 479              	.LFB35:
 230:../SPL/src/stm32f10x_pwr.c **** 
 231:../SPL/src/stm32f10x_pwr.c **** /**
 232:../SPL/src/stm32f10x_pwr.c ****   * @brief  Enters STANDBY mode.
 233:../SPL/src/stm32f10x_pwr.c ****   * @param  None
 234:../SPL/src/stm32f10x_pwr.c ****   * @retval None
 235:../SPL/src/stm32f10x_pwr.c ****   */
 236:../SPL/src/stm32f10x_pwr.c **** void PWR_EnterSTANDBYMode(void)
 237:../SPL/src/stm32f10x_pwr.c **** {
 480              		.loc 2 237 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 1, uses_anonymous_args = 0
 484 01ec 80B5     		push	{r7, lr}
 485              	.LCFI21:
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 01ee 00AF     		add	r7, sp, #0
 490              	.LCFI22:
 491              		.cfi_def_cfa_register 7
 238:../SPL/src/stm32f10x_pwr.c ****   /* Clear Wake-up flag */
 239:../SPL/src/stm32f10x_pwr.c ****   PWR->CR |= PWR_CR_CWUF;
 492              		.loc 2 239 0
 493 01f0 0A4B     		ldr	r3, .L28
 494 01f2 0A4A     		ldr	r2, .L28
 495 01f4 1268     		ldr	r2, [r2, #0]
 496 01f6 42F00402 		orr	r2, r2, #4
 497 01fa 1A60     		str	r2, [r3, #0]
 240:../SPL/src/stm32f10x_pwr.c ****   /* Select STANDBY mode */
 241:../SPL/src/stm32f10x_pwr.c ****   PWR->CR |= PWR_CR_PDDS;
 498              		.loc 2 241 0
 499 01fc 074B     		ldr	r3, .L28
 500 01fe 074A     		ldr	r2, .L28
 501 0200 1268     		ldr	r2, [r2, #0]
 502 0202 42F00202 		orr	r2, r2, #2
 503 0206 1A60     		str	r2, [r3, #0]
 242:../SPL/src/stm32f10x_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 243:../SPL/src/stm32f10x_pwr.c ****   SCB->SCR |= SCB_SCR_SLEEPDEEP;
 504              		.loc 2 243 0
 505 0208 054B     		ldr	r3, .L28+4
 506 020a 054A     		ldr	r2, .L28+4
 507 020c 1269     		ldr	r2, [r2, #16]
 508 020e 42F00402 		orr	r2, r2, #4
 509 0212 1A61     		str	r2, [r3, #16]
 244:../SPL/src/stm32f10x_pwr.c **** /* This option is used to ensure that store operations are completed */
 245:../SPL/src/stm32f10x_pwr.c **** #if defined ( __CC_ARM   )
 246:../SPL/src/stm32f10x_pwr.c ****   __force_stores();
 247:../SPL/src/stm32f10x_pwr.c **** #endif
 248:../SPL/src/stm32f10x_pwr.c ****   /* Request Wait For Interrupt */
 249:../SPL/src/stm32f10x_pwr.c ****   __WFI();
 510              		.loc 2 249 0
 511 0214 FFF7F4FE 		bl	__WFI
 250:../SPL/src/stm32f10x_pwr.c **** }
 512              		.loc 2 250 0
 513 0218 80BD     		pop	{r7, pc}
 514              	.L29:
 515 021a 00BF     		.align	2
 516              	.L28:
 517 021c 00700040 		.word	1073770496
 518 0220 00ED00E0 		.word	-536810240
 519              		.cfi_endproc
 520              	.LFE35:
 522              		.align	2
 523              		.global	PWR_GetFlagStatus
 524              		.thumb
 525              		.thumb_func
 527              	PWR_GetFlagStatus:
 528              	.LFB36:
 251:../SPL/src/stm32f10x_pwr.c **** 
 252:../SPL/src/stm32f10x_pwr.c **** /**
 253:../SPL/src/stm32f10x_pwr.c ****   * @brief  Checks whether the specified PWR flag is set or not.
 254:../SPL/src/stm32f10x_pwr.c ****   * @param  PWR_FLAG: specifies the flag to check.
 255:../SPL/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 256:../SPL/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_WU: Wake Up flag
 257:../SPL/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_SB: StandBy flag
 258:../SPL/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_PVDO: PVD Output
 259:../SPL/src/stm32f10x_pwr.c ****   * @retval The new state of PWR_FLAG (SET or RESET).
 260:../SPL/src/stm32f10x_pwr.c ****   */
 261:../SPL/src/stm32f10x_pwr.c **** FlagStatus PWR_GetFlagStatus(uint32_t PWR_FLAG)
 262:../SPL/src/stm32f10x_pwr.c **** {
 529              		.loc 2 262 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 16
 532              		@ frame_needed = 1, uses_anonymous_args = 0
 533 0224 80B5     		push	{r7, lr}
 534              	.LCFI23:
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 7, -8
 537              		.cfi_offset 14, -4
 538 0226 84B0     		sub	sp, sp, #16
 539              	.LCFI24:
 540              		.cfi_def_cfa_offset 24
 541 0228 00AF     		add	r7, sp, #0
 542              	.LCFI25:
 543              		.cfi_def_cfa_register 7
 544 022a 7860     		str	r0, [r7, #4]
 263:../SPL/src/stm32f10x_pwr.c ****   FlagStatus bitstatus = RESET;
 545              		.loc 2 263 0
 546 022c 4FF00003 		mov	r3, #0
 547 0230 FB73     		strb	r3, [r7, #15]
 264:../SPL/src/stm32f10x_pwr.c ****   /* Check the parameters */
 265:../SPL/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_GET_FLAG(PWR_FLAG));
 548              		.loc 2 265 0
 549 0232 7B68     		ldr	r3, [r7, #4]
 550 0234 012B     		cmp	r3, #1
 551 0236 0AD0     		beq	.L31
 552              		.loc 2 265 0 is_stmt 0 discriminator 1
 553 0238 7B68     		ldr	r3, [r7, #4]
 554 023a 022B     		cmp	r3, #2
 555 023c 07D0     		beq	.L31
 556              		.loc 2 265 0 discriminator 2
 557 023e 7B68     		ldr	r3, [r7, #4]
 558 0240 042B     		cmp	r3, #4
 559 0242 04D0     		beq	.L31
 560              		.loc 2 265 0 discriminator 3
 561 0244 0B48     		ldr	r0, .L35
 562 0246 40F20911 		movw	r1, #265
 563 024a FFF7FEFF 		bl	assert_failed
 564              	.L31:
 266:../SPL/src/stm32f10x_pwr.c ****   
 267:../SPL/src/stm32f10x_pwr.c ****   if ((PWR->CSR & PWR_FLAG) != (uint32_t)RESET)
 565              		.loc 2 267 0 is_stmt 1
 566 024e 0A4B     		ldr	r3, .L35+4
 567 0250 5A68     		ldr	r2, [r3, #4]
 568 0252 7B68     		ldr	r3, [r7, #4]
 569 0254 1340     		ands	r3, r3, r2
 570 0256 002B     		cmp	r3, #0
 571 0258 03D0     		beq	.L32
 268:../SPL/src/stm32f10x_pwr.c ****   {
 269:../SPL/src/stm32f10x_pwr.c ****     bitstatus = SET;
 572              		.loc 2 269 0
 573 025a 4FF00103 		mov	r3, #1
 574 025e FB73     		strb	r3, [r7, #15]
 575 0260 02E0     		b	.L33
 576              	.L32:
 270:../SPL/src/stm32f10x_pwr.c ****   }
 271:../SPL/src/stm32f10x_pwr.c ****   else
 272:../SPL/src/stm32f10x_pwr.c ****   {
 273:../SPL/src/stm32f10x_pwr.c ****     bitstatus = RESET;
 577              		.loc 2 273 0
 578 0262 4FF00003 		mov	r3, #0
 579 0266 FB73     		strb	r3, [r7, #15]
 580              	.L33:
 274:../SPL/src/stm32f10x_pwr.c ****   }
 275:../SPL/src/stm32f10x_pwr.c ****   /* Return the flag status */
 276:../SPL/src/stm32f10x_pwr.c ****   return bitstatus;
 581              		.loc 2 276 0
 582 0268 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 277:../SPL/src/stm32f10x_pwr.c **** }
 583              		.loc 2 277 0
 584 026a 1846     		mov	r0, r3
 585 026c 07F11007 		add	r7, r7, #16
 586 0270 BD46     		mov	sp, r7
 587 0272 80BD     		pop	{r7, pc}
 588              	.L36:
 589              		.align	2
 590              	.L35:
 591 0274 00000000 		.word	.LC0
 592 0278 00700040 		.word	1073770496
 593              		.cfi_endproc
 594              	.LFE36:
 596              		.align	2
 597              		.global	PWR_ClearFlag
 598              		.thumb
 599              		.thumb_func
 601              	PWR_ClearFlag:
 602              	.LFB37:
 278:../SPL/src/stm32f10x_pwr.c **** 
 279:../SPL/src/stm32f10x_pwr.c **** /**
 280:../SPL/src/stm32f10x_pwr.c ****   * @brief  Clears the PWR's pending flags.
 281:../SPL/src/stm32f10x_pwr.c ****   * @param  PWR_FLAG: specifies the flag to clear.
 282:../SPL/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 283:../SPL/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_WU: Wake Up flag
 284:../SPL/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_SB: StandBy flag
 285:../SPL/src/stm32f10x_pwr.c ****   * @retval None
 286:../SPL/src/stm32f10x_pwr.c ****   */
 287:../SPL/src/stm32f10x_pwr.c **** void PWR_ClearFlag(uint32_t PWR_FLAG)
 288:../SPL/src/stm32f10x_pwr.c **** {
 603              		.loc 2 288 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 8
 606              		@ frame_needed = 1, uses_anonymous_args = 0
 607 027c 80B5     		push	{r7, lr}
 608              	.LCFI26:
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 7, -8
 611              		.cfi_offset 14, -4
 612 027e 82B0     		sub	sp, sp, #8
 613              	.LCFI27:
 614              		.cfi_def_cfa_offset 16
 615 0280 00AF     		add	r7, sp, #0
 616              	.LCFI28:
 617              		.cfi_def_cfa_register 7
 618 0282 7860     		str	r0, [r7, #4]
 289:../SPL/src/stm32f10x_pwr.c ****   /* Check the parameters */
 290:../SPL/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_CLEAR_FLAG(PWR_FLAG));
 619              		.loc 2 290 0
 620 0284 7B68     		ldr	r3, [r7, #4]
 621 0286 012B     		cmp	r3, #1
 622 0288 07D0     		beq	.L38
 623              		.loc 2 290 0 is_stmt 0 discriminator 1
 624 028a 7B68     		ldr	r3, [r7, #4]
 625 028c 022B     		cmp	r3, #2
 626 028e 04D0     		beq	.L38
 627              		.loc 2 290 0 discriminator 2
 628 0290 0848     		ldr	r0, .L39
 629 0292 4FF49171 		mov	r1, #290
 630 0296 FFF7FEFF 		bl	assert_failed
 631              	.L38:
 291:../SPL/src/stm32f10x_pwr.c ****          
 292:../SPL/src/stm32f10x_pwr.c ****   PWR->CR |=  PWR_FLAG << 2;
 632              		.loc 2 292 0 is_stmt 1
 633 029a 074B     		ldr	r3, .L39+4
 634 029c 064A     		ldr	r2, .L39+4
 635 029e 1168     		ldr	r1, [r2, #0]
 636 02a0 7A68     		ldr	r2, [r7, #4]
 637 02a2 4FEA8202 		lsl	r2, r2, #2
 638 02a6 0A43     		orrs	r2, r2, r1
 639 02a8 1A60     		str	r2, [r3, #0]
 293:../SPL/src/stm32f10x_pwr.c **** }
 640              		.loc 2 293 0
 641 02aa 07F10807 		add	r7, r7, #8
 642 02ae BD46     		mov	sp, r7
 643 02b0 80BD     		pop	{r7, pc}
 644              	.L40:
 645 02b2 00BF     		.align	2
 646              	.L39:
 647 02b4 00000000 		.word	.LC0
 648 02b8 00700040 		.word	1073770496
 649              		.cfi_endproc
 650              	.LFE37:
 652              	.Letext0:
 653              		.file 3 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 654              		.file 4 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\CMSIS/stm32f10x.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_pwr.c
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:18     .text:00000000 $t
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:22     .text:00000000 __WFI
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:52     .text:0000000c __WFE
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:82     .text:00000018 PWR_DeInit
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:111    .rodata:00000000 $d
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:120    .text:00000038 PWR_BackupAccessCmd
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:163    .text:00000068 $d
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:168    .text:00000070 $t
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:173    .text:00000070 PWR_PVDCmd
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:216    .text:000000a0 $d
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:221    .text:000000a8 $t
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:226    .text:000000a8 PWR_PVDLevelConfig
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:308    .text:00000114 $d
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:313    .text:0000011c $t
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:318    .text:0000011c PWR_WakeUpPinCmd
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:361    .text:0000014c $d
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:366    .text:00000154 $t
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:371    .text:00000154 PWR_EnterSTOPMode
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:467    .text:000001e0 $d
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:473    .text:000001ec $t
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:478    .text:000001ec PWR_EnterSTANDBYMode
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:517    .text:0000021c $d
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:522    .text:00000224 $t
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:527    .text:00000224 PWR_GetFlagStatus
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:591    .text:00000274 $d
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:596    .text:0000027c $t
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:601    .text:0000027c PWR_ClearFlag
C:\Users\PC108\AppData\Local\Temp\ccQLlP55.s:647    .text:000002b4 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.9001f459856fa07d79ce9793bb17c6cd
                           .group:00000000 wm4.stm32f10x.h.51.b859cb68ed44ee02c916b41cb8c68f1c
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.522.115ebb8291fa96f8c9e0b9a9b670f703
                           .group:00000000 wm4.stm32f10x_exti.h.56.8b2f216f9ded9d03a9eb42ed6973fc04
                           .group:00000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:00000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765
                           .group:00000000 wm4.stm32f10x_tim.h.25.21c6ec062f1e74898cb96a57da276fec
                           .group:00000000 wm4.stm32f10x_usart.h.25.29629c699b65db3f3efd3561f66b0bf6
                           .group:00000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:00000000 wm4.stm32f10x_pwr.h.58.354f21f5b361fcd5696119ebefe92201

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
assert_failed
