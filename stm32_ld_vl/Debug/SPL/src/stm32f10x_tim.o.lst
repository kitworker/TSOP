   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_tim.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  20              	.LC0:
  21 0000 2E2E2F53 		.ascii	"../SPL/src/stm32f10x_tim.c\000"
  21      504C2F73 
  21      72632F73 
  21      746D3332 
  21      66313078 
  22 001b 00       		.text
  23              		.align	2
  24              		.global	TIM_DeInit
  25              		.thumb
  26              		.thumb_func
  28              	TIM_DeInit:
  29              	.LFB29:
  30              		.file 1 "../SPL/src/stm32f10x_tim.c"
   1:../SPL/src/stm32f10x_tim.c **** /**
   2:../SPL/src/stm32f10x_tim.c ****   ******************************************************************************
   3:../SPL/src/stm32f10x_tim.c ****   * @file    stm32f10x_tim.c
   4:../SPL/src/stm32f10x_tim.c ****   * @author  MCD Application Team
   5:../SPL/src/stm32f10x_tim.c ****   * @version V3.5.0
   6:../SPL/src/stm32f10x_tim.c ****   * @date    11-March-2011
   7:../SPL/src/stm32f10x_tim.c ****   * @brief   This file provides all the TIM firmware functions.
   8:../SPL/src/stm32f10x_tim.c ****   ******************************************************************************
   9:../SPL/src/stm32f10x_tim.c ****   * @attention
  10:../SPL/src/stm32f10x_tim.c ****   *
  11:../SPL/src/stm32f10x_tim.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../SPL/src/stm32f10x_tim.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../SPL/src/stm32f10x_tim.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../SPL/src/stm32f10x_tim.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../SPL/src/stm32f10x_tim.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../SPL/src/stm32f10x_tim.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../SPL/src/stm32f10x_tim.c ****   *
  18:../SPL/src/stm32f10x_tim.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../SPL/src/stm32f10x_tim.c ****   ******************************************************************************
  20:../SPL/src/stm32f10x_tim.c ****   */
  21:../SPL/src/stm32f10x_tim.c **** 
  22:../SPL/src/stm32f10x_tim.c **** /* Includes ------------------------------------------------------------------*/
  23:../SPL/src/stm32f10x_tim.c **** #include "stm32f10x_tim.h"
  24:../SPL/src/stm32f10x_tim.c **** #include "stm32f10x_rcc.h"
  25:../SPL/src/stm32f10x_tim.c **** 
  26:../SPL/src/stm32f10x_tim.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../SPL/src/stm32f10x_tim.c ****   * @{
  28:../SPL/src/stm32f10x_tim.c ****   */
  29:../SPL/src/stm32f10x_tim.c **** 
  30:../SPL/src/stm32f10x_tim.c **** /** @defgroup TIM 
  31:../SPL/src/stm32f10x_tim.c ****   * @brief TIM driver modules
  32:../SPL/src/stm32f10x_tim.c ****   * @{
  33:../SPL/src/stm32f10x_tim.c ****   */
  34:../SPL/src/stm32f10x_tim.c **** 
  35:../SPL/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_TypesDefinitions
  36:../SPL/src/stm32f10x_tim.c ****   * @{
  37:../SPL/src/stm32f10x_tim.c ****   */
  38:../SPL/src/stm32f10x_tim.c **** 
  39:../SPL/src/stm32f10x_tim.c **** /**
  40:../SPL/src/stm32f10x_tim.c ****   * @}
  41:../SPL/src/stm32f10x_tim.c ****   */
  42:../SPL/src/stm32f10x_tim.c **** 
  43:../SPL/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Defines
  44:../SPL/src/stm32f10x_tim.c ****   * @{
  45:../SPL/src/stm32f10x_tim.c ****   */
  46:../SPL/src/stm32f10x_tim.c **** 
  47:../SPL/src/stm32f10x_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
  48:../SPL/src/stm32f10x_tim.c **** #define SMCR_ETR_Mask               ((uint16_t)0x00FF) 
  49:../SPL/src/stm32f10x_tim.c **** #define CCMR_Offset                 ((uint16_t)0x0018)
  50:../SPL/src/stm32f10x_tim.c **** #define CCER_CCE_Set                ((uint16_t)0x0001)  
  51:../SPL/src/stm32f10x_tim.c **** #define	CCER_CCNE_Set               ((uint16_t)0x0004) 
  52:../SPL/src/stm32f10x_tim.c **** 
  53:../SPL/src/stm32f10x_tim.c **** /**
  54:../SPL/src/stm32f10x_tim.c ****   * @}
  55:../SPL/src/stm32f10x_tim.c ****   */
  56:../SPL/src/stm32f10x_tim.c **** 
  57:../SPL/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Macros
  58:../SPL/src/stm32f10x_tim.c ****   * @{
  59:../SPL/src/stm32f10x_tim.c ****   */
  60:../SPL/src/stm32f10x_tim.c **** 
  61:../SPL/src/stm32f10x_tim.c **** /**
  62:../SPL/src/stm32f10x_tim.c ****   * @}
  63:../SPL/src/stm32f10x_tim.c ****   */
  64:../SPL/src/stm32f10x_tim.c **** 
  65:../SPL/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Variables
  66:../SPL/src/stm32f10x_tim.c ****   * @{
  67:../SPL/src/stm32f10x_tim.c ****   */
  68:../SPL/src/stm32f10x_tim.c **** 
  69:../SPL/src/stm32f10x_tim.c **** /**
  70:../SPL/src/stm32f10x_tim.c ****   * @}
  71:../SPL/src/stm32f10x_tim.c ****   */
  72:../SPL/src/stm32f10x_tim.c **** 
  73:../SPL/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_FunctionPrototypes
  74:../SPL/src/stm32f10x_tim.c ****   * @{
  75:../SPL/src/stm32f10x_tim.c ****   */
  76:../SPL/src/stm32f10x_tim.c **** 
  77:../SPL/src/stm32f10x_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  78:../SPL/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  79:../SPL/src/stm32f10x_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  80:../SPL/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  81:../SPL/src/stm32f10x_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  82:../SPL/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  83:../SPL/src/stm32f10x_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  84:../SPL/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  85:../SPL/src/stm32f10x_tim.c **** /**
  86:../SPL/src/stm32f10x_tim.c ****   * @}
  87:../SPL/src/stm32f10x_tim.c ****   */
  88:../SPL/src/stm32f10x_tim.c **** 
  89:../SPL/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Macros
  90:../SPL/src/stm32f10x_tim.c ****   * @{
  91:../SPL/src/stm32f10x_tim.c ****   */
  92:../SPL/src/stm32f10x_tim.c **** 
  93:../SPL/src/stm32f10x_tim.c **** /**
  94:../SPL/src/stm32f10x_tim.c ****   * @}
  95:../SPL/src/stm32f10x_tim.c ****   */
  96:../SPL/src/stm32f10x_tim.c **** 
  97:../SPL/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Variables
  98:../SPL/src/stm32f10x_tim.c ****   * @{
  99:../SPL/src/stm32f10x_tim.c ****   */
 100:../SPL/src/stm32f10x_tim.c **** 
 101:../SPL/src/stm32f10x_tim.c **** /**
 102:../SPL/src/stm32f10x_tim.c ****   * @}
 103:../SPL/src/stm32f10x_tim.c ****   */
 104:../SPL/src/stm32f10x_tim.c **** 
 105:../SPL/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_FunctionPrototypes
 106:../SPL/src/stm32f10x_tim.c ****   * @{
 107:../SPL/src/stm32f10x_tim.c ****   */
 108:../SPL/src/stm32f10x_tim.c **** 
 109:../SPL/src/stm32f10x_tim.c **** /**
 110:../SPL/src/stm32f10x_tim.c ****   * @}
 111:../SPL/src/stm32f10x_tim.c ****   */
 112:../SPL/src/stm32f10x_tim.c **** 
 113:../SPL/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Functions
 114:../SPL/src/stm32f10x_tim.c ****   * @{
 115:../SPL/src/stm32f10x_tim.c ****   */
 116:../SPL/src/stm32f10x_tim.c **** 
 117:../SPL/src/stm32f10x_tim.c **** /**
 118:../SPL/src/stm32f10x_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 119:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
 120:../SPL/src/stm32f10x_tim.c ****   * @retval None
 121:../SPL/src/stm32f10x_tim.c ****   */
 122:../SPL/src/stm32f10x_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 123:../SPL/src/stm32f10x_tim.c **** {
  31              		.loc 1 123 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 8
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35 0000 80B5     		push	{r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 82B0     		sub	sp, sp, #8
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 16
  43 0004 00AF     		add	r7, sp, #0
  44              	.LCFI2:
  45              		.cfi_def_cfa_register 7
  46 0006 7860     		str	r0, [r7, #4]
 124:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
 125:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
  47              		.loc 1 125 0
  48 0008 7A68     		ldr	r2, [r7, #4]
  49 000a B64B     		ldr	r3, .L20
  50 000c 9A42     		cmp	r2, r3
  51 000e 44D0     		beq	.L2
  52              		.loc 1 125 0 is_stmt 0 discriminator 1
  53 0010 7B68     		ldr	r3, [r7, #4]
  54 0012 B3F1804F 		cmp	r3, #1073741824
  55 0016 40D0     		beq	.L2
  56              		.loc 1 125 0 discriminator 2
  57 0018 7A68     		ldr	r2, [r7, #4]
  58 001a B34B     		ldr	r3, .L20+4
  59 001c 9A42     		cmp	r2, r3
  60 001e 3CD0     		beq	.L2
  61              		.loc 1 125 0 discriminator 3
  62 0020 7A68     		ldr	r2, [r7, #4]
  63 0022 B24B     		ldr	r3, .L20+8
  64 0024 9A42     		cmp	r2, r3
  65 0026 38D0     		beq	.L2
  66              		.loc 1 125 0 discriminator 4
  67 0028 7A68     		ldr	r2, [r7, #4]
  68 002a B14B     		ldr	r3, .L20+12
  69 002c 9A42     		cmp	r2, r3
  70 002e 34D0     		beq	.L2
  71              		.loc 1 125 0 discriminator 5
  72 0030 7A68     		ldr	r2, [r7, #4]
  73 0032 B04B     		ldr	r3, .L20+16
  74 0034 9A42     		cmp	r2, r3
  75 0036 30D0     		beq	.L2
  76              		.loc 1 125 0 discriminator 6
  77 0038 7A68     		ldr	r2, [r7, #4]
  78 003a AF4B     		ldr	r3, .L20+20
  79 003c 9A42     		cmp	r2, r3
  80 003e 2CD0     		beq	.L2
  81              		.loc 1 125 0 discriminator 7
  82 0040 7A68     		ldr	r2, [r7, #4]
  83 0042 AE4B     		ldr	r3, .L20+24
  84 0044 9A42     		cmp	r2, r3
  85 0046 28D0     		beq	.L2
  86              		.loc 1 125 0 discriminator 8
  87 0048 7A68     		ldr	r2, [r7, #4]
  88 004a AD4B     		ldr	r3, .L20+28
  89 004c 9A42     		cmp	r2, r3
  90 004e 24D0     		beq	.L2
  91              		.loc 1 125 0 discriminator 9
  92 0050 7A68     		ldr	r2, [r7, #4]
  93 0052 AC4B     		ldr	r3, .L20+32
  94 0054 9A42     		cmp	r2, r3
  95 0056 20D0     		beq	.L2
  96              		.loc 1 125 0 discriminator 10
  97 0058 7A68     		ldr	r2, [r7, #4]
  98 005a AB4B     		ldr	r3, .L20+36
  99 005c 9A42     		cmp	r2, r3
 100 005e 1CD0     		beq	.L2
 101              		.loc 1 125 0 discriminator 11
 102 0060 7A68     		ldr	r2, [r7, #4]
 103 0062 AA4B     		ldr	r3, .L20+40
 104 0064 9A42     		cmp	r2, r3
 105 0066 18D0     		beq	.L2
 106              		.loc 1 125 0 discriminator 12
 107 0068 7A68     		ldr	r2, [r7, #4]
 108 006a A94B     		ldr	r3, .L20+44
 109 006c 9A42     		cmp	r2, r3
 110 006e 14D0     		beq	.L2
 111              		.loc 1 125 0 discriminator 13
 112 0070 7A68     		ldr	r2, [r7, #4]
 113 0072 A84B     		ldr	r3, .L20+48
 114 0074 9A42     		cmp	r2, r3
 115 0076 10D0     		beq	.L2
 116              		.loc 1 125 0 discriminator 14
 117 0078 7A68     		ldr	r2, [r7, #4]
 118 007a A74B     		ldr	r3, .L20+52
 119 007c 9A42     		cmp	r2, r3
 120 007e 0CD0     		beq	.L2
 121              		.loc 1 125 0 discriminator 15
 122 0080 7A68     		ldr	r2, [r7, #4]
 123 0082 A64B     		ldr	r3, .L20+56
 124 0084 9A42     		cmp	r2, r3
 125 0086 08D0     		beq	.L2
 126              		.loc 1 125 0 discriminator 16
 127 0088 7A68     		ldr	r2, [r7, #4]
 128 008a A54B     		ldr	r3, .L20+60
 129 008c 9A42     		cmp	r2, r3
 130 008e 04D0     		beq	.L2
 131              		.loc 1 125 0 discriminator 17
 132 0090 A448     		ldr	r0, .L20+64
 133 0092 4FF07D01 		mov	r1, #125
 134 0096 FFF7FEFF 		bl	assert_failed
 135              	.L2:
 126:../SPL/src/stm32f10x_tim.c ****  
 127:../SPL/src/stm32f10x_tim.c ****   if (TIMx == TIM1)
 136              		.loc 1 127 0 is_stmt 1
 137 009a 7A68     		ldr	r2, [r7, #4]
 138 009c 914B     		ldr	r3, .L20
 139 009e 9A42     		cmp	r2, r3
 140 00a0 0CD1     		bne	.L3
 128:../SPL/src/stm32f10x_tim.c ****   {
 129:../SPL/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
 141              		.loc 1 129 0
 142 00a2 4FF40060 		mov	r0, #2048
 143 00a6 4FF00101 		mov	r1, #1
 144 00aa FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 130:../SPL/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 145              		.loc 1 130 0
 146 00ae 4FF40060 		mov	r0, #2048
 147 00b2 4FF00001 		mov	r1, #0
 148 00b6 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 149 00ba 0EE1     		b	.L1
 150              	.L3:
 131:../SPL/src/stm32f10x_tim.c ****   }     
 132:../SPL/src/stm32f10x_tim.c ****   else if (TIMx == TIM2)
 151              		.loc 1 132 0
 152 00bc 7B68     		ldr	r3, [r7, #4]
 153 00be B3F1804F 		cmp	r3, #1073741824
 154 00c2 0CD1     		bne	.L5
 133:../SPL/src/stm32f10x_tim.c ****   {
 134:../SPL/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
 155              		.loc 1 134 0
 156 00c4 4FF00100 		mov	r0, #1
 157 00c8 4FF00101 		mov	r1, #1
 158 00cc FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 135:../SPL/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 159              		.loc 1 135 0
 160 00d0 4FF00100 		mov	r0, #1
 161 00d4 4FF00001 		mov	r1, #0
 162 00d8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 163 00dc FDE0     		b	.L1
 164              	.L5:
 136:../SPL/src/stm32f10x_tim.c ****   }
 137:../SPL/src/stm32f10x_tim.c ****   else if (TIMx == TIM3)
 165              		.loc 1 137 0
 166 00de 7A68     		ldr	r2, [r7, #4]
 167 00e0 814B     		ldr	r3, .L20+4
 168 00e2 9A42     		cmp	r2, r3
 169 00e4 0CD1     		bne	.L6
 138:../SPL/src/stm32f10x_tim.c ****   {
 139:../SPL/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
 170              		.loc 1 139 0
 171 00e6 4FF00200 		mov	r0, #2
 172 00ea 4FF00101 		mov	r1, #1
 173 00ee FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 140:../SPL/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 174              		.loc 1 140 0
 175 00f2 4FF00200 		mov	r0, #2
 176 00f6 4FF00001 		mov	r1, #0
 177 00fa FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 178 00fe ECE0     		b	.L1
 179              	.L6:
 141:../SPL/src/stm32f10x_tim.c ****   }
 142:../SPL/src/stm32f10x_tim.c ****   else if (TIMx == TIM4)
 180              		.loc 1 142 0
 181 0100 7A68     		ldr	r2, [r7, #4]
 182 0102 7A4B     		ldr	r3, .L20+8
 183 0104 9A42     		cmp	r2, r3
 184 0106 0CD1     		bne	.L7
 143:../SPL/src/stm32f10x_tim.c ****   {
 144:../SPL/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
 185              		.loc 1 144 0
 186 0108 4FF00400 		mov	r0, #4
 187 010c 4FF00101 		mov	r1, #1
 188 0110 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 145:../SPL/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 189              		.loc 1 145 0
 190 0114 4FF00400 		mov	r0, #4
 191 0118 4FF00001 		mov	r1, #0
 192 011c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 193 0120 DBE0     		b	.L1
 194              	.L7:
 146:../SPL/src/stm32f10x_tim.c ****   } 
 147:../SPL/src/stm32f10x_tim.c ****   else if (TIMx == TIM5)
 195              		.loc 1 147 0
 196 0122 7A68     		ldr	r2, [r7, #4]
 197 0124 724B     		ldr	r3, .L20+12
 198 0126 9A42     		cmp	r2, r3
 199 0128 0CD1     		bne	.L8
 148:../SPL/src/stm32f10x_tim.c ****   {
 149:../SPL/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 200              		.loc 1 149 0
 201 012a 4FF00800 		mov	r0, #8
 202 012e 4FF00101 		mov	r1, #1
 203 0132 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 150:../SPL/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 204              		.loc 1 150 0
 205 0136 4FF00800 		mov	r0, #8
 206 013a 4FF00001 		mov	r1, #0
 207 013e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 208 0142 CAE0     		b	.L1
 209              	.L8:
 151:../SPL/src/stm32f10x_tim.c ****   } 
 152:../SPL/src/stm32f10x_tim.c ****   else if (TIMx == TIM6)
 210              		.loc 1 152 0
 211 0144 7A68     		ldr	r2, [r7, #4]
 212 0146 6B4B     		ldr	r3, .L20+16
 213 0148 9A42     		cmp	r2, r3
 214 014a 0CD1     		bne	.L9
 153:../SPL/src/stm32f10x_tim.c ****   {
 154:../SPL/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 215              		.loc 1 154 0
 216 014c 4FF01000 		mov	r0, #16
 217 0150 4FF00101 		mov	r1, #1
 218 0154 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 155:../SPL/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 219              		.loc 1 155 0
 220 0158 4FF01000 		mov	r0, #16
 221 015c 4FF00001 		mov	r1, #0
 222 0160 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 223 0164 B9E0     		b	.L1
 224              	.L9:
 156:../SPL/src/stm32f10x_tim.c ****   } 
 157:../SPL/src/stm32f10x_tim.c ****   else if (TIMx == TIM7)
 225              		.loc 1 157 0
 226 0166 7A68     		ldr	r2, [r7, #4]
 227 0168 634B     		ldr	r3, .L20+20
 228 016a 9A42     		cmp	r2, r3
 229 016c 0CD1     		bne	.L10
 158:../SPL/src/stm32f10x_tim.c ****   {
 159:../SPL/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 230              		.loc 1 159 0
 231 016e 4FF02000 		mov	r0, #32
 232 0172 4FF00101 		mov	r1, #1
 233 0176 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 160:../SPL/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 234              		.loc 1 160 0
 235 017a 4FF02000 		mov	r0, #32
 236 017e 4FF00001 		mov	r1, #0
 237 0182 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 238 0186 A8E0     		b	.L1
 239              	.L10:
 161:../SPL/src/stm32f10x_tim.c ****   } 
 162:../SPL/src/stm32f10x_tim.c ****   else if (TIMx == TIM8)
 240              		.loc 1 162 0
 241 0188 7A68     		ldr	r2, [r7, #4]
 242 018a 5C4B     		ldr	r3, .L20+24
 243 018c 9A42     		cmp	r2, r3
 244 018e 0CD1     		bne	.L11
 163:../SPL/src/stm32f10x_tim.c ****   {
 164:../SPL/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 245              		.loc 1 164 0
 246 0190 4FF40050 		mov	r0, #8192
 247 0194 4FF00101 		mov	r1, #1
 248 0198 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 165:../SPL/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);
 249              		.loc 1 165 0
 250 019c 4FF40050 		mov	r0, #8192
 251 01a0 4FF00001 		mov	r1, #0
 252 01a4 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 253 01a8 97E0     		b	.L1
 254              	.L11:
 166:../SPL/src/stm32f10x_tim.c ****   }
 167:../SPL/src/stm32f10x_tim.c ****   else if (TIMx == TIM9)
 255              		.loc 1 167 0
 256 01aa 7A68     		ldr	r2, [r7, #4]
 257 01ac 544B     		ldr	r3, .L20+28
 258 01ae 9A42     		cmp	r2, r3
 259 01b0 0CD1     		bne	.L12
 168:../SPL/src/stm32f10x_tim.c ****   {      
 169:../SPL/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 260              		.loc 1 169 0
 261 01b2 4FF40020 		mov	r0, #524288
 262 01b6 4FF00101 		mov	r1, #1
 263 01ba FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 170:../SPL/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 264              		.loc 1 170 0
 265 01be 4FF40020 		mov	r0, #524288
 266 01c2 4FF00001 		mov	r1, #0
 267 01c6 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 268 01ca 86E0     		b	.L1
 269              	.L12:
 171:../SPL/src/stm32f10x_tim.c ****    }  
 172:../SPL/src/stm32f10x_tim.c ****   else if (TIMx == TIM10)
 270              		.loc 1 172 0
 271 01cc 7A68     		ldr	r2, [r7, #4]
 272 01ce 4D4B     		ldr	r3, .L20+32
 273 01d0 9A42     		cmp	r2, r3
 274 01d2 0CD1     		bne	.L13
 173:../SPL/src/stm32f10x_tim.c ****   {      
 174:../SPL/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 275              		.loc 1 174 0
 276 01d4 4FF48010 		mov	r0, #1048576
 277 01d8 4FF00101 		mov	r1, #1
 278 01dc FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 175:../SPL/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 279              		.loc 1 175 0
 280 01e0 4FF48010 		mov	r0, #1048576
 281 01e4 4FF00001 		mov	r1, #0
 282 01e8 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 283 01ec 75E0     		b	.L1
 284              	.L13:
 176:../SPL/src/stm32f10x_tim.c ****   }  
 177:../SPL/src/stm32f10x_tim.c ****   else if (TIMx == TIM11) 
 285              		.loc 1 177 0
 286 01ee 7A68     		ldr	r2, [r7, #4]
 287 01f0 454B     		ldr	r3, .L20+36
 288 01f2 9A42     		cmp	r2, r3
 289 01f4 0CD1     		bne	.L14
 178:../SPL/src/stm32f10x_tim.c ****   {     
 179:../SPL/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 290              		.loc 1 179 0
 291 01f6 4FF40010 		mov	r0, #2097152
 292 01fa 4FF00101 		mov	r1, #1
 293 01fe FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 180:../SPL/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 294              		.loc 1 180 0
 295 0202 4FF40010 		mov	r0, #2097152
 296 0206 4FF00001 		mov	r1, #0
 297 020a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 298 020e 64E0     		b	.L1
 299              	.L14:
 181:../SPL/src/stm32f10x_tim.c ****   }  
 182:../SPL/src/stm32f10x_tim.c ****   else if (TIMx == TIM12)
 300              		.loc 1 182 0
 301 0210 7A68     		ldr	r2, [r7, #4]
 302 0212 3E4B     		ldr	r3, .L20+40
 303 0214 9A42     		cmp	r2, r3
 304 0216 0CD1     		bne	.L15
 183:../SPL/src/stm32f10x_tim.c ****   {      
 184:../SPL/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 305              		.loc 1 184 0
 306 0218 4FF04000 		mov	r0, #64
 307 021c 4FF00101 		mov	r1, #1
 308 0220 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 185:../SPL/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 309              		.loc 1 185 0
 310 0224 4FF04000 		mov	r0, #64
 311 0228 4FF00001 		mov	r1, #0
 312 022c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 313 0230 53E0     		b	.L1
 314              	.L15:
 186:../SPL/src/stm32f10x_tim.c ****   }  
 187:../SPL/src/stm32f10x_tim.c ****   else if (TIMx == TIM13) 
 315              		.loc 1 187 0
 316 0232 7A68     		ldr	r2, [r7, #4]
 317 0234 364B     		ldr	r3, .L20+44
 318 0236 9A42     		cmp	r2, r3
 319 0238 0CD1     		bne	.L16
 188:../SPL/src/stm32f10x_tim.c ****   {       
 189:../SPL/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 320              		.loc 1 189 0
 321 023a 4FF08000 		mov	r0, #128
 322 023e 4FF00101 		mov	r1, #1
 323 0242 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 190:../SPL/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 324              		.loc 1 190 0
 325 0246 4FF08000 		mov	r0, #128
 326 024a 4FF00001 		mov	r1, #0
 327 024e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 328 0252 42E0     		b	.L1
 329              	.L16:
 191:../SPL/src/stm32f10x_tim.c ****   }
 192:../SPL/src/stm32f10x_tim.c ****   else if (TIMx == TIM14) 
 330              		.loc 1 192 0
 331 0254 7A68     		ldr	r2, [r7, #4]
 332 0256 2F4B     		ldr	r3, .L20+48
 333 0258 9A42     		cmp	r2, r3
 334 025a 0CD1     		bne	.L17
 193:../SPL/src/stm32f10x_tim.c ****   {       
 194:../SPL/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 335              		.loc 1 194 0
 336 025c 4FF48070 		mov	r0, #256
 337 0260 4FF00101 		mov	r1, #1
 338 0264 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 195:../SPL/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE);  
 339              		.loc 1 195 0
 340 0268 4FF48070 		mov	r0, #256
 341 026c 4FF00001 		mov	r1, #0
 342 0270 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 343 0274 31E0     		b	.L1
 344              	.L17:
 196:../SPL/src/stm32f10x_tim.c ****   }        
 197:../SPL/src/stm32f10x_tim.c ****   else if (TIMx == TIM15)
 345              		.loc 1 197 0
 346 0276 7A68     		ldr	r2, [r7, #4]
 347 0278 274B     		ldr	r3, .L20+52
 348 027a 9A42     		cmp	r2, r3
 349 027c 0CD1     		bne	.L18
 198:../SPL/src/stm32f10x_tim.c ****   {
 199:../SPL/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, ENABLE);
 350              		.loc 1 199 0
 351 027e 4FF48030 		mov	r0, #65536
 352 0282 4FF00101 		mov	r1, #1
 353 0286 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 200:../SPL/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, DISABLE);
 354              		.loc 1 200 0
 355 028a 4FF48030 		mov	r0, #65536
 356 028e 4FF00001 		mov	r1, #0
 357 0292 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 358 0296 20E0     		b	.L1
 359              	.L18:
 201:../SPL/src/stm32f10x_tim.c ****   } 
 202:../SPL/src/stm32f10x_tim.c ****   else if (TIMx == TIM16)
 360              		.loc 1 202 0
 361 0298 7A68     		ldr	r2, [r7, #4]
 362 029a 204B     		ldr	r3, .L20+56
 363 029c 9A42     		cmp	r2, r3
 364 029e 0CD1     		bne	.L19
 203:../SPL/src/stm32f10x_tim.c ****   {
 204:../SPL/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, ENABLE);
 365              		.loc 1 204 0
 366 02a0 4FF40030 		mov	r0, #131072
 367 02a4 4FF00101 		mov	r1, #1
 368 02a8 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 205:../SPL/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, DISABLE);
 369              		.loc 1 205 0
 370 02ac 4FF40030 		mov	r0, #131072
 371 02b0 4FF00001 		mov	r1, #0
 372 02b4 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 373 02b8 0FE0     		b	.L1
 374              	.L19:
 206:../SPL/src/stm32f10x_tim.c ****   } 
 207:../SPL/src/stm32f10x_tim.c ****   else
 208:../SPL/src/stm32f10x_tim.c ****   {
 209:../SPL/src/stm32f10x_tim.c ****     if (TIMx == TIM17)
 375              		.loc 1 209 0
 376 02ba 7A68     		ldr	r2, [r7, #4]
 377 02bc 184B     		ldr	r3, .L20+60
 378 02be 9A42     		cmp	r2, r3
 379 02c0 0BD1     		bne	.L1
 210:../SPL/src/stm32f10x_tim.c ****     {
 211:../SPL/src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, ENABLE);
 380              		.loc 1 211 0
 381 02c2 4FF48020 		mov	r0, #262144
 382 02c6 4FF00101 		mov	r1, #1
 383 02ca FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 212:../SPL/src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, DISABLE);
 384              		.loc 1 212 0
 385 02ce 4FF48020 		mov	r0, #262144
 386 02d2 4FF00001 		mov	r1, #0
 387 02d6 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 388              	.L1:
 213:../SPL/src/stm32f10x_tim.c ****     }  
 214:../SPL/src/stm32f10x_tim.c ****   }
 215:../SPL/src/stm32f10x_tim.c **** }
 389              		.loc 1 215 0
 390 02da 07F10807 		add	r7, r7, #8
 391 02de BD46     		mov	sp, r7
 392 02e0 80BD     		pop	{r7, pc}
 393              	.L21:
 394 02e2 00BF     		.align	2
 395              	.L20:
 396 02e4 002C0140 		.word	1073818624
 397 02e8 00040040 		.word	1073742848
 398 02ec 00080040 		.word	1073743872
 399 02f0 000C0040 		.word	1073744896
 400 02f4 00100040 		.word	1073745920
 401 02f8 00140040 		.word	1073746944
 402 02fc 00340140 		.word	1073820672
 403 0300 004C0140 		.word	1073826816
 404 0304 00500140 		.word	1073827840
 405 0308 00540140 		.word	1073828864
 406 030c 00180040 		.word	1073747968
 407 0310 001C0040 		.word	1073748992
 408 0314 00200040 		.word	1073750016
 409 0318 00400140 		.word	1073823744
 410 031c 00440140 		.word	1073824768
 411 0320 00480140 		.word	1073825792
 412 0324 00000000 		.word	.LC0
 413              		.cfi_endproc
 414              	.LFE29:
 416              		.align	2
 417              		.global	TIM_TimeBaseInit
 418              		.thumb
 419              		.thumb_func
 421              	TIM_TimeBaseInit:
 422              	.LFB30:
 216:../SPL/src/stm32f10x_tim.c **** 
 217:../SPL/src/stm32f10x_tim.c **** /**
 218:../SPL/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 219:../SPL/src/stm32f10x_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 220:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
 221:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef
 222:../SPL/src/stm32f10x_tim.c ****   *         structure that contains the configuration information for the 
 223:../SPL/src/stm32f10x_tim.c ****   *         specified TIM peripheral.
 224:../SPL/src/stm32f10x_tim.c ****   * @retval None
 225:../SPL/src/stm32f10x_tim.c ****   */
 226:../SPL/src/stm32f10x_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 227:../SPL/src/stm32f10x_tim.c **** {
 423              		.loc 1 227 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 16
 426              		@ frame_needed = 1, uses_anonymous_args = 0
 427 0328 80B5     		push	{r7, lr}
 428              	.LCFI3:
 429              		.cfi_def_cfa_offset 8
 430              		.cfi_offset 7, -8
 431              		.cfi_offset 14, -4
 432 032a 84B0     		sub	sp, sp, #16
 433              	.LCFI4:
 434              		.cfi_def_cfa_offset 24
 435 032c 00AF     		add	r7, sp, #0
 436              	.LCFI5:
 437              		.cfi_def_cfa_register 7
 438 032e 7860     		str	r0, [r7, #4]
 439 0330 3960     		str	r1, [r7, #0]
 228:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
 440              		.loc 1 228 0
 441 0332 4FF00003 		mov	r3, #0
 442 0336 FB81     		strh	r3, [r7, #14]	@ movhi
 229:../SPL/src/stm32f10x_tim.c **** 
 230:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
 231:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 443              		.loc 1 231 0
 444 0338 7A68     		ldr	r2, [r7, #4]
 445 033a 6A4B     		ldr	r3, .L31
 446 033c 9A42     		cmp	r2, r3
 447 033e 44D0     		beq	.L23
 448              		.loc 1 231 0 is_stmt 0 discriminator 1
 449 0340 7B68     		ldr	r3, [r7, #4]
 450 0342 B3F1804F 		cmp	r3, #1073741824
 451 0346 40D0     		beq	.L23
 452              		.loc 1 231 0 discriminator 2
 453 0348 7A68     		ldr	r2, [r7, #4]
 454 034a 674B     		ldr	r3, .L31+4
 455 034c 9A42     		cmp	r2, r3
 456 034e 3CD0     		beq	.L23
 457              		.loc 1 231 0 discriminator 3
 458 0350 7A68     		ldr	r2, [r7, #4]
 459 0352 664B     		ldr	r3, .L31+8
 460 0354 9A42     		cmp	r2, r3
 461 0356 38D0     		beq	.L23
 462              		.loc 1 231 0 discriminator 4
 463 0358 7A68     		ldr	r2, [r7, #4]
 464 035a 654B     		ldr	r3, .L31+12
 465 035c 9A42     		cmp	r2, r3
 466 035e 34D0     		beq	.L23
 467              		.loc 1 231 0 discriminator 5
 468 0360 7A68     		ldr	r2, [r7, #4]
 469 0362 644B     		ldr	r3, .L31+16
 470 0364 9A42     		cmp	r2, r3
 471 0366 30D0     		beq	.L23
 472              		.loc 1 231 0 discriminator 6
 473 0368 7A68     		ldr	r2, [r7, #4]
 474 036a 634B     		ldr	r3, .L31+20
 475 036c 9A42     		cmp	r2, r3
 476 036e 2CD0     		beq	.L23
 477              		.loc 1 231 0 discriminator 7
 478 0370 7A68     		ldr	r2, [r7, #4]
 479 0372 624B     		ldr	r3, .L31+24
 480 0374 9A42     		cmp	r2, r3
 481 0376 28D0     		beq	.L23
 482              		.loc 1 231 0 discriminator 8
 483 0378 7A68     		ldr	r2, [r7, #4]
 484 037a 614B     		ldr	r3, .L31+28
 485 037c 9A42     		cmp	r2, r3
 486 037e 24D0     		beq	.L23
 487              		.loc 1 231 0 discriminator 9
 488 0380 7A68     		ldr	r2, [r7, #4]
 489 0382 604B     		ldr	r3, .L31+32
 490 0384 9A42     		cmp	r2, r3
 491 0386 20D0     		beq	.L23
 492              		.loc 1 231 0 discriminator 10
 493 0388 7A68     		ldr	r2, [r7, #4]
 494 038a 5F4B     		ldr	r3, .L31+36
 495 038c 9A42     		cmp	r2, r3
 496 038e 1CD0     		beq	.L23
 497              		.loc 1 231 0 discriminator 11
 498 0390 7A68     		ldr	r2, [r7, #4]
 499 0392 5E4B     		ldr	r3, .L31+40
 500 0394 9A42     		cmp	r2, r3
 501 0396 18D0     		beq	.L23
 502              		.loc 1 231 0 discriminator 12
 503 0398 7A68     		ldr	r2, [r7, #4]
 504 039a 5D4B     		ldr	r3, .L31+44
 505 039c 9A42     		cmp	r2, r3
 506 039e 14D0     		beq	.L23
 507              		.loc 1 231 0 discriminator 13
 508 03a0 7A68     		ldr	r2, [r7, #4]
 509 03a2 5C4B     		ldr	r3, .L31+48
 510 03a4 9A42     		cmp	r2, r3
 511 03a6 10D0     		beq	.L23
 512              		.loc 1 231 0 discriminator 14
 513 03a8 7A68     		ldr	r2, [r7, #4]
 514 03aa 5B4B     		ldr	r3, .L31+52
 515 03ac 9A42     		cmp	r2, r3
 516 03ae 0CD0     		beq	.L23
 517              		.loc 1 231 0 discriminator 15
 518 03b0 7A68     		ldr	r2, [r7, #4]
 519 03b2 5A4B     		ldr	r3, .L31+56
 520 03b4 9A42     		cmp	r2, r3
 521 03b6 08D0     		beq	.L23
 522              		.loc 1 231 0 discriminator 16
 523 03b8 7A68     		ldr	r2, [r7, #4]
 524 03ba 594B     		ldr	r3, .L31+60
 525 03bc 9A42     		cmp	r2, r3
 526 03be 04D0     		beq	.L23
 527              		.loc 1 231 0 discriminator 17
 528 03c0 5848     		ldr	r0, .L31+64
 529 03c2 4FF0E701 		mov	r1, #231
 530 03c6 FFF7FEFF 		bl	assert_failed
 531              	.L23:
 232:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 532              		.loc 1 232 0 is_stmt 1
 533 03ca 3B68     		ldr	r3, [r7, #0]
 534 03cc 5B88     		ldrh	r3, [r3, #2]
 535 03ce 002B     		cmp	r3, #0
 536 03d0 14D0     		beq	.L24
 537              		.loc 1 232 0 is_stmt 0 discriminator 1
 538 03d2 3B68     		ldr	r3, [r7, #0]
 539 03d4 5B88     		ldrh	r3, [r3, #2]
 540 03d6 102B     		cmp	r3, #16
 541 03d8 10D0     		beq	.L24
 542              		.loc 1 232 0 discriminator 2
 543 03da 3B68     		ldr	r3, [r7, #0]
 544 03dc 5B88     		ldrh	r3, [r3, #2]
 545 03de 202B     		cmp	r3, #32
 546 03e0 0CD0     		beq	.L24
 547              		.loc 1 232 0 discriminator 3
 548 03e2 3B68     		ldr	r3, [r7, #0]
 549 03e4 5B88     		ldrh	r3, [r3, #2]
 550 03e6 402B     		cmp	r3, #64
 551 03e8 08D0     		beq	.L24
 552              		.loc 1 232 0 discriminator 4
 553 03ea 3B68     		ldr	r3, [r7, #0]
 554 03ec 5B88     		ldrh	r3, [r3, #2]
 555 03ee 602B     		cmp	r3, #96
 556 03f0 04D0     		beq	.L24
 557              		.loc 1 232 0 discriminator 5
 558 03f2 4C48     		ldr	r0, .L31+64
 559 03f4 4FF0E801 		mov	r1, #232
 560 03f8 FFF7FEFF 		bl	assert_failed
 561              	.L24:
 233:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 562              		.loc 1 233 0 is_stmt 1
 563 03fc 3B68     		ldr	r3, [r7, #0]
 564 03fe DB88     		ldrh	r3, [r3, #6]
 565 0400 002B     		cmp	r3, #0
 566 0402 0ED0     		beq	.L25
 567              		.loc 1 233 0 is_stmt 0 discriminator 1
 568 0404 3B68     		ldr	r3, [r7, #0]
 569 0406 DB88     		ldrh	r3, [r3, #6]
 570 0408 B3F5807F 		cmp	r3, #256
 571 040c 09D0     		beq	.L25
 572              		.loc 1 233 0 discriminator 2
 573 040e 3B68     		ldr	r3, [r7, #0]
 574 0410 DB88     		ldrh	r3, [r3, #6]
 575 0412 B3F5007F 		cmp	r3, #512
 576 0416 04D0     		beq	.L25
 577              		.loc 1 233 0 discriminator 3
 578 0418 4248     		ldr	r0, .L31+64
 579 041a 4FF0E901 		mov	r1, #233
 580 041e FFF7FEFF 		bl	assert_failed
 581              	.L25:
 234:../SPL/src/stm32f10x_tim.c **** 
 235:../SPL/src/stm32f10x_tim.c ****   tmpcr1 = TIMx->CR1;  
 582              		.loc 1 235 0 is_stmt 1
 583 0422 7B68     		ldr	r3, [r7, #4]
 584 0424 1B88     		ldrh	r3, [r3, #0]	@ movhi
 585 0426 FB81     		strh	r3, [r7, #14]	@ movhi
 236:../SPL/src/stm32f10x_tim.c **** 
 237:../SPL/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM2) || (TIMx == TIM3)||
 586              		.loc 1 237 0
 587 0428 7A68     		ldr	r2, [r7, #4]
 588 042a 2E4B     		ldr	r3, .L31
 589 042c 9A42     		cmp	r2, r3
 590 042e 13D0     		beq	.L26
 591              		.loc 1 237 0 is_stmt 0 discriminator 1
 592 0430 7A68     		ldr	r2, [r7, #4]
 593 0432 324B     		ldr	r3, .L31+24
 594 0434 9A42     		cmp	r2, r3
 595 0436 0FD0     		beq	.L26
 596 0438 7B68     		ldr	r3, [r7, #4]
 597 043a B3F1804F 		cmp	r3, #1073741824
 598 043e 0BD0     		beq	.L26
 599 0440 7A68     		ldr	r2, [r7, #4]
 600 0442 294B     		ldr	r3, .L31+4
 601 0444 9A42     		cmp	r2, r3
 602 0446 07D0     		beq	.L26
 603 0448 7A68     		ldr	r2, [r7, #4]
 604 044a 284B     		ldr	r3, .L31+8
 605 044c 9A42     		cmp	r2, r3
 606 044e 03D0     		beq	.L26
 238:../SPL/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 607              		.loc 1 238 0 is_stmt 1
 608 0450 7A68     		ldr	r2, [r7, #4]
 609 0452 274B     		ldr	r3, .L31+12
 610 0454 9A42     		cmp	r2, r3
 611 0456 08D1     		bne	.L27
 612              	.L26:
 239:../SPL/src/stm32f10x_tim.c ****   {
 240:../SPL/src/stm32f10x_tim.c ****     /* Select the Counter Mode */
 241:../SPL/src/stm32f10x_tim.c ****     tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_CR1_DIR | TIM_CR1_CMS)));
 613              		.loc 1 241 0
 614 0458 FB89     		ldrh	r3, [r7, #14]	@ movhi
 615 045a 23F07003 		bic	r3, r3, #112
 616 045e FB81     		strh	r3, [r7, #14]	@ movhi
 242:../SPL/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 617              		.loc 1 242 0
 618 0460 3B68     		ldr	r3, [r7, #0]
 619 0462 5A88     		ldrh	r2, [r3, #2]
 620 0464 FB89     		ldrh	r3, [r7, #14]	@ movhi
 621 0466 1343     		orrs	r3, r3, r2
 622 0468 FB81     		strh	r3, [r7, #14]	@ movhi
 623              	.L27:
 243:../SPL/src/stm32f10x_tim.c ****   }
 244:../SPL/src/stm32f10x_tim.c ****  
 245:../SPL/src/stm32f10x_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 624              		.loc 1 245 0
 625 046a 7A68     		ldr	r2, [r7, #4]
 626 046c 214B     		ldr	r3, .L31+16
 627 046e 9A42     		cmp	r2, r3
 628 0470 0CD0     		beq	.L28
 629              		.loc 1 245 0 is_stmt 0 discriminator 1
 630 0472 7A68     		ldr	r2, [r7, #4]
 631 0474 204B     		ldr	r3, .L31+20
 632 0476 9A42     		cmp	r2, r3
 633 0478 08D0     		beq	.L28
 246:../SPL/src/stm32f10x_tim.c ****   {
 247:../SPL/src/stm32f10x_tim.c ****     /* Set the clock division */
 248:../SPL/src/stm32f10x_tim.c ****     tmpcr1 &= (uint16_t)(~((uint16_t)TIM_CR1_CKD));
 634              		.loc 1 248 0 is_stmt 1
 635 047a FB89     		ldrh	r3, [r7, #14]	@ movhi
 636 047c 23F44073 		bic	r3, r3, #768
 637 0480 FB81     		strh	r3, [r7, #14]	@ movhi
 249:../SPL/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 638              		.loc 1 249 0
 639 0482 3B68     		ldr	r3, [r7, #0]
 640 0484 DA88     		ldrh	r2, [r3, #6]
 641 0486 FB89     		ldrh	r3, [r7, #14]	@ movhi
 642 0488 1343     		orrs	r3, r3, r2
 643 048a FB81     		strh	r3, [r7, #14]	@ movhi
 644              	.L28:
 250:../SPL/src/stm32f10x_tim.c ****   }
 251:../SPL/src/stm32f10x_tim.c **** 
 252:../SPL/src/stm32f10x_tim.c ****   TIMx->CR1 = tmpcr1;
 645              		.loc 1 252 0
 646 048c 7B68     		ldr	r3, [r7, #4]
 647 048e FA89     		ldrh	r2, [r7, #14]	@ movhi
 648 0490 1A80     		strh	r2, [r3, #0]	@ movhi
 253:../SPL/src/stm32f10x_tim.c **** 
 254:../SPL/src/stm32f10x_tim.c ****   /* Set the Autoreload value */
 255:../SPL/src/stm32f10x_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 649              		.loc 1 255 0
 650 0492 3B68     		ldr	r3, [r7, #0]
 651 0494 9A88     		ldrh	r2, [r3, #4]
 652 0496 7B68     		ldr	r3, [r7, #4]
 653 0498 9A85     		strh	r2, [r3, #44]	@ movhi
 256:../SPL/src/stm32f10x_tim.c ****  
 257:../SPL/src/stm32f10x_tim.c ****   /* Set the Prescaler value */
 258:../SPL/src/stm32f10x_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 654              		.loc 1 258 0
 655 049a 3B68     		ldr	r3, [r7, #0]
 656 049c 1A88     		ldrh	r2, [r3, #0]
 657 049e 7B68     		ldr	r3, [r7, #4]
 658 04a0 1A85     		strh	r2, [r3, #40]	@ movhi
 259:../SPL/src/stm32f10x_tim.c ****     
 260:../SPL/src/stm32f10x_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM15)|| (TIMx == TIM16) || (TIMx == TIM17))  
 659              		.loc 1 260 0
 660 04a2 7A68     		ldr	r2, [r7, #4]
 661 04a4 0F4B     		ldr	r3, .L31
 662 04a6 9A42     		cmp	r2, r3
 663 04a8 0FD0     		beq	.L29
 664              		.loc 1 260 0 is_stmt 0 discriminator 1
 665 04aa 7A68     		ldr	r2, [r7, #4]
 666 04ac 134B     		ldr	r3, .L31+24
 667 04ae 9A42     		cmp	r2, r3
 668 04b0 0BD0     		beq	.L29
 669 04b2 7A68     		ldr	r2, [r7, #4]
 670 04b4 184B     		ldr	r3, .L31+52
 671 04b6 9A42     		cmp	r2, r3
 672 04b8 07D0     		beq	.L29
 673 04ba 7A68     		ldr	r2, [r7, #4]
 674 04bc 174B     		ldr	r3, .L31+56
 675 04be 9A42     		cmp	r2, r3
 676 04c0 03D0     		beq	.L29
 677 04c2 7A68     		ldr	r2, [r7, #4]
 678 04c4 164B     		ldr	r3, .L31+60
 679 04c6 9A42     		cmp	r2, r3
 680 04c8 04D1     		bne	.L30
 681              	.L29:
 261:../SPL/src/stm32f10x_tim.c ****   {
 262:../SPL/src/stm32f10x_tim.c ****     /* Set the Repetition Counter value */
 263:../SPL/src/stm32f10x_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 682              		.loc 1 263 0 is_stmt 1
 683 04ca 3B68     		ldr	r3, [r7, #0]
 684 04cc 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 685 04ce 1A46     		mov	r2, r3
 686 04d0 7B68     		ldr	r3, [r7, #4]
 687 04d2 1A86     		strh	r2, [r3, #48]	@ movhi
 688              	.L30:
 264:../SPL/src/stm32f10x_tim.c ****   }
 265:../SPL/src/stm32f10x_tim.c **** 
 266:../SPL/src/stm32f10x_tim.c ****   /* Generate an update event to reload the Prescaler and the Repetition counter
 267:../SPL/src/stm32f10x_tim.c ****      values immediately */
 268:../SPL/src/stm32f10x_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;           
 689              		.loc 1 268 0
 690 04d4 7B68     		ldr	r3, [r7, #4]
 691 04d6 4FF00102 		mov	r2, #1
 692 04da 9A82     		strh	r2, [r3, #20]	@ movhi
 269:../SPL/src/stm32f10x_tim.c **** }
 693              		.loc 1 269 0
 694 04dc 07F11007 		add	r7, r7, #16
 695 04e0 BD46     		mov	sp, r7
 696 04e2 80BD     		pop	{r7, pc}
 697              	.L32:
 698              		.align	2
 699              	.L31:
 700 04e4 002C0140 		.word	1073818624
 701 04e8 00040040 		.word	1073742848
 702 04ec 00080040 		.word	1073743872
 703 04f0 000C0040 		.word	1073744896
 704 04f4 00100040 		.word	1073745920
 705 04f8 00140040 		.word	1073746944
 706 04fc 00340140 		.word	1073820672
 707 0500 004C0140 		.word	1073826816
 708 0504 00500140 		.word	1073827840
 709 0508 00540140 		.word	1073828864
 710 050c 00180040 		.word	1073747968
 711 0510 001C0040 		.word	1073748992
 712 0514 00200040 		.word	1073750016
 713 0518 00400140 		.word	1073823744
 714 051c 00440140 		.word	1073824768
 715 0520 00480140 		.word	1073825792
 716 0524 00000000 		.word	.LC0
 717              		.cfi_endproc
 718              	.LFE30:
 720              		.align	2
 721              		.global	TIM_OC1Init
 722              		.thumb
 723              		.thumb_func
 725              	TIM_OC1Init:
 726              	.LFB31:
 270:../SPL/src/stm32f10x_tim.c **** 
 271:../SPL/src/stm32f10x_tim.c **** /**
 272:../SPL/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified
 273:../SPL/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 274:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
 275:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 276:../SPL/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 277:../SPL/src/stm32f10x_tim.c ****   * @retval None
 278:../SPL/src/stm32f10x_tim.c ****   */
 279:../SPL/src/stm32f10x_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 280:../SPL/src/stm32f10x_tim.c **** {
 727              		.loc 1 280 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 16
 730              		@ frame_needed = 1, uses_anonymous_args = 0
 731 0528 80B5     		push	{r7, lr}
 732              	.LCFI6:
 733              		.cfi_def_cfa_offset 8
 734              		.cfi_offset 7, -8
 735              		.cfi_offset 14, -4
 736 052a 84B0     		sub	sp, sp, #16
 737              	.LCFI7:
 738              		.cfi_def_cfa_offset 24
 739 052c 00AF     		add	r7, sp, #0
 740              	.LCFI8:
 741              		.cfi_def_cfa_register 7
 742 052e 7860     		str	r0, [r7, #4]
 743 0530 3960     		str	r1, [r7, #0]
 281:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 744              		.loc 1 281 0
 745 0532 4FF00003 		mov	r3, #0
 746 0536 7B81     		strh	r3, [r7, #10]	@ movhi
 747 0538 4FF00003 		mov	r3, #0
 748 053c FB81     		strh	r3, [r7, #14]	@ movhi
 749 053e 4FF00003 		mov	r3, #0
 750 0542 BB81     		strh	r3, [r7, #12]	@ movhi
 282:../SPL/src/stm32f10x_tim.c ****    
 283:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
 284:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 751              		.loc 1 284 0
 752 0544 7A68     		ldr	r2, [r7, #4]
 753 0546 914B     		ldr	r3, .L44
 754 0548 9A42     		cmp	r2, r3
 755 054a 3CD0     		beq	.L34
 756              		.loc 1 284 0 is_stmt 0 discriminator 1
 757 054c 7B68     		ldr	r3, [r7, #4]
 758 054e B3F1804F 		cmp	r3, #1073741824
 759 0552 38D0     		beq	.L34
 760              		.loc 1 284 0 discriminator 2
 761 0554 7A68     		ldr	r2, [r7, #4]
 762 0556 8E4B     		ldr	r3, .L44+4
 763 0558 9A42     		cmp	r2, r3
 764 055a 34D0     		beq	.L34
 765              		.loc 1 284 0 discriminator 3
 766 055c 7A68     		ldr	r2, [r7, #4]
 767 055e 8D4B     		ldr	r3, .L44+8
 768 0560 9A42     		cmp	r2, r3
 769 0562 30D0     		beq	.L34
 770              		.loc 1 284 0 discriminator 4
 771 0564 7A68     		ldr	r2, [r7, #4]
 772 0566 8C4B     		ldr	r3, .L44+12
 773 0568 9A42     		cmp	r2, r3
 774 056a 2CD0     		beq	.L34
 775              		.loc 1 284 0 discriminator 5
 776 056c 7A68     		ldr	r2, [r7, #4]
 777 056e 8B4B     		ldr	r3, .L44+16
 778 0570 9A42     		cmp	r2, r3
 779 0572 28D0     		beq	.L34
 780              		.loc 1 284 0 discriminator 6
 781 0574 7A68     		ldr	r2, [r7, #4]
 782 0576 8A4B     		ldr	r3, .L44+20
 783 0578 9A42     		cmp	r2, r3
 784 057a 24D0     		beq	.L34
 785              		.loc 1 284 0 discriminator 7
 786 057c 7A68     		ldr	r2, [r7, #4]
 787 057e 894B     		ldr	r3, .L44+24
 788 0580 9A42     		cmp	r2, r3
 789 0582 20D0     		beq	.L34
 790              		.loc 1 284 0 discriminator 8
 791 0584 7A68     		ldr	r2, [r7, #4]
 792 0586 884B     		ldr	r3, .L44+28
 793 0588 9A42     		cmp	r2, r3
 794 058a 1CD0     		beq	.L34
 795              		.loc 1 284 0 discriminator 9
 796 058c 7A68     		ldr	r2, [r7, #4]
 797 058e 874B     		ldr	r3, .L44+32
 798 0590 9A42     		cmp	r2, r3
 799 0592 18D0     		beq	.L34
 800              		.loc 1 284 0 discriminator 10
 801 0594 7A68     		ldr	r2, [r7, #4]
 802 0596 864B     		ldr	r3, .L44+36
 803 0598 9A42     		cmp	r2, r3
 804 059a 14D0     		beq	.L34
 805              		.loc 1 284 0 discriminator 11
 806 059c 7A68     		ldr	r2, [r7, #4]
 807 059e 854B     		ldr	r3, .L44+40
 808 05a0 9A42     		cmp	r2, r3
 809 05a2 10D0     		beq	.L34
 810              		.loc 1 284 0 discriminator 12
 811 05a4 7A68     		ldr	r2, [r7, #4]
 812 05a6 844B     		ldr	r3, .L44+44
 813 05a8 9A42     		cmp	r2, r3
 814 05aa 0CD0     		beq	.L34
 815              		.loc 1 284 0 discriminator 13
 816 05ac 7A68     		ldr	r2, [r7, #4]
 817 05ae 834B     		ldr	r3, .L44+48
 818 05b0 9A42     		cmp	r2, r3
 819 05b2 08D0     		beq	.L34
 820              		.loc 1 284 0 discriminator 14
 821 05b4 7A68     		ldr	r2, [r7, #4]
 822 05b6 824B     		ldr	r3, .L44+52
 823 05b8 9A42     		cmp	r2, r3
 824 05ba 04D0     		beq	.L34
 825              		.loc 1 284 0 discriminator 15
 826 05bc 8148     		ldr	r0, .L44+56
 827 05be 4FF48E71 		mov	r1, #284
 828 05c2 FFF7FEFF 		bl	assert_failed
 829              	.L34:
 285:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 830              		.loc 1 285 0 is_stmt 1
 831 05c6 3B68     		ldr	r3, [r7, #0]
 832 05c8 1B88     		ldrh	r3, [r3, #0]
 833 05ca 002B     		cmp	r3, #0
 834 05cc 18D0     		beq	.L35
 835              		.loc 1 285 0 is_stmt 0 discriminator 1
 836 05ce 3B68     		ldr	r3, [r7, #0]
 837 05d0 1B88     		ldrh	r3, [r3, #0]
 838 05d2 102B     		cmp	r3, #16
 839 05d4 14D0     		beq	.L35
 840              		.loc 1 285 0 discriminator 2
 841 05d6 3B68     		ldr	r3, [r7, #0]
 842 05d8 1B88     		ldrh	r3, [r3, #0]
 843 05da 202B     		cmp	r3, #32
 844 05dc 10D0     		beq	.L35
 845              		.loc 1 285 0 discriminator 3
 846 05de 3B68     		ldr	r3, [r7, #0]
 847 05e0 1B88     		ldrh	r3, [r3, #0]
 848 05e2 302B     		cmp	r3, #48
 849 05e4 0CD0     		beq	.L35
 850              		.loc 1 285 0 discriminator 4
 851 05e6 3B68     		ldr	r3, [r7, #0]
 852 05e8 1B88     		ldrh	r3, [r3, #0]
 853 05ea 602B     		cmp	r3, #96
 854 05ec 08D0     		beq	.L35
 855              		.loc 1 285 0 discriminator 5
 856 05ee 3B68     		ldr	r3, [r7, #0]
 857 05f0 1B88     		ldrh	r3, [r3, #0]
 858 05f2 702B     		cmp	r3, #112
 859 05f4 04D0     		beq	.L35
 860              		.loc 1 285 0 discriminator 6
 861 05f6 7348     		ldr	r0, .L44+56
 862 05f8 40F21D11 		movw	r1, #285
 863 05fc FFF7FEFF 		bl	assert_failed
 864              	.L35:
 286:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 865              		.loc 1 286 0 is_stmt 1
 866 0600 3B68     		ldr	r3, [r7, #0]
 867 0602 5B88     		ldrh	r3, [r3, #2]
 868 0604 002B     		cmp	r3, #0
 869 0606 08D0     		beq	.L36
 870              		.loc 1 286 0 is_stmt 0 discriminator 1
 871 0608 3B68     		ldr	r3, [r7, #0]
 872 060a 5B88     		ldrh	r3, [r3, #2]
 873 060c 012B     		cmp	r3, #1
 874 060e 04D0     		beq	.L36
 875              		.loc 1 286 0 discriminator 2
 876 0610 6C48     		ldr	r0, .L44+56
 877 0612 4FF48F71 		mov	r1, #286
 878 0616 FFF7FEFF 		bl	assert_failed
 879              	.L36:
 287:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 880              		.loc 1 287 0 is_stmt 1
 881 061a 3B68     		ldr	r3, [r7, #0]
 882 061c 1B89     		ldrh	r3, [r3, #8]
 883 061e 002B     		cmp	r3, #0
 884 0620 08D0     		beq	.L37
 885              		.loc 1 287 0 is_stmt 0 discriminator 1
 886 0622 3B68     		ldr	r3, [r7, #0]
 887 0624 1B89     		ldrh	r3, [r3, #8]
 888 0626 022B     		cmp	r3, #2
 889 0628 04D0     		beq	.L37
 890              		.loc 1 287 0 discriminator 2
 891 062a 6648     		ldr	r0, .L44+56
 892 062c 40F21F11 		movw	r1, #287
 893 0630 FFF7FEFF 		bl	assert_failed
 894              	.L37:
 288:../SPL/src/stm32f10x_tim.c ****  /* Disable the Channel 1: Reset the CC1E Bit */
 289:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~(uint16_t)TIM_CCER_CC1E);
 895              		.loc 1 289 0 is_stmt 1
 896 0634 7B68     		ldr	r3, [r7, #4]
 897 0636 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 898 0638 9BB2     		uxth	r3, r3
 899 063a 23F00103 		bic	r3, r3, #1
 900 063e 9AB2     		uxth	r2, r3
 901 0640 7B68     		ldr	r3, [r7, #4]
 902 0642 1A84     		strh	r2, [r3, #32]	@ movhi
 290:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 291:../SPL/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 903              		.loc 1 291 0
 904 0644 7B68     		ldr	r3, [r7, #4]
 905 0646 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 906 0648 FB81     		strh	r3, [r7, #14]	@ movhi
 292:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 293:../SPL/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 907              		.loc 1 293 0
 908 064a 7B68     		ldr	r3, [r7, #4]
 909 064c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 910 064e BB81     		strh	r3, [r7, #12]	@ movhi
 294:../SPL/src/stm32f10x_tim.c ****   
 295:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
 296:../SPL/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR1;
 911              		.loc 1 296 0
 912 0650 7B68     		ldr	r3, [r7, #4]
 913 0652 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 914 0654 7B81     		strh	r3, [r7, #10]	@ movhi
 297:../SPL/src/stm32f10x_tim.c ****     
 298:../SPL/src/stm32f10x_tim.c ****   /* Reset the Output Compare Mode Bits */
 299:../SPL/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_OC1M));
 915              		.loc 1 299 0
 916 0656 7B89     		ldrh	r3, [r7, #10]	@ movhi
 917 0658 23F07003 		bic	r3, r3, #112
 918 065c 7B81     		strh	r3, [r7, #10]	@ movhi
 300:../SPL/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_CC1S));
 919              		.loc 1 300 0
 920 065e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 921 0660 23F00303 		bic	r3, r3, #3
 922 0664 7B81     		strh	r3, [r7, #10]	@ movhi
 301:../SPL/src/stm32f10x_tim.c **** 
 302:../SPL/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 303:../SPL/src/stm32f10x_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 923              		.loc 1 303 0
 924 0666 3B68     		ldr	r3, [r7, #0]
 925 0668 1A88     		ldrh	r2, [r3, #0]
 926 066a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 927 066c 1343     		orrs	r3, r3, r2
 928 066e 7B81     		strh	r3, [r7, #10]	@ movhi
 304:../SPL/src/stm32f10x_tim.c ****   
 305:../SPL/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 306:../SPL/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1P));
 929              		.loc 1 306 0
 930 0670 FB89     		ldrh	r3, [r7, #14]	@ movhi
 931 0672 23F00203 		bic	r3, r3, #2
 932 0676 FB81     		strh	r3, [r7, #14]	@ movhi
 307:../SPL/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 308:../SPL/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 933              		.loc 1 308 0
 934 0678 3B68     		ldr	r3, [r7, #0]
 935 067a 1A89     		ldrh	r2, [r3, #8]
 936 067c FB89     		ldrh	r3, [r7, #14]	@ movhi
 937 067e 1343     		orrs	r3, r3, r2
 938 0680 FB81     		strh	r3, [r7, #14]	@ movhi
 309:../SPL/src/stm32f10x_tim.c ****   
 310:../SPL/src/stm32f10x_tim.c ****   /* Set the Output State */
 311:../SPL/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 939              		.loc 1 311 0
 940 0682 3B68     		ldr	r3, [r7, #0]
 941 0684 5A88     		ldrh	r2, [r3, #2]
 942 0686 FB89     		ldrh	r3, [r7, #14]	@ movhi
 943 0688 1343     		orrs	r3, r3, r2
 944 068a FB81     		strh	r3, [r7, #14]	@ movhi
 312:../SPL/src/stm32f10x_tim.c ****     
 313:../SPL/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM15)||
 945              		.loc 1 313 0
 946 068c 7A68     		ldr	r2, [r7, #4]
 947 068e 3F4B     		ldr	r3, .L44
 948 0690 9A42     		cmp	r2, r3
 949 0692 0FD0     		beq	.L38
 950              		.loc 1 313 0 is_stmt 0 discriminator 1
 951 0694 7A68     		ldr	r2, [r7, #4]
 952 0696 414B     		ldr	r3, .L44+16
 953 0698 9A42     		cmp	r2, r3
 954 069a 0BD0     		beq	.L38
 955 069c 7A68     		ldr	r2, [r7, #4]
 956 069e 464B     		ldr	r3, .L44+44
 957 06a0 9A42     		cmp	r2, r3
 958 06a2 07D0     		beq	.L38
 959 06a4 7A68     		ldr	r2, [r7, #4]
 960 06a6 454B     		ldr	r3, .L44+48
 961 06a8 9A42     		cmp	r2, r3
 962 06aa 03D0     		beq	.L38
 314:../SPL/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 963              		.loc 1 314 0 is_stmt 1
 964 06ac 7A68     		ldr	r2, [r7, #4]
 965 06ae 444B     		ldr	r3, .L44+52
 966 06b0 9A42     		cmp	r2, r3
 967 06b2 59D1     		bne	.L39
 968              	.L38:
 315:../SPL/src/stm32f10x_tim.c ****   {
 316:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 969              		.loc 1 316 0
 970 06b4 3B68     		ldr	r3, [r7, #0]
 971 06b6 9B88     		ldrh	r3, [r3, #4]
 972 06b8 002B     		cmp	r3, #0
 973 06ba 08D0     		beq	.L40
 974              		.loc 1 316 0 is_stmt 0 discriminator 1
 975 06bc 3B68     		ldr	r3, [r7, #0]
 976 06be 9B88     		ldrh	r3, [r3, #4]
 977 06c0 042B     		cmp	r3, #4
 978 06c2 04D0     		beq	.L40
 979              		.loc 1 316 0 discriminator 2
 980 06c4 3F48     		ldr	r0, .L44+56
 981 06c6 4FF49E71 		mov	r1, #316
 982 06ca FFF7FEFF 		bl	assert_failed
 983              	.L40:
 317:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 984              		.loc 1 317 0 is_stmt 1
 985 06ce 3B68     		ldr	r3, [r7, #0]
 986 06d0 5B89     		ldrh	r3, [r3, #10]
 987 06d2 002B     		cmp	r3, #0
 988 06d4 08D0     		beq	.L41
 989              		.loc 1 317 0 is_stmt 0 discriminator 1
 990 06d6 3B68     		ldr	r3, [r7, #0]
 991 06d8 5B89     		ldrh	r3, [r3, #10]
 992 06da 082B     		cmp	r3, #8
 993 06dc 04D0     		beq	.L41
 994              		.loc 1 317 0 discriminator 2
 995 06de 3948     		ldr	r0, .L44+56
 996 06e0 40F23D11 		movw	r1, #317
 997 06e4 FFF7FEFF 		bl	assert_failed
 998              	.L41:
 318:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 999              		.loc 1 318 0 is_stmt 1
 1000 06e8 3B68     		ldr	r3, [r7, #0]
 1001 06ea DB89     		ldrh	r3, [r3, #14]
 1002 06ec B3F5007F 		cmp	r3, #512
 1003 06f0 08D0     		beq	.L42
 1004              		.loc 1 318 0 is_stmt 0 discriminator 1
 1005 06f2 3B68     		ldr	r3, [r7, #0]
 1006 06f4 DB89     		ldrh	r3, [r3, #14]
 1007 06f6 002B     		cmp	r3, #0
 1008 06f8 04D0     		beq	.L42
 1009              		.loc 1 318 0 discriminator 2
 1010 06fa 3248     		ldr	r0, .L44+56
 1011 06fc 4FF49F71 		mov	r1, #318
 1012 0700 FFF7FEFF 		bl	assert_failed
 1013              	.L42:
 319:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 1014              		.loc 1 319 0 is_stmt 1
 1015 0704 3B68     		ldr	r3, [r7, #0]
 1016 0706 9B89     		ldrh	r3, [r3, #12]
 1017 0708 B3F5807F 		cmp	r3, #256
 1018 070c 08D0     		beq	.L43
 1019              		.loc 1 319 0 is_stmt 0 discriminator 1
 1020 070e 3B68     		ldr	r3, [r7, #0]
 1021 0710 9B89     		ldrh	r3, [r3, #12]
 1022 0712 002B     		cmp	r3, #0
 1023 0714 04D0     		beq	.L43
 1024              		.loc 1 319 0 discriminator 2
 1025 0716 2B48     		ldr	r0, .L44+56
 1026 0718 40F23F11 		movw	r1, #319
 1027 071c FFF7FEFF 		bl	assert_failed
 1028              	.L43:
 320:../SPL/src/stm32f10x_tim.c ****     
 321:../SPL/src/stm32f10x_tim.c ****     /* Reset the Output N Polarity level */
 322:../SPL/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1NP));
 1029              		.loc 1 322 0 is_stmt 1
 1030 0720 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1031 0722 23F00803 		bic	r3, r3, #8
 1032 0726 FB81     		strh	r3, [r7, #14]	@ movhi
 323:../SPL/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 324:../SPL/src/stm32f10x_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 1033              		.loc 1 324 0
 1034 0728 3B68     		ldr	r3, [r7, #0]
 1035 072a 5A89     		ldrh	r2, [r3, #10]
 1036 072c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1037 072e 1343     		orrs	r3, r3, r2
 1038 0730 FB81     		strh	r3, [r7, #14]	@ movhi
 325:../SPL/src/stm32f10x_tim.c ****     
 326:../SPL/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 327:../SPL/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1NE));    
 1039              		.loc 1 327 0
 1040 0732 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1041 0734 23F00403 		bic	r3, r3, #4
 1042 0738 FB81     		strh	r3, [r7, #14]	@ movhi
 328:../SPL/src/stm32f10x_tim.c ****     /* Set the Output N State */
 329:../SPL/src/stm32f10x_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 1043              		.loc 1 329 0
 1044 073a 3B68     		ldr	r3, [r7, #0]
 1045 073c 9A88     		ldrh	r2, [r3, #4]
 1046 073e FB89     		ldrh	r3, [r7, #14]	@ movhi
 1047 0740 1343     		orrs	r3, r3, r2
 1048 0742 FB81     		strh	r3, [r7, #14]	@ movhi
 330:../SPL/src/stm32f10x_tim.c ****     
 331:../SPL/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 332:../SPL/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS1));
 1049              		.loc 1 332 0
 1050 0744 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1051 0746 23F48073 		bic	r3, r3, #256
 1052 074a BB81     		strh	r3, [r7, #12]	@ movhi
 333:../SPL/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS1N));
 1053              		.loc 1 333 0
 1054 074c BB89     		ldrh	r3, [r7, #12]	@ movhi
 1055 074e 23F40073 		bic	r3, r3, #512
 1056 0752 BB81     		strh	r3, [r7, #12]	@ movhi
 334:../SPL/src/stm32f10x_tim.c ****     
 335:../SPL/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 336:../SPL/src/stm32f10x_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 1057              		.loc 1 336 0
 1058 0754 3B68     		ldr	r3, [r7, #0]
 1059 0756 9A89     		ldrh	r2, [r3, #12]
 1060 0758 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1061 075a 1343     		orrs	r3, r3, r2
 1062 075c BB81     		strh	r3, [r7, #12]	@ movhi
 337:../SPL/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 338:../SPL/src/stm32f10x_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 1063              		.loc 1 338 0
 1064 075e 3B68     		ldr	r3, [r7, #0]
 1065 0760 DA89     		ldrh	r2, [r3, #14]
 1066 0762 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1067 0764 1343     		orrs	r3, r3, r2
 1068 0766 BB81     		strh	r3, [r7, #12]	@ movhi
 1069              	.L39:
 339:../SPL/src/stm32f10x_tim.c ****   }
 340:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 341:../SPL/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 1070              		.loc 1 341 0
 1071 0768 7B68     		ldr	r3, [r7, #4]
 1072 076a BA89     		ldrh	r2, [r7, #12]	@ movhi
 1073 076c 9A80     		strh	r2, [r3, #4]	@ movhi
 342:../SPL/src/stm32f10x_tim.c ****   
 343:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 344:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1074              		.loc 1 344 0
 1075 076e 7B68     		ldr	r3, [r7, #4]
 1076 0770 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1077 0772 1A83     		strh	r2, [r3, #24]	@ movhi
 345:../SPL/src/stm32f10x_tim.c **** 
 346:../SPL/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 347:../SPL/src/stm32f10x_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse; 
 1078              		.loc 1 347 0
 1079 0774 3B68     		ldr	r3, [r7, #0]
 1080 0776 DA88     		ldrh	r2, [r3, #6]
 1081 0778 7B68     		ldr	r3, [r7, #4]
 1082 077a 9A86     		strh	r2, [r3, #52]	@ movhi
 348:../SPL/src/stm32f10x_tim.c ****  
 349:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 350:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 1083              		.loc 1 350 0
 1084 077c 7B68     		ldr	r3, [r7, #4]
 1085 077e FA89     		ldrh	r2, [r7, #14]	@ movhi
 1086 0780 1A84     		strh	r2, [r3, #32]	@ movhi
 351:../SPL/src/stm32f10x_tim.c **** }
 1087              		.loc 1 351 0
 1088 0782 07F11007 		add	r7, r7, #16
 1089 0786 BD46     		mov	sp, r7
 1090 0788 80BD     		pop	{r7, pc}
 1091              	.L45:
 1092 078a 00BF     		.align	2
 1093              	.L44:
 1094 078c 002C0140 		.word	1073818624
 1095 0790 00040040 		.word	1073742848
 1096 0794 00080040 		.word	1073743872
 1097 0798 000C0040 		.word	1073744896
 1098 079c 00340140 		.word	1073820672
 1099 07a0 004C0140 		.word	1073826816
 1100 07a4 00500140 		.word	1073827840
 1101 07a8 00540140 		.word	1073828864
 1102 07ac 00180040 		.word	1073747968
 1103 07b0 001C0040 		.word	1073748992
 1104 07b4 00200040 		.word	1073750016
 1105 07b8 00400140 		.word	1073823744
 1106 07bc 00440140 		.word	1073824768
 1107 07c0 00480140 		.word	1073825792
 1108 07c4 00000000 		.word	.LC0
 1109              		.cfi_endproc
 1110              	.LFE31:
 1112              		.align	2
 1113              		.global	TIM_OC2Init
 1114              		.thumb
 1115              		.thumb_func
 1117              	TIM_OC2Init:
 1118              	.LFB32:
 352:../SPL/src/stm32f10x_tim.c **** 
 353:../SPL/src/stm32f10x_tim.c **** /**
 354:../SPL/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified
 355:../SPL/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 356:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select 
 357:../SPL/src/stm32f10x_tim.c ****   *         the TIM peripheral.
 358:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 359:../SPL/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 360:../SPL/src/stm32f10x_tim.c ****   * @retval None
 361:../SPL/src/stm32f10x_tim.c ****   */
 362:../SPL/src/stm32f10x_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 363:../SPL/src/stm32f10x_tim.c **** {
 1119              		.loc 1 363 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 16
 1122              		@ frame_needed = 1, uses_anonymous_args = 0
 1123 07c8 80B5     		push	{r7, lr}
 1124              	.LCFI9:
 1125              		.cfi_def_cfa_offset 8
 1126              		.cfi_offset 7, -8
 1127              		.cfi_offset 14, -4
 1128 07ca 84B0     		sub	sp, sp, #16
 1129              	.LCFI10:
 1130              		.cfi_def_cfa_offset 24
 1131 07cc 00AF     		add	r7, sp, #0
 1132              	.LCFI11:
 1133              		.cfi_def_cfa_register 7
 1134 07ce 7860     		str	r0, [r7, #4]
 1135 07d0 3960     		str	r1, [r7, #0]
 364:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1136              		.loc 1 364 0
 1137 07d2 4FF00003 		mov	r3, #0
 1138 07d6 7B81     		strh	r3, [r7, #10]	@ movhi
 1139 07d8 4FF00003 		mov	r3, #0
 1140 07dc FB81     		strh	r3, [r7, #14]	@ movhi
 1141 07de 4FF00003 		mov	r3, #0
 1142 07e2 BB81     		strh	r3, [r7, #12]	@ movhi
 365:../SPL/src/stm32f10x_tim.c ****    
 366:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
 367:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx)); 
 1143              		.loc 1 367 0
 1144 07e4 7A68     		ldr	r2, [r7, #4]
 1145 07e6 894B     		ldr	r3, .L57
 1146 07e8 9A42     		cmp	r2, r3
 1147 07ea 24D0     		beq	.L47
 1148              		.loc 1 367 0 is_stmt 0 discriminator 1
 1149 07ec 7B68     		ldr	r3, [r7, #4]
 1150 07ee B3F1804F 		cmp	r3, #1073741824
 1151 07f2 20D0     		beq	.L47
 1152              		.loc 1 367 0 discriminator 2
 1153 07f4 7A68     		ldr	r2, [r7, #4]
 1154 07f6 864B     		ldr	r3, .L57+4
 1155 07f8 9A42     		cmp	r2, r3
 1156 07fa 1CD0     		beq	.L47
 1157              		.loc 1 367 0 discriminator 3
 1158 07fc 7A68     		ldr	r2, [r7, #4]
 1159 07fe 854B     		ldr	r3, .L57+8
 1160 0800 9A42     		cmp	r2, r3
 1161 0802 18D0     		beq	.L47
 1162              		.loc 1 367 0 discriminator 4
 1163 0804 7A68     		ldr	r2, [r7, #4]
 1164 0806 844B     		ldr	r3, .L57+12
 1165 0808 9A42     		cmp	r2, r3
 1166 080a 14D0     		beq	.L47
 1167              		.loc 1 367 0 discriminator 5
 1168 080c 7A68     		ldr	r2, [r7, #4]
 1169 080e 834B     		ldr	r3, .L57+16
 1170 0810 9A42     		cmp	r2, r3
 1171 0812 10D0     		beq	.L47
 1172              		.loc 1 367 0 discriminator 6
 1173 0814 7A68     		ldr	r2, [r7, #4]
 1174 0816 824B     		ldr	r3, .L57+20
 1175 0818 9A42     		cmp	r2, r3
 1176 081a 0CD0     		beq	.L47
 1177              		.loc 1 367 0 discriminator 7
 1178 081c 7A68     		ldr	r2, [r7, #4]
 1179 081e 814B     		ldr	r3, .L57+24
 1180 0820 9A42     		cmp	r2, r3
 1181 0822 08D0     		beq	.L47
 1182              		.loc 1 367 0 discriminator 8
 1183 0824 7A68     		ldr	r2, [r7, #4]
 1184 0826 804B     		ldr	r3, .L57+28
 1185 0828 9A42     		cmp	r2, r3
 1186 082a 04D0     		beq	.L47
 1187              		.loc 1 367 0 discriminator 9
 1188 082c 7F48     		ldr	r0, .L57+32
 1189 082e 40F26F11 		movw	r1, #367
 1190 0832 FFF7FEFF 		bl	assert_failed
 1191              	.L47:
 368:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 1192              		.loc 1 368 0 is_stmt 1
 1193 0836 3B68     		ldr	r3, [r7, #0]
 1194 0838 1B88     		ldrh	r3, [r3, #0]
 1195 083a 002B     		cmp	r3, #0
 1196 083c 18D0     		beq	.L48
 1197              		.loc 1 368 0 is_stmt 0 discriminator 1
 1198 083e 3B68     		ldr	r3, [r7, #0]
 1199 0840 1B88     		ldrh	r3, [r3, #0]
 1200 0842 102B     		cmp	r3, #16
 1201 0844 14D0     		beq	.L48
 1202              		.loc 1 368 0 discriminator 2
 1203 0846 3B68     		ldr	r3, [r7, #0]
 1204 0848 1B88     		ldrh	r3, [r3, #0]
 1205 084a 202B     		cmp	r3, #32
 1206 084c 10D0     		beq	.L48
 1207              		.loc 1 368 0 discriminator 3
 1208 084e 3B68     		ldr	r3, [r7, #0]
 1209 0850 1B88     		ldrh	r3, [r3, #0]
 1210 0852 302B     		cmp	r3, #48
 1211 0854 0CD0     		beq	.L48
 1212              		.loc 1 368 0 discriminator 4
 1213 0856 3B68     		ldr	r3, [r7, #0]
 1214 0858 1B88     		ldrh	r3, [r3, #0]
 1215 085a 602B     		cmp	r3, #96
 1216 085c 08D0     		beq	.L48
 1217              		.loc 1 368 0 discriminator 5
 1218 085e 3B68     		ldr	r3, [r7, #0]
 1219 0860 1B88     		ldrh	r3, [r3, #0]
 1220 0862 702B     		cmp	r3, #112
 1221 0864 04D0     		beq	.L48
 1222              		.loc 1 368 0 discriminator 6
 1223 0866 7148     		ldr	r0, .L57+32
 1224 0868 4FF4B871 		mov	r1, #368
 1225 086c FFF7FEFF 		bl	assert_failed
 1226              	.L48:
 369:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 1227              		.loc 1 369 0 is_stmt 1
 1228 0870 3B68     		ldr	r3, [r7, #0]
 1229 0872 5B88     		ldrh	r3, [r3, #2]
 1230 0874 002B     		cmp	r3, #0
 1231 0876 08D0     		beq	.L49
 1232              		.loc 1 369 0 is_stmt 0 discriminator 1
 1233 0878 3B68     		ldr	r3, [r7, #0]
 1234 087a 5B88     		ldrh	r3, [r3, #2]
 1235 087c 012B     		cmp	r3, #1
 1236 087e 04D0     		beq	.L49
 1237              		.loc 1 369 0 discriminator 2
 1238 0880 6A48     		ldr	r0, .L57+32
 1239 0882 40F27111 		movw	r1, #369
 1240 0886 FFF7FEFF 		bl	assert_failed
 1241              	.L49:
 370:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 1242              		.loc 1 370 0 is_stmt 1
 1243 088a 3B68     		ldr	r3, [r7, #0]
 1244 088c 1B89     		ldrh	r3, [r3, #8]
 1245 088e 002B     		cmp	r3, #0
 1246 0890 08D0     		beq	.L50
 1247              		.loc 1 370 0 is_stmt 0 discriminator 1
 1248 0892 3B68     		ldr	r3, [r7, #0]
 1249 0894 1B89     		ldrh	r3, [r3, #8]
 1250 0896 022B     		cmp	r3, #2
 1251 0898 04D0     		beq	.L50
 1252              		.loc 1 370 0 discriminator 2
 1253 089a 6448     		ldr	r0, .L57+32
 1254 089c 4FF4B971 		mov	r1, #370
 1255 08a0 FFF7FEFF 		bl	assert_failed
 1256              	.L50:
 371:../SPL/src/stm32f10x_tim.c ****    /* Disable the Channel 2: Reset the CC2E Bit */
 372:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC2E));
 1257              		.loc 1 372 0 is_stmt 1
 1258 08a4 7B68     		ldr	r3, [r7, #4]
 1259 08a6 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1260 08a8 9BB2     		uxth	r3, r3
 1261 08aa 23F01003 		bic	r3, r3, #16
 1262 08ae 9AB2     		uxth	r2, r3
 1263 08b0 7B68     		ldr	r3, [r7, #4]
 1264 08b2 1A84     		strh	r2, [r3, #32]	@ movhi
 373:../SPL/src/stm32f10x_tim.c ****   
 374:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */  
 375:../SPL/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 1265              		.loc 1 375 0
 1266 08b4 7B68     		ldr	r3, [r7, #4]
 1267 08b6 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1268 08b8 FB81     		strh	r3, [r7, #14]	@ movhi
 376:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 377:../SPL/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 1269              		.loc 1 377 0
 1270 08ba 7B68     		ldr	r3, [r7, #4]
 1271 08bc 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1272 08be BB81     		strh	r3, [r7, #12]	@ movhi
 378:../SPL/src/stm32f10x_tim.c ****   
 379:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
 380:../SPL/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1273              		.loc 1 380 0
 1274 08c0 7B68     		ldr	r3, [r7, #4]
 1275 08c2 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1276 08c4 7B81     		strh	r3, [r7, #10]	@ movhi
 381:../SPL/src/stm32f10x_tim.c ****     
 382:../SPL/src/stm32f10x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 383:../SPL/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_OC2M));
 1277              		.loc 1 383 0
 1278 08c6 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1279 08c8 23F4E043 		bic	r3, r3, #28672
 1280 08cc 7B81     		strh	r3, [r7, #10]	@ movhi
 384:../SPL/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_CC2S));
 1281              		.loc 1 384 0
 1282 08ce 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1283 08d0 23F44073 		bic	r3, r3, #768
 1284 08d4 7B81     		strh	r3, [r7, #10]	@ movhi
 385:../SPL/src/stm32f10x_tim.c ****   
 386:../SPL/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 387:../SPL/src/stm32f10x_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1285              		.loc 1 387 0
 1286 08d6 3B68     		ldr	r3, [r7, #0]
 1287 08d8 1B88     		ldrh	r3, [r3, #0]
 1288 08da 4FEA0323 		lsl	r3, r3, #8
 1289 08de 9AB2     		uxth	r2, r3
 1290 08e0 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1291 08e2 1343     		orrs	r3, r3, r2
 1292 08e4 7B81     		strh	r3, [r7, #10]	@ movhi
 388:../SPL/src/stm32f10x_tim.c ****   
 389:../SPL/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 390:../SPL/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2P));
 1293              		.loc 1 390 0
 1294 08e6 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1295 08e8 23F02003 		bic	r3, r3, #32
 1296 08ec FB81     		strh	r3, [r7, #14]	@ movhi
 391:../SPL/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 392:../SPL/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 1297              		.loc 1 392 0
 1298 08ee 3B68     		ldr	r3, [r7, #0]
 1299 08f0 1B89     		ldrh	r3, [r3, #8]
 1300 08f2 4FEA0313 		lsl	r3, r3, #4
 1301 08f6 9AB2     		uxth	r2, r3
 1302 08f8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1303 08fa 1343     		orrs	r3, r3, r2
 1304 08fc FB81     		strh	r3, [r7, #14]	@ movhi
 393:../SPL/src/stm32f10x_tim.c ****   
 394:../SPL/src/stm32f10x_tim.c ****   /* Set the Output State */
 395:../SPL/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 1305              		.loc 1 395 0
 1306 08fe 3B68     		ldr	r3, [r7, #0]
 1307 0900 5B88     		ldrh	r3, [r3, #2]
 1308 0902 4FEA0313 		lsl	r3, r3, #4
 1309 0906 9AB2     		uxth	r2, r3
 1310 0908 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1311 090a 1343     		orrs	r3, r3, r2
 1312 090c FB81     		strh	r3, [r7, #14]	@ movhi
 396:../SPL/src/stm32f10x_tim.c ****     
 397:../SPL/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1313              		.loc 1 397 0
 1314 090e 7A68     		ldr	r2, [r7, #4]
 1315 0910 3E4B     		ldr	r3, .L57
 1316 0912 9A42     		cmp	r2, r3
 1317 0914 03D0     		beq	.L51
 1318              		.loc 1 397 0 is_stmt 0 discriminator 1
 1319 0916 7A68     		ldr	r2, [r7, #4]
 1320 0918 404B     		ldr	r3, .L57+16
 1321 091a 9A42     		cmp	r2, r3
 1322 091c 65D1     		bne	.L52
 1323              	.L51:
 398:../SPL/src/stm32f10x_tim.c ****   {
 399:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 1324              		.loc 1 399 0 is_stmt 1
 1325 091e 3B68     		ldr	r3, [r7, #0]
 1326 0920 9B88     		ldrh	r3, [r3, #4]
 1327 0922 002B     		cmp	r3, #0
 1328 0924 08D0     		beq	.L53
 1329              		.loc 1 399 0 is_stmt 0 discriminator 1
 1330 0926 3B68     		ldr	r3, [r7, #0]
 1331 0928 9B88     		ldrh	r3, [r3, #4]
 1332 092a 042B     		cmp	r3, #4
 1333 092c 04D0     		beq	.L53
 1334              		.loc 1 399 0 discriminator 2
 1335 092e 3F48     		ldr	r0, .L57+32
 1336 0930 40F28F11 		movw	r1, #399
 1337 0934 FFF7FEFF 		bl	assert_failed
 1338              	.L53:
 400:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 1339              		.loc 1 400 0 is_stmt 1
 1340 0938 3B68     		ldr	r3, [r7, #0]
 1341 093a 5B89     		ldrh	r3, [r3, #10]
 1342 093c 002B     		cmp	r3, #0
 1343 093e 08D0     		beq	.L54
 1344              		.loc 1 400 0 is_stmt 0 discriminator 1
 1345 0940 3B68     		ldr	r3, [r7, #0]
 1346 0942 5B89     		ldrh	r3, [r3, #10]
 1347 0944 082B     		cmp	r3, #8
 1348 0946 04D0     		beq	.L54
 1349              		.loc 1 400 0 discriminator 2
 1350 0948 3848     		ldr	r0, .L57+32
 1351 094a 4FF4C871 		mov	r1, #400
 1352 094e FFF7FEFF 		bl	assert_failed
 1353              	.L54:
 401:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 1354              		.loc 1 401 0 is_stmt 1
 1355 0952 3B68     		ldr	r3, [r7, #0]
 1356 0954 DB89     		ldrh	r3, [r3, #14]
 1357 0956 B3F5007F 		cmp	r3, #512
 1358 095a 08D0     		beq	.L55
 1359              		.loc 1 401 0 is_stmt 0 discriminator 1
 1360 095c 3B68     		ldr	r3, [r7, #0]
 1361 095e DB89     		ldrh	r3, [r3, #14]
 1362 0960 002B     		cmp	r3, #0
 1363 0962 04D0     		beq	.L55
 1364              		.loc 1 401 0 discriminator 2
 1365 0964 3148     		ldr	r0, .L57+32
 1366 0966 40F29111 		movw	r1, #401
 1367 096a FFF7FEFF 		bl	assert_failed
 1368              	.L55:
 402:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 1369              		.loc 1 402 0 is_stmt 1
 1370 096e 3B68     		ldr	r3, [r7, #0]
 1371 0970 9B89     		ldrh	r3, [r3, #12]
 1372 0972 B3F5807F 		cmp	r3, #256
 1373 0976 08D0     		beq	.L56
 1374              		.loc 1 402 0 is_stmt 0 discriminator 1
 1375 0978 3B68     		ldr	r3, [r7, #0]
 1376 097a 9B89     		ldrh	r3, [r3, #12]
 1377 097c 002B     		cmp	r3, #0
 1378 097e 04D0     		beq	.L56
 1379              		.loc 1 402 0 discriminator 2
 1380 0980 2A48     		ldr	r0, .L57+32
 1381 0982 4FF4C971 		mov	r1, #402
 1382 0986 FFF7FEFF 		bl	assert_failed
 1383              	.L56:
 403:../SPL/src/stm32f10x_tim.c ****     
 404:../SPL/src/stm32f10x_tim.c ****     /* Reset the Output N Polarity level */
 405:../SPL/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2NP));
 1384              		.loc 1 405 0 is_stmt 1
 1385 098a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1386 098c 23F08003 		bic	r3, r3, #128
 1387 0990 FB81     		strh	r3, [r7, #14]	@ movhi
 406:../SPL/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 407:../SPL/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 1388              		.loc 1 407 0
 1389 0992 3B68     		ldr	r3, [r7, #0]
 1390 0994 5B89     		ldrh	r3, [r3, #10]
 1391 0996 4FEA0313 		lsl	r3, r3, #4
 1392 099a 9AB2     		uxth	r2, r3
 1393 099c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1394 099e 1343     		orrs	r3, r3, r2
 1395 09a0 FB81     		strh	r3, [r7, #14]	@ movhi
 408:../SPL/src/stm32f10x_tim.c ****     
 409:../SPL/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 410:../SPL/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2NE));    
 1396              		.loc 1 410 0
 1397 09a2 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1398 09a4 23F04003 		bic	r3, r3, #64
 1399 09a8 FB81     		strh	r3, [r7, #14]	@ movhi
 411:../SPL/src/stm32f10x_tim.c ****     /* Set the Output N State */
 412:../SPL/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 1400              		.loc 1 412 0
 1401 09aa 3B68     		ldr	r3, [r7, #0]
 1402 09ac 9B88     		ldrh	r3, [r3, #4]
 1403 09ae 4FEA0313 		lsl	r3, r3, #4
 1404 09b2 9AB2     		uxth	r2, r3
 1405 09b4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1406 09b6 1343     		orrs	r3, r3, r2
 1407 09b8 FB81     		strh	r3, [r7, #14]	@ movhi
 413:../SPL/src/stm32f10x_tim.c ****     
 414:../SPL/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 415:../SPL/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS2));
 1408              		.loc 1 415 0
 1409 09ba BB89     		ldrh	r3, [r7, #12]	@ movhi
 1410 09bc 23F48063 		bic	r3, r3, #1024
 1411 09c0 BB81     		strh	r3, [r7, #12]	@ movhi
 416:../SPL/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS2N));
 1412              		.loc 1 416 0
 1413 09c2 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1414 09c4 23F40063 		bic	r3, r3, #2048
 1415 09c8 BB81     		strh	r3, [r7, #12]	@ movhi
 417:../SPL/src/stm32f10x_tim.c ****     
 418:../SPL/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 419:../SPL/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 1416              		.loc 1 419 0
 1417 09ca 3B68     		ldr	r3, [r7, #0]
 1418 09cc 9B89     		ldrh	r3, [r3, #12]
 1419 09ce 4FEA8303 		lsl	r3, r3, #2
 1420 09d2 9AB2     		uxth	r2, r3
 1421 09d4 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1422 09d6 1343     		orrs	r3, r3, r2
 1423 09d8 BB81     		strh	r3, [r7, #12]	@ movhi
 420:../SPL/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 421:../SPL/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 1424              		.loc 1 421 0
 1425 09da 3B68     		ldr	r3, [r7, #0]
 1426 09dc DB89     		ldrh	r3, [r3, #14]
 1427 09de 4FEA8303 		lsl	r3, r3, #2
 1428 09e2 9AB2     		uxth	r2, r3
 1429 09e4 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1430 09e6 1343     		orrs	r3, r3, r2
 1431 09e8 BB81     		strh	r3, [r7, #12]	@ movhi
 1432              	.L52:
 422:../SPL/src/stm32f10x_tim.c ****   }
 423:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 424:../SPL/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 1433              		.loc 1 424 0
 1434 09ea 7B68     		ldr	r3, [r7, #4]
 1435 09ec BA89     		ldrh	r2, [r7, #12]	@ movhi
 1436 09ee 9A80     		strh	r2, [r3, #4]	@ movhi
 425:../SPL/src/stm32f10x_tim.c ****   
 426:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 427:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1437              		.loc 1 427 0
 1438 09f0 7B68     		ldr	r3, [r7, #4]
 1439 09f2 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1440 09f4 1A83     		strh	r2, [r3, #24]	@ movhi
 428:../SPL/src/stm32f10x_tim.c **** 
 429:../SPL/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 430:../SPL/src/stm32f10x_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 1441              		.loc 1 430 0
 1442 09f6 3B68     		ldr	r3, [r7, #0]
 1443 09f8 DA88     		ldrh	r2, [r3, #6]
 1444 09fa 7B68     		ldr	r3, [r7, #4]
 1445 09fc 1A87     		strh	r2, [r3, #56]	@ movhi
 431:../SPL/src/stm32f10x_tim.c ****   
 432:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 433:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 1446              		.loc 1 433 0
 1447 09fe 7B68     		ldr	r3, [r7, #4]
 1448 0a00 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1449 0a02 1A84     		strh	r2, [r3, #32]	@ movhi
 434:../SPL/src/stm32f10x_tim.c **** }
 1450              		.loc 1 434 0
 1451 0a04 07F11007 		add	r7, r7, #16
 1452 0a08 BD46     		mov	sp, r7
 1453 0a0a 80BD     		pop	{r7, pc}
 1454              	.L58:
 1455              		.align	2
 1456              	.L57:
 1457 0a0c 002C0140 		.word	1073818624
 1458 0a10 00040040 		.word	1073742848
 1459 0a14 00080040 		.word	1073743872
 1460 0a18 000C0040 		.word	1073744896
 1461 0a1c 00340140 		.word	1073820672
 1462 0a20 004C0140 		.word	1073826816
 1463 0a24 00180040 		.word	1073747968
 1464 0a28 00400140 		.word	1073823744
 1465 0a2c 00000000 		.word	.LC0
 1466              		.cfi_endproc
 1467              	.LFE32:
 1469              		.align	2
 1470              		.global	TIM_OC3Init
 1471              		.thumb
 1472              		.thumb_func
 1474              	TIM_OC3Init:
 1475              	.LFB33:
 435:../SPL/src/stm32f10x_tim.c **** 
 436:../SPL/src/stm32f10x_tim.c **** /**
 437:../SPL/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified
 438:../SPL/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 439:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 440:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 441:../SPL/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 442:../SPL/src/stm32f10x_tim.c ****   * @retval None
 443:../SPL/src/stm32f10x_tim.c ****   */
 444:../SPL/src/stm32f10x_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 445:../SPL/src/stm32f10x_tim.c **** {
 1476              		.loc 1 445 0
 1477              		.cfi_startproc
 1478              		@ args = 0, pretend = 0, frame = 16
 1479              		@ frame_needed = 1, uses_anonymous_args = 0
 1480 0a30 80B5     		push	{r7, lr}
 1481              	.LCFI12:
 1482              		.cfi_def_cfa_offset 8
 1483              		.cfi_offset 7, -8
 1484              		.cfi_offset 14, -4
 1485 0a32 84B0     		sub	sp, sp, #16
 1486              	.LCFI13:
 1487              		.cfi_def_cfa_offset 24
 1488 0a34 00AF     		add	r7, sp, #0
 1489              	.LCFI14:
 1490              		.cfi_def_cfa_register 7
 1491 0a36 7860     		str	r0, [r7, #4]
 1492 0a38 3960     		str	r1, [r7, #0]
 446:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1493              		.loc 1 446 0
 1494 0a3a 4FF00003 		mov	r3, #0
 1495 0a3e 7B81     		strh	r3, [r7, #10]	@ movhi
 1496 0a40 4FF00003 		mov	r3, #0
 1497 0a44 FB81     		strh	r3, [r7, #14]	@ movhi
 1498 0a46 4FF00003 		mov	r3, #0
 1499 0a4a BB81     		strh	r3, [r7, #12]	@ movhi
 447:../SPL/src/stm32f10x_tim.c ****    
 448:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
 449:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 1500              		.loc 1 449 0
 1501 0a4c 7A68     		ldr	r2, [r7, #4]
 1502 0a4e 824B     		ldr	r3, .L70
 1503 0a50 9A42     		cmp	r2, r3
 1504 0a52 18D0     		beq	.L60
 1505              		.loc 1 449 0 is_stmt 0 discriminator 1
 1506 0a54 7B68     		ldr	r3, [r7, #4]
 1507 0a56 B3F1804F 		cmp	r3, #1073741824
 1508 0a5a 14D0     		beq	.L60
 1509              		.loc 1 449 0 discriminator 2
 1510 0a5c 7A68     		ldr	r2, [r7, #4]
 1511 0a5e 7F4B     		ldr	r3, .L70+4
 1512 0a60 9A42     		cmp	r2, r3
 1513 0a62 10D0     		beq	.L60
 1514              		.loc 1 449 0 discriminator 3
 1515 0a64 7A68     		ldr	r2, [r7, #4]
 1516 0a66 7E4B     		ldr	r3, .L70+8
 1517 0a68 9A42     		cmp	r2, r3
 1518 0a6a 0CD0     		beq	.L60
 1519              		.loc 1 449 0 discriminator 4
 1520 0a6c 7A68     		ldr	r2, [r7, #4]
 1521 0a6e 7D4B     		ldr	r3, .L70+12
 1522 0a70 9A42     		cmp	r2, r3
 1523 0a72 08D0     		beq	.L60
 1524              		.loc 1 449 0 discriminator 5
 1525 0a74 7A68     		ldr	r2, [r7, #4]
 1526 0a76 7C4B     		ldr	r3, .L70+16
 1527 0a78 9A42     		cmp	r2, r3
 1528 0a7a 04D0     		beq	.L60
 1529              		.loc 1 449 0 discriminator 6
 1530 0a7c 7B48     		ldr	r0, .L70+20
 1531 0a7e 40F2C111 		movw	r1, #449
 1532 0a82 FFF7FEFF 		bl	assert_failed
 1533              	.L60:
 450:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 1534              		.loc 1 450 0 is_stmt 1
 1535 0a86 3B68     		ldr	r3, [r7, #0]
 1536 0a88 1B88     		ldrh	r3, [r3, #0]
 1537 0a8a 002B     		cmp	r3, #0
 1538 0a8c 18D0     		beq	.L61
 1539              		.loc 1 450 0 is_stmt 0 discriminator 1
 1540 0a8e 3B68     		ldr	r3, [r7, #0]
 1541 0a90 1B88     		ldrh	r3, [r3, #0]
 1542 0a92 102B     		cmp	r3, #16
 1543 0a94 14D0     		beq	.L61
 1544              		.loc 1 450 0 discriminator 2
 1545 0a96 3B68     		ldr	r3, [r7, #0]
 1546 0a98 1B88     		ldrh	r3, [r3, #0]
 1547 0a9a 202B     		cmp	r3, #32
 1548 0a9c 10D0     		beq	.L61
 1549              		.loc 1 450 0 discriminator 3
 1550 0a9e 3B68     		ldr	r3, [r7, #0]
 1551 0aa0 1B88     		ldrh	r3, [r3, #0]
 1552 0aa2 302B     		cmp	r3, #48
 1553 0aa4 0CD0     		beq	.L61
 1554              		.loc 1 450 0 discriminator 4
 1555 0aa6 3B68     		ldr	r3, [r7, #0]
 1556 0aa8 1B88     		ldrh	r3, [r3, #0]
 1557 0aaa 602B     		cmp	r3, #96
 1558 0aac 08D0     		beq	.L61
 1559              		.loc 1 450 0 discriminator 5
 1560 0aae 3B68     		ldr	r3, [r7, #0]
 1561 0ab0 1B88     		ldrh	r3, [r3, #0]
 1562 0ab2 702B     		cmp	r3, #112
 1563 0ab4 04D0     		beq	.L61
 1564              		.loc 1 450 0 discriminator 6
 1565 0ab6 6D48     		ldr	r0, .L70+20
 1566 0ab8 4FF4E171 		mov	r1, #450
 1567 0abc FFF7FEFF 		bl	assert_failed
 1568              	.L61:
 451:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 1569              		.loc 1 451 0 is_stmt 1
 1570 0ac0 3B68     		ldr	r3, [r7, #0]
 1571 0ac2 5B88     		ldrh	r3, [r3, #2]
 1572 0ac4 002B     		cmp	r3, #0
 1573 0ac6 08D0     		beq	.L62
 1574              		.loc 1 451 0 is_stmt 0 discriminator 1
 1575 0ac8 3B68     		ldr	r3, [r7, #0]
 1576 0aca 5B88     		ldrh	r3, [r3, #2]
 1577 0acc 012B     		cmp	r3, #1
 1578 0ace 04D0     		beq	.L62
 1579              		.loc 1 451 0 discriminator 2
 1580 0ad0 6648     		ldr	r0, .L70+20
 1581 0ad2 40F2C311 		movw	r1, #451
 1582 0ad6 FFF7FEFF 		bl	assert_failed
 1583              	.L62:
 452:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 1584              		.loc 1 452 0 is_stmt 1
 1585 0ada 3B68     		ldr	r3, [r7, #0]
 1586 0adc 1B89     		ldrh	r3, [r3, #8]
 1587 0ade 002B     		cmp	r3, #0
 1588 0ae0 08D0     		beq	.L63
 1589              		.loc 1 452 0 is_stmt 0 discriminator 1
 1590 0ae2 3B68     		ldr	r3, [r7, #0]
 1591 0ae4 1B89     		ldrh	r3, [r3, #8]
 1592 0ae6 022B     		cmp	r3, #2
 1593 0ae8 04D0     		beq	.L63
 1594              		.loc 1 452 0 discriminator 2
 1595 0aea 6048     		ldr	r0, .L70+20
 1596 0aec 4FF4E271 		mov	r1, #452
 1597 0af0 FFF7FEFF 		bl	assert_failed
 1598              	.L63:
 453:../SPL/src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 454:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC3E));
 1599              		.loc 1 454 0 is_stmt 1
 1600 0af4 7B68     		ldr	r3, [r7, #4]
 1601 0af6 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1602 0af8 9BB2     		uxth	r3, r3
 1603 0afa 23F48073 		bic	r3, r3, #256
 1604 0afe 9AB2     		uxth	r2, r3
 1605 0b00 7B68     		ldr	r3, [r7, #4]
 1606 0b02 1A84     		strh	r2, [r3, #32]	@ movhi
 455:../SPL/src/stm32f10x_tim.c ****   
 456:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 457:../SPL/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 1607              		.loc 1 457 0
 1608 0b04 7B68     		ldr	r3, [r7, #4]
 1609 0b06 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1610 0b08 FB81     		strh	r3, [r7, #14]	@ movhi
 458:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 459:../SPL/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 1611              		.loc 1 459 0
 1612 0b0a 7B68     		ldr	r3, [r7, #4]
 1613 0b0c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1614 0b0e BB81     		strh	r3, [r7, #12]	@ movhi
 460:../SPL/src/stm32f10x_tim.c ****   
 461:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
 462:../SPL/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1615              		.loc 1 462 0
 1616 0b10 7B68     		ldr	r3, [r7, #4]
 1617 0b12 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1618 0b14 7B81     		strh	r3, [r7, #10]	@ movhi
 463:../SPL/src/stm32f10x_tim.c ****     
 464:../SPL/src/stm32f10x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 465:../SPL/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_OC3M));
 1619              		.loc 1 465 0
 1620 0b16 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1621 0b18 23F07003 		bic	r3, r3, #112
 1622 0b1c 7B81     		strh	r3, [r7, #10]	@ movhi
 466:../SPL/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_CC3S));  
 1623              		.loc 1 466 0
 1624 0b1e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1625 0b20 23F00303 		bic	r3, r3, #3
 1626 0b24 7B81     		strh	r3, [r7, #10]	@ movhi
 467:../SPL/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 468:../SPL/src/stm32f10x_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1627              		.loc 1 468 0
 1628 0b26 3B68     		ldr	r3, [r7, #0]
 1629 0b28 1A88     		ldrh	r2, [r3, #0]
 1630 0b2a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1631 0b2c 1343     		orrs	r3, r3, r2
 1632 0b2e 7B81     		strh	r3, [r7, #10]	@ movhi
 469:../SPL/src/stm32f10x_tim.c ****   
 470:../SPL/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 471:../SPL/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3P));
 1633              		.loc 1 471 0
 1634 0b30 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1635 0b32 23F40073 		bic	r3, r3, #512
 1636 0b36 FB81     		strh	r3, [r7, #14]	@ movhi
 472:../SPL/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 473:../SPL/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 1637              		.loc 1 473 0
 1638 0b38 3B68     		ldr	r3, [r7, #0]
 1639 0b3a 1B89     		ldrh	r3, [r3, #8]
 1640 0b3c 4FEA0323 		lsl	r3, r3, #8
 1641 0b40 9AB2     		uxth	r2, r3
 1642 0b42 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1643 0b44 1343     		orrs	r3, r3, r2
 1644 0b46 FB81     		strh	r3, [r7, #14]	@ movhi
 474:../SPL/src/stm32f10x_tim.c ****   
 475:../SPL/src/stm32f10x_tim.c ****   /* Set the Output State */
 476:../SPL/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 1645              		.loc 1 476 0
 1646 0b48 3B68     		ldr	r3, [r7, #0]
 1647 0b4a 5B88     		ldrh	r3, [r3, #2]
 1648 0b4c 4FEA0323 		lsl	r3, r3, #8
 1649 0b50 9AB2     		uxth	r2, r3
 1650 0b52 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1651 0b54 1343     		orrs	r3, r3, r2
 1652 0b56 FB81     		strh	r3, [r7, #14]	@ movhi
 477:../SPL/src/stm32f10x_tim.c ****     
 478:../SPL/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1653              		.loc 1 478 0
 1654 0b58 7A68     		ldr	r2, [r7, #4]
 1655 0b5a 3F4B     		ldr	r3, .L70
 1656 0b5c 9A42     		cmp	r2, r3
 1657 0b5e 03D0     		beq	.L64
 1658              		.loc 1 478 0 is_stmt 0 discriminator 1
 1659 0b60 7A68     		ldr	r2, [r7, #4]
 1660 0b62 414B     		ldr	r3, .L70+16
 1661 0b64 9A42     		cmp	r2, r3
 1662 0b66 65D1     		bne	.L65
 1663              	.L64:
 479:../SPL/src/stm32f10x_tim.c ****   {
 480:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 1664              		.loc 1 480 0 is_stmt 1
 1665 0b68 3B68     		ldr	r3, [r7, #0]
 1666 0b6a 9B88     		ldrh	r3, [r3, #4]
 1667 0b6c 002B     		cmp	r3, #0
 1668 0b6e 08D0     		beq	.L66
 1669              		.loc 1 480 0 is_stmt 0 discriminator 1
 1670 0b70 3B68     		ldr	r3, [r7, #0]
 1671 0b72 9B88     		ldrh	r3, [r3, #4]
 1672 0b74 042B     		cmp	r3, #4
 1673 0b76 04D0     		beq	.L66
 1674              		.loc 1 480 0 discriminator 2
 1675 0b78 3C48     		ldr	r0, .L70+20
 1676 0b7a 4FF4F071 		mov	r1, #480
 1677 0b7e FFF7FEFF 		bl	assert_failed
 1678              	.L66:
 481:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 1679              		.loc 1 481 0 is_stmt 1
 1680 0b82 3B68     		ldr	r3, [r7, #0]
 1681 0b84 5B89     		ldrh	r3, [r3, #10]
 1682 0b86 002B     		cmp	r3, #0
 1683 0b88 08D0     		beq	.L67
 1684              		.loc 1 481 0 is_stmt 0 discriminator 1
 1685 0b8a 3B68     		ldr	r3, [r7, #0]
 1686 0b8c 5B89     		ldrh	r3, [r3, #10]
 1687 0b8e 082B     		cmp	r3, #8
 1688 0b90 04D0     		beq	.L67
 1689              		.loc 1 481 0 discriminator 2
 1690 0b92 3648     		ldr	r0, .L70+20
 1691 0b94 40F2E111 		movw	r1, #481
 1692 0b98 FFF7FEFF 		bl	assert_failed
 1693              	.L67:
 482:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 1694              		.loc 1 482 0 is_stmt 1
 1695 0b9c 3B68     		ldr	r3, [r7, #0]
 1696 0b9e DB89     		ldrh	r3, [r3, #14]
 1697 0ba0 B3F5007F 		cmp	r3, #512
 1698 0ba4 08D0     		beq	.L68
 1699              		.loc 1 482 0 is_stmt 0 discriminator 1
 1700 0ba6 3B68     		ldr	r3, [r7, #0]
 1701 0ba8 DB89     		ldrh	r3, [r3, #14]
 1702 0baa 002B     		cmp	r3, #0
 1703 0bac 04D0     		beq	.L68
 1704              		.loc 1 482 0 discriminator 2
 1705 0bae 2F48     		ldr	r0, .L70+20
 1706 0bb0 4FF4F171 		mov	r1, #482
 1707 0bb4 FFF7FEFF 		bl	assert_failed
 1708              	.L68:
 483:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 1709              		.loc 1 483 0 is_stmt 1
 1710 0bb8 3B68     		ldr	r3, [r7, #0]
 1711 0bba 9B89     		ldrh	r3, [r3, #12]
 1712 0bbc B3F5807F 		cmp	r3, #256
 1713 0bc0 08D0     		beq	.L69
 1714              		.loc 1 483 0 is_stmt 0 discriminator 1
 1715 0bc2 3B68     		ldr	r3, [r7, #0]
 1716 0bc4 9B89     		ldrh	r3, [r3, #12]
 1717 0bc6 002B     		cmp	r3, #0
 1718 0bc8 04D0     		beq	.L69
 1719              		.loc 1 483 0 discriminator 2
 1720 0bca 2848     		ldr	r0, .L70+20
 1721 0bcc 40F2E311 		movw	r1, #483
 1722 0bd0 FFF7FEFF 		bl	assert_failed
 1723              	.L69:
 484:../SPL/src/stm32f10x_tim.c ****     
 485:../SPL/src/stm32f10x_tim.c ****     /* Reset the Output N Polarity level */
 486:../SPL/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3NP));
 1724              		.loc 1 486 0 is_stmt 1
 1725 0bd4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1726 0bd6 23F40063 		bic	r3, r3, #2048
 1727 0bda FB81     		strh	r3, [r7, #14]	@ movhi
 487:../SPL/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 488:../SPL/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 1728              		.loc 1 488 0
 1729 0bdc 3B68     		ldr	r3, [r7, #0]
 1730 0bde 5B89     		ldrh	r3, [r3, #10]
 1731 0be0 4FEA0323 		lsl	r3, r3, #8
 1732 0be4 9AB2     		uxth	r2, r3
 1733 0be6 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1734 0be8 1343     		orrs	r3, r3, r2
 1735 0bea FB81     		strh	r3, [r7, #14]	@ movhi
 489:../SPL/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 490:../SPL/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3NE));
 1736              		.loc 1 490 0
 1737 0bec FB89     		ldrh	r3, [r7, #14]	@ movhi
 1738 0bee 23F48063 		bic	r3, r3, #1024
 1739 0bf2 FB81     		strh	r3, [r7, #14]	@ movhi
 491:../SPL/src/stm32f10x_tim.c ****     
 492:../SPL/src/stm32f10x_tim.c ****     /* Set the Output N State */
 493:../SPL/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 1740              		.loc 1 493 0
 1741 0bf4 3B68     		ldr	r3, [r7, #0]
 1742 0bf6 9B88     		ldrh	r3, [r3, #4]
 1743 0bf8 4FEA0323 		lsl	r3, r3, #8
 1744 0bfc 9AB2     		uxth	r2, r3
 1745 0bfe FB89     		ldrh	r3, [r7, #14]	@ movhi
 1746 0c00 1343     		orrs	r3, r3, r2
 1747 0c02 FB81     		strh	r3, [r7, #14]	@ movhi
 494:../SPL/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 495:../SPL/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS3));
 1748              		.loc 1 495 0
 1749 0c04 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1750 0c06 23F48053 		bic	r3, r3, #4096
 1751 0c0a BB81     		strh	r3, [r7, #12]	@ movhi
 496:../SPL/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS3N));
 1752              		.loc 1 496 0
 1753 0c0c BB89     		ldrh	r3, [r7, #12]	@ movhi
 1754 0c0e 23F40053 		bic	r3, r3, #8192
 1755 0c12 BB81     		strh	r3, [r7, #12]	@ movhi
 497:../SPL/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 498:../SPL/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 1756              		.loc 1 498 0
 1757 0c14 3B68     		ldr	r3, [r7, #0]
 1758 0c16 9B89     		ldrh	r3, [r3, #12]
 1759 0c18 4FEA0313 		lsl	r3, r3, #4
 1760 0c1c 9AB2     		uxth	r2, r3
 1761 0c1e BB89     		ldrh	r3, [r7, #12]	@ movhi
 1762 0c20 1343     		orrs	r3, r3, r2
 1763 0c22 BB81     		strh	r3, [r7, #12]	@ movhi
 499:../SPL/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 500:../SPL/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 1764              		.loc 1 500 0
 1765 0c24 3B68     		ldr	r3, [r7, #0]
 1766 0c26 DB89     		ldrh	r3, [r3, #14]
 1767 0c28 4FEA0313 		lsl	r3, r3, #4
 1768 0c2c 9AB2     		uxth	r2, r3
 1769 0c2e BB89     		ldrh	r3, [r7, #12]	@ movhi
 1770 0c30 1343     		orrs	r3, r3, r2
 1771 0c32 BB81     		strh	r3, [r7, #12]	@ movhi
 1772              	.L65:
 501:../SPL/src/stm32f10x_tim.c ****   }
 502:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 503:../SPL/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 1773              		.loc 1 503 0
 1774 0c34 7B68     		ldr	r3, [r7, #4]
 1775 0c36 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1776 0c38 9A80     		strh	r2, [r3, #4]	@ movhi
 504:../SPL/src/stm32f10x_tim.c ****   
 505:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
 506:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1777              		.loc 1 506 0
 1778 0c3a 7B68     		ldr	r3, [r7, #4]
 1779 0c3c 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1780 0c3e 9A83     		strh	r2, [r3, #28]	@ movhi
 507:../SPL/src/stm32f10x_tim.c **** 
 508:../SPL/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 509:../SPL/src/stm32f10x_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 1781              		.loc 1 509 0
 1782 0c40 3B68     		ldr	r3, [r7, #0]
 1783 0c42 DA88     		ldrh	r2, [r3, #6]
 1784 0c44 7B68     		ldr	r3, [r7, #4]
 1785 0c46 9A87     		strh	r2, [r3, #60]	@ movhi
 510:../SPL/src/stm32f10x_tim.c ****   
 511:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 512:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 1786              		.loc 1 512 0
 1787 0c48 7B68     		ldr	r3, [r7, #4]
 1788 0c4a FA89     		ldrh	r2, [r7, #14]	@ movhi
 1789 0c4c 1A84     		strh	r2, [r3, #32]	@ movhi
 513:../SPL/src/stm32f10x_tim.c **** }
 1790              		.loc 1 513 0
 1791 0c4e 07F11007 		add	r7, r7, #16
 1792 0c52 BD46     		mov	sp, r7
 1793 0c54 80BD     		pop	{r7, pc}
 1794              	.L71:
 1795 0c56 00BF     		.align	2
 1796              	.L70:
 1797 0c58 002C0140 		.word	1073818624
 1798 0c5c 00040040 		.word	1073742848
 1799 0c60 00080040 		.word	1073743872
 1800 0c64 000C0040 		.word	1073744896
 1801 0c68 00340140 		.word	1073820672
 1802 0c6c 00000000 		.word	.LC0
 1803              		.cfi_endproc
 1804              	.LFE33:
 1806              		.align	2
 1807              		.global	TIM_OC4Init
 1808              		.thumb
 1809              		.thumb_func
 1811              	TIM_OC4Init:
 1812              	.LFB34:
 514:../SPL/src/stm32f10x_tim.c **** 
 515:../SPL/src/stm32f10x_tim.c **** /**
 516:../SPL/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified
 517:../SPL/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 518:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 519:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 520:../SPL/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 521:../SPL/src/stm32f10x_tim.c ****   * @retval None
 522:../SPL/src/stm32f10x_tim.c ****   */
 523:../SPL/src/stm32f10x_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 524:../SPL/src/stm32f10x_tim.c **** {
 1813              		.loc 1 524 0
 1814              		.cfi_startproc
 1815              		@ args = 0, pretend = 0, frame = 16
 1816              		@ frame_needed = 1, uses_anonymous_args = 0
 1817 0c70 80B5     		push	{r7, lr}
 1818              	.LCFI15:
 1819              		.cfi_def_cfa_offset 8
 1820              		.cfi_offset 7, -8
 1821              		.cfi_offset 14, -4
 1822 0c72 84B0     		sub	sp, sp, #16
 1823              	.LCFI16:
 1824              		.cfi_def_cfa_offset 24
 1825 0c74 00AF     		add	r7, sp, #0
 1826              	.LCFI17:
 1827              		.cfi_def_cfa_register 7
 1828 0c76 7860     		str	r0, [r7, #4]
 1829 0c78 3960     		str	r1, [r7, #0]
 525:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1830              		.loc 1 525 0
 1831 0c7a 4FF00003 		mov	r3, #0
 1832 0c7e BB81     		strh	r3, [r7, #12]	@ movhi
 1833 0c80 4FF00003 		mov	r3, #0
 1834 0c84 7B81     		strh	r3, [r7, #10]	@ movhi
 1835 0c86 4FF00003 		mov	r3, #0
 1836 0c8a FB81     		strh	r3, [r7, #14]	@ movhi
 526:../SPL/src/stm32f10x_tim.c ****    
 527:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
 528:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 1837              		.loc 1 528 0
 1838 0c8c 7A68     		ldr	r2, [r7, #4]
 1839 0c8e 5E4B     		ldr	r3, .L80
 1840 0c90 9A42     		cmp	r2, r3
 1841 0c92 18D0     		beq	.L73
 1842              		.loc 1 528 0 is_stmt 0 discriminator 1
 1843 0c94 7B68     		ldr	r3, [r7, #4]
 1844 0c96 B3F1804F 		cmp	r3, #1073741824
 1845 0c9a 14D0     		beq	.L73
 1846              		.loc 1 528 0 discriminator 2
 1847 0c9c 7A68     		ldr	r2, [r7, #4]
 1848 0c9e 5B4B     		ldr	r3, .L80+4
 1849 0ca0 9A42     		cmp	r2, r3
 1850 0ca2 10D0     		beq	.L73
 1851              		.loc 1 528 0 discriminator 3
 1852 0ca4 7A68     		ldr	r2, [r7, #4]
 1853 0ca6 5A4B     		ldr	r3, .L80+8
 1854 0ca8 9A42     		cmp	r2, r3
 1855 0caa 0CD0     		beq	.L73
 1856              		.loc 1 528 0 discriminator 4
 1857 0cac 7A68     		ldr	r2, [r7, #4]
 1858 0cae 594B     		ldr	r3, .L80+12
 1859 0cb0 9A42     		cmp	r2, r3
 1860 0cb2 08D0     		beq	.L73
 1861              		.loc 1 528 0 discriminator 5
 1862 0cb4 7A68     		ldr	r2, [r7, #4]
 1863 0cb6 584B     		ldr	r3, .L80+16
 1864 0cb8 9A42     		cmp	r2, r3
 1865 0cba 04D0     		beq	.L73
 1866              		.loc 1 528 0 discriminator 6
 1867 0cbc 5748     		ldr	r0, .L80+20
 1868 0cbe 4FF40471 		mov	r1, #528
 1869 0cc2 FFF7FEFF 		bl	assert_failed
 1870              	.L73:
 529:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 1871              		.loc 1 529 0 is_stmt 1
 1872 0cc6 3B68     		ldr	r3, [r7, #0]
 1873 0cc8 1B88     		ldrh	r3, [r3, #0]
 1874 0cca 002B     		cmp	r3, #0
 1875 0ccc 18D0     		beq	.L74
 1876              		.loc 1 529 0 is_stmt 0 discriminator 1
 1877 0cce 3B68     		ldr	r3, [r7, #0]
 1878 0cd0 1B88     		ldrh	r3, [r3, #0]
 1879 0cd2 102B     		cmp	r3, #16
 1880 0cd4 14D0     		beq	.L74
 1881              		.loc 1 529 0 discriminator 2
 1882 0cd6 3B68     		ldr	r3, [r7, #0]
 1883 0cd8 1B88     		ldrh	r3, [r3, #0]
 1884 0cda 202B     		cmp	r3, #32
 1885 0cdc 10D0     		beq	.L74
 1886              		.loc 1 529 0 discriminator 3
 1887 0cde 3B68     		ldr	r3, [r7, #0]
 1888 0ce0 1B88     		ldrh	r3, [r3, #0]
 1889 0ce2 302B     		cmp	r3, #48
 1890 0ce4 0CD0     		beq	.L74
 1891              		.loc 1 529 0 discriminator 4
 1892 0ce6 3B68     		ldr	r3, [r7, #0]
 1893 0ce8 1B88     		ldrh	r3, [r3, #0]
 1894 0cea 602B     		cmp	r3, #96
 1895 0cec 08D0     		beq	.L74
 1896              		.loc 1 529 0 discriminator 5
 1897 0cee 3B68     		ldr	r3, [r7, #0]
 1898 0cf0 1B88     		ldrh	r3, [r3, #0]
 1899 0cf2 702B     		cmp	r3, #112
 1900 0cf4 04D0     		beq	.L74
 1901              		.loc 1 529 0 discriminator 6
 1902 0cf6 4948     		ldr	r0, .L80+20
 1903 0cf8 40F21121 		movw	r1, #529
 1904 0cfc FFF7FEFF 		bl	assert_failed
 1905              	.L74:
 530:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 1906              		.loc 1 530 0 is_stmt 1
 1907 0d00 3B68     		ldr	r3, [r7, #0]
 1908 0d02 5B88     		ldrh	r3, [r3, #2]
 1909 0d04 002B     		cmp	r3, #0
 1910 0d06 08D0     		beq	.L75
 1911              		.loc 1 530 0 is_stmt 0 discriminator 1
 1912 0d08 3B68     		ldr	r3, [r7, #0]
 1913 0d0a 5B88     		ldrh	r3, [r3, #2]
 1914 0d0c 012B     		cmp	r3, #1
 1915 0d0e 04D0     		beq	.L75
 1916              		.loc 1 530 0 discriminator 2
 1917 0d10 4248     		ldr	r0, .L80+20
 1918 0d12 40F21221 		movw	r1, #530
 1919 0d16 FFF7FEFF 		bl	assert_failed
 1920              	.L75:
 531:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 1921              		.loc 1 531 0 is_stmt 1
 1922 0d1a 3B68     		ldr	r3, [r7, #0]
 1923 0d1c 1B89     		ldrh	r3, [r3, #8]
 1924 0d1e 002B     		cmp	r3, #0
 1925 0d20 08D0     		beq	.L76
 1926              		.loc 1 531 0 is_stmt 0 discriminator 1
 1927 0d22 3B68     		ldr	r3, [r7, #0]
 1928 0d24 1B89     		ldrh	r3, [r3, #8]
 1929 0d26 022B     		cmp	r3, #2
 1930 0d28 04D0     		beq	.L76
 1931              		.loc 1 531 0 discriminator 2
 1932 0d2a 3C48     		ldr	r0, .L80+20
 1933 0d2c 40F21321 		movw	r1, #531
 1934 0d30 FFF7FEFF 		bl	assert_failed
 1935              	.L76:
 532:../SPL/src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC4E Bit */
 533:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC4E));
 1936              		.loc 1 533 0 is_stmt 1
 1937 0d34 7B68     		ldr	r3, [r7, #4]
 1938 0d36 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1939 0d38 9BB2     		uxth	r3, r3
 1940 0d3a 23F48053 		bic	r3, r3, #4096
 1941 0d3e 9AB2     		uxth	r2, r3
 1942 0d40 7B68     		ldr	r3, [r7, #4]
 1943 0d42 1A84     		strh	r2, [r3, #32]	@ movhi
 534:../SPL/src/stm32f10x_tim.c ****   
 535:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 536:../SPL/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 1944              		.loc 1 536 0
 1945 0d44 7B68     		ldr	r3, [r7, #4]
 1946 0d46 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1947 0d48 7B81     		strh	r3, [r7, #10]	@ movhi
 537:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 538:../SPL/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 1948              		.loc 1 538 0
 1949 0d4a 7B68     		ldr	r3, [r7, #4]
 1950 0d4c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1951 0d4e FB81     		strh	r3, [r7, #14]	@ movhi
 539:../SPL/src/stm32f10x_tim.c ****   
 540:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
 541:../SPL/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1952              		.loc 1 541 0
 1953 0d50 7B68     		ldr	r3, [r7, #4]
 1954 0d52 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1955 0d54 BB81     		strh	r3, [r7, #12]	@ movhi
 542:../SPL/src/stm32f10x_tim.c ****     
 543:../SPL/src/stm32f10x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 544:../SPL/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_OC4M));
 1956              		.loc 1 544 0
 1957 0d56 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1958 0d58 23F4E043 		bic	r3, r3, #28672
 1959 0d5c BB81     		strh	r3, [r7, #12]	@ movhi
 545:../SPL/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_CC4S));
 1960              		.loc 1 545 0
 1961 0d5e BB89     		ldrh	r3, [r7, #12]	@ movhi
 1962 0d60 23F44073 		bic	r3, r3, #768
 1963 0d64 BB81     		strh	r3, [r7, #12]	@ movhi
 546:../SPL/src/stm32f10x_tim.c ****   
 547:../SPL/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 548:../SPL/src/stm32f10x_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1964              		.loc 1 548 0
 1965 0d66 3B68     		ldr	r3, [r7, #0]
 1966 0d68 1B88     		ldrh	r3, [r3, #0]
 1967 0d6a 4FEA0323 		lsl	r3, r3, #8
 1968 0d6e 9AB2     		uxth	r2, r3
 1969 0d70 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1970 0d72 1343     		orrs	r3, r3, r2
 1971 0d74 BB81     		strh	r3, [r7, #12]	@ movhi
 549:../SPL/src/stm32f10x_tim.c ****   
 550:../SPL/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 551:../SPL/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC4P));
 1972              		.loc 1 551 0
 1973 0d76 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1974 0d78 23F40053 		bic	r3, r3, #8192
 1975 0d7c 7B81     		strh	r3, [r7, #10]	@ movhi
 552:../SPL/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 553:../SPL/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 1976              		.loc 1 553 0
 1977 0d7e 3B68     		ldr	r3, [r7, #0]
 1978 0d80 1B89     		ldrh	r3, [r3, #8]
 1979 0d82 4FEA0333 		lsl	r3, r3, #12
 1980 0d86 9AB2     		uxth	r2, r3
 1981 0d88 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1982 0d8a 1343     		orrs	r3, r3, r2
 1983 0d8c 7B81     		strh	r3, [r7, #10]	@ movhi
 554:../SPL/src/stm32f10x_tim.c ****   
 555:../SPL/src/stm32f10x_tim.c ****   /* Set the Output State */
 556:../SPL/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 1984              		.loc 1 556 0
 1985 0d8e 3B68     		ldr	r3, [r7, #0]
 1986 0d90 5B88     		ldrh	r3, [r3, #2]
 1987 0d92 4FEA0333 		lsl	r3, r3, #12
 1988 0d96 9AB2     		uxth	r2, r3
 1989 0d98 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1990 0d9a 1343     		orrs	r3, r3, r2
 1991 0d9c 7B81     		strh	r3, [r7, #10]	@ movhi
 557:../SPL/src/stm32f10x_tim.c ****     
 558:../SPL/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1992              		.loc 1 558 0
 1993 0d9e 7A68     		ldr	r2, [r7, #4]
 1994 0da0 194B     		ldr	r3, .L80
 1995 0da2 9A42     		cmp	r2, r3
 1996 0da4 03D0     		beq	.L77
 1997              		.loc 1 558 0 is_stmt 0 discriminator 1
 1998 0da6 7A68     		ldr	r2, [r7, #4]
 1999 0da8 1B4B     		ldr	r3, .L80+16
 2000 0daa 9A42     		cmp	r2, r3
 2001 0dac 19D1     		bne	.L78
 2002              	.L77:
 559:../SPL/src/stm32f10x_tim.c ****   {
 560:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 2003              		.loc 1 560 0 is_stmt 1
 2004 0dae 3B68     		ldr	r3, [r7, #0]
 2005 0db0 9B89     		ldrh	r3, [r3, #12]
 2006 0db2 B3F5807F 		cmp	r3, #256
 2007 0db6 08D0     		beq	.L79
 2008              		.loc 1 560 0 is_stmt 0 discriminator 1
 2009 0db8 3B68     		ldr	r3, [r7, #0]
 2010 0dba 9B89     		ldrh	r3, [r3, #12]
 2011 0dbc 002B     		cmp	r3, #0
 2012 0dbe 04D0     		beq	.L79
 2013              		.loc 1 560 0 discriminator 2
 2014 0dc0 1648     		ldr	r0, .L80+20
 2015 0dc2 4FF40C71 		mov	r1, #560
 2016 0dc6 FFF7FEFF 		bl	assert_failed
 2017              	.L79:
 561:../SPL/src/stm32f10x_tim.c ****     /* Reset the Output Compare IDLE State */
 562:../SPL/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS4));
 2018              		.loc 1 562 0 is_stmt 1
 2019 0dca FB89     		ldrh	r3, [r7, #14]	@ movhi
 2020 0dcc 23F48043 		bic	r3, r3, #16384
 2021 0dd0 FB81     		strh	r3, [r7, #14]	@ movhi
 563:../SPL/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 564:../SPL/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 2022              		.loc 1 564 0
 2023 0dd2 3B68     		ldr	r3, [r7, #0]
 2024 0dd4 9B89     		ldrh	r3, [r3, #12]
 2025 0dd6 4FEA8313 		lsl	r3, r3, #6
 2026 0dda 9AB2     		uxth	r2, r3
 2027 0ddc FB89     		ldrh	r3, [r7, #14]	@ movhi
 2028 0dde 1343     		orrs	r3, r3, r2
 2029 0de0 FB81     		strh	r3, [r7, #14]	@ movhi
 2030              	.L78:
 565:../SPL/src/stm32f10x_tim.c ****   }
 566:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 567:../SPL/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 2031              		.loc 1 567 0
 2032 0de2 7B68     		ldr	r3, [r7, #4]
 2033 0de4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2034 0de6 9A80     		strh	r2, [r3, #4]	@ movhi
 568:../SPL/src/stm32f10x_tim.c ****   
 569:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */  
 570:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 2035              		.loc 1 570 0
 2036 0de8 7B68     		ldr	r3, [r7, #4]
 2037 0dea BA89     		ldrh	r2, [r7, #12]	@ movhi
 2038 0dec 9A83     		strh	r2, [r3, #28]	@ movhi
 571:../SPL/src/stm32f10x_tim.c **** 
 572:../SPL/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 573:../SPL/src/stm32f10x_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 2039              		.loc 1 573 0
 2040 0dee 3B68     		ldr	r3, [r7, #0]
 2041 0df0 DA88     		ldrh	r2, [r3, #6]
 2042 0df2 7B68     		ldr	r3, [r7, #4]
 2043 0df4 A3F84020 		strh	r2, [r3, #64]	@ movhi
 574:../SPL/src/stm32f10x_tim.c ****   
 575:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 576:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 2044              		.loc 1 576 0
 2045 0df8 7B68     		ldr	r3, [r7, #4]
 2046 0dfa 7A89     		ldrh	r2, [r7, #10]	@ movhi
 2047 0dfc 1A84     		strh	r2, [r3, #32]	@ movhi
 577:../SPL/src/stm32f10x_tim.c **** }
 2048              		.loc 1 577 0
 2049 0dfe 07F11007 		add	r7, r7, #16
 2050 0e02 BD46     		mov	sp, r7
 2051 0e04 80BD     		pop	{r7, pc}
 2052              	.L81:
 2053 0e06 00BF     		.align	2
 2054              	.L80:
 2055 0e08 002C0140 		.word	1073818624
 2056 0e0c 00040040 		.word	1073742848
 2057 0e10 00080040 		.word	1073743872
 2058 0e14 000C0040 		.word	1073744896
 2059 0e18 00340140 		.word	1073820672
 2060 0e1c 00000000 		.word	.LC0
 2061              		.cfi_endproc
 2062              	.LFE34:
 2064              		.align	2
 2065              		.global	TIM_ICInit
 2066              		.thumb
 2067              		.thumb_func
 2069              	TIM_ICInit:
 2070              	.LFB35:
 578:../SPL/src/stm32f10x_tim.c **** 
 579:../SPL/src/stm32f10x_tim.c **** /**
 580:../SPL/src/stm32f10x_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified
 581:../SPL/src/stm32f10x_tim.c ****   *         parameters in the TIM_ICInitStruct.
 582:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
 583:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure
 584:../SPL/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 585:../SPL/src/stm32f10x_tim.c ****   * @retval None
 586:../SPL/src/stm32f10x_tim.c ****   */
 587:../SPL/src/stm32f10x_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
 588:../SPL/src/stm32f10x_tim.c **** {
 2071              		.loc 1 588 0
 2072              		.cfi_startproc
 2073              		@ args = 0, pretend = 0, frame = 8
 2074              		@ frame_needed = 1, uses_anonymous_args = 0
 2075 0e20 80B5     		push	{r7, lr}
 2076              	.LCFI18:
 2077              		.cfi_def_cfa_offset 8
 2078              		.cfi_offset 7, -8
 2079              		.cfi_offset 14, -4
 2080 0e22 82B0     		sub	sp, sp, #8
 2081              	.LCFI19:
 2082              		.cfi_def_cfa_offset 16
 2083 0e24 00AF     		add	r7, sp, #0
 2084              	.LCFI20:
 2085              		.cfi_def_cfa_register 7
 2086 0e26 7860     		str	r0, [r7, #4]
 2087 0e28 3960     		str	r1, [r7, #0]
 589:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
 590:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_ICInitStruct->TIM_Channel));  
 2088              		.loc 1 590 0
 2089 0e2a 3B68     		ldr	r3, [r7, #0]
 2090 0e2c 1B88     		ldrh	r3, [r3, #0]
 2091 0e2e 002B     		cmp	r3, #0
 2092 0e30 10D0     		beq	.L83
 2093              		.loc 1 590 0 is_stmt 0 discriminator 1
 2094 0e32 3B68     		ldr	r3, [r7, #0]
 2095 0e34 1B88     		ldrh	r3, [r3, #0]
 2096 0e36 042B     		cmp	r3, #4
 2097 0e38 0CD0     		beq	.L83
 2098              		.loc 1 590 0 discriminator 2
 2099 0e3a 3B68     		ldr	r3, [r7, #0]
 2100 0e3c 1B88     		ldrh	r3, [r3, #0]
 2101 0e3e 082B     		cmp	r3, #8
 2102 0e40 08D0     		beq	.L83
 2103              		.loc 1 590 0 discriminator 3
 2104 0e42 3B68     		ldr	r3, [r7, #0]
 2105 0e44 1B88     		ldrh	r3, [r3, #0]
 2106 0e46 0C2B     		cmp	r3, #12
 2107 0e48 04D0     		beq	.L83
 2108              		.loc 1 590 0 discriminator 4
 2109 0e4a 9748     		ldr	r0, .L99
 2110 0e4c 40F24E21 		movw	r1, #590
 2111 0e50 FFF7FEFF 		bl	assert_failed
 2112              	.L83:
 591:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
 2113              		.loc 1 591 0 is_stmt 1
 2114 0e54 3B68     		ldr	r3, [r7, #0]
 2115 0e56 9B88     		ldrh	r3, [r3, #4]
 2116 0e58 012B     		cmp	r3, #1
 2117 0e5a 0CD0     		beq	.L84
 2118              		.loc 1 591 0 is_stmt 0 discriminator 1
 2119 0e5c 3B68     		ldr	r3, [r7, #0]
 2120 0e5e 9B88     		ldrh	r3, [r3, #4]
 2121 0e60 022B     		cmp	r3, #2
 2122 0e62 08D0     		beq	.L84
 2123              		.loc 1 591 0 discriminator 2
 2124 0e64 3B68     		ldr	r3, [r7, #0]
 2125 0e66 9B88     		ldrh	r3, [r3, #4]
 2126 0e68 032B     		cmp	r3, #3
 2127 0e6a 04D0     		beq	.L84
 2128              		.loc 1 591 0 discriminator 3
 2129 0e6c 8E48     		ldr	r0, .L99
 2130 0e6e 40F24F21 		movw	r1, #591
 2131 0e72 FFF7FEFF 		bl	assert_failed
 2132              	.L84:
 592:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
 2133              		.loc 1 592 0 is_stmt 1
 2134 0e76 3B68     		ldr	r3, [r7, #0]
 2135 0e78 DB88     		ldrh	r3, [r3, #6]
 2136 0e7a 002B     		cmp	r3, #0
 2137 0e7c 10D0     		beq	.L85
 2138              		.loc 1 592 0 is_stmt 0 discriminator 1
 2139 0e7e 3B68     		ldr	r3, [r7, #0]
 2140 0e80 DB88     		ldrh	r3, [r3, #6]
 2141 0e82 042B     		cmp	r3, #4
 2142 0e84 0CD0     		beq	.L85
 2143              		.loc 1 592 0 discriminator 2
 2144 0e86 3B68     		ldr	r3, [r7, #0]
 2145 0e88 DB88     		ldrh	r3, [r3, #6]
 2146 0e8a 082B     		cmp	r3, #8
 2147 0e8c 08D0     		beq	.L85
 2148              		.loc 1 592 0 discriminator 3
 2149 0e8e 3B68     		ldr	r3, [r7, #0]
 2150 0e90 DB88     		ldrh	r3, [r3, #6]
 2151 0e92 0C2B     		cmp	r3, #12
 2152 0e94 04D0     		beq	.L85
 2153              		.loc 1 592 0 discriminator 4
 2154 0e96 8448     		ldr	r0, .L99
 2155 0e98 4FF41471 		mov	r1, #592
 2156 0e9c FFF7FEFF 		bl	assert_failed
 2157              	.L85:
 593:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
 2158              		.loc 1 593 0 is_stmt 1
 2159 0ea0 3B68     		ldr	r3, [r7, #0]
 2160 0ea2 1B89     		ldrh	r3, [r3, #8]
 2161 0ea4 0F2B     		cmp	r3, #15
 2162 0ea6 04D9     		bls	.L86
 2163              		.loc 1 593 0 is_stmt 0 discriminator 1
 2164 0ea8 7F48     		ldr	r0, .L99
 2165 0eaa 40F25121 		movw	r1, #593
 2166 0eae FFF7FEFF 		bl	assert_failed
 2167              	.L86:
 594:../SPL/src/stm32f10x_tim.c ****   
 595:../SPL/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 2168              		.loc 1 595 0 is_stmt 1
 2169 0eb2 7A68     		ldr	r2, [r7, #4]
 2170 0eb4 7D4B     		ldr	r3, .L99+4
 2171 0eb6 9A42     		cmp	r2, r3
 2172 0eb8 13D0     		beq	.L87
 2173              		.loc 1 595 0 is_stmt 0 discriminator 1
 2174 0eba 7A68     		ldr	r2, [r7, #4]
 2175 0ebc 7C4B     		ldr	r3, .L99+8
 2176 0ebe 9A42     		cmp	r2, r3
 2177 0ec0 0FD0     		beq	.L87
 2178 0ec2 7B68     		ldr	r3, [r7, #4]
 2179 0ec4 B3F1804F 		cmp	r3, #1073741824
 2180 0ec8 0BD0     		beq	.L87
 2181 0eca 7A68     		ldr	r2, [r7, #4]
 2182 0ecc 794B     		ldr	r3, .L99+12
 2183 0ece 9A42     		cmp	r2, r3
 2184 0ed0 07D0     		beq	.L87
 2185 0ed2 7A68     		ldr	r2, [r7, #4]
 2186 0ed4 784B     		ldr	r3, .L99+16
 2187 0ed6 9A42     		cmp	r2, r3
 2188 0ed8 03D0     		beq	.L87
 596:../SPL/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 2189              		.loc 1 596 0 is_stmt 1
 2190 0eda 7A68     		ldr	r2, [r7, #4]
 2191 0edc 774B     		ldr	r3, .L99+20
 2192 0ede 9A42     		cmp	r2, r3
 2193 0ee0 0DD1     		bne	.L88
 2194              	.L87:
 597:../SPL/src/stm32f10x_tim.c ****   {
 598:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
 2195              		.loc 1 598 0
 2196 0ee2 3B68     		ldr	r3, [r7, #0]
 2197 0ee4 5B88     		ldrh	r3, [r3, #2]
 2198 0ee6 002B     		cmp	r3, #0
 2199 0ee8 1AD0     		beq	.L90
 2200              		.loc 1 598 0 is_stmt 0 discriminator 1
 2201 0eea 3B68     		ldr	r3, [r7, #0]
 2202 0eec 5B88     		ldrh	r3, [r3, #2]
 2203 0eee 022B     		cmp	r3, #2
 2204 0ef0 16D0     		beq	.L90
 2205              		.loc 1 598 0 discriminator 3
 2206 0ef2 6D48     		ldr	r0, .L99
 2207 0ef4 40F25621 		movw	r1, #598
 2208 0ef8 FFF7FEFF 		bl	assert_failed
 2209 0efc 10E0     		b	.L90
 2210              	.L88:
 599:../SPL/src/stm32f10x_tim.c ****   }
 600:../SPL/src/stm32f10x_tim.c ****   else
 601:../SPL/src/stm32f10x_tim.c ****   {
 602:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_IC_POLARITY_LITE(TIM_ICInitStruct->TIM_ICPolarity));
 2211              		.loc 1 602 0 is_stmt 1
 2212 0efe 3B68     		ldr	r3, [r7, #0]
 2213 0f00 5B88     		ldrh	r3, [r3, #2]
 2214 0f02 002B     		cmp	r3, #0
 2215 0f04 0CD0     		beq	.L90
 2216              		.loc 1 602 0 is_stmt 0 discriminator 1
 2217 0f06 3B68     		ldr	r3, [r7, #0]
 2218 0f08 5B88     		ldrh	r3, [r3, #2]
 2219 0f0a 022B     		cmp	r3, #2
 2220 0f0c 08D0     		beq	.L90
 2221              		.loc 1 602 0 discriminator 2
 2222 0f0e 3B68     		ldr	r3, [r7, #0]
 2223 0f10 5B88     		ldrh	r3, [r3, #2]
 2224 0f12 0A2B     		cmp	r3, #10
 2225 0f14 04D0     		beq	.L90
 2226              		.loc 1 602 0 discriminator 3
 2227 0f16 6448     		ldr	r0, .L99
 2228 0f18 40F25A21 		movw	r1, #602
 2229 0f1c FFF7FEFF 		bl	assert_failed
 2230              	.L90:
 603:../SPL/src/stm32f10x_tim.c ****   }
 604:../SPL/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 2231              		.loc 1 604 0 is_stmt 1
 2232 0f20 3B68     		ldr	r3, [r7, #0]
 2233 0f22 1B88     		ldrh	r3, [r3, #0]
 2234 0f24 002B     		cmp	r3, #0
 2235 0f26 50D1     		bne	.L91
 605:../SPL/src/stm32f10x_tim.c ****   {
 606:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 2236              		.loc 1 606 0
 2237 0f28 7A68     		ldr	r2, [r7, #4]
 2238 0f2a 604B     		ldr	r3, .L99+4
 2239 0f2c 9A42     		cmp	r2, r3
 2240 0f2e 3CD0     		beq	.L92
 2241              		.loc 1 606 0 is_stmt 0 discriminator 1
 2242 0f30 7B68     		ldr	r3, [r7, #4]
 2243 0f32 B3F1804F 		cmp	r3, #1073741824
 2244 0f36 38D0     		beq	.L92
 2245              		.loc 1 606 0 discriminator 2
 2246 0f38 7A68     		ldr	r2, [r7, #4]
 2247 0f3a 5E4B     		ldr	r3, .L99+12
 2248 0f3c 9A42     		cmp	r2, r3
 2249 0f3e 34D0     		beq	.L92
 2250              		.loc 1 606 0 discriminator 3
 2251 0f40 7A68     		ldr	r2, [r7, #4]
 2252 0f42 5D4B     		ldr	r3, .L99+16
 2253 0f44 9A42     		cmp	r2, r3
 2254 0f46 30D0     		beq	.L92
 2255              		.loc 1 606 0 discriminator 4
 2256 0f48 7A68     		ldr	r2, [r7, #4]
 2257 0f4a 5C4B     		ldr	r3, .L99+20
 2258 0f4c 9A42     		cmp	r2, r3
 2259 0f4e 2CD0     		beq	.L92
 2260              		.loc 1 606 0 discriminator 5
 2261 0f50 7A68     		ldr	r2, [r7, #4]
 2262 0f52 574B     		ldr	r3, .L99+8
 2263 0f54 9A42     		cmp	r2, r3
 2264 0f56 28D0     		beq	.L92
 2265              		.loc 1 606 0 discriminator 6
 2266 0f58 7A68     		ldr	r2, [r7, #4]
 2267 0f5a 594B     		ldr	r3, .L99+24
 2268 0f5c 9A42     		cmp	r2, r3
 2269 0f5e 24D0     		beq	.L92
 2270              		.loc 1 606 0 discriminator 7
 2271 0f60 7A68     		ldr	r2, [r7, #4]
 2272 0f62 584B     		ldr	r3, .L99+28
 2273 0f64 9A42     		cmp	r2, r3
 2274 0f66 20D0     		beq	.L92
 2275              		.loc 1 606 0 discriminator 8
 2276 0f68 7A68     		ldr	r2, [r7, #4]
 2277 0f6a 574B     		ldr	r3, .L99+32
 2278 0f6c 9A42     		cmp	r2, r3
 2279 0f6e 1CD0     		beq	.L92
 2280              		.loc 1 606 0 discriminator 9
 2281 0f70 7A68     		ldr	r2, [r7, #4]
 2282 0f72 564B     		ldr	r3, .L99+36
 2283 0f74 9A42     		cmp	r2, r3
 2284 0f76 18D0     		beq	.L92
 2285              		.loc 1 606 0 discriminator 10
 2286 0f78 7A68     		ldr	r2, [r7, #4]
 2287 0f7a 554B     		ldr	r3, .L99+40
 2288 0f7c 9A42     		cmp	r2, r3
 2289 0f7e 14D0     		beq	.L92
 2290              		.loc 1 606 0 discriminator 11
 2291 0f80 7A68     		ldr	r2, [r7, #4]
 2292 0f82 544B     		ldr	r3, .L99+44
 2293 0f84 9A42     		cmp	r2, r3
 2294 0f86 10D0     		beq	.L92
 2295              		.loc 1 606 0 discriminator 12
 2296 0f88 7A68     		ldr	r2, [r7, #4]
 2297 0f8a 534B     		ldr	r3, .L99+48
 2298 0f8c 9A42     		cmp	r2, r3
 2299 0f8e 0CD0     		beq	.L92
 2300              		.loc 1 606 0 discriminator 13
 2301 0f90 7A68     		ldr	r2, [r7, #4]
 2302 0f92 524B     		ldr	r3, .L99+52
 2303 0f94 9A42     		cmp	r2, r3
 2304 0f96 08D0     		beq	.L92
 2305              		.loc 1 606 0 discriminator 14
 2306 0f98 7A68     		ldr	r2, [r7, #4]
 2307 0f9a 514B     		ldr	r3, .L99+56
 2308 0f9c 9A42     		cmp	r2, r3
 2309 0f9e 04D0     		beq	.L92
 2310              		.loc 1 606 0 discriminator 15
 2311 0fa0 4148     		ldr	r0, .L99
 2312 0fa2 40F25E21 		movw	r1, #606
 2313 0fa6 FFF7FEFF 		bl	assert_failed
 2314              	.L92:
 607:../SPL/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 608:../SPL/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 2315              		.loc 1 608 0 is_stmt 1
 2316 0faa 3B68     		ldr	r3, [r7, #0]
 2317 0fac 5988     		ldrh	r1, [r3, #2]
 609:../SPL/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 2318              		.loc 1 609 0
 2319 0fae 3B68     		ldr	r3, [r7, #0]
 608:../SPL/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 2320              		.loc 1 608 0
 2321 0fb0 9A88     		ldrh	r2, [r3, #4]
 610:../SPL/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 2322              		.loc 1 610 0
 2323 0fb2 3B68     		ldr	r3, [r7, #0]
 608:../SPL/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 2324              		.loc 1 608 0
 2325 0fb4 1B89     		ldrh	r3, [r3, #8]
 2326 0fb6 7868     		ldr	r0, [r7, #4]
 2327 0fb8 04F09AFA 		bl	TI1_Config
 611:../SPL/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 612:../SPL/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2328              		.loc 1 612 0
 2329 0fbc 3B68     		ldr	r3, [r7, #0]
 2330 0fbe DB88     		ldrh	r3, [r3, #6]
 2331 0fc0 7868     		ldr	r0, [r7, #4]
 2332 0fc2 1946     		mov	r1, r3
 2333 0fc4 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 2334 0fc8 B8E0     		b	.L82
 2335              	.L91:
 613:../SPL/src/stm32f10x_tim.c ****   }
 614:../SPL/src/stm32f10x_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 2336              		.loc 1 614 0
 2337 0fca 3B68     		ldr	r3, [r7, #0]
 2338 0fcc 1B88     		ldrh	r3, [r3, #0]
 2339 0fce 042B     		cmp	r3, #4
 2340 0fd0 38D1     		bne	.L94
 615:../SPL/src/stm32f10x_tim.c ****   {
 616:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 2341              		.loc 1 616 0
 2342 0fd2 7A68     		ldr	r2, [r7, #4]
 2343 0fd4 354B     		ldr	r3, .L99+4
 2344 0fd6 9A42     		cmp	r2, r3
 2345 0fd8 24D0     		beq	.L95
 2346              		.loc 1 616 0 is_stmt 0 discriminator 1
 2347 0fda 7B68     		ldr	r3, [r7, #4]
 2348 0fdc B3F1804F 		cmp	r3, #1073741824
 2349 0fe0 20D0     		beq	.L95
 2350              		.loc 1 616 0 discriminator 2
 2351 0fe2 7A68     		ldr	r2, [r7, #4]
 2352 0fe4 334B     		ldr	r3, .L99+12
 2353 0fe6 9A42     		cmp	r2, r3
 2354 0fe8 1CD0     		beq	.L95
 2355              		.loc 1 616 0 discriminator 3
 2356 0fea 7A68     		ldr	r2, [r7, #4]
 2357 0fec 324B     		ldr	r3, .L99+16
 2358 0fee 9A42     		cmp	r2, r3
 2359 0ff0 18D0     		beq	.L95
 2360              		.loc 1 616 0 discriminator 4
 2361 0ff2 7A68     		ldr	r2, [r7, #4]
 2362 0ff4 314B     		ldr	r3, .L99+20
 2363 0ff6 9A42     		cmp	r2, r3
 2364 0ff8 14D0     		beq	.L95
 2365              		.loc 1 616 0 discriminator 5
 2366 0ffa 7A68     		ldr	r2, [r7, #4]
 2367 0ffc 2C4B     		ldr	r3, .L99+8
 2368 0ffe 9A42     		cmp	r2, r3
 2369 1000 10D0     		beq	.L95
 2370              		.loc 1 616 0 discriminator 6
 2371 1002 7A68     		ldr	r2, [r7, #4]
 2372 1004 2E4B     		ldr	r3, .L99+24
 2373 1006 9A42     		cmp	r2, r3
 2374 1008 0CD0     		beq	.L95
 2375              		.loc 1 616 0 discriminator 7
 2376 100a 7A68     		ldr	r2, [r7, #4]
 2377 100c 2F4B     		ldr	r3, .L99+36
 2378 100e 9A42     		cmp	r2, r3
 2379 1010 08D0     		beq	.L95
 2380              		.loc 1 616 0 discriminator 8
 2381 1012 7A68     		ldr	r2, [r7, #4]
 2382 1014 304B     		ldr	r3, .L99+48
 2383 1016 9A42     		cmp	r2, r3
 2384 1018 04D0     		beq	.L95
 2385              		.loc 1 616 0 discriminator 9
 2386 101a 2348     		ldr	r0, .L99
 2387 101c 4FF41A71 		mov	r1, #616
 2388 1020 FFF7FEFF 		bl	assert_failed
 2389              	.L95:
 617:../SPL/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 618:../SPL/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 2390              		.loc 1 618 0 is_stmt 1
 2391 1024 3B68     		ldr	r3, [r7, #0]
 2392 1026 5988     		ldrh	r1, [r3, #2]
 619:../SPL/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 2393              		.loc 1 619 0
 2394 1028 3B68     		ldr	r3, [r7, #0]
 618:../SPL/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 2395              		.loc 1 618 0
 2396 102a 9A88     		ldrh	r2, [r3, #4]
 620:../SPL/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 2397              		.loc 1 620 0
 2398 102c 3B68     		ldr	r3, [r7, #0]
 618:../SPL/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 2399              		.loc 1 618 0
 2400 102e 1B89     		ldrh	r3, [r3, #8]
 2401 1030 7868     		ldr	r0, [r7, #4]
 2402 1032 04F0CBFA 		bl	TI2_Config
 621:../SPL/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 622:../SPL/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2403              		.loc 1 622 0
 2404 1036 3B68     		ldr	r3, [r7, #0]
 2405 1038 DB88     		ldrh	r3, [r3, #6]
 2406 103a 7868     		ldr	r0, [r7, #4]
 2407 103c 1946     		mov	r1, r3
 2408 103e FFF7FEFF 		bl	TIM_SetIC2Prescaler
 2409 1042 7BE0     		b	.L82
 2410              	.L94:
 623:../SPL/src/stm32f10x_tim.c ****   }
 624:../SPL/src/stm32f10x_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 2411              		.loc 1 624 0
 2412 1044 3B68     		ldr	r3, [r7, #0]
 2413 1046 1B88     		ldrh	r3, [r3, #0]
 2414 1048 082B     		cmp	r3, #8
 2415 104a 4BD1     		bne	.L96
 625:../SPL/src/stm32f10x_tim.c ****   {
 626:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 2416              		.loc 1 626 0
 2417 104c 7A68     		ldr	r2, [r7, #4]
 2418 104e 174B     		ldr	r3, .L99+4
 2419 1050 9A42     		cmp	r2, r3
 2420 1052 18D0     		beq	.L97
 2421              		.loc 1 626 0 is_stmt 0 discriminator 1
 2422 1054 7B68     		ldr	r3, [r7, #4]
 2423 1056 B3F1804F 		cmp	r3, #1073741824
 2424 105a 14D0     		beq	.L97
 2425              		.loc 1 626 0 discriminator 2
 2426 105c 7A68     		ldr	r2, [r7, #4]
 2427 105e 154B     		ldr	r3, .L99+12
 2428 1060 9A42     		cmp	r2, r3
 2429 1062 10D0     		beq	.L97
 2430              		.loc 1 626 0 discriminator 3
 2431 1064 7A68     		ldr	r2, [r7, #4]
 2432 1066 144B     		ldr	r3, .L99+16
 2433 1068 9A42     		cmp	r2, r3
 2434 106a 0CD0     		beq	.L97
 2435              		.loc 1 626 0 discriminator 4
 2436 106c 7A68     		ldr	r2, [r7, #4]
 2437 106e 134B     		ldr	r3, .L99+20
 2438 1070 9A42     		cmp	r2, r3
 2439 1072 08D0     		beq	.L97
 2440              		.loc 1 626 0 discriminator 5
 2441 1074 7A68     		ldr	r2, [r7, #4]
 2442 1076 0E4B     		ldr	r3, .L99+8
 2443 1078 9A42     		cmp	r2, r3
 2444 107a 04D0     		beq	.L97
 2445              		.loc 1 626 0 discriminator 6
 2446 107c 0A48     		ldr	r0, .L99
 2447 107e 40F27221 		movw	r1, #626
 2448 1082 FFF7FEFF 		bl	assert_failed
 2449              	.L97:
 627:../SPL/src/stm32f10x_tim.c ****     /* TI3 Configuration */
 628:../SPL/src/stm32f10x_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 2450              		.loc 1 628 0 is_stmt 1
 2451 1086 3B68     		ldr	r3, [r7, #0]
 2452 1088 5988     		ldrh	r1, [r3, #2]
 629:../SPL/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 2453              		.loc 1 629 0
 2454 108a 3B68     		ldr	r3, [r7, #0]
 628:../SPL/src/stm32f10x_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 2455              		.loc 1 628 0
 2456 108c 9A88     		ldrh	r2, [r3, #4]
 630:../SPL/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 2457              		.loc 1 630 0
 2458 108e 3B68     		ldr	r3, [r7, #0]
 628:../SPL/src/stm32f10x_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 2459              		.loc 1 628 0
 2460 1090 1B89     		ldrh	r3, [r3, #8]
 2461 1092 7868     		ldr	r0, [r7, #4]
 2462 1094 04F016FB 		bl	TI3_Config
 631:../SPL/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 632:../SPL/src/stm32f10x_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2463              		.loc 1 632 0
 2464 1098 3B68     		ldr	r3, [r7, #0]
 2465 109a DB88     		ldrh	r3, [r3, #6]
 2466 109c 7868     		ldr	r0, [r7, #4]
 2467 109e 1946     		mov	r1, r3
 2468 10a0 FFF7FEFF 		bl	TIM_SetIC3Prescaler
 2469 10a4 4AE0     		b	.L82
 2470              	.L100:
 2471 10a6 00BF     		.align	2
 2472              	.L99:
 2473 10a8 00000000 		.word	.LC0
 2474 10ac 002C0140 		.word	1073818624
 2475 10b0 00340140 		.word	1073820672
 2476 10b4 00040040 		.word	1073742848
 2477 10b8 00080040 		.word	1073743872
 2478 10bc 000C0040 		.word	1073744896
 2479 10c0 004C0140 		.word	1073826816
 2480 10c4 00500140 		.word	1073827840
 2481 10c8 00540140 		.word	1073828864
 2482 10cc 00180040 		.word	1073747968
 2483 10d0 001C0040 		.word	1073748992
 2484 10d4 00200040 		.word	1073750016
 2485 10d8 00400140 		.word	1073823744
 2486 10dc 00440140 		.word	1073824768
 2487 10e0 00480140 		.word	1073825792
 2488              	.L96:
 633:../SPL/src/stm32f10x_tim.c ****   }
 634:../SPL/src/stm32f10x_tim.c ****   else
 635:../SPL/src/stm32f10x_tim.c ****   {
 636:../SPL/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 2489              		.loc 1 636 0
 2490 10e4 7A68     		ldr	r2, [r7, #4]
 2491 10e6 174B     		ldr	r3, .L101
 2492 10e8 9A42     		cmp	r2, r3
 2493 10ea 18D0     		beq	.L98
 2494              		.loc 1 636 0 is_stmt 0 discriminator 1
 2495 10ec 7B68     		ldr	r3, [r7, #4]
 2496 10ee B3F1804F 		cmp	r3, #1073741824
 2497 10f2 14D0     		beq	.L98
 2498              		.loc 1 636 0 discriminator 2
 2499 10f4 7A68     		ldr	r2, [r7, #4]
 2500 10f6 144B     		ldr	r3, .L101+4
 2501 10f8 9A42     		cmp	r2, r3
 2502 10fa 10D0     		beq	.L98
 2503              		.loc 1 636 0 discriminator 3
 2504 10fc 7A68     		ldr	r2, [r7, #4]
 2505 10fe 134B     		ldr	r3, .L101+8
 2506 1100 9A42     		cmp	r2, r3
 2507 1102 0CD0     		beq	.L98
 2508              		.loc 1 636 0 discriminator 4
 2509 1104 7A68     		ldr	r2, [r7, #4]
 2510 1106 124B     		ldr	r3, .L101+12
 2511 1108 9A42     		cmp	r2, r3
 2512 110a 08D0     		beq	.L98
 2513              		.loc 1 636 0 discriminator 5
 2514 110c 7A68     		ldr	r2, [r7, #4]
 2515 110e 114B     		ldr	r3, .L101+16
 2516 1110 9A42     		cmp	r2, r3
 2517 1112 04D0     		beq	.L98
 2518              		.loc 1 636 0 discriminator 6
 2519 1114 1048     		ldr	r0, .L101+20
 2520 1116 4FF41F71 		mov	r1, #636
 2521 111a FFF7FEFF 		bl	assert_failed
 2522              	.L98:
 637:../SPL/src/stm32f10x_tim.c ****     /* TI4 Configuration */
 638:../SPL/src/stm32f10x_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 2523              		.loc 1 638 0 is_stmt 1
 2524 111e 3B68     		ldr	r3, [r7, #0]
 2525 1120 5988     		ldrh	r1, [r3, #2]
 639:../SPL/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 2526              		.loc 1 639 0
 2527 1122 3B68     		ldr	r3, [r7, #0]
 638:../SPL/src/stm32f10x_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 2528              		.loc 1 638 0
 2529 1124 9A88     		ldrh	r2, [r3, #4]
 640:../SPL/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 2530              		.loc 1 640 0
 2531 1126 3B68     		ldr	r3, [r7, #0]
 638:../SPL/src/stm32f10x_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 2532              		.loc 1 638 0
 2533 1128 1B89     		ldrh	r3, [r3, #8]
 2534 112a 7868     		ldr	r0, [r7, #4]
 2535 112c 04F03EFB 		bl	TI4_Config
 641:../SPL/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 642:../SPL/src/stm32f10x_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2536              		.loc 1 642 0
 2537 1130 3B68     		ldr	r3, [r7, #0]
 2538 1132 DB88     		ldrh	r3, [r3, #6]
 2539 1134 7868     		ldr	r0, [r7, #4]
 2540 1136 1946     		mov	r1, r3
 2541 1138 FFF7FEFF 		bl	TIM_SetIC4Prescaler
 2542              	.L82:
 643:../SPL/src/stm32f10x_tim.c ****   }
 644:../SPL/src/stm32f10x_tim.c **** }
 2543              		.loc 1 644 0
 2544 113c 07F10807 		add	r7, r7, #8
 2545 1140 BD46     		mov	sp, r7
 2546 1142 80BD     		pop	{r7, pc}
 2547              	.L102:
 2548              		.align	2
 2549              	.L101:
 2550 1144 002C0140 		.word	1073818624
 2551 1148 00040040 		.word	1073742848
 2552 114c 00080040 		.word	1073743872
 2553 1150 000C0040 		.word	1073744896
 2554 1154 00340140 		.word	1073820672
 2555 1158 00000000 		.word	.LC0
 2556              		.cfi_endproc
 2557              	.LFE35:
 2559              		.align	2
 2560              		.global	TIM_PWMIConfig
 2561              		.thumb
 2562              		.thumb_func
 2564              	TIM_PWMIConfig:
 2565              	.LFB36:
 645:../SPL/src/stm32f10x_tim.c **** 
 646:../SPL/src/stm32f10x_tim.c **** /**
 647:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIM peripheral according to the specified
 648:../SPL/src/stm32f10x_tim.c ****   *         parameters in the TIM_ICInitStruct to measure an external PWM signal.
 649:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
 650:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure
 651:../SPL/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 652:../SPL/src/stm32f10x_tim.c ****   * @retval None
 653:../SPL/src/stm32f10x_tim.c ****   */
 654:../SPL/src/stm32f10x_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
 655:../SPL/src/stm32f10x_tim.c **** {
 2566              		.loc 1 655 0
 2567              		.cfi_startproc
 2568              		@ args = 0, pretend = 0, frame = 16
 2569              		@ frame_needed = 1, uses_anonymous_args = 0
 2570 115c 80B5     		push	{r7, lr}
 2571              	.LCFI21:
 2572              		.cfi_def_cfa_offset 8
 2573              		.cfi_offset 7, -8
 2574              		.cfi_offset 14, -4
 2575 115e 84B0     		sub	sp, sp, #16
 2576              	.LCFI22:
 2577              		.cfi_def_cfa_offset 24
 2578 1160 00AF     		add	r7, sp, #0
 2579              	.LCFI23:
 2580              		.cfi_def_cfa_register 7
 2581 1162 7860     		str	r0, [r7, #4]
 2582 1164 3960     		str	r1, [r7, #0]
 656:../SPL/src/stm32f10x_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 2583              		.loc 1 656 0
 2584 1166 4FF00003 		mov	r3, #0
 2585 116a FB81     		strh	r3, [r7, #14]	@ movhi
 657:../SPL/src/stm32f10x_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 2586              		.loc 1 657 0
 2587 116c 4FF00103 		mov	r3, #1
 2588 1170 BB81     		strh	r3, [r7, #12]	@ movhi
 658:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
 659:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 2589              		.loc 1 659 0
 2590 1172 7A68     		ldr	r2, [r7, #4]
 2591 1174 3F4B     		ldr	r3, .L111
 2592 1176 9A42     		cmp	r2, r3
 2593 1178 24D0     		beq	.L104
 2594              		.loc 1 659 0 is_stmt 0 discriminator 1
 2595 117a 7B68     		ldr	r3, [r7, #4]
 2596 117c B3F1804F 		cmp	r3, #1073741824
 2597 1180 20D0     		beq	.L104
 2598              		.loc 1 659 0 discriminator 2
 2599 1182 7A68     		ldr	r2, [r7, #4]
 2600 1184 3C4B     		ldr	r3, .L111+4
 2601 1186 9A42     		cmp	r2, r3
 2602 1188 1CD0     		beq	.L104
 2603              		.loc 1 659 0 discriminator 3
 2604 118a 7A68     		ldr	r2, [r7, #4]
 2605 118c 3B4B     		ldr	r3, .L111+8
 2606 118e 9A42     		cmp	r2, r3
 2607 1190 18D0     		beq	.L104
 2608              		.loc 1 659 0 discriminator 4
 2609 1192 7A68     		ldr	r2, [r7, #4]
 2610 1194 3A4B     		ldr	r3, .L111+12
 2611 1196 9A42     		cmp	r2, r3
 2612 1198 14D0     		beq	.L104
 2613              		.loc 1 659 0 discriminator 5
 2614 119a 7A68     		ldr	r2, [r7, #4]
 2615 119c 394B     		ldr	r3, .L111+16
 2616 119e 9A42     		cmp	r2, r3
 2617 11a0 10D0     		beq	.L104
 2618              		.loc 1 659 0 discriminator 6
 2619 11a2 7A68     		ldr	r2, [r7, #4]
 2620 11a4 384B     		ldr	r3, .L111+20
 2621 11a6 9A42     		cmp	r2, r3
 2622 11a8 0CD0     		beq	.L104
 2623              		.loc 1 659 0 discriminator 7
 2624 11aa 7A68     		ldr	r2, [r7, #4]
 2625 11ac 374B     		ldr	r3, .L111+24
 2626 11ae 9A42     		cmp	r2, r3
 2627 11b0 08D0     		beq	.L104
 2628              		.loc 1 659 0 discriminator 8
 2629 11b2 7A68     		ldr	r2, [r7, #4]
 2630 11b4 364B     		ldr	r3, .L111+28
 2631 11b6 9A42     		cmp	r2, r3
 2632 11b8 04D0     		beq	.L104
 2633              		.loc 1 659 0 discriminator 9
 2634 11ba 3648     		ldr	r0, .L111+32
 2635 11bc 40F29321 		movw	r1, #659
 2636 11c0 FFF7FEFF 		bl	assert_failed
 2637              	.L104:
 660:../SPL/src/stm32f10x_tim.c ****   /* Select the Opposite Input Polarity */
 661:../SPL/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 2638              		.loc 1 661 0 is_stmt 1
 2639 11c4 3B68     		ldr	r3, [r7, #0]
 2640 11c6 5B88     		ldrh	r3, [r3, #2]
 2641 11c8 002B     		cmp	r3, #0
 2642 11ca 03D1     		bne	.L105
 662:../SPL/src/stm32f10x_tim.c ****   {
 663:../SPL/src/stm32f10x_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 2643              		.loc 1 663 0
 2644 11cc 4FF00203 		mov	r3, #2
 2645 11d0 FB81     		strh	r3, [r7, #14]	@ movhi
 2646 11d2 02E0     		b	.L106
 2647              	.L105:
 664:../SPL/src/stm32f10x_tim.c ****   }
 665:../SPL/src/stm32f10x_tim.c ****   else
 666:../SPL/src/stm32f10x_tim.c ****   {
 667:../SPL/src/stm32f10x_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 2648              		.loc 1 667 0
 2649 11d4 4FF00003 		mov	r3, #0
 2650 11d8 FB81     		strh	r3, [r7, #14]	@ movhi
 2651              	.L106:
 668:../SPL/src/stm32f10x_tim.c ****   }
 669:../SPL/src/stm32f10x_tim.c ****   /* Select the Opposite Input */
 670:../SPL/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 2652              		.loc 1 670 0
 2653 11da 3B68     		ldr	r3, [r7, #0]
 2654 11dc 9B88     		ldrh	r3, [r3, #4]
 2655 11de 012B     		cmp	r3, #1
 2656 11e0 03D1     		bne	.L107
 671:../SPL/src/stm32f10x_tim.c ****   {
 672:../SPL/src/stm32f10x_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 2657              		.loc 1 672 0
 2658 11e2 4FF00203 		mov	r3, #2
 2659 11e6 BB81     		strh	r3, [r7, #12]	@ movhi
 2660 11e8 02E0     		b	.L108
 2661              	.L107:
 673:../SPL/src/stm32f10x_tim.c ****   }
 674:../SPL/src/stm32f10x_tim.c ****   else
 675:../SPL/src/stm32f10x_tim.c ****   {
 676:../SPL/src/stm32f10x_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 2662              		.loc 1 676 0
 2663 11ea 4FF00103 		mov	r3, #1
 2664 11ee BB81     		strh	r3, [r7, #12]	@ movhi
 2665              	.L108:
 677:../SPL/src/stm32f10x_tim.c ****   }
 678:../SPL/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 2666              		.loc 1 678 0
 2667 11f0 3B68     		ldr	r3, [r7, #0]
 2668 11f2 1B88     		ldrh	r3, [r3, #0]
 2669 11f4 002B     		cmp	r3, #0
 2670 11f6 1CD1     		bne	.L109
 679:../SPL/src/stm32f10x_tim.c ****   {
 680:../SPL/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 681:../SPL/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 2671              		.loc 1 681 0
 2672 11f8 3B68     		ldr	r3, [r7, #0]
 2673 11fa 5988     		ldrh	r1, [r3, #2]
 2674 11fc 3B68     		ldr	r3, [r7, #0]
 2675 11fe 9A88     		ldrh	r2, [r3, #4]
 682:../SPL/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 2676              		.loc 1 682 0
 2677 1200 3B68     		ldr	r3, [r7, #0]
 681:../SPL/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 2678              		.loc 1 681 0
 2679 1202 1B89     		ldrh	r3, [r3, #8]
 2680 1204 7868     		ldr	r0, [r7, #4]
 2681 1206 04F073F9 		bl	TI1_Config
 683:../SPL/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 684:../SPL/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2682              		.loc 1 684 0
 2683 120a 3B68     		ldr	r3, [r7, #0]
 2684 120c DB88     		ldrh	r3, [r3, #6]
 2685 120e 7868     		ldr	r0, [r7, #4]
 2686 1210 1946     		mov	r1, r3
 2687 1212 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 685:../SPL/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 686:../SPL/src/stm32f10x_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 2688              		.loc 1 686 0
 2689 1216 3B68     		ldr	r3, [r7, #0]
 2690 1218 1B89     		ldrh	r3, [r3, #8]
 2691 121a F989     		ldrh	r1, [r7, #14]
 2692 121c BA89     		ldrh	r2, [r7, #12]
 2693 121e 7868     		ldr	r0, [r7, #4]
 2694 1220 04F0D4F9 		bl	TI2_Config
 687:../SPL/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 688:../SPL/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2695              		.loc 1 688 0
 2696 1224 3B68     		ldr	r3, [r7, #0]
 2697 1226 DB88     		ldrh	r3, [r3, #6]
 2698 1228 7868     		ldr	r0, [r7, #4]
 2699 122a 1946     		mov	r1, r3
 2700 122c FFF7FEFF 		bl	TIM_SetIC2Prescaler
 2701 1230 1BE0     		b	.L103
 2702              	.L109:
 689:../SPL/src/stm32f10x_tim.c ****   }
 690:../SPL/src/stm32f10x_tim.c ****   else
 691:../SPL/src/stm32f10x_tim.c ****   { 
 692:../SPL/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 693:../SPL/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 2703              		.loc 1 693 0
 2704 1232 3B68     		ldr	r3, [r7, #0]
 2705 1234 5988     		ldrh	r1, [r3, #2]
 2706 1236 3B68     		ldr	r3, [r7, #0]
 2707 1238 9A88     		ldrh	r2, [r3, #4]
 694:../SPL/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 2708              		.loc 1 694 0
 2709 123a 3B68     		ldr	r3, [r7, #0]
 693:../SPL/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 2710              		.loc 1 693 0
 2711 123c 1B89     		ldrh	r3, [r3, #8]
 2712 123e 7868     		ldr	r0, [r7, #4]
 2713 1240 04F0C4F9 		bl	TI2_Config
 695:../SPL/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 696:../SPL/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2714              		.loc 1 696 0
 2715 1244 3B68     		ldr	r3, [r7, #0]
 2716 1246 DB88     		ldrh	r3, [r3, #6]
 2717 1248 7868     		ldr	r0, [r7, #4]
 2718 124a 1946     		mov	r1, r3
 2719 124c FFF7FEFF 		bl	TIM_SetIC2Prescaler
 697:../SPL/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 698:../SPL/src/stm32f10x_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 2720              		.loc 1 698 0
 2721 1250 3B68     		ldr	r3, [r7, #0]
 2722 1252 1B89     		ldrh	r3, [r3, #8]
 2723 1254 F989     		ldrh	r1, [r7, #14]
 2724 1256 BA89     		ldrh	r2, [r7, #12]
 2725 1258 7868     		ldr	r0, [r7, #4]
 2726 125a 04F049F9 		bl	TI1_Config
 699:../SPL/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 700:../SPL/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2727              		.loc 1 700 0
 2728 125e 3B68     		ldr	r3, [r7, #0]
 2729 1260 DB88     		ldrh	r3, [r3, #6]
 2730 1262 7868     		ldr	r0, [r7, #4]
 2731 1264 1946     		mov	r1, r3
 2732 1266 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 2733              	.L103:
 701:../SPL/src/stm32f10x_tim.c ****   }
 702:../SPL/src/stm32f10x_tim.c **** }
 2734              		.loc 1 702 0
 2735 126a 07F11007 		add	r7, r7, #16
 2736 126e BD46     		mov	sp, r7
 2737 1270 80BD     		pop	{r7, pc}
 2738              	.L112:
 2739 1272 00BF     		.align	2
 2740              	.L111:
 2741 1274 002C0140 		.word	1073818624
 2742 1278 00040040 		.word	1073742848
 2743 127c 00080040 		.word	1073743872
 2744 1280 000C0040 		.word	1073744896
 2745 1284 00340140 		.word	1073820672
 2746 1288 004C0140 		.word	1073826816
 2747 128c 00180040 		.word	1073747968
 2748 1290 00400140 		.word	1073823744
 2749 1294 00000000 		.word	.LC0
 2750              		.cfi_endproc
 2751              	.LFE36:
 2753              		.align	2
 2754              		.global	TIM_BDTRConfig
 2755              		.thumb
 2756              		.thumb_func
 2758              	TIM_BDTRConfig:
 2759              	.LFB37:
 703:../SPL/src/stm32f10x_tim.c **** 
 704:../SPL/src/stm32f10x_tim.c **** /**
 705:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the: Break feature, dead time, Lock level, the OSSI,
 706:../SPL/src/stm32f10x_tim.c ****   *         the OSSR State and the AOE(automatic output enable).
 707:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
 708:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
 709:../SPL/src/stm32f10x_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
 710:../SPL/src/stm32f10x_tim.c ****   * @retval None
 711:../SPL/src/stm32f10x_tim.c ****   */
 712:../SPL/src/stm32f10x_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
 713:../SPL/src/stm32f10x_tim.c **** {
 2760              		.loc 1 713 0
 2761              		.cfi_startproc
 2762              		@ args = 0, pretend = 0, frame = 8
 2763              		@ frame_needed = 1, uses_anonymous_args = 0
 2764 1298 80B5     		push	{r7, lr}
 2765              	.LCFI24:
 2766              		.cfi_def_cfa_offset 8
 2767              		.cfi_offset 7, -8
 2768              		.cfi_offset 14, -4
 2769 129a 82B0     		sub	sp, sp, #8
 2770              	.LCFI25:
 2771              		.cfi_def_cfa_offset 16
 2772 129c 00AF     		add	r7, sp, #0
 2773              	.LCFI26:
 2774              		.cfi_def_cfa_register 7
 2775 129e 7860     		str	r0, [r7, #4]
 2776 12a0 3960     		str	r1, [r7, #0]
 714:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
 715:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 2777              		.loc 1 715 0
 2778 12a2 7A68     		ldr	r2, [r7, #4]
 2779 12a4 4B4B     		ldr	r3, .L121
 2780 12a6 9A42     		cmp	r2, r3
 2781 12a8 14D0     		beq	.L114
 2782              		.loc 1 715 0 is_stmt 0 discriminator 1
 2783 12aa 7A68     		ldr	r2, [r7, #4]
 2784 12ac 4A4B     		ldr	r3, .L121+4
 2785 12ae 9A42     		cmp	r2, r3
 2786 12b0 10D0     		beq	.L114
 2787              		.loc 1 715 0 discriminator 2
 2788 12b2 7A68     		ldr	r2, [r7, #4]
 2789 12b4 494B     		ldr	r3, .L121+8
 2790 12b6 9A42     		cmp	r2, r3
 2791 12b8 0CD0     		beq	.L114
 2792              		.loc 1 715 0 discriminator 3
 2793 12ba 7A68     		ldr	r2, [r7, #4]
 2794 12bc 484B     		ldr	r3, .L121+12
 2795 12be 9A42     		cmp	r2, r3
 2796 12c0 08D0     		beq	.L114
 2797              		.loc 1 715 0 discriminator 4
 2798 12c2 7A68     		ldr	r2, [r7, #4]
 2799 12c4 474B     		ldr	r3, .L121+16
 2800 12c6 9A42     		cmp	r2, r3
 2801 12c8 04D0     		beq	.L114
 2802              		.loc 1 715 0 discriminator 5
 2803 12ca 4748     		ldr	r0, .L121+20
 2804 12cc 40F2CB21 		movw	r1, #715
 2805 12d0 FFF7FEFF 		bl	assert_failed
 2806              	.L114:
 716:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
 2807              		.loc 1 716 0 is_stmt 1
 2808 12d4 3B68     		ldr	r3, [r7, #0]
 2809 12d6 1B88     		ldrh	r3, [r3, #0]
 2810 12d8 B3F5006F 		cmp	r3, #2048
 2811 12dc 08D0     		beq	.L115
 2812              		.loc 1 716 0 is_stmt 0 discriminator 1
 2813 12de 3B68     		ldr	r3, [r7, #0]
 2814 12e0 1B88     		ldrh	r3, [r3, #0]
 2815 12e2 002B     		cmp	r3, #0
 2816 12e4 04D0     		beq	.L115
 2817              		.loc 1 716 0 discriminator 2
 2818 12e6 4048     		ldr	r0, .L121+20
 2819 12e8 4FF43371 		mov	r1, #716
 2820 12ec FFF7FEFF 		bl	assert_failed
 2821              	.L115:
 717:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
 2822              		.loc 1 717 0 is_stmt 1
 2823 12f0 3B68     		ldr	r3, [r7, #0]
 2824 12f2 5B88     		ldrh	r3, [r3, #2]
 2825 12f4 B3F5806F 		cmp	r3, #1024
 2826 12f8 08D0     		beq	.L116
 2827              		.loc 1 717 0 is_stmt 0 discriminator 1
 2828 12fa 3B68     		ldr	r3, [r7, #0]
 2829 12fc 5B88     		ldrh	r3, [r3, #2]
 2830 12fe 002B     		cmp	r3, #0
 2831 1300 04D0     		beq	.L116
 2832              		.loc 1 717 0 discriminator 2
 2833 1302 3948     		ldr	r0, .L121+20
 2834 1304 40F2CD21 		movw	r1, #717
 2835 1308 FFF7FEFF 		bl	assert_failed
 2836              	.L116:
 718:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
 2837              		.loc 1 718 0 is_stmt 1
 2838 130c 3B68     		ldr	r3, [r7, #0]
 2839 130e 9B88     		ldrh	r3, [r3, #4]
 2840 1310 002B     		cmp	r3, #0
 2841 1312 13D0     		beq	.L117
 2842              		.loc 1 718 0 is_stmt 0 discriminator 1
 2843 1314 3B68     		ldr	r3, [r7, #0]
 2844 1316 9B88     		ldrh	r3, [r3, #4]
 2845 1318 B3F5807F 		cmp	r3, #256
 2846 131c 0ED0     		beq	.L117
 2847              		.loc 1 718 0 discriminator 2
 2848 131e 3B68     		ldr	r3, [r7, #0]
 2849 1320 9B88     		ldrh	r3, [r3, #4]
 2850 1322 B3F5007F 		cmp	r3, #512
 2851 1326 09D0     		beq	.L117
 2852              		.loc 1 718 0 discriminator 3
 2853 1328 3B68     		ldr	r3, [r7, #0]
 2854 132a 9B88     		ldrh	r3, [r3, #4]
 2855 132c B3F5407F 		cmp	r3, #768
 2856 1330 04D0     		beq	.L117
 2857              		.loc 1 718 0 discriminator 4
 2858 1332 2D48     		ldr	r0, .L121+20
 2859 1334 40F2CE21 		movw	r1, #718
 2860 1338 FFF7FEFF 		bl	assert_failed
 2861              	.L117:
 719:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
 2862              		.loc 1 719 0 is_stmt 1
 2863 133c 3B68     		ldr	r3, [r7, #0]
 2864 133e 1B89     		ldrh	r3, [r3, #8]
 2865 1340 B3F5805F 		cmp	r3, #4096
 2866 1344 08D0     		beq	.L118
 2867              		.loc 1 719 0 is_stmt 0 discriminator 1
 2868 1346 3B68     		ldr	r3, [r7, #0]
 2869 1348 1B89     		ldrh	r3, [r3, #8]
 2870 134a 002B     		cmp	r3, #0
 2871 134c 04D0     		beq	.L118
 2872              		.loc 1 719 0 discriminator 2
 2873 134e 2648     		ldr	r0, .L121+20
 2874 1350 40F2CF21 		movw	r1, #719
 2875 1354 FFF7FEFF 		bl	assert_failed
 2876              	.L118:
 720:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
 2877              		.loc 1 720 0 is_stmt 1
 2878 1358 3B68     		ldr	r3, [r7, #0]
 2879 135a 5B89     		ldrh	r3, [r3, #10]
 2880 135c 002B     		cmp	r3, #0
 2881 135e 09D0     		beq	.L119
 2882              		.loc 1 720 0 is_stmt 0 discriminator 1
 2883 1360 3B68     		ldr	r3, [r7, #0]
 2884 1362 5B89     		ldrh	r3, [r3, #10]
 2885 1364 B3F5005F 		cmp	r3, #8192
 2886 1368 04D0     		beq	.L119
 2887              		.loc 1 720 0 discriminator 2
 2888 136a 1F48     		ldr	r0, .L121+20
 2889 136c 4FF43471 		mov	r1, #720
 2890 1370 FFF7FEFF 		bl	assert_failed
 2891              	.L119:
 721:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
 2892              		.loc 1 721 0 is_stmt 1
 2893 1374 3B68     		ldr	r3, [r7, #0]
 2894 1376 9B89     		ldrh	r3, [r3, #12]
 2895 1378 B3F5804F 		cmp	r3, #16384
 2896 137c 08D0     		beq	.L120
 2897              		.loc 1 721 0 is_stmt 0 discriminator 1
 2898 137e 3B68     		ldr	r3, [r7, #0]
 2899 1380 9B89     		ldrh	r3, [r3, #12]
 2900 1382 002B     		cmp	r3, #0
 2901 1384 04D0     		beq	.L120
 2902              		.loc 1 721 0 discriminator 2
 2903 1386 1848     		ldr	r0, .L121+20
 2904 1388 40F2D121 		movw	r1, #721
 2905 138c FFF7FEFF 		bl	assert_failed
 2906              	.L120:
 722:../SPL/src/stm32f10x_tim.c ****   /* Set the Lock level, the Break enable Bit and the Ploarity, the OSSR State,
 723:../SPL/src/stm32f10x_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
 724:../SPL/src/stm32f10x_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 2907              		.loc 1 724 0 is_stmt 1
 2908 1390 3B68     		ldr	r3, [r7, #0]
 2909 1392 1A88     		ldrh	r2, [r3, #0]
 2910 1394 3B68     		ldr	r3, [r7, #0]
 2911 1396 5B88     		ldrh	r3, [r3, #2]
 2912 1398 1343     		orrs	r3, r3, r2
 2913 139a 9AB2     		uxth	r2, r3
 725:../SPL/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 2914              		.loc 1 725 0
 2915 139c 3B68     		ldr	r3, [r7, #0]
 2916 139e 9B88     		ldrh	r3, [r3, #4]
 724:../SPL/src/stm32f10x_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 2917              		.loc 1 724 0
 2918 13a0 1343     		orrs	r3, r3, r2
 2919 13a2 9AB2     		uxth	r2, r3
 2920              		.loc 1 725 0
 2921 13a4 3B68     		ldr	r3, [r7, #0]
 2922 13a6 DB88     		ldrh	r3, [r3, #6]
 724:../SPL/src/stm32f10x_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 2923              		.loc 1 724 0
 2924 13a8 1343     		orrs	r3, r3, r2
 2925 13aa 9AB2     		uxth	r2, r3
 726:../SPL/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 2926              		.loc 1 726 0
 2927 13ac 3B68     		ldr	r3, [r7, #0]
 2928 13ae 1B89     		ldrh	r3, [r3, #8]
 724:../SPL/src/stm32f10x_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 2929              		.loc 1 724 0
 2930 13b0 1343     		orrs	r3, r3, r2
 2931 13b2 9AB2     		uxth	r2, r3
 2932              		.loc 1 726 0
 2933 13b4 3B68     		ldr	r3, [r7, #0]
 2934 13b6 5B89     		ldrh	r3, [r3, #10]
 724:../SPL/src/stm32f10x_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 2935              		.loc 1 724 0
 2936 13b8 1343     		orrs	r3, r3, r2
 2937 13ba 9AB2     		uxth	r2, r3
 727:../SPL/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 2938              		.loc 1 727 0
 2939 13bc 3B68     		ldr	r3, [r7, #0]
 2940 13be 9B89     		ldrh	r3, [r3, #12]
 724:../SPL/src/stm32f10x_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 2941              		.loc 1 724 0
 2942 13c0 1343     		orrs	r3, r3, r2
 2943 13c2 9AB2     		uxth	r2, r3
 2944 13c4 7B68     		ldr	r3, [r7, #4]
 2945 13c6 A3F84420 		strh	r2, [r3, #68]	@ movhi
 728:../SPL/src/stm32f10x_tim.c **** }
 2946              		.loc 1 728 0
 2947 13ca 07F10807 		add	r7, r7, #8
 2948 13ce BD46     		mov	sp, r7
 2949 13d0 80BD     		pop	{r7, pc}
 2950              	.L122:
 2951 13d2 00BF     		.align	2
 2952              	.L121:
 2953 13d4 002C0140 		.word	1073818624
 2954 13d8 00340140 		.word	1073820672
 2955 13dc 00400140 		.word	1073823744
 2956 13e0 00440140 		.word	1073824768
 2957 13e4 00480140 		.word	1073825792
 2958 13e8 00000000 		.word	.LC0
 2959              		.cfi_endproc
 2960              	.LFE37:
 2962              		.align	2
 2963              		.global	TIM_TimeBaseStructInit
 2964              		.thumb
 2965              		.thumb_func
 2967              	TIM_TimeBaseStructInit:
 2968              	.LFB38:
 729:../SPL/src/stm32f10x_tim.c **** 
 730:../SPL/src/stm32f10x_tim.c **** /**
 731:../SPL/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 732:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 733:../SPL/src/stm32f10x_tim.c ****   *         structure which will be initialized.
 734:../SPL/src/stm32f10x_tim.c ****   * @retval None
 735:../SPL/src/stm32f10x_tim.c ****   */
 736:../SPL/src/stm32f10x_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 737:../SPL/src/stm32f10x_tim.c **** {
 2969              		.loc 1 737 0
 2970              		.cfi_startproc
 2971              		@ args = 0, pretend = 0, frame = 8
 2972              		@ frame_needed = 1, uses_anonymous_args = 0
 2973              		@ link register save eliminated.
 2974 13ec 80B4     		push	{r7}
 2975              	.LCFI27:
 2976              		.cfi_def_cfa_offset 4
 2977              		.cfi_offset 7, -4
 2978 13ee 83B0     		sub	sp, sp, #12
 2979              	.LCFI28:
 2980              		.cfi_def_cfa_offset 16
 2981 13f0 00AF     		add	r7, sp, #0
 2982              	.LCFI29:
 2983              		.cfi_def_cfa_register 7
 2984 13f2 7860     		str	r0, [r7, #4]
 738:../SPL/src/stm32f10x_tim.c ****   /* Set the default configuration */
 739:../SPL/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFF;
 2985              		.loc 1 739 0
 2986 13f4 7B68     		ldr	r3, [r7, #4]
 2987 13f6 4FF6FF72 		movw	r2, #65535
 2988 13fa 9A80     		strh	r2, [r3, #4]	@ movhi
 740:../SPL/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 2989              		.loc 1 740 0
 2990 13fc 7B68     		ldr	r3, [r7, #4]
 2991 13fe 4FF00002 		mov	r2, #0
 2992 1402 1A80     		strh	r2, [r3, #0]	@ movhi
 741:../SPL/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 2993              		.loc 1 741 0
 2994 1404 7B68     		ldr	r3, [r7, #4]
 2995 1406 4FF00002 		mov	r2, #0
 2996 140a DA80     		strh	r2, [r3, #6]	@ movhi
 742:../SPL/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 2997              		.loc 1 742 0
 2998 140c 7B68     		ldr	r3, [r7, #4]
 2999 140e 4FF00002 		mov	r2, #0
 3000 1412 5A80     		strh	r2, [r3, #2]	@ movhi
 743:../SPL/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 3001              		.loc 1 743 0
 3002 1414 7B68     		ldr	r3, [r7, #4]
 3003 1416 4FF00002 		mov	r2, #0
 3004 141a 1A72     		strb	r2, [r3, #8]
 744:../SPL/src/stm32f10x_tim.c **** }
 3005              		.loc 1 744 0
 3006 141c 07F10C07 		add	r7, r7, #12
 3007 1420 BD46     		mov	sp, r7
 3008 1422 80BC     		pop	{r7}
 3009 1424 7047     		bx	lr
 3010              		.cfi_endproc
 3011              	.LFE38:
 3013 1426 00BF     		.align	2
 3014              		.global	TIM_OCStructInit
 3015              		.thumb
 3016              		.thumb_func
 3018              	TIM_OCStructInit:
 3019              	.LFB39:
 745:../SPL/src/stm32f10x_tim.c **** 
 746:../SPL/src/stm32f10x_tim.c **** /**
 747:../SPL/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 748:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct : pointer to a TIM_OCInitTypeDef structure which will
 749:../SPL/src/stm32f10x_tim.c ****   *         be initialized.
 750:../SPL/src/stm32f10x_tim.c ****   * @retval None
 751:../SPL/src/stm32f10x_tim.c ****   */
 752:../SPL/src/stm32f10x_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 753:../SPL/src/stm32f10x_tim.c **** {
 3020              		.loc 1 753 0
 3021              		.cfi_startproc
 3022              		@ args = 0, pretend = 0, frame = 8
 3023              		@ frame_needed = 1, uses_anonymous_args = 0
 3024              		@ link register save eliminated.
 3025 1428 80B4     		push	{r7}
 3026              	.LCFI30:
 3027              		.cfi_def_cfa_offset 4
 3028              		.cfi_offset 7, -4
 3029 142a 83B0     		sub	sp, sp, #12
 3030              	.LCFI31:
 3031              		.cfi_def_cfa_offset 16
 3032 142c 00AF     		add	r7, sp, #0
 3033              	.LCFI32:
 3034              		.cfi_def_cfa_register 7
 3035 142e 7860     		str	r0, [r7, #4]
 754:../SPL/src/stm32f10x_tim.c ****   /* Set the default configuration */
 755:../SPL/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 3036              		.loc 1 755 0
 3037 1430 7B68     		ldr	r3, [r7, #4]
 3038 1432 4FF00002 		mov	r2, #0
 3039 1436 1A80     		strh	r2, [r3, #0]	@ movhi
 756:../SPL/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 3040              		.loc 1 756 0
 3041 1438 7B68     		ldr	r3, [r7, #4]
 3042 143a 4FF00002 		mov	r2, #0
 3043 143e 5A80     		strh	r2, [r3, #2]	@ movhi
 757:../SPL/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 3044              		.loc 1 757 0
 3045 1440 7B68     		ldr	r3, [r7, #4]
 3046 1442 4FF00002 		mov	r2, #0
 3047 1446 9A80     		strh	r2, [r3, #4]	@ movhi
 758:../SPL/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x0000;
 3048              		.loc 1 758 0
 3049 1448 7B68     		ldr	r3, [r7, #4]
 3050 144a 4FF00002 		mov	r2, #0
 3051 144e DA80     		strh	r2, [r3, #6]	@ movhi
 759:../SPL/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 3052              		.loc 1 759 0
 3053 1450 7B68     		ldr	r3, [r7, #4]
 3054 1452 4FF00002 		mov	r2, #0
 3055 1456 1A81     		strh	r2, [r3, #8]	@ movhi
 760:../SPL/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 3056              		.loc 1 760 0
 3057 1458 7B68     		ldr	r3, [r7, #4]
 3058 145a 4FF00002 		mov	r2, #0
 3059 145e 5A81     		strh	r2, [r3, #10]	@ movhi
 761:../SPL/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 3060              		.loc 1 761 0
 3061 1460 7B68     		ldr	r3, [r7, #4]
 3062 1462 4FF00002 		mov	r2, #0
 3063 1466 9A81     		strh	r2, [r3, #12]	@ movhi
 762:../SPL/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 3064              		.loc 1 762 0
 3065 1468 7B68     		ldr	r3, [r7, #4]
 3066 146a 4FF00002 		mov	r2, #0
 3067 146e DA81     		strh	r2, [r3, #14]	@ movhi
 763:../SPL/src/stm32f10x_tim.c **** }
 3068              		.loc 1 763 0
 3069 1470 07F10C07 		add	r7, r7, #12
 3070 1474 BD46     		mov	sp, r7
 3071 1476 80BC     		pop	{r7}
 3072 1478 7047     		bx	lr
 3073              		.cfi_endproc
 3074              	.LFE39:
 3076 147a 00BF     		.align	2
 3077              		.global	TIM_ICStructInit
 3078              		.thumb
 3079              		.thumb_func
 3081              	TIM_ICStructInit:
 3082              	.LFB40:
 764:../SPL/src/stm32f10x_tim.c **** 
 765:../SPL/src/stm32f10x_tim.c **** /**
 766:../SPL/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
 767:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
 768:../SPL/src/stm32f10x_tim.c ****   *         be initialized.
 769:../SPL/src/stm32f10x_tim.c ****   * @retval None
 770:../SPL/src/stm32f10x_tim.c ****   */
 771:../SPL/src/stm32f10x_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
 772:../SPL/src/stm32f10x_tim.c **** {
 3083              		.loc 1 772 0
 3084              		.cfi_startproc
 3085              		@ args = 0, pretend = 0, frame = 8
 3086              		@ frame_needed = 1, uses_anonymous_args = 0
 3087              		@ link register save eliminated.
 3088 147c 80B4     		push	{r7}
 3089              	.LCFI33:
 3090              		.cfi_def_cfa_offset 4
 3091              		.cfi_offset 7, -4
 3092 147e 83B0     		sub	sp, sp, #12
 3093              	.LCFI34:
 3094              		.cfi_def_cfa_offset 16
 3095 1480 00AF     		add	r7, sp, #0
 3096              	.LCFI35:
 3097              		.cfi_def_cfa_register 7
 3098 1482 7860     		str	r0, [r7, #4]
 773:../SPL/src/stm32f10x_tim.c ****   /* Set the default configuration */
 774:../SPL/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 3099              		.loc 1 774 0
 3100 1484 7B68     		ldr	r3, [r7, #4]
 3101 1486 4FF00002 		mov	r2, #0
 3102 148a 1A80     		strh	r2, [r3, #0]	@ movhi
 775:../SPL/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 3103              		.loc 1 775 0
 3104 148c 7B68     		ldr	r3, [r7, #4]
 3105 148e 4FF00002 		mov	r2, #0
 3106 1492 5A80     		strh	r2, [r3, #2]	@ movhi
 776:../SPL/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 3107              		.loc 1 776 0
 3108 1494 7B68     		ldr	r3, [r7, #4]
 3109 1496 4FF00102 		mov	r2, #1
 3110 149a 9A80     		strh	r2, [r3, #4]	@ movhi
 777:../SPL/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 3111              		.loc 1 777 0
 3112 149c 7B68     		ldr	r3, [r7, #4]
 3113 149e 4FF00002 		mov	r2, #0
 3114 14a2 DA80     		strh	r2, [r3, #6]	@ movhi
 778:../SPL/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 3115              		.loc 1 778 0
 3116 14a4 7B68     		ldr	r3, [r7, #4]
 3117 14a6 4FF00002 		mov	r2, #0
 3118 14aa 1A81     		strh	r2, [r3, #8]	@ movhi
 779:../SPL/src/stm32f10x_tim.c **** }
 3119              		.loc 1 779 0
 3120 14ac 07F10C07 		add	r7, r7, #12
 3121 14b0 BD46     		mov	sp, r7
 3122 14b2 80BC     		pop	{r7}
 3123 14b4 7047     		bx	lr
 3124              		.cfi_endproc
 3125              	.LFE40:
 3127 14b6 00BF     		.align	2
 3128              		.global	TIM_BDTRStructInit
 3129              		.thumb
 3130              		.thumb_func
 3132              	TIM_BDTRStructInit:
 3133              	.LFB41:
 780:../SPL/src/stm32f10x_tim.c **** 
 781:../SPL/src/stm32f10x_tim.c **** /**
 782:../SPL/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
 783:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
 784:../SPL/src/stm32f10x_tim.c ****   *         will be initialized.
 785:../SPL/src/stm32f10x_tim.c ****   * @retval None
 786:../SPL/src/stm32f10x_tim.c ****   */
 787:../SPL/src/stm32f10x_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
 788:../SPL/src/stm32f10x_tim.c **** {
 3134              		.loc 1 788 0
 3135              		.cfi_startproc
 3136              		@ args = 0, pretend = 0, frame = 8
 3137              		@ frame_needed = 1, uses_anonymous_args = 0
 3138              		@ link register save eliminated.
 3139 14b8 80B4     		push	{r7}
 3140              	.LCFI36:
 3141              		.cfi_def_cfa_offset 4
 3142              		.cfi_offset 7, -4
 3143 14ba 83B0     		sub	sp, sp, #12
 3144              	.LCFI37:
 3145              		.cfi_def_cfa_offset 16
 3146 14bc 00AF     		add	r7, sp, #0
 3147              	.LCFI38:
 3148              		.cfi_def_cfa_register 7
 3149 14be 7860     		str	r0, [r7, #4]
 789:../SPL/src/stm32f10x_tim.c ****   /* Set the default configuration */
 790:../SPL/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 3150              		.loc 1 790 0
 3151 14c0 7B68     		ldr	r3, [r7, #4]
 3152 14c2 4FF00002 		mov	r2, #0
 3153 14c6 1A80     		strh	r2, [r3, #0]	@ movhi
 791:../SPL/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 3154              		.loc 1 791 0
 3155 14c8 7B68     		ldr	r3, [r7, #4]
 3156 14ca 4FF00002 		mov	r2, #0
 3157 14ce 5A80     		strh	r2, [r3, #2]	@ movhi
 792:../SPL/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 3158              		.loc 1 792 0
 3159 14d0 7B68     		ldr	r3, [r7, #4]
 3160 14d2 4FF00002 		mov	r2, #0
 3161 14d6 9A80     		strh	r2, [r3, #4]	@ movhi
 793:../SPL/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 3162              		.loc 1 793 0
 3163 14d8 7B68     		ldr	r3, [r7, #4]
 3164 14da 4FF00002 		mov	r2, #0
 3165 14de DA80     		strh	r2, [r3, #6]	@ movhi
 794:../SPL/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 3166              		.loc 1 794 0
 3167 14e0 7B68     		ldr	r3, [r7, #4]
 3168 14e2 4FF00002 		mov	r2, #0
 3169 14e6 1A81     		strh	r2, [r3, #8]	@ movhi
 795:../SPL/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 3170              		.loc 1 795 0
 3171 14e8 7B68     		ldr	r3, [r7, #4]
 3172 14ea 4FF00002 		mov	r2, #0
 3173 14ee 5A81     		strh	r2, [r3, #10]	@ movhi
 796:../SPL/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 3174              		.loc 1 796 0
 3175 14f0 7B68     		ldr	r3, [r7, #4]
 3176 14f2 4FF00002 		mov	r2, #0
 3177 14f6 9A81     		strh	r2, [r3, #12]	@ movhi
 797:../SPL/src/stm32f10x_tim.c **** }
 3178              		.loc 1 797 0
 3179 14f8 07F10C07 		add	r7, r7, #12
 3180 14fc BD46     		mov	sp, r7
 3181 14fe 80BC     		pop	{r7}
 3182 1500 7047     		bx	lr
 3183              		.cfi_endproc
 3184              	.LFE41:
 3186 1502 00BF     		.align	2
 3187              		.global	TIM_Cmd
 3188              		.thumb
 3189              		.thumb_func
 3191              	TIM_Cmd:
 3192              	.LFB42:
 798:../SPL/src/stm32f10x_tim.c **** 
 799:../SPL/src/stm32f10x_tim.c **** /**
 800:../SPL/src/stm32f10x_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 801:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIMx peripheral.
 802:../SPL/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 803:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 804:../SPL/src/stm32f10x_tim.c ****   * @retval None
 805:../SPL/src/stm32f10x_tim.c ****   */
 806:../SPL/src/stm32f10x_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 807:../SPL/src/stm32f10x_tim.c **** {
 3193              		.loc 1 807 0
 3194              		.cfi_startproc
 3195              		@ args = 0, pretend = 0, frame = 8
 3196              		@ frame_needed = 1, uses_anonymous_args = 0
 3197 1504 80B5     		push	{r7, lr}
 3198              	.LCFI39:
 3199              		.cfi_def_cfa_offset 8
 3200              		.cfi_offset 7, -8
 3201              		.cfi_offset 14, -4
 3202 1506 82B0     		sub	sp, sp, #8
 3203              	.LCFI40:
 3204              		.cfi_def_cfa_offset 16
 3205 1508 00AF     		add	r7, sp, #0
 3206              	.LCFI41:
 3207              		.cfi_def_cfa_register 7
 3208 150a 7860     		str	r0, [r7, #4]
 3209 150c 0B46     		mov	r3, r1
 3210 150e FB70     		strb	r3, [r7, #3]
 808:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
 809:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 3211              		.loc 1 809 0
 3212 1510 7A68     		ldr	r2, [r7, #4]
 3213 1512 354B     		ldr	r3, .L132
 3214 1514 9A42     		cmp	r2, r3
 3215 1516 44D0     		beq	.L128
 3216              		.loc 1 809 0 is_stmt 0 discriminator 1
 3217 1518 7B68     		ldr	r3, [r7, #4]
 3218 151a B3F1804F 		cmp	r3, #1073741824
 3219 151e 40D0     		beq	.L128
 3220              		.loc 1 809 0 discriminator 2
 3221 1520 7A68     		ldr	r2, [r7, #4]
 3222 1522 324B     		ldr	r3, .L132+4
 3223 1524 9A42     		cmp	r2, r3
 3224 1526 3CD0     		beq	.L128
 3225              		.loc 1 809 0 discriminator 3
 3226 1528 7A68     		ldr	r2, [r7, #4]
 3227 152a 314B     		ldr	r3, .L132+8
 3228 152c 9A42     		cmp	r2, r3
 3229 152e 38D0     		beq	.L128
 3230              		.loc 1 809 0 discriminator 4
 3231 1530 7A68     		ldr	r2, [r7, #4]
 3232 1532 304B     		ldr	r3, .L132+12
 3233 1534 9A42     		cmp	r2, r3
 3234 1536 34D0     		beq	.L128
 3235              		.loc 1 809 0 discriminator 5
 3236 1538 7A68     		ldr	r2, [r7, #4]
 3237 153a 2F4B     		ldr	r3, .L132+16
 3238 153c 9A42     		cmp	r2, r3
 3239 153e 30D0     		beq	.L128
 3240              		.loc 1 809 0 discriminator 6
 3241 1540 7A68     		ldr	r2, [r7, #4]
 3242 1542 2E4B     		ldr	r3, .L132+20
 3243 1544 9A42     		cmp	r2, r3
 3244 1546 2CD0     		beq	.L128
 3245              		.loc 1 809 0 discriminator 7
 3246 1548 7A68     		ldr	r2, [r7, #4]
 3247 154a 2D4B     		ldr	r3, .L132+24
 3248 154c 9A42     		cmp	r2, r3
 3249 154e 28D0     		beq	.L128
 3250              		.loc 1 809 0 discriminator 8
 3251 1550 7A68     		ldr	r2, [r7, #4]
 3252 1552 2C4B     		ldr	r3, .L132+28
 3253 1554 9A42     		cmp	r2, r3
 3254 1556 24D0     		beq	.L128
 3255              		.loc 1 809 0 discriminator 9
 3256 1558 7A68     		ldr	r2, [r7, #4]
 3257 155a 2B4B     		ldr	r3, .L132+32
 3258 155c 9A42     		cmp	r2, r3
 3259 155e 20D0     		beq	.L128
 3260              		.loc 1 809 0 discriminator 10
 3261 1560 7A68     		ldr	r2, [r7, #4]
 3262 1562 2A4B     		ldr	r3, .L132+36
 3263 1564 9A42     		cmp	r2, r3
 3264 1566 1CD0     		beq	.L128
 3265              		.loc 1 809 0 discriminator 11
 3266 1568 7A68     		ldr	r2, [r7, #4]
 3267 156a 294B     		ldr	r3, .L132+40
 3268 156c 9A42     		cmp	r2, r3
 3269 156e 18D0     		beq	.L128
 3270              		.loc 1 809 0 discriminator 12
 3271 1570 7A68     		ldr	r2, [r7, #4]
 3272 1572 284B     		ldr	r3, .L132+44
 3273 1574 9A42     		cmp	r2, r3
 3274 1576 14D0     		beq	.L128
 3275              		.loc 1 809 0 discriminator 13
 3276 1578 7A68     		ldr	r2, [r7, #4]
 3277 157a 274B     		ldr	r3, .L132+48
 3278 157c 9A42     		cmp	r2, r3
 3279 157e 10D0     		beq	.L128
 3280              		.loc 1 809 0 discriminator 14
 3281 1580 7A68     		ldr	r2, [r7, #4]
 3282 1582 264B     		ldr	r3, .L132+52
 3283 1584 9A42     		cmp	r2, r3
 3284 1586 0CD0     		beq	.L128
 3285              		.loc 1 809 0 discriminator 15
 3286 1588 7A68     		ldr	r2, [r7, #4]
 3287 158a 254B     		ldr	r3, .L132+56
 3288 158c 9A42     		cmp	r2, r3
 3289 158e 08D0     		beq	.L128
 3290              		.loc 1 809 0 discriminator 16
 3291 1590 7A68     		ldr	r2, [r7, #4]
 3292 1592 244B     		ldr	r3, .L132+60
 3293 1594 9A42     		cmp	r2, r3
 3294 1596 04D0     		beq	.L128
 3295              		.loc 1 809 0 discriminator 17
 3296 1598 2348     		ldr	r0, .L132+64
 3297 159a 40F22931 		movw	r1, #809
 3298 159e FFF7FEFF 		bl	assert_failed
 3299              	.L128:
 810:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 3300              		.loc 1 810 0 is_stmt 1
 3301 15a2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3302 15a4 002B     		cmp	r3, #0
 3303 15a6 07D0     		beq	.L129
 3304              		.loc 1 810 0 is_stmt 0 discriminator 1
 3305 15a8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3306 15aa 012B     		cmp	r3, #1
 3307 15ac 04D0     		beq	.L129
 3308              		.loc 1 810 0 discriminator 2
 3309 15ae 1E48     		ldr	r0, .L132+64
 3310 15b0 40F22A31 		movw	r1, #810
 3311 15b4 FFF7FEFF 		bl	assert_failed
 3312              	.L129:
 811:../SPL/src/stm32f10x_tim.c ****   
 812:../SPL/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 3313              		.loc 1 812 0 is_stmt 1
 3314 15b8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3315 15ba 002B     		cmp	r3, #0
 3316 15bc 08D0     		beq	.L130
 813:../SPL/src/stm32f10x_tim.c ****   {
 814:../SPL/src/stm32f10x_tim.c ****     /* Enable the TIM Counter */
 815:../SPL/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 3317              		.loc 1 815 0
 3318 15be 7B68     		ldr	r3, [r7, #4]
 3319 15c0 1B88     		ldrh	r3, [r3, #0]	@ movhi
 3320 15c2 9BB2     		uxth	r3, r3
 3321 15c4 43F00103 		orr	r3, r3, #1
 3322 15c8 9AB2     		uxth	r2, r3
 3323 15ca 7B68     		ldr	r3, [r7, #4]
 3324 15cc 1A80     		strh	r2, [r3, #0]	@ movhi
 3325 15ce 07E0     		b	.L127
 3326              	.L130:
 816:../SPL/src/stm32f10x_tim.c ****   }
 817:../SPL/src/stm32f10x_tim.c ****   else
 818:../SPL/src/stm32f10x_tim.c ****   {
 819:../SPL/src/stm32f10x_tim.c ****     /* Disable the TIM Counter */
 820:../SPL/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)(~((uint16_t)TIM_CR1_CEN));
 3327              		.loc 1 820 0
 3328 15d0 7B68     		ldr	r3, [r7, #4]
 3329 15d2 1B88     		ldrh	r3, [r3, #0]	@ movhi
 3330 15d4 9BB2     		uxth	r3, r3
 3331 15d6 23F00103 		bic	r3, r3, #1
 3332 15da 9AB2     		uxth	r2, r3
 3333 15dc 7B68     		ldr	r3, [r7, #4]
 3334 15de 1A80     		strh	r2, [r3, #0]	@ movhi
 3335              	.L127:
 821:../SPL/src/stm32f10x_tim.c ****   }
 822:../SPL/src/stm32f10x_tim.c **** }
 3336              		.loc 1 822 0
 3337 15e0 07F10807 		add	r7, r7, #8
 3338 15e4 BD46     		mov	sp, r7
 3339 15e6 80BD     		pop	{r7, pc}
 3340              	.L133:
 3341              		.align	2
 3342              	.L132:
 3343 15e8 002C0140 		.word	1073818624
 3344 15ec 00040040 		.word	1073742848
 3345 15f0 00080040 		.word	1073743872
 3346 15f4 000C0040 		.word	1073744896
 3347 15f8 00100040 		.word	1073745920
 3348 15fc 00140040 		.word	1073746944
 3349 1600 00340140 		.word	1073820672
 3350 1604 004C0140 		.word	1073826816
 3351 1608 00500140 		.word	1073827840
 3352 160c 00540140 		.word	1073828864
 3353 1610 00180040 		.word	1073747968
 3354 1614 001C0040 		.word	1073748992
 3355 1618 00200040 		.word	1073750016
 3356 161c 00400140 		.word	1073823744
 3357 1620 00440140 		.word	1073824768
 3358 1624 00480140 		.word	1073825792
 3359 1628 00000000 		.word	.LC0
 3360              		.cfi_endproc
 3361              	.LFE42:
 3363              		.align	2
 3364              		.global	TIM_CtrlPWMOutputs
 3365              		.thumb
 3366              		.thumb_func
 3368              	TIM_CtrlPWMOutputs:
 3369              	.LFB43:
 823:../SPL/src/stm32f10x_tim.c **** 
 824:../SPL/src/stm32f10x_tim.c **** /**
 825:../SPL/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
 826:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIMx peripheral.
 827:../SPL/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
 828:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 829:../SPL/src/stm32f10x_tim.c ****   * @retval None
 830:../SPL/src/stm32f10x_tim.c ****   */
 831:../SPL/src/stm32f10x_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
 832:../SPL/src/stm32f10x_tim.c **** {
 3370              		.loc 1 832 0
 3371              		.cfi_startproc
 3372              		@ args = 0, pretend = 0, frame = 8
 3373              		@ frame_needed = 1, uses_anonymous_args = 0
 3374 162c 80B5     		push	{r7, lr}
 3375              	.LCFI42:
 3376              		.cfi_def_cfa_offset 8
 3377              		.cfi_offset 7, -8
 3378              		.cfi_offset 14, -4
 3379 162e 82B0     		sub	sp, sp, #8
 3380              	.LCFI43:
 3381              		.cfi_def_cfa_offset 16
 3382 1630 00AF     		add	r7, sp, #0
 3383              	.LCFI44:
 3384              		.cfi_def_cfa_register 7
 3385 1632 7860     		str	r0, [r7, #4]
 3386 1634 0B46     		mov	r3, r1
 3387 1636 FB70     		strb	r3, [r7, #3]
 833:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
 834:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 3388              		.loc 1 834 0
 3389 1638 7A68     		ldr	r2, [r7, #4]
 3390 163a 214B     		ldr	r3, .L139
 3391 163c 9A42     		cmp	r2, r3
 3392 163e 14D0     		beq	.L135
 3393              		.loc 1 834 0 is_stmt 0 discriminator 1
 3394 1640 7A68     		ldr	r2, [r7, #4]
 3395 1642 204B     		ldr	r3, .L139+4
 3396 1644 9A42     		cmp	r2, r3
 3397 1646 10D0     		beq	.L135
 3398              		.loc 1 834 0 discriminator 2
 3399 1648 7A68     		ldr	r2, [r7, #4]
 3400 164a 1F4B     		ldr	r3, .L139+8
 3401 164c 9A42     		cmp	r2, r3
 3402 164e 0CD0     		beq	.L135
 3403              		.loc 1 834 0 discriminator 3
 3404 1650 7A68     		ldr	r2, [r7, #4]
 3405 1652 1E4B     		ldr	r3, .L139+12
 3406 1654 9A42     		cmp	r2, r3
 3407 1656 08D0     		beq	.L135
 3408              		.loc 1 834 0 discriminator 4
 3409 1658 7A68     		ldr	r2, [r7, #4]
 3410 165a 1D4B     		ldr	r3, .L139+16
 3411 165c 9A42     		cmp	r2, r3
 3412 165e 04D0     		beq	.L135
 3413              		.loc 1 834 0 discriminator 5
 3414 1660 1C48     		ldr	r0, .L139+20
 3415 1662 40F24231 		movw	r1, #834
 3416 1666 FFF7FEFF 		bl	assert_failed
 3417              	.L135:
 835:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 3418              		.loc 1 835 0 is_stmt 1
 3419 166a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3420 166c 002B     		cmp	r3, #0
 3421 166e 07D0     		beq	.L136
 3422              		.loc 1 835 0 is_stmt 0 discriminator 1
 3423 1670 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3424 1672 012B     		cmp	r3, #1
 3425 1674 04D0     		beq	.L136
 3426              		.loc 1 835 0 discriminator 2
 3427 1676 1748     		ldr	r0, .L139+20
 3428 1678 40F24331 		movw	r1, #835
 3429 167c FFF7FEFF 		bl	assert_failed
 3430              	.L136:
 836:../SPL/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 3431              		.loc 1 836 0 is_stmt 1
 3432 1680 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3433 1682 002B     		cmp	r3, #0
 3434 1684 0CD0     		beq	.L137
 837:../SPL/src/stm32f10x_tim.c ****   {
 838:../SPL/src/stm32f10x_tim.c ****     /* Enable the TIM Main Output */
 839:../SPL/src/stm32f10x_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 3435              		.loc 1 839 0
 3436 1686 7B68     		ldr	r3, [r7, #4]
 3437 1688 B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 3438 168c 9BB2     		uxth	r3, r3
 3439 168e 6FEA4343 		mvn	r3, r3, lsl #17
 3440 1692 6FEA5343 		mvn	r3, r3, lsr #17
 3441 1696 9AB2     		uxth	r2, r3
 3442 1698 7B68     		ldr	r3, [r7, #4]
 3443 169a A3F84420 		strh	r2, [r3, #68]	@ movhi
 3444 169e 0BE0     		b	.L134
 3445              	.L137:
 840:../SPL/src/stm32f10x_tim.c ****   }
 841:../SPL/src/stm32f10x_tim.c ****   else
 842:../SPL/src/stm32f10x_tim.c ****   {
 843:../SPL/src/stm32f10x_tim.c ****     /* Disable the TIM Main Output */
 844:../SPL/src/stm32f10x_tim.c ****     TIMx->BDTR &= (uint16_t)(~((uint16_t)TIM_BDTR_MOE));
 3446              		.loc 1 844 0
 3447 16a0 7B68     		ldr	r3, [r7, #4]
 3448 16a2 B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 3449 16a6 9BB2     		uxth	r3, r3
 3450 16a8 4FEA4343 		lsl	r3, r3, #17
 3451 16ac 4FEA5343 		lsr	r3, r3, #17
 3452 16b0 9AB2     		uxth	r2, r3
 3453 16b2 7B68     		ldr	r3, [r7, #4]
 3454 16b4 A3F84420 		strh	r2, [r3, #68]	@ movhi
 3455              	.L134:
 845:../SPL/src/stm32f10x_tim.c ****   }  
 846:../SPL/src/stm32f10x_tim.c **** }
 3456              		.loc 1 846 0
 3457 16b8 07F10807 		add	r7, r7, #8
 3458 16bc BD46     		mov	sp, r7
 3459 16be 80BD     		pop	{r7, pc}
 3460              	.L140:
 3461              		.align	2
 3462              	.L139:
 3463 16c0 002C0140 		.word	1073818624
 3464 16c4 00340140 		.word	1073820672
 3465 16c8 00400140 		.word	1073823744
 3466 16cc 00440140 		.word	1073824768
 3467 16d0 00480140 		.word	1073825792
 3468 16d4 00000000 		.word	.LC0
 3469              		.cfi_endproc
 3470              	.LFE43:
 3472              		.align	2
 3473              		.global	TIM_ITConfig
 3474              		.thumb
 3475              		.thumb_func
 3477              	TIM_ITConfig:
 3478              	.LFB44:
 847:../SPL/src/stm32f10x_tim.c **** 
 848:../SPL/src/stm32f10x_tim.c **** /**
 849:../SPL/src/stm32f10x_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
 850:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIMx peripheral.
 851:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
 852:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
 853:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Update: TIM update Interrupt source
 854:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
 855:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
 856:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
 857:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
 858:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
 859:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
 860:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
 861:../SPL/src/stm32f10x_tim.c ****   * @note 
 862:../SPL/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can only generate an update interrupt.
 863:../SPL/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
 864:../SPL/src/stm32f10x_tim.c ****   *      TIM_IT_CC2 or TIM_IT_Trigger. 
 865:../SPL/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
 866:../SPL/src/stm32f10x_tim.c ****   *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
 867:../SPL/src/stm32f10x_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
 868:../SPL/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIM interrupts.
 869:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 870:../SPL/src/stm32f10x_tim.c ****   * @retval None
 871:../SPL/src/stm32f10x_tim.c ****   */
 872:../SPL/src/stm32f10x_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
 873:../SPL/src/stm32f10x_tim.c **** {  
 3479              		.loc 1 873 0
 3480              		.cfi_startproc
 3481              		@ args = 0, pretend = 0, frame = 8
 3482              		@ frame_needed = 1, uses_anonymous_args = 0
 3483 16d8 80B5     		push	{r7, lr}
 3484              	.LCFI45:
 3485              		.cfi_def_cfa_offset 8
 3486              		.cfi_offset 7, -8
 3487              		.cfi_offset 14, -4
 3488 16da 82B0     		sub	sp, sp, #8
 3489              	.LCFI46:
 3490              		.cfi_def_cfa_offset 16
 3491 16dc 00AF     		add	r7, sp, #0
 3492              	.LCFI47:
 3493              		.cfi_def_cfa_register 7
 3494 16de 7860     		str	r0, [r7, #4]
 3495 16e0 1346     		mov	r3, r2
 3496 16e2 0A46     		mov	r2, r1	@ movhi
 3497 16e4 7A80     		strh	r2, [r7, #2]	@ movhi
 3498 16e6 7B70     		strb	r3, [r7, #1]
 874:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
 875:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 3499              		.loc 1 875 0
 3500 16e8 7A68     		ldr	r2, [r7, #4]
 3501 16ea 3D4B     		ldr	r3, .L148
 3502 16ec 9A42     		cmp	r2, r3
 3503 16ee 44D0     		beq	.L142
 3504              		.loc 1 875 0 is_stmt 0 discriminator 1
 3505 16f0 7B68     		ldr	r3, [r7, #4]
 3506 16f2 B3F1804F 		cmp	r3, #1073741824
 3507 16f6 40D0     		beq	.L142
 3508              		.loc 1 875 0 discriminator 2
 3509 16f8 7A68     		ldr	r2, [r7, #4]
 3510 16fa 3A4B     		ldr	r3, .L148+4
 3511 16fc 9A42     		cmp	r2, r3
 3512 16fe 3CD0     		beq	.L142
 3513              		.loc 1 875 0 discriminator 3
 3514 1700 7A68     		ldr	r2, [r7, #4]
 3515 1702 394B     		ldr	r3, .L148+8
 3516 1704 9A42     		cmp	r2, r3
 3517 1706 38D0     		beq	.L142
 3518              		.loc 1 875 0 discriminator 4
 3519 1708 7A68     		ldr	r2, [r7, #4]
 3520 170a 384B     		ldr	r3, .L148+12
 3521 170c 9A42     		cmp	r2, r3
 3522 170e 34D0     		beq	.L142
 3523              		.loc 1 875 0 discriminator 5
 3524 1710 7A68     		ldr	r2, [r7, #4]
 3525 1712 374B     		ldr	r3, .L148+16
 3526 1714 9A42     		cmp	r2, r3
 3527 1716 30D0     		beq	.L142
 3528              		.loc 1 875 0 discriminator 6
 3529 1718 7A68     		ldr	r2, [r7, #4]
 3530 171a 364B     		ldr	r3, .L148+20
 3531 171c 9A42     		cmp	r2, r3
 3532 171e 2CD0     		beq	.L142
 3533              		.loc 1 875 0 discriminator 7
 3534 1720 7A68     		ldr	r2, [r7, #4]
 3535 1722 354B     		ldr	r3, .L148+24
 3536 1724 9A42     		cmp	r2, r3
 3537 1726 28D0     		beq	.L142
 3538              		.loc 1 875 0 discriminator 8
 3539 1728 7A68     		ldr	r2, [r7, #4]
 3540 172a 344B     		ldr	r3, .L148+28
 3541 172c 9A42     		cmp	r2, r3
 3542 172e 24D0     		beq	.L142
 3543              		.loc 1 875 0 discriminator 9
 3544 1730 7A68     		ldr	r2, [r7, #4]
 3545 1732 334B     		ldr	r3, .L148+32
 3546 1734 9A42     		cmp	r2, r3
 3547 1736 20D0     		beq	.L142
 3548              		.loc 1 875 0 discriminator 10
 3549 1738 7A68     		ldr	r2, [r7, #4]
 3550 173a 324B     		ldr	r3, .L148+36
 3551 173c 9A42     		cmp	r2, r3
 3552 173e 1CD0     		beq	.L142
 3553              		.loc 1 875 0 discriminator 11
 3554 1740 7A68     		ldr	r2, [r7, #4]
 3555 1742 314B     		ldr	r3, .L148+40
 3556 1744 9A42     		cmp	r2, r3
 3557 1746 18D0     		beq	.L142
 3558              		.loc 1 875 0 discriminator 12
 3559 1748 7A68     		ldr	r2, [r7, #4]
 3560 174a 304B     		ldr	r3, .L148+44
 3561 174c 9A42     		cmp	r2, r3
 3562 174e 14D0     		beq	.L142
 3563              		.loc 1 875 0 discriminator 13
 3564 1750 7A68     		ldr	r2, [r7, #4]
 3565 1752 2F4B     		ldr	r3, .L148+48
 3566 1754 9A42     		cmp	r2, r3
 3567 1756 10D0     		beq	.L142
 3568              		.loc 1 875 0 discriminator 14
 3569 1758 7A68     		ldr	r2, [r7, #4]
 3570 175a 2E4B     		ldr	r3, .L148+52
 3571 175c 9A42     		cmp	r2, r3
 3572 175e 0CD0     		beq	.L142
 3573              		.loc 1 875 0 discriminator 15
 3574 1760 7A68     		ldr	r2, [r7, #4]
 3575 1762 2D4B     		ldr	r3, .L148+56
 3576 1764 9A42     		cmp	r2, r3
 3577 1766 08D0     		beq	.L142
 3578              		.loc 1 875 0 discriminator 16
 3579 1768 7A68     		ldr	r2, [r7, #4]
 3580 176a 2C4B     		ldr	r3, .L148+60
 3581 176c 9A42     		cmp	r2, r3
 3582 176e 04D0     		beq	.L142
 3583              		.loc 1 875 0 discriminator 17
 3584 1770 2B48     		ldr	r0, .L148+64
 3585 1772 40F26B31 		movw	r1, #875
 3586 1776 FFF7FEFF 		bl	assert_failed
 3587              	.L142:
 876:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
 3588              		.loc 1 876 0 is_stmt 1
 3589 177a 7B88     		ldrh	r3, [r7, #2]
 3590 177c 03F47F43 		and	r3, r3, #65280
 3591 1780 002B     		cmp	r3, #0
 3592 1782 02D1     		bne	.L143
 3593              		.loc 1 876 0 is_stmt 0 discriminator 2
 3594 1784 7B88     		ldrh	r3, [r7, #2]
 3595 1786 002B     		cmp	r3, #0
 3596 1788 04D1     		bne	.L144
 3597              	.L143:
 3598              		.loc 1 876 0 discriminator 1
 3599 178a 2548     		ldr	r0, .L148+64
 3600 178c 4FF45B71 		mov	r1, #876
 3601 1790 FFF7FEFF 		bl	assert_failed
 3602              	.L144:
 877:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 3603              		.loc 1 877 0 is_stmt 1
 3604 1794 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3605 1796 002B     		cmp	r3, #0
 3606 1798 07D0     		beq	.L145
 3607              		.loc 1 877 0 is_stmt 0 discriminator 1
 3608 179a 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3609 179c 012B     		cmp	r3, #1
 3610 179e 04D0     		beq	.L145
 3611              		.loc 1 877 0 discriminator 2
 3612 17a0 1F48     		ldr	r0, .L148+64
 3613 17a2 40F26D31 		movw	r1, #877
 3614 17a6 FFF7FEFF 		bl	assert_failed
 3615              	.L145:
 878:../SPL/src/stm32f10x_tim.c ****   
 879:../SPL/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 3616              		.loc 1 879 0 is_stmt 1
 3617 17aa 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3618 17ac 002B     		cmp	r3, #0
 3619 17ae 08D0     		beq	.L146
 880:../SPL/src/stm32f10x_tim.c ****   {
 881:../SPL/src/stm32f10x_tim.c ****     /* Enable the Interrupt sources */
 882:../SPL/src/stm32f10x_tim.c ****     TIMx->DIER |= TIM_IT;
 3620              		.loc 1 882 0
 3621 17b0 7B68     		ldr	r3, [r7, #4]
 3622 17b2 9B89     		ldrh	r3, [r3, #12]	@ movhi
 3623 17b4 9AB2     		uxth	r2, r3
 3624 17b6 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3625 17b8 1343     		orrs	r3, r3, r2
 3626 17ba 9AB2     		uxth	r2, r3
 3627 17bc 7B68     		ldr	r3, [r7, #4]
 3628 17be 9A81     		strh	r2, [r3, #12]	@ movhi
 3629 17c0 0AE0     		b	.L141
 3630              	.L146:
 883:../SPL/src/stm32f10x_tim.c ****   }
 884:../SPL/src/stm32f10x_tim.c ****   else
 885:../SPL/src/stm32f10x_tim.c ****   {
 886:../SPL/src/stm32f10x_tim.c ****     /* Disable the Interrupt sources */
 887:../SPL/src/stm32f10x_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 3631              		.loc 1 887 0
 3632 17c2 7B68     		ldr	r3, [r7, #4]
 3633 17c4 9B89     		ldrh	r3, [r3, #12]	@ movhi
 3634 17c6 9AB2     		uxth	r2, r3
 3635 17c8 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3636 17ca 6FEA0303 		mvn	r3, r3
 3637 17ce 9BB2     		uxth	r3, r3
 3638 17d0 1340     		ands	r3, r3, r2
 3639 17d2 9AB2     		uxth	r2, r3
 3640 17d4 7B68     		ldr	r3, [r7, #4]
 3641 17d6 9A81     		strh	r2, [r3, #12]	@ movhi
 3642              	.L141:
 888:../SPL/src/stm32f10x_tim.c ****   }
 889:../SPL/src/stm32f10x_tim.c **** }
 3643              		.loc 1 889 0
 3644 17d8 07F10807 		add	r7, r7, #8
 3645 17dc BD46     		mov	sp, r7
 3646 17de 80BD     		pop	{r7, pc}
 3647              	.L149:
 3648              		.align	2
 3649              	.L148:
 3650 17e0 002C0140 		.word	1073818624
 3651 17e4 00040040 		.word	1073742848
 3652 17e8 00080040 		.word	1073743872
 3653 17ec 000C0040 		.word	1073744896
 3654 17f0 00100040 		.word	1073745920
 3655 17f4 00140040 		.word	1073746944
 3656 17f8 00340140 		.word	1073820672
 3657 17fc 004C0140 		.word	1073826816
 3658 1800 00500140 		.word	1073827840
 3659 1804 00540140 		.word	1073828864
 3660 1808 00180040 		.word	1073747968
 3661 180c 001C0040 		.word	1073748992
 3662 1810 00200040 		.word	1073750016
 3663 1814 00400140 		.word	1073823744
 3664 1818 00440140 		.word	1073824768
 3665 181c 00480140 		.word	1073825792
 3666 1820 00000000 		.word	.LC0
 3667              		.cfi_endproc
 3668              	.LFE44:
 3670              		.align	2
 3671              		.global	TIM_GenerateEvent
 3672              		.thumb
 3673              		.thumb_func
 3675              	TIM_GenerateEvent:
 3676              	.LFB45:
 890:../SPL/src/stm32f10x_tim.c **** 
 891:../SPL/src/stm32f10x_tim.c **** /**
 892:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
 893:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
 894:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_EventSource: specifies the event source.
 895:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one or more of the following values:	   
 896:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_Update: Timer update Event source
 897:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
 898:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
 899:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
 900:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
 901:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_COM: Timer COM event source  
 902:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_Trigger: Timer Trigger Event source
 903:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_Break: Timer Break event source
 904:../SPL/src/stm32f10x_tim.c ****   * @note 
 905:../SPL/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can only generate an update event. 
 906:../SPL/src/stm32f10x_tim.c ****   *   - TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.      
 907:../SPL/src/stm32f10x_tim.c ****   * @retval None
 908:../SPL/src/stm32f10x_tim.c ****   */
 909:../SPL/src/stm32f10x_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
 910:../SPL/src/stm32f10x_tim.c **** { 
 3677              		.loc 1 910 0
 3678              		.cfi_startproc
 3679              		@ args = 0, pretend = 0, frame = 8
 3680              		@ frame_needed = 1, uses_anonymous_args = 0
 3681 1824 80B5     		push	{r7, lr}
 3682              	.LCFI48:
 3683              		.cfi_def_cfa_offset 8
 3684              		.cfi_offset 7, -8
 3685              		.cfi_offset 14, -4
 3686 1826 82B0     		sub	sp, sp, #8
 3687              	.LCFI49:
 3688              		.cfi_def_cfa_offset 16
 3689 1828 00AF     		add	r7, sp, #0
 3690              	.LCFI50:
 3691              		.cfi_def_cfa_register 7
 3692 182a 7860     		str	r0, [r7, #4]
 3693 182c 0B46     		mov	r3, r1
 3694 182e 7B80     		strh	r3, [r7, #2]	@ movhi
 911:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
 912:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 3695              		.loc 1 912 0
 3696 1830 7A68     		ldr	r2, [r7, #4]
 3697 1832 2E4B     		ldr	r3, .L154
 3698 1834 9A42     		cmp	r2, r3
 3699 1836 44D0     		beq	.L151
 3700              		.loc 1 912 0 is_stmt 0 discriminator 1
 3701 1838 7B68     		ldr	r3, [r7, #4]
 3702 183a B3F1804F 		cmp	r3, #1073741824
 3703 183e 40D0     		beq	.L151
 3704              		.loc 1 912 0 discriminator 2
 3705 1840 7A68     		ldr	r2, [r7, #4]
 3706 1842 2B4B     		ldr	r3, .L154+4
 3707 1844 9A42     		cmp	r2, r3
 3708 1846 3CD0     		beq	.L151
 3709              		.loc 1 912 0 discriminator 3
 3710 1848 7A68     		ldr	r2, [r7, #4]
 3711 184a 2A4B     		ldr	r3, .L154+8
 3712 184c 9A42     		cmp	r2, r3
 3713 184e 38D0     		beq	.L151
 3714              		.loc 1 912 0 discriminator 4
 3715 1850 7A68     		ldr	r2, [r7, #4]
 3716 1852 294B     		ldr	r3, .L154+12
 3717 1854 9A42     		cmp	r2, r3
 3718 1856 34D0     		beq	.L151
 3719              		.loc 1 912 0 discriminator 5
 3720 1858 7A68     		ldr	r2, [r7, #4]
 3721 185a 284B     		ldr	r3, .L154+16
 3722 185c 9A42     		cmp	r2, r3
 3723 185e 30D0     		beq	.L151
 3724              		.loc 1 912 0 discriminator 6
 3725 1860 7A68     		ldr	r2, [r7, #4]
 3726 1862 274B     		ldr	r3, .L154+20
 3727 1864 9A42     		cmp	r2, r3
 3728 1866 2CD0     		beq	.L151
 3729              		.loc 1 912 0 discriminator 7
 3730 1868 7A68     		ldr	r2, [r7, #4]
 3731 186a 264B     		ldr	r3, .L154+24
 3732 186c 9A42     		cmp	r2, r3
 3733 186e 28D0     		beq	.L151
 3734              		.loc 1 912 0 discriminator 8
 3735 1870 7A68     		ldr	r2, [r7, #4]
 3736 1872 254B     		ldr	r3, .L154+28
 3737 1874 9A42     		cmp	r2, r3
 3738 1876 24D0     		beq	.L151
 3739              		.loc 1 912 0 discriminator 9
 3740 1878 7A68     		ldr	r2, [r7, #4]
 3741 187a 244B     		ldr	r3, .L154+32
 3742 187c 9A42     		cmp	r2, r3
 3743 187e 20D0     		beq	.L151
 3744              		.loc 1 912 0 discriminator 10
 3745 1880 7A68     		ldr	r2, [r7, #4]
 3746 1882 234B     		ldr	r3, .L154+36
 3747 1884 9A42     		cmp	r2, r3
 3748 1886 1CD0     		beq	.L151
 3749              		.loc 1 912 0 discriminator 11
 3750 1888 7A68     		ldr	r2, [r7, #4]
 3751 188a 224B     		ldr	r3, .L154+40
 3752 188c 9A42     		cmp	r2, r3
 3753 188e 18D0     		beq	.L151
 3754              		.loc 1 912 0 discriminator 12
 3755 1890 7A68     		ldr	r2, [r7, #4]
 3756 1892 214B     		ldr	r3, .L154+44
 3757 1894 9A42     		cmp	r2, r3
 3758 1896 14D0     		beq	.L151
 3759              		.loc 1 912 0 discriminator 13
 3760 1898 7A68     		ldr	r2, [r7, #4]
 3761 189a 204B     		ldr	r3, .L154+48
 3762 189c 9A42     		cmp	r2, r3
 3763 189e 10D0     		beq	.L151
 3764              		.loc 1 912 0 discriminator 14
 3765 18a0 7A68     		ldr	r2, [r7, #4]
 3766 18a2 1F4B     		ldr	r3, .L154+52
 3767 18a4 9A42     		cmp	r2, r3
 3768 18a6 0CD0     		beq	.L151
 3769              		.loc 1 912 0 discriminator 15
 3770 18a8 7A68     		ldr	r2, [r7, #4]
 3771 18aa 1E4B     		ldr	r3, .L154+56
 3772 18ac 9A42     		cmp	r2, r3
 3773 18ae 08D0     		beq	.L151
 3774              		.loc 1 912 0 discriminator 16
 3775 18b0 7A68     		ldr	r2, [r7, #4]
 3776 18b2 1D4B     		ldr	r3, .L154+60
 3777 18b4 9A42     		cmp	r2, r3
 3778 18b6 04D0     		beq	.L151
 3779              		.loc 1 912 0 discriminator 17
 3780 18b8 1C48     		ldr	r0, .L154+64
 3781 18ba 4FF46471 		mov	r1, #912
 3782 18be FFF7FEFF 		bl	assert_failed
 3783              	.L151:
 913:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
 3784              		.loc 1 913 0 is_stmt 1
 3785 18c2 7B88     		ldrh	r3, [r7, #2]
 3786 18c4 03F47F43 		and	r3, r3, #65280
 3787 18c8 002B     		cmp	r3, #0
 3788 18ca 02D1     		bne	.L152
 3789              		.loc 1 913 0 is_stmt 0 discriminator 2
 3790 18cc 7B88     		ldrh	r3, [r7, #2]
 3791 18ce 002B     		cmp	r3, #0
 3792 18d0 04D1     		bne	.L153
 3793              	.L152:
 3794              		.loc 1 913 0 discriminator 1
 3795 18d2 1648     		ldr	r0, .L154+64
 3796 18d4 40F29131 		movw	r1, #913
 3797 18d8 FFF7FEFF 		bl	assert_failed
 3798              	.L153:
 914:../SPL/src/stm32f10x_tim.c ****   
 915:../SPL/src/stm32f10x_tim.c ****   /* Set the event sources */
 916:../SPL/src/stm32f10x_tim.c ****   TIMx->EGR = TIM_EventSource;
 3799              		.loc 1 916 0 is_stmt 1
 3800 18dc 7B68     		ldr	r3, [r7, #4]
 3801 18de 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3802 18e0 9A82     		strh	r2, [r3, #20]	@ movhi
 917:../SPL/src/stm32f10x_tim.c **** }
 3803              		.loc 1 917 0
 3804 18e2 07F10807 		add	r7, r7, #8
 3805 18e6 BD46     		mov	sp, r7
 3806 18e8 80BD     		pop	{r7, pc}
 3807              	.L155:
 3808 18ea 00BF     		.align	2
 3809              	.L154:
 3810 18ec 002C0140 		.word	1073818624
 3811 18f0 00040040 		.word	1073742848
 3812 18f4 00080040 		.word	1073743872
 3813 18f8 000C0040 		.word	1073744896
 3814 18fc 00100040 		.word	1073745920
 3815 1900 00140040 		.word	1073746944
 3816 1904 00340140 		.word	1073820672
 3817 1908 004C0140 		.word	1073826816
 3818 190c 00500140 		.word	1073827840
 3819 1910 00540140 		.word	1073828864
 3820 1914 00180040 		.word	1073747968
 3821 1918 001C0040 		.word	1073748992
 3822 191c 00200040 		.word	1073750016
 3823 1920 00400140 		.word	1073823744
 3824 1924 00440140 		.word	1073824768
 3825 1928 00480140 		.word	1073825792
 3826 192c 00000000 		.word	.LC0
 3827              		.cfi_endproc
 3828              	.LFE45:
 3830              		.align	2
 3831              		.global	TIM_DMAConfig
 3832              		.thumb
 3833              		.thumb_func
 3835              	TIM_DMAConfig:
 3836              	.LFB46:
 918:../SPL/src/stm32f10x_tim.c **** 
 919:../SPL/src/stm32f10x_tim.c **** /**
 920:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx's DMA interface.
 921:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 15, 16 or 17 to select 
 922:../SPL/src/stm32f10x_tim.c ****   *   the TIM peripheral.
 923:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_DMABase: DMA Base address.
 924:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
 925:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_DMABase_CR, TIM_DMABase_CR2, TIM_DMABase_SMCR,
 926:../SPL/src/stm32f10x_tim.c ****   *          TIM_DMABase_DIER, TIM1_DMABase_SR, TIM_DMABase_EGR,
 927:../SPL/src/stm32f10x_tim.c ****   *          TIM_DMABase_CCMR1, TIM_DMABase_CCMR2, TIM_DMABase_CCER,
 928:../SPL/src/stm32f10x_tim.c ****   *          TIM_DMABase_CNT, TIM_DMABase_PSC, TIM_DMABase_ARR,
 929:../SPL/src/stm32f10x_tim.c ****   *          TIM_DMABase_RCR, TIM_DMABase_CCR1, TIM_DMABase_CCR2,
 930:../SPL/src/stm32f10x_tim.c ****   *          TIM_DMABase_CCR3, TIM_DMABase_CCR4, TIM_DMABase_BDTR,
 931:../SPL/src/stm32f10x_tim.c ****   *          TIM_DMABase_DCR.
 932:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length.
 933:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one value between:
 934:../SPL/src/stm32f10x_tim.c ****   *   TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
 935:../SPL/src/stm32f10x_tim.c ****   * @retval None
 936:../SPL/src/stm32f10x_tim.c ****   */
 937:../SPL/src/stm32f10x_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
 938:../SPL/src/stm32f10x_tim.c **** {
 3837              		.loc 1 938 0
 3838              		.cfi_startproc
 3839              		@ args = 0, pretend = 0, frame = 8
 3840              		@ frame_needed = 1, uses_anonymous_args = 0
 3841 1930 80B5     		push	{r7, lr}
 3842              	.LCFI51:
 3843              		.cfi_def_cfa_offset 8
 3844              		.cfi_offset 7, -8
 3845              		.cfi_offset 14, -4
 3846 1932 82B0     		sub	sp, sp, #8
 3847              	.LCFI52:
 3848              		.cfi_def_cfa_offset 16
 3849 1934 00AF     		add	r7, sp, #0
 3850              	.LCFI53:
 3851              		.cfi_def_cfa_register 7
 3852 1936 7860     		str	r0, [r7, #4]
 3853 1938 1346     		mov	r3, r2
 3854 193a 0A46     		mov	r2, r1	@ movhi
 3855 193c 7A80     		strh	r2, [r7, #2]	@ movhi
 3856 193e 3B80     		strh	r3, [r7, #0]	@ movhi
 939:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
 940:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 3857              		.loc 1 940 0
 3858 1940 7A68     		ldr	r2, [r7, #4]
 3859 1942 5E4B     		ldr	r3, .L160
 3860 1944 9A42     		cmp	r2, r3
 3861 1946 24D0     		beq	.L157
 3862              		.loc 1 940 0 is_stmt 0 discriminator 1
 3863 1948 7B68     		ldr	r3, [r7, #4]
 3864 194a B3F1804F 		cmp	r3, #1073741824
 3865 194e 20D0     		beq	.L157
 3866              		.loc 1 940 0 discriminator 2
 3867 1950 7A68     		ldr	r2, [r7, #4]
 3868 1952 5B4B     		ldr	r3, .L160+4
 3869 1954 9A42     		cmp	r2, r3
 3870 1956 1CD0     		beq	.L157
 3871              		.loc 1 940 0 discriminator 3
 3872 1958 7A68     		ldr	r2, [r7, #4]
 3873 195a 5A4B     		ldr	r3, .L160+8
 3874 195c 9A42     		cmp	r2, r3
 3875 195e 18D0     		beq	.L157
 3876              		.loc 1 940 0 discriminator 4
 3877 1960 7A68     		ldr	r2, [r7, #4]
 3878 1962 594B     		ldr	r3, .L160+12
 3879 1964 9A42     		cmp	r2, r3
 3880 1966 14D0     		beq	.L157
 3881              		.loc 1 940 0 discriminator 5
 3882 1968 7A68     		ldr	r2, [r7, #4]
 3883 196a 584B     		ldr	r3, .L160+16
 3884 196c 9A42     		cmp	r2, r3
 3885 196e 10D0     		beq	.L157
 3886              		.loc 1 940 0 discriminator 6
 3887 1970 7A68     		ldr	r2, [r7, #4]
 3888 1972 574B     		ldr	r3, .L160+20
 3889 1974 9A42     		cmp	r2, r3
 3890 1976 0CD0     		beq	.L157
 3891              		.loc 1 940 0 discriminator 7
 3892 1978 7A68     		ldr	r2, [r7, #4]
 3893 197a 564B     		ldr	r3, .L160+24
 3894 197c 9A42     		cmp	r2, r3
 3895 197e 08D0     		beq	.L157
 3896              		.loc 1 940 0 discriminator 8
 3897 1980 7A68     		ldr	r2, [r7, #4]
 3898 1982 554B     		ldr	r3, .L160+28
 3899 1984 9A42     		cmp	r2, r3
 3900 1986 04D0     		beq	.L157
 3901              		.loc 1 940 0 discriminator 9
 3902 1988 5448     		ldr	r0, .L160+32
 3903 198a 4FF46B71 		mov	r1, #940
 3904 198e FFF7FEFF 		bl	assert_failed
 3905              	.L157:
 941:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase));
 3906              		.loc 1 941 0 is_stmt 1
 3907 1992 7B88     		ldrh	r3, [r7, #2]
 3908 1994 002B     		cmp	r3, #0
 3909 1996 3AD0     		beq	.L158
 3910              		.loc 1 941 0 is_stmt 0 discriminator 1
 3911 1998 7B88     		ldrh	r3, [r7, #2]
 3912 199a 012B     		cmp	r3, #1
 3913 199c 37D0     		beq	.L158
 3914              		.loc 1 941 0 discriminator 2
 3915 199e 7B88     		ldrh	r3, [r7, #2]
 3916 19a0 022B     		cmp	r3, #2
 3917 19a2 34D0     		beq	.L158
 3918              		.loc 1 941 0 discriminator 3
 3919 19a4 7B88     		ldrh	r3, [r7, #2]
 3920 19a6 032B     		cmp	r3, #3
 3921 19a8 31D0     		beq	.L158
 3922              		.loc 1 941 0 discriminator 4
 3923 19aa 7B88     		ldrh	r3, [r7, #2]
 3924 19ac 042B     		cmp	r3, #4
 3925 19ae 2ED0     		beq	.L158
 3926              		.loc 1 941 0 discriminator 5
 3927 19b0 7B88     		ldrh	r3, [r7, #2]
 3928 19b2 052B     		cmp	r3, #5
 3929 19b4 2BD0     		beq	.L158
 3930              		.loc 1 941 0 discriminator 6
 3931 19b6 7B88     		ldrh	r3, [r7, #2]
 3932 19b8 062B     		cmp	r3, #6
 3933 19ba 28D0     		beq	.L158
 3934              		.loc 1 941 0 discriminator 7
 3935 19bc 7B88     		ldrh	r3, [r7, #2]
 3936 19be 072B     		cmp	r3, #7
 3937 19c0 25D0     		beq	.L158
 3938              		.loc 1 941 0 discriminator 8
 3939 19c2 7B88     		ldrh	r3, [r7, #2]
 3940 19c4 082B     		cmp	r3, #8
 3941 19c6 22D0     		beq	.L158
 3942              		.loc 1 941 0 discriminator 9
 3943 19c8 7B88     		ldrh	r3, [r7, #2]
 3944 19ca 092B     		cmp	r3, #9
 3945 19cc 1FD0     		beq	.L158
 3946              		.loc 1 941 0 discriminator 10
 3947 19ce 7B88     		ldrh	r3, [r7, #2]
 3948 19d0 0A2B     		cmp	r3, #10
 3949 19d2 1CD0     		beq	.L158
 3950              		.loc 1 941 0 discriminator 11
 3951 19d4 7B88     		ldrh	r3, [r7, #2]
 3952 19d6 0B2B     		cmp	r3, #11
 3953 19d8 19D0     		beq	.L158
 3954              		.loc 1 941 0 discriminator 12
 3955 19da 7B88     		ldrh	r3, [r7, #2]
 3956 19dc 0C2B     		cmp	r3, #12
 3957 19de 16D0     		beq	.L158
 3958              		.loc 1 941 0 discriminator 13
 3959 19e0 7B88     		ldrh	r3, [r7, #2]
 3960 19e2 0D2B     		cmp	r3, #13
 3961 19e4 13D0     		beq	.L158
 3962              		.loc 1 941 0 discriminator 14
 3963 19e6 7B88     		ldrh	r3, [r7, #2]
 3964 19e8 0E2B     		cmp	r3, #14
 3965 19ea 10D0     		beq	.L158
 3966              		.loc 1 941 0 discriminator 15
 3967 19ec 7B88     		ldrh	r3, [r7, #2]
 3968 19ee 0F2B     		cmp	r3, #15
 3969 19f0 0DD0     		beq	.L158
 3970              		.loc 1 941 0 discriminator 16
 3971 19f2 7B88     		ldrh	r3, [r7, #2]
 3972 19f4 102B     		cmp	r3, #16
 3973 19f6 0AD0     		beq	.L158
 3974              		.loc 1 941 0 discriminator 17
 3975 19f8 7B88     		ldrh	r3, [r7, #2]
 3976 19fa 112B     		cmp	r3, #17
 3977 19fc 07D0     		beq	.L158
 3978              		.loc 1 941 0 discriminator 18
 3979 19fe 7B88     		ldrh	r3, [r7, #2]
 3980 1a00 122B     		cmp	r3, #18
 3981 1a02 04D0     		beq	.L158
 3982              		.loc 1 941 0 discriminator 19
 3983 1a04 3548     		ldr	r0, .L160+32
 3984 1a06 40F2AD31 		movw	r1, #941
 3985 1a0a FFF7FEFF 		bl	assert_failed
 3986              	.L158:
 942:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
 3987              		.loc 1 942 0 is_stmt 1
 3988 1a0e 3B88     		ldrh	r3, [r7, #0]
 3989 1a10 002B     		cmp	r3, #0
 3990 1a12 48D0     		beq	.L159
 3991              		.loc 1 942 0 is_stmt 0 discriminator 1
 3992 1a14 3B88     		ldrh	r3, [r7, #0]
 3993 1a16 B3F5807F 		cmp	r3, #256
 3994 1a1a 44D0     		beq	.L159
 3995              		.loc 1 942 0 discriminator 2
 3996 1a1c 3B88     		ldrh	r3, [r7, #0]
 3997 1a1e B3F5007F 		cmp	r3, #512
 3998 1a22 40D0     		beq	.L159
 3999              		.loc 1 942 0 discriminator 3
 4000 1a24 3B88     		ldrh	r3, [r7, #0]
 4001 1a26 B3F5407F 		cmp	r3, #768
 4002 1a2a 3CD0     		beq	.L159
 4003              		.loc 1 942 0 discriminator 4
 4004 1a2c 3B88     		ldrh	r3, [r7, #0]
 4005 1a2e B3F5806F 		cmp	r3, #1024
 4006 1a32 38D0     		beq	.L159
 4007              		.loc 1 942 0 discriminator 5
 4008 1a34 3B88     		ldrh	r3, [r7, #0]
 4009 1a36 B3F5A06F 		cmp	r3, #1280
 4010 1a3a 34D0     		beq	.L159
 4011              		.loc 1 942 0 discriminator 6
 4012 1a3c 3B88     		ldrh	r3, [r7, #0]
 4013 1a3e B3F5C06F 		cmp	r3, #1536
 4014 1a42 30D0     		beq	.L159
 4015              		.loc 1 942 0 discriminator 7
 4016 1a44 3B88     		ldrh	r3, [r7, #0]
 4017 1a46 B3F5E06F 		cmp	r3, #1792
 4018 1a4a 2CD0     		beq	.L159
 4019              		.loc 1 942 0 discriminator 8
 4020 1a4c 3B88     		ldrh	r3, [r7, #0]
 4021 1a4e B3F5006F 		cmp	r3, #2048
 4022 1a52 28D0     		beq	.L159
 4023              		.loc 1 942 0 discriminator 9
 4024 1a54 3B88     		ldrh	r3, [r7, #0]
 4025 1a56 B3F5106F 		cmp	r3, #2304
 4026 1a5a 24D0     		beq	.L159
 4027              		.loc 1 942 0 discriminator 10
 4028 1a5c 3B88     		ldrh	r3, [r7, #0]
 4029 1a5e B3F5206F 		cmp	r3, #2560
 4030 1a62 20D0     		beq	.L159
 4031              		.loc 1 942 0 discriminator 11
 4032 1a64 3B88     		ldrh	r3, [r7, #0]
 4033 1a66 B3F5306F 		cmp	r3, #2816
 4034 1a6a 1CD0     		beq	.L159
 4035              		.loc 1 942 0 discriminator 12
 4036 1a6c 3B88     		ldrh	r3, [r7, #0]
 4037 1a6e B3F5406F 		cmp	r3, #3072
 4038 1a72 18D0     		beq	.L159
 4039              		.loc 1 942 0 discriminator 13
 4040 1a74 3B88     		ldrh	r3, [r7, #0]
 4041 1a76 B3F5506F 		cmp	r3, #3328
 4042 1a7a 14D0     		beq	.L159
 4043              		.loc 1 942 0 discriminator 14
 4044 1a7c 3B88     		ldrh	r3, [r7, #0]
 4045 1a7e B3F5606F 		cmp	r3, #3584
 4046 1a82 10D0     		beq	.L159
 4047              		.loc 1 942 0 discriminator 15
 4048 1a84 3B88     		ldrh	r3, [r7, #0]
 4049 1a86 B3F5706F 		cmp	r3, #3840
 4050 1a8a 0CD0     		beq	.L159
 4051              		.loc 1 942 0 discriminator 16
 4052 1a8c 3B88     		ldrh	r3, [r7, #0]
 4053 1a8e B3F5805F 		cmp	r3, #4096
 4054 1a92 08D0     		beq	.L159
 4055              		.loc 1 942 0 discriminator 17
 4056 1a94 3B88     		ldrh	r3, [r7, #0]
 4057 1a96 B3F5885F 		cmp	r3, #4352
 4058 1a9a 04D0     		beq	.L159
 4059              		.loc 1 942 0 discriminator 18
 4060 1a9c 0F48     		ldr	r0, .L160+32
 4061 1a9e 40F2AE31 		movw	r1, #942
 4062 1aa2 FFF7FEFF 		bl	assert_failed
 4063              	.L159:
 943:../SPL/src/stm32f10x_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
 944:../SPL/src/stm32f10x_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 4064              		.loc 1 944 0 is_stmt 1
 4065 1aa6 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4066 1aa8 3B88     		ldrh	r3, [r7, #0]	@ movhi
 4067 1aaa 1343     		orrs	r3, r3, r2
 4068 1aac 9AB2     		uxth	r2, r3
 4069 1aae 7B68     		ldr	r3, [r7, #4]
 4070 1ab0 A3F84820 		strh	r2, [r3, #72]	@ movhi
 945:../SPL/src/stm32f10x_tim.c **** }
 4071              		.loc 1 945 0
 4072 1ab4 07F10807 		add	r7, r7, #8
 4073 1ab8 BD46     		mov	sp, r7
 4074 1aba 80BD     		pop	{r7, pc}
 4075              	.L161:
 4076              		.align	2
 4077              	.L160:
 4078 1abc 002C0140 		.word	1073818624
 4079 1ac0 00040040 		.word	1073742848
 4080 1ac4 00080040 		.word	1073743872
 4081 1ac8 000C0040 		.word	1073744896
 4082 1acc 00340140 		.word	1073820672
 4083 1ad0 00400140 		.word	1073823744
 4084 1ad4 00440140 		.word	1073824768
 4085 1ad8 00480140 		.word	1073825792
 4086 1adc 00000000 		.word	.LC0
 4087              		.cfi_endproc
 4088              	.LFE46:
 4090              		.align	2
 4091              		.global	TIM_DMACmd
 4092              		.thumb
 4093              		.thumb_func
 4095              	TIM_DMACmd:
 4096              	.LFB47:
 946:../SPL/src/stm32f10x_tim.c **** 
 947:../SPL/src/stm32f10x_tim.c **** /**
 948:../SPL/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
 949:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 6, 7, 8, 15, 16 or 17 
 950:../SPL/src/stm32f10x_tim.c ****   *   to select the TIM peripheral. 
 951:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
 952:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
 953:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_Update: TIM update Interrupt source
 954:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
 955:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
 956:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
 957:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
 958:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_COM: TIM Commutation DMA source
 959:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_Trigger: TIM Trigger DMA source
 960:../SPL/src/stm32f10x_tim.c ****   * @param  NewState: new state of the DMA Request sources.
 961:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 962:../SPL/src/stm32f10x_tim.c ****   * @retval None
 963:../SPL/src/stm32f10x_tim.c ****   */
 964:../SPL/src/stm32f10x_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
 965:../SPL/src/stm32f10x_tim.c **** { 
 4097              		.loc 1 965 0
 4098              		.cfi_startproc
 4099              		@ args = 0, pretend = 0, frame = 8
 4100              		@ frame_needed = 1, uses_anonymous_args = 0
 4101 1ae0 80B5     		push	{r7, lr}
 4102              	.LCFI54:
 4103              		.cfi_def_cfa_offset 8
 4104              		.cfi_offset 7, -8
 4105              		.cfi_offset 14, -4
 4106 1ae2 82B0     		sub	sp, sp, #8
 4107              	.LCFI55:
 4108              		.cfi_def_cfa_offset 16
 4109 1ae4 00AF     		add	r7, sp, #0
 4110              	.LCFI56:
 4111              		.cfi_def_cfa_register 7
 4112 1ae6 7860     		str	r0, [r7, #4]
 4113 1ae8 1346     		mov	r3, r2
 4114 1aea 0A46     		mov	r2, r1	@ movhi
 4115 1aec 7A80     		strh	r2, [r7, #2]	@ movhi
 4116 1aee 7B70     		strb	r3, [r7, #1]
 966:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
 967:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST9_PERIPH(TIMx));
 4117              		.loc 1 967 0
 4118 1af0 7A68     		ldr	r2, [r7, #4]
 4119 1af2 324B     		ldr	r3, .L169
 4120 1af4 9A42     		cmp	r2, r3
 4121 1af6 2CD0     		beq	.L163
 4122              		.loc 1 967 0 is_stmt 0 discriminator 1
 4123 1af8 7B68     		ldr	r3, [r7, #4]
 4124 1afa B3F1804F 		cmp	r3, #1073741824
 4125 1afe 28D0     		beq	.L163
 4126              		.loc 1 967 0 discriminator 2
 4127 1b00 7A68     		ldr	r2, [r7, #4]
 4128 1b02 2F4B     		ldr	r3, .L169+4
 4129 1b04 9A42     		cmp	r2, r3
 4130 1b06 24D0     		beq	.L163
 4131              		.loc 1 967 0 discriminator 3
 4132 1b08 7A68     		ldr	r2, [r7, #4]
 4133 1b0a 2E4B     		ldr	r3, .L169+8
 4134 1b0c 9A42     		cmp	r2, r3
 4135 1b0e 20D0     		beq	.L163
 4136              		.loc 1 967 0 discriminator 4
 4137 1b10 7A68     		ldr	r2, [r7, #4]
 4138 1b12 2D4B     		ldr	r3, .L169+12
 4139 1b14 9A42     		cmp	r2, r3
 4140 1b16 1CD0     		beq	.L163
 4141              		.loc 1 967 0 discriminator 5
 4142 1b18 7A68     		ldr	r2, [r7, #4]
 4143 1b1a 2C4B     		ldr	r3, .L169+16
 4144 1b1c 9A42     		cmp	r2, r3
 4145 1b1e 18D0     		beq	.L163
 4146              		.loc 1 967 0 discriminator 6
 4147 1b20 7A68     		ldr	r2, [r7, #4]
 4148 1b22 2B4B     		ldr	r3, .L169+20
 4149 1b24 9A42     		cmp	r2, r3
 4150 1b26 14D0     		beq	.L163
 4151              		.loc 1 967 0 discriminator 7
 4152 1b28 7A68     		ldr	r2, [r7, #4]
 4153 1b2a 2A4B     		ldr	r3, .L169+24
 4154 1b2c 9A42     		cmp	r2, r3
 4155 1b2e 10D0     		beq	.L163
 4156              		.loc 1 967 0 discriminator 8
 4157 1b30 7A68     		ldr	r2, [r7, #4]
 4158 1b32 294B     		ldr	r3, .L169+28
 4159 1b34 9A42     		cmp	r2, r3
 4160 1b36 0CD0     		beq	.L163
 4161              		.loc 1 967 0 discriminator 9
 4162 1b38 7A68     		ldr	r2, [r7, #4]
 4163 1b3a 284B     		ldr	r3, .L169+32
 4164 1b3c 9A42     		cmp	r2, r3
 4165 1b3e 08D0     		beq	.L163
 4166              		.loc 1 967 0 discriminator 10
 4167 1b40 7A68     		ldr	r2, [r7, #4]
 4168 1b42 274B     		ldr	r3, .L169+36
 4169 1b44 9A42     		cmp	r2, r3
 4170 1b46 04D0     		beq	.L163
 4171              		.loc 1 967 0 discriminator 11
 4172 1b48 2648     		ldr	r0, .L169+40
 4173 1b4a 40F2C731 		movw	r1, #967
 4174 1b4e FFF7FEFF 		bl	assert_failed
 4175              	.L163:
 968:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
 4176              		.loc 1 968 0 is_stmt 1
 4177 1b52 7A88     		ldrh	r2, [r7, #2]
 4178 1b54 48F2FF03 		movw	r3, #33023
 4179 1b58 1340     		ands	r3, r3, r2
 4180 1b5a 002B     		cmp	r3, #0
 4181 1b5c 02D1     		bne	.L164
 4182              		.loc 1 968 0 is_stmt 0 discriminator 2
 4183 1b5e 7B88     		ldrh	r3, [r7, #2]
 4184 1b60 002B     		cmp	r3, #0
 4185 1b62 04D1     		bne	.L165
 4186              	.L164:
 4187              		.loc 1 968 0 discriminator 1
 4188 1b64 1F48     		ldr	r0, .L169+40
 4189 1b66 4FF47271 		mov	r1, #968
 4190 1b6a FFF7FEFF 		bl	assert_failed
 4191              	.L165:
 969:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 4192              		.loc 1 969 0 is_stmt 1
 4193 1b6e 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4194 1b70 002B     		cmp	r3, #0
 4195 1b72 07D0     		beq	.L166
 4196              		.loc 1 969 0 is_stmt 0 discriminator 1
 4197 1b74 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4198 1b76 012B     		cmp	r3, #1
 4199 1b78 04D0     		beq	.L166
 4200              		.loc 1 969 0 discriminator 2
 4201 1b7a 1A48     		ldr	r0, .L169+40
 4202 1b7c 40F2C931 		movw	r1, #969
 4203 1b80 FFF7FEFF 		bl	assert_failed
 4204              	.L166:
 970:../SPL/src/stm32f10x_tim.c ****   
 971:../SPL/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 4205              		.loc 1 971 0 is_stmt 1
 4206 1b84 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4207 1b86 002B     		cmp	r3, #0
 4208 1b88 08D0     		beq	.L167
 972:../SPL/src/stm32f10x_tim.c ****   {
 973:../SPL/src/stm32f10x_tim.c ****     /* Enable the DMA sources */
 974:../SPL/src/stm32f10x_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 4209              		.loc 1 974 0
 4210 1b8a 7B68     		ldr	r3, [r7, #4]
 4211 1b8c 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4212 1b8e 9AB2     		uxth	r2, r3
 4213 1b90 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4214 1b92 1343     		orrs	r3, r3, r2
 4215 1b94 9AB2     		uxth	r2, r3
 4216 1b96 7B68     		ldr	r3, [r7, #4]
 4217 1b98 9A81     		strh	r2, [r3, #12]	@ movhi
 4218 1b9a 0AE0     		b	.L162
 4219              	.L167:
 975:../SPL/src/stm32f10x_tim.c ****   }
 976:../SPL/src/stm32f10x_tim.c ****   else
 977:../SPL/src/stm32f10x_tim.c ****   {
 978:../SPL/src/stm32f10x_tim.c ****     /* Disable the DMA sources */
 979:../SPL/src/stm32f10x_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 4220              		.loc 1 979 0
 4221 1b9c 7B68     		ldr	r3, [r7, #4]
 4222 1b9e 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4223 1ba0 9AB2     		uxth	r2, r3
 4224 1ba2 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4225 1ba4 6FEA0303 		mvn	r3, r3
 4226 1ba8 9BB2     		uxth	r3, r3
 4227 1baa 1340     		ands	r3, r3, r2
 4228 1bac 9AB2     		uxth	r2, r3
 4229 1bae 7B68     		ldr	r3, [r7, #4]
 4230 1bb0 9A81     		strh	r2, [r3, #12]	@ movhi
 4231              	.L162:
 980:../SPL/src/stm32f10x_tim.c ****   }
 981:../SPL/src/stm32f10x_tim.c **** }
 4232              		.loc 1 981 0
 4233 1bb2 07F10807 		add	r7, r7, #8
 4234 1bb6 BD46     		mov	sp, r7
 4235 1bb8 80BD     		pop	{r7, pc}
 4236              	.L170:
 4237 1bba 00BF     		.align	2
 4238              	.L169:
 4239 1bbc 002C0140 		.word	1073818624
 4240 1bc0 00040040 		.word	1073742848
 4241 1bc4 00080040 		.word	1073743872
 4242 1bc8 000C0040 		.word	1073744896
 4243 1bcc 00100040 		.word	1073745920
 4244 1bd0 00140040 		.word	1073746944
 4245 1bd4 00340140 		.word	1073820672
 4246 1bd8 00400140 		.word	1073823744
 4247 1bdc 00440140 		.word	1073824768
 4248 1be0 00480140 		.word	1073825792
 4249 1be4 00000000 		.word	.LC0
 4250              		.cfi_endproc
 4251              	.LFE47:
 4253              		.align	2
 4254              		.global	TIM_InternalClockConfig
 4255              		.thumb
 4256              		.thumb_func
 4258              	TIM_InternalClockConfig:
 4259              	.LFB48:
 982:../SPL/src/stm32f10x_tim.c **** 
 983:../SPL/src/stm32f10x_tim.c **** /**
 984:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx internal Clock
 985:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15
 986:../SPL/src/stm32f10x_tim.c ****   *         to select the TIM peripheral.
 987:../SPL/src/stm32f10x_tim.c ****   * @retval None
 988:../SPL/src/stm32f10x_tim.c ****   */
 989:../SPL/src/stm32f10x_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
 990:../SPL/src/stm32f10x_tim.c **** {
 4260              		.loc 1 990 0
 4261              		.cfi_startproc
 4262              		@ args = 0, pretend = 0, frame = 8
 4263              		@ frame_needed = 1, uses_anonymous_args = 0
 4264 1be8 80B5     		push	{r7, lr}
 4265              	.LCFI57:
 4266              		.cfi_def_cfa_offset 8
 4267              		.cfi_offset 7, -8
 4268              		.cfi_offset 14, -4
 4269 1bea 82B0     		sub	sp, sp, #8
 4270              	.LCFI58:
 4271              		.cfi_def_cfa_offset 16
 4272 1bec 00AF     		add	r7, sp, #0
 4273              	.LCFI59:
 4274              		.cfi_def_cfa_register 7
 4275 1bee 7860     		str	r0, [r7, #4]
 991:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
 992:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 4276              		.loc 1 992 0
 4277 1bf0 7A68     		ldr	r2, [r7, #4]
 4278 1bf2 1A4B     		ldr	r3, .L173
 4279 1bf4 9A42     		cmp	r2, r3
 4280 1bf6 24D0     		beq	.L172
 4281              		.loc 1 992 0 is_stmt 0 discriminator 1
 4282 1bf8 7B68     		ldr	r3, [r7, #4]
 4283 1bfa B3F1804F 		cmp	r3, #1073741824
 4284 1bfe 20D0     		beq	.L172
 4285              		.loc 1 992 0 discriminator 2
 4286 1c00 7A68     		ldr	r2, [r7, #4]
 4287 1c02 174B     		ldr	r3, .L173+4
 4288 1c04 9A42     		cmp	r2, r3
 4289 1c06 1CD0     		beq	.L172
 4290              		.loc 1 992 0 discriminator 3
 4291 1c08 7A68     		ldr	r2, [r7, #4]
 4292 1c0a 164B     		ldr	r3, .L173+8
 4293 1c0c 9A42     		cmp	r2, r3
 4294 1c0e 18D0     		beq	.L172
 4295              		.loc 1 992 0 discriminator 4
 4296 1c10 7A68     		ldr	r2, [r7, #4]
 4297 1c12 154B     		ldr	r3, .L173+12
 4298 1c14 9A42     		cmp	r2, r3
 4299 1c16 14D0     		beq	.L172
 4300              		.loc 1 992 0 discriminator 5
 4301 1c18 7A68     		ldr	r2, [r7, #4]
 4302 1c1a 144B     		ldr	r3, .L173+16
 4303 1c1c 9A42     		cmp	r2, r3
 4304 1c1e 10D0     		beq	.L172
 4305              		.loc 1 992 0 discriminator 6
 4306 1c20 7A68     		ldr	r2, [r7, #4]
 4307 1c22 134B     		ldr	r3, .L173+20
 4308 1c24 9A42     		cmp	r2, r3
 4309 1c26 0CD0     		beq	.L172
 4310              		.loc 1 992 0 discriminator 7
 4311 1c28 7A68     		ldr	r2, [r7, #4]
 4312 1c2a 124B     		ldr	r3, .L173+24
 4313 1c2c 9A42     		cmp	r2, r3
 4314 1c2e 08D0     		beq	.L172
 4315              		.loc 1 992 0 discriminator 8
 4316 1c30 7A68     		ldr	r2, [r7, #4]
 4317 1c32 114B     		ldr	r3, .L173+28
 4318 1c34 9A42     		cmp	r2, r3
 4319 1c36 04D0     		beq	.L172
 4320              		.loc 1 992 0 discriminator 9
 4321 1c38 1048     		ldr	r0, .L173+32
 4322 1c3a 4FF47871 		mov	r1, #992
 4323 1c3e FFF7FEFF 		bl	assert_failed
 4324              	.L172:
 993:../SPL/src/stm32f10x_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
 994:../SPL/src/stm32f10x_tim.c ****   TIMx->SMCR &=  (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
 4325              		.loc 1 994 0 is_stmt 1
 4326 1c42 7B68     		ldr	r3, [r7, #4]
 4327 1c44 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4328 1c46 9BB2     		uxth	r3, r3
 4329 1c48 23F00703 		bic	r3, r3, #7
 4330 1c4c 9AB2     		uxth	r2, r3
 4331 1c4e 7B68     		ldr	r3, [r7, #4]
 4332 1c50 1A81     		strh	r2, [r3, #8]	@ movhi
 995:../SPL/src/stm32f10x_tim.c **** }
 4333              		.loc 1 995 0
 4334 1c52 07F10807 		add	r7, r7, #8
 4335 1c56 BD46     		mov	sp, r7
 4336 1c58 80BD     		pop	{r7, pc}
 4337              	.L174:
 4338 1c5a 00BF     		.align	2
 4339              	.L173:
 4340 1c5c 002C0140 		.word	1073818624
 4341 1c60 00040040 		.word	1073742848
 4342 1c64 00080040 		.word	1073743872
 4343 1c68 000C0040 		.word	1073744896
 4344 1c6c 00340140 		.word	1073820672
 4345 1c70 004C0140 		.word	1073826816
 4346 1c74 00180040 		.word	1073747968
 4347 1c78 00400140 		.word	1073823744
 4348 1c7c 00000000 		.word	.LC0
 4349              		.cfi_endproc
 4350              	.LFE48:
 4352              		.align	2
 4353              		.global	TIM_ITRxExternalClockConfig
 4354              		.thumb
 4355              		.thumb_func
 4357              	TIM_ITRxExternalClockConfig:
 4358              	.LFB49:
 996:../SPL/src/stm32f10x_tim.c **** 
 997:../SPL/src/stm32f10x_tim.c **** /**
 998:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
 999:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 9, 12 or 15 to select the TIM peripheral.
1000:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ITRSource: Trigger source.
1001:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1002:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR0: Internal Trigger 0
1003:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR1: Internal Trigger 1
1004:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR2: Internal Trigger 2
1005:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR3: Internal Trigger 3
1006:../SPL/src/stm32f10x_tim.c ****   * @retval None
1007:../SPL/src/stm32f10x_tim.c ****   */
1008:../SPL/src/stm32f10x_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
1009:../SPL/src/stm32f10x_tim.c **** {
 4359              		.loc 1 1009 0
 4360              		.cfi_startproc
 4361              		@ args = 0, pretend = 0, frame = 8
 4362              		@ frame_needed = 1, uses_anonymous_args = 0
 4363 1c80 80B5     		push	{r7, lr}
 4364              	.LCFI60:
 4365              		.cfi_def_cfa_offset 8
 4366              		.cfi_offset 7, -8
 4367              		.cfi_offset 14, -4
 4368 1c82 82B0     		sub	sp, sp, #8
 4369              	.LCFI61:
 4370              		.cfi_def_cfa_offset 16
 4371 1c84 00AF     		add	r7, sp, #0
 4372              	.LCFI62:
 4373              		.cfi_def_cfa_register 7
 4374 1c86 7860     		str	r0, [r7, #4]
 4375 1c88 0B46     		mov	r3, r1
 4376 1c8a 7B80     		strh	r3, [r7, #2]	@ movhi
1010:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1011:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 4377              		.loc 1 1011 0
 4378 1c8c 7A68     		ldr	r2, [r7, #4]
 4379 1c8e 254B     		ldr	r3, .L178
 4380 1c90 9A42     		cmp	r2, r3
 4381 1c92 24D0     		beq	.L176
 4382              		.loc 1 1011 0 is_stmt 0 discriminator 1
 4383 1c94 7B68     		ldr	r3, [r7, #4]
 4384 1c96 B3F1804F 		cmp	r3, #1073741824
 4385 1c9a 20D0     		beq	.L176
 4386              		.loc 1 1011 0 discriminator 2
 4387 1c9c 7A68     		ldr	r2, [r7, #4]
 4388 1c9e 224B     		ldr	r3, .L178+4
 4389 1ca0 9A42     		cmp	r2, r3
 4390 1ca2 1CD0     		beq	.L176
 4391              		.loc 1 1011 0 discriminator 3
 4392 1ca4 7A68     		ldr	r2, [r7, #4]
 4393 1ca6 214B     		ldr	r3, .L178+8
 4394 1ca8 9A42     		cmp	r2, r3
 4395 1caa 18D0     		beq	.L176
 4396              		.loc 1 1011 0 discriminator 4
 4397 1cac 7A68     		ldr	r2, [r7, #4]
 4398 1cae 204B     		ldr	r3, .L178+12
 4399 1cb0 9A42     		cmp	r2, r3
 4400 1cb2 14D0     		beq	.L176
 4401              		.loc 1 1011 0 discriminator 5
 4402 1cb4 7A68     		ldr	r2, [r7, #4]
 4403 1cb6 1F4B     		ldr	r3, .L178+16
 4404 1cb8 9A42     		cmp	r2, r3
 4405 1cba 10D0     		beq	.L176
 4406              		.loc 1 1011 0 discriminator 6
 4407 1cbc 7A68     		ldr	r2, [r7, #4]
 4408 1cbe 1E4B     		ldr	r3, .L178+20
 4409 1cc0 9A42     		cmp	r2, r3
 4410 1cc2 0CD0     		beq	.L176
 4411              		.loc 1 1011 0 discriminator 7
 4412 1cc4 7A68     		ldr	r2, [r7, #4]
 4413 1cc6 1D4B     		ldr	r3, .L178+24
 4414 1cc8 9A42     		cmp	r2, r3
 4415 1cca 08D0     		beq	.L176
 4416              		.loc 1 1011 0 discriminator 8
 4417 1ccc 7A68     		ldr	r2, [r7, #4]
 4418 1cce 1C4B     		ldr	r3, .L178+28
 4419 1cd0 9A42     		cmp	r2, r3
 4420 1cd2 04D0     		beq	.L176
 4421              		.loc 1 1011 0 discriminator 9
 4422 1cd4 1B48     		ldr	r0, .L178+32
 4423 1cd6 40F2F331 		movw	r1, #1011
 4424 1cda FFF7FEFF 		bl	assert_failed
 4425              	.L176:
1012:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
 4426              		.loc 1 1012 0 is_stmt 1
 4427 1cde 7B88     		ldrh	r3, [r7, #2]
 4428 1ce0 002B     		cmp	r3, #0
 4429 1ce2 0DD0     		beq	.L177
 4430              		.loc 1 1012 0 is_stmt 0 discriminator 1
 4431 1ce4 7B88     		ldrh	r3, [r7, #2]
 4432 1ce6 102B     		cmp	r3, #16
 4433 1ce8 0AD0     		beq	.L177
 4434              		.loc 1 1012 0 discriminator 2
 4435 1cea 7B88     		ldrh	r3, [r7, #2]
 4436 1cec 202B     		cmp	r3, #32
 4437 1cee 07D0     		beq	.L177
 4438              		.loc 1 1012 0 discriminator 3
 4439 1cf0 7B88     		ldrh	r3, [r7, #2]
 4440 1cf2 302B     		cmp	r3, #48
 4441 1cf4 04D0     		beq	.L177
 4442              		.loc 1 1012 0 discriminator 4
 4443 1cf6 1348     		ldr	r0, .L178+32
 4444 1cf8 4FF47D71 		mov	r1, #1012
 4445 1cfc FFF7FEFF 		bl	assert_failed
 4446              	.L177:
1013:../SPL/src/stm32f10x_tim.c ****   /* Select the Internal Trigger */
1014:../SPL/src/stm32f10x_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
 4447              		.loc 1 1014 0 is_stmt 1
 4448 1d00 7B88     		ldrh	r3, [r7, #2]
 4449 1d02 7868     		ldr	r0, [r7, #4]
 4450 1d04 1946     		mov	r1, r3
 4451 1d06 FFF7FEFF 		bl	TIM_SelectInputTrigger
1015:../SPL/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
1016:../SPL/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 4452              		.loc 1 1016 0
 4453 1d0a 7B68     		ldr	r3, [r7, #4]
 4454 1d0c 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4455 1d0e 9BB2     		uxth	r3, r3
 4456 1d10 43F00703 		orr	r3, r3, #7
 4457 1d14 9AB2     		uxth	r2, r3
 4458 1d16 7B68     		ldr	r3, [r7, #4]
 4459 1d18 1A81     		strh	r2, [r3, #8]	@ movhi
1017:../SPL/src/stm32f10x_tim.c **** }
 4460              		.loc 1 1017 0
 4461 1d1a 07F10807 		add	r7, r7, #8
 4462 1d1e BD46     		mov	sp, r7
 4463 1d20 80BD     		pop	{r7, pc}
 4464              	.L179:
 4465 1d22 00BF     		.align	2
 4466              	.L178:
 4467 1d24 002C0140 		.word	1073818624
 4468 1d28 00040040 		.word	1073742848
 4469 1d2c 00080040 		.word	1073743872
 4470 1d30 000C0040 		.word	1073744896
 4471 1d34 00340140 		.word	1073820672
 4472 1d38 004C0140 		.word	1073826816
 4473 1d3c 00180040 		.word	1073747968
 4474 1d40 00400140 		.word	1073823744
 4475 1d44 00000000 		.word	.LC0
 4476              		.cfi_endproc
 4477              	.LFE49:
 4479              		.align	2
 4480              		.global	TIM_TIxExternalClockConfig
 4481              		.thumb
 4482              		.thumb_func
 4484              	TIM_TIxExternalClockConfig:
 4485              	.LFB50:
1018:../SPL/src/stm32f10x_tim.c **** 
1019:../SPL/src/stm32f10x_tim.c **** /**
1020:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
1021:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 9, 12 or 15 to select the TIM peripheral.
1022:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
1023:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1024:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
1025:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
1026:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
1027:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
1028:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1029:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
1030:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
1031:../SPL/src/stm32f10x_tim.c ****   * @param  ICFilter : specifies the filter value.
1032:../SPL/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x0 and 0xF.
1033:../SPL/src/stm32f10x_tim.c ****   * @retval None
1034:../SPL/src/stm32f10x_tim.c ****   */
1035:../SPL/src/stm32f10x_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
1036:../SPL/src/stm32f10x_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
1037:../SPL/src/stm32f10x_tim.c **** {
 4486              		.loc 1 1037 0
 4487              		.cfi_startproc
 4488              		@ args = 0, pretend = 0, frame = 16
 4489              		@ frame_needed = 1, uses_anonymous_args = 0
 4490 1d48 80B5     		push	{r7, lr}
 4491              	.LCFI63:
 4492              		.cfi_def_cfa_offset 8
 4493              		.cfi_offset 7, -8
 4494              		.cfi_offset 14, -4
 4495 1d4a 84B0     		sub	sp, sp, #16
 4496              	.LCFI64:
 4497              		.cfi_def_cfa_offset 24
 4498 1d4c 00AF     		add	r7, sp, #0
 4499              	.LCFI65:
 4500              		.cfi_def_cfa_register 7
 4501 1d4e F860     		str	r0, [r7, #12]
 4502 1d50 7981     		strh	r1, [r7, #10]	@ movhi
 4503 1d52 3A81     		strh	r2, [r7, #8]	@ movhi
 4504 1d54 FB80     		strh	r3, [r7, #6]	@ movhi
1038:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1039:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 4505              		.loc 1 1039 0
 4506 1d56 FA68     		ldr	r2, [r7, #12]
 4507 1d58 364B     		ldr	r3, .L187
 4508 1d5a 9A42     		cmp	r2, r3
 4509 1d5c 24D0     		beq	.L181
 4510              		.loc 1 1039 0 is_stmt 0 discriminator 1
 4511 1d5e FB68     		ldr	r3, [r7, #12]
 4512 1d60 B3F1804F 		cmp	r3, #1073741824
 4513 1d64 20D0     		beq	.L181
 4514              		.loc 1 1039 0 discriminator 2
 4515 1d66 FA68     		ldr	r2, [r7, #12]
 4516 1d68 334B     		ldr	r3, .L187+4
 4517 1d6a 9A42     		cmp	r2, r3
 4518 1d6c 1CD0     		beq	.L181
 4519              		.loc 1 1039 0 discriminator 3
 4520 1d6e FA68     		ldr	r2, [r7, #12]
 4521 1d70 324B     		ldr	r3, .L187+8
 4522 1d72 9A42     		cmp	r2, r3
 4523 1d74 18D0     		beq	.L181
 4524              		.loc 1 1039 0 discriminator 4
 4525 1d76 FA68     		ldr	r2, [r7, #12]
 4526 1d78 314B     		ldr	r3, .L187+12
 4527 1d7a 9A42     		cmp	r2, r3
 4528 1d7c 14D0     		beq	.L181
 4529              		.loc 1 1039 0 discriminator 5
 4530 1d7e FA68     		ldr	r2, [r7, #12]
 4531 1d80 304B     		ldr	r3, .L187+16
 4532 1d82 9A42     		cmp	r2, r3
 4533 1d84 10D0     		beq	.L181
 4534              		.loc 1 1039 0 discriminator 6
 4535 1d86 FA68     		ldr	r2, [r7, #12]
 4536 1d88 2F4B     		ldr	r3, .L187+20
 4537 1d8a 9A42     		cmp	r2, r3
 4538 1d8c 0CD0     		beq	.L181
 4539              		.loc 1 1039 0 discriminator 7
 4540 1d8e FA68     		ldr	r2, [r7, #12]
 4541 1d90 2E4B     		ldr	r3, .L187+24
 4542 1d92 9A42     		cmp	r2, r3
 4543 1d94 08D0     		beq	.L181
 4544              		.loc 1 1039 0 discriminator 8
 4545 1d96 FA68     		ldr	r2, [r7, #12]
 4546 1d98 2D4B     		ldr	r3, .L187+28
 4547 1d9a 9A42     		cmp	r2, r3
 4548 1d9c 04D0     		beq	.L181
 4549              		.loc 1 1039 0 discriminator 9
 4550 1d9e 2D48     		ldr	r0, .L187+32
 4551 1da0 40F20F41 		movw	r1, #1039
 4552 1da4 FFF7FEFF 		bl	assert_failed
 4553              	.L181:
1040:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_TIXCLK_SOURCE(TIM_TIxExternalCLKSource));
 4554              		.loc 1 1040 0 is_stmt 1
 4555 1da8 7B89     		ldrh	r3, [r7, #10]
 4556 1daa 502B     		cmp	r3, #80
 4557 1dac 0AD0     		beq	.L182
 4558              		.loc 1 1040 0 is_stmt 0 discriminator 1
 4559 1dae 7B89     		ldrh	r3, [r7, #10]
 4560 1db0 602B     		cmp	r3, #96
 4561 1db2 07D0     		beq	.L182
 4562              		.loc 1 1040 0 discriminator 2
 4563 1db4 7B89     		ldrh	r3, [r7, #10]
 4564 1db6 402B     		cmp	r3, #64
 4565 1db8 04D0     		beq	.L182
 4566              		.loc 1 1040 0 discriminator 3
 4567 1dba 2648     		ldr	r0, .L187+32
 4568 1dbc 4FF48261 		mov	r1, #1040
 4569 1dc0 FFF7FEFF 		bl	assert_failed
 4570              	.L182:
1041:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
 4571              		.loc 1 1041 0 is_stmt 1
 4572 1dc4 3B89     		ldrh	r3, [r7, #8]
 4573 1dc6 002B     		cmp	r3, #0
 4574 1dc8 07D0     		beq	.L183
 4575              		.loc 1 1041 0 is_stmt 0 discriminator 1
 4576 1dca 3B89     		ldrh	r3, [r7, #8]
 4577 1dcc 022B     		cmp	r3, #2
 4578 1dce 04D0     		beq	.L183
 4579              		.loc 1 1041 0 discriminator 2
 4580 1dd0 2048     		ldr	r0, .L187+32
 4581 1dd2 40F21141 		movw	r1, #1041
 4582 1dd6 FFF7FEFF 		bl	assert_failed
 4583              	.L183:
1042:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
 4584              		.loc 1 1042 0 is_stmt 1
 4585 1dda FB88     		ldrh	r3, [r7, #6]
 4586 1ddc 0F2B     		cmp	r3, #15
 4587 1dde 04D9     		bls	.L184
 4588              		.loc 1 1042 0 is_stmt 0 discriminator 1
 4589 1de0 1C48     		ldr	r0, .L187+32
 4590 1de2 40F21241 		movw	r1, #1042
 4591 1de6 FFF7FEFF 		bl	assert_failed
 4592              	.L184:
1043:../SPL/src/stm32f10x_tim.c ****   /* Configure the Timer Input Clock Source */
1044:../SPL/src/stm32f10x_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
 4593              		.loc 1 1044 0 is_stmt 1
 4594 1dea 7B89     		ldrh	r3, [r7, #10]
 4595 1dec 602B     		cmp	r3, #96
 4596 1dee 08D1     		bne	.L185
1045:../SPL/src/stm32f10x_tim.c ****   {
1046:../SPL/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 4597              		.loc 1 1046 0
 4598 1df0 3A89     		ldrh	r2, [r7, #8]
 4599 1df2 FB88     		ldrh	r3, [r7, #6]
 4600 1df4 F868     		ldr	r0, [r7, #12]
 4601 1df6 1146     		mov	r1, r2
 4602 1df8 4FF00102 		mov	r2, #1
 4603 1dfc 03F0E6FB 		bl	TI2_Config
 4604 1e00 07E0     		b	.L186
 4605              	.L185:
1047:../SPL/src/stm32f10x_tim.c ****   }
1048:../SPL/src/stm32f10x_tim.c ****   else
1049:../SPL/src/stm32f10x_tim.c ****   {
1050:../SPL/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 4606              		.loc 1 1050 0
 4607 1e02 3A89     		ldrh	r2, [r7, #8]
 4608 1e04 FB88     		ldrh	r3, [r7, #6]
 4609 1e06 F868     		ldr	r0, [r7, #12]
 4610 1e08 1146     		mov	r1, r2
 4611 1e0a 4FF00102 		mov	r2, #1
 4612 1e0e 03F06FFB 		bl	TI1_Config
 4613              	.L186:
1051:../SPL/src/stm32f10x_tim.c ****   }
1052:../SPL/src/stm32f10x_tim.c ****   /* Select the Trigger source */
1053:../SPL/src/stm32f10x_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
 4614              		.loc 1 1053 0
 4615 1e12 7B89     		ldrh	r3, [r7, #10]
 4616 1e14 F868     		ldr	r0, [r7, #12]
 4617 1e16 1946     		mov	r1, r3
 4618 1e18 FFF7FEFF 		bl	TIM_SelectInputTrigger
1054:../SPL/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
1055:../SPL/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 4619              		.loc 1 1055 0
 4620 1e1c FB68     		ldr	r3, [r7, #12]
 4621 1e1e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4622 1e20 9BB2     		uxth	r3, r3
 4623 1e22 43F00703 		orr	r3, r3, #7
 4624 1e26 9AB2     		uxth	r2, r3
 4625 1e28 FB68     		ldr	r3, [r7, #12]
 4626 1e2a 1A81     		strh	r2, [r3, #8]	@ movhi
1056:../SPL/src/stm32f10x_tim.c **** }
 4627              		.loc 1 1056 0
 4628 1e2c 07F11007 		add	r7, r7, #16
 4629 1e30 BD46     		mov	sp, r7
 4630 1e32 80BD     		pop	{r7, pc}
 4631              	.L188:
 4632              		.align	2
 4633              	.L187:
 4634 1e34 002C0140 		.word	1073818624
 4635 1e38 00040040 		.word	1073742848
 4636 1e3c 00080040 		.word	1073743872
 4637 1e40 000C0040 		.word	1073744896
 4638 1e44 00340140 		.word	1073820672
 4639 1e48 004C0140 		.word	1073826816
 4640 1e4c 00180040 		.word	1073747968
 4641 1e50 00400140 		.word	1073823744
 4642 1e54 00000000 		.word	.LC0
 4643              		.cfi_endproc
 4644              	.LFE50:
 4646              		.align	2
 4647              		.global	TIM_ETRClockMode1Config
 4648              		.thumb
 4649              		.thumb_func
 4651              	TIM_ETRClockMode1Config:
 4652              	.LFB51:
1057:../SPL/src/stm32f10x_tim.c **** 
1058:../SPL/src/stm32f10x_tim.c **** /**
1059:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the External clock Mode1
1060:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1061:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
1062:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1063:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
1064:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
1065:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
1066:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
1067:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
1068:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1069:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
1070:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
1071:../SPL/src/stm32f10x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
1072:../SPL/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
1073:../SPL/src/stm32f10x_tim.c ****   * @retval None
1074:../SPL/src/stm32f10x_tim.c ****   */
1075:../SPL/src/stm32f10x_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPo
1076:../SPL/src/stm32f10x_tim.c ****                              uint16_t ExtTRGFilter)
1077:../SPL/src/stm32f10x_tim.c **** {
 4653              		.loc 1 1077 0
 4654              		.cfi_startproc
 4655              		@ args = 0, pretend = 0, frame = 24
 4656              		@ frame_needed = 1, uses_anonymous_args = 0
 4657 1e58 80B5     		push	{r7, lr}
 4658              	.LCFI66:
 4659              		.cfi_def_cfa_offset 8
 4660              		.cfi_offset 7, -8
 4661              		.cfi_offset 14, -4
 4662 1e5a 86B0     		sub	sp, sp, #24
 4663              	.LCFI67:
 4664              		.cfi_def_cfa_offset 32
 4665 1e5c 00AF     		add	r7, sp, #0
 4666              	.LCFI68:
 4667              		.cfi_def_cfa_register 7
 4668 1e5e F860     		str	r0, [r7, #12]
 4669 1e60 7981     		strh	r1, [r7, #10]	@ movhi
 4670 1e62 3A81     		strh	r2, [r7, #8]	@ movhi
 4671 1e64 FB80     		strh	r3, [r7, #6]	@ movhi
1078:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 4672              		.loc 1 1078 0
 4673 1e66 4FF00003 		mov	r3, #0
 4674 1e6a FB82     		strh	r3, [r7, #22]	@ movhi
1079:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1080:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 4675              		.loc 1 1080 0
 4676 1e6c FA68     		ldr	r2, [r7, #12]
 4677 1e6e 324B     		ldr	r3, .L194
 4678 1e70 9A42     		cmp	r2, r3
 4679 1e72 18D0     		beq	.L190
 4680              		.loc 1 1080 0 is_stmt 0 discriminator 1
 4681 1e74 FB68     		ldr	r3, [r7, #12]
 4682 1e76 B3F1804F 		cmp	r3, #1073741824
 4683 1e7a 14D0     		beq	.L190
 4684              		.loc 1 1080 0 discriminator 2
 4685 1e7c FA68     		ldr	r2, [r7, #12]
 4686 1e7e 2F4B     		ldr	r3, .L194+4
 4687 1e80 9A42     		cmp	r2, r3
 4688 1e82 10D0     		beq	.L190
 4689              		.loc 1 1080 0 discriminator 3
 4690 1e84 FA68     		ldr	r2, [r7, #12]
 4691 1e86 2E4B     		ldr	r3, .L194+8
 4692 1e88 9A42     		cmp	r2, r3
 4693 1e8a 0CD0     		beq	.L190
 4694              		.loc 1 1080 0 discriminator 4
 4695 1e8c FA68     		ldr	r2, [r7, #12]
 4696 1e8e 2D4B     		ldr	r3, .L194+12
 4697 1e90 9A42     		cmp	r2, r3
 4698 1e92 08D0     		beq	.L190
 4699              		.loc 1 1080 0 discriminator 5
 4700 1e94 FA68     		ldr	r2, [r7, #12]
 4701 1e96 2C4B     		ldr	r3, .L194+16
 4702 1e98 9A42     		cmp	r2, r3
 4703 1e9a 04D0     		beq	.L190
 4704              		.loc 1 1080 0 discriminator 6
 4705 1e9c 2B48     		ldr	r0, .L194+20
 4706 1e9e 4FF48761 		mov	r1, #1080
 4707 1ea2 FFF7FEFF 		bl	assert_failed
 4708              	.L190:
1081:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
 4709              		.loc 1 1081 0 is_stmt 1
 4710 1ea6 7B89     		ldrh	r3, [r7, #10]
 4711 1ea8 002B     		cmp	r3, #0
 4712 1eaa 10D0     		beq	.L191
 4713              		.loc 1 1081 0 is_stmt 0 discriminator 1
 4714 1eac 7B89     		ldrh	r3, [r7, #10]
 4715 1eae B3F5805F 		cmp	r3, #4096
 4716 1eb2 0CD0     		beq	.L191
 4717              		.loc 1 1081 0 discriminator 2
 4718 1eb4 7B89     		ldrh	r3, [r7, #10]
 4719 1eb6 B3F5005F 		cmp	r3, #8192
 4720 1eba 08D0     		beq	.L191
 4721              		.loc 1 1081 0 discriminator 3
 4722 1ebc 7B89     		ldrh	r3, [r7, #10]
 4723 1ebe B3F5405F 		cmp	r3, #12288
 4724 1ec2 04D0     		beq	.L191
 4725              		.loc 1 1081 0 discriminator 4
 4726 1ec4 2148     		ldr	r0, .L194+20
 4727 1ec6 40F23941 		movw	r1, #1081
 4728 1eca FFF7FEFF 		bl	assert_failed
 4729              	.L191:
1082:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
 4730              		.loc 1 1082 0 is_stmt 1
 4731 1ece 3B89     		ldrh	r3, [r7, #8]
 4732 1ed0 B3F5004F 		cmp	r3, #32768
 4733 1ed4 07D0     		beq	.L192
 4734              		.loc 1 1082 0 is_stmt 0 discriminator 1
 4735 1ed6 3B89     		ldrh	r3, [r7, #8]
 4736 1ed8 002B     		cmp	r3, #0
 4737 1eda 04D0     		beq	.L192
 4738              		.loc 1 1082 0 discriminator 2
 4739 1edc 1B48     		ldr	r0, .L194+20
 4740 1ede 40F23A41 		movw	r1, #1082
 4741 1ee2 FFF7FEFF 		bl	assert_failed
 4742              	.L192:
1083:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
 4743              		.loc 1 1083 0 is_stmt 1
 4744 1ee6 FB88     		ldrh	r3, [r7, #6]
 4745 1ee8 0F2B     		cmp	r3, #15
 4746 1eea 04D9     		bls	.L193
 4747              		.loc 1 1083 0 is_stmt 0 discriminator 1
 4748 1eec 1748     		ldr	r0, .L194+20
 4749 1eee 40F23B41 		movw	r1, #1083
 4750 1ef2 FFF7FEFF 		bl	assert_failed
 4751              	.L193:
1084:../SPL/src/stm32f10x_tim.c ****   /* Configure the ETR Clock source */
1085:../SPL/src/stm32f10x_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 4752              		.loc 1 1085 0 is_stmt 1
 4753 1ef6 7989     		ldrh	r1, [r7, #10]
 4754 1ef8 3A89     		ldrh	r2, [r7, #8]
 4755 1efa FB88     		ldrh	r3, [r7, #6]
 4756 1efc F868     		ldr	r0, [r7, #12]
 4757 1efe FFF7FEFF 		bl	TIM_ETRConfig
1086:../SPL/src/stm32f10x_tim.c ****   
1087:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
1088:../SPL/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
 4758              		.loc 1 1088 0
 4759 1f02 FB68     		ldr	r3, [r7, #12]
 4760 1f04 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4761 1f06 FB82     		strh	r3, [r7, #22]	@ movhi
1089:../SPL/src/stm32f10x_tim.c ****   /* Reset the SMS Bits */
1090:../SPL/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
 4762              		.loc 1 1090 0
 4763 1f08 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 4764 1f0a 23F00703 		bic	r3, r3, #7
 4765 1f0e FB82     		strh	r3, [r7, #22]	@ movhi
1091:../SPL/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
1092:../SPL/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
 4766              		.loc 1 1092 0
 4767 1f10 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 4768 1f12 43F00703 		orr	r3, r3, #7
 4769 1f16 FB82     		strh	r3, [r7, #22]	@ movhi
1093:../SPL/src/stm32f10x_tim.c ****   /* Select the Trigger selection : ETRF */
1094:../SPL/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_TS));
 4770              		.loc 1 1094 0
 4771 1f18 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 4772 1f1a 23F07003 		bic	r3, r3, #112
 4773 1f1e FB82     		strh	r3, [r7, #22]	@ movhi
1095:../SPL/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
 4774              		.loc 1 1095 0
 4775 1f20 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 4776 1f22 43F07003 		orr	r3, r3, #112
 4777 1f26 FB82     		strh	r3, [r7, #22]	@ movhi
1096:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1097:../SPL/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
 4778              		.loc 1 1097 0
 4779 1f28 FB68     		ldr	r3, [r7, #12]
 4780 1f2a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 4781 1f2c 1A81     		strh	r2, [r3, #8]	@ movhi
1098:../SPL/src/stm32f10x_tim.c **** }
 4782              		.loc 1 1098 0
 4783 1f2e 07F11807 		add	r7, r7, #24
 4784 1f32 BD46     		mov	sp, r7
 4785 1f34 80BD     		pop	{r7, pc}
 4786              	.L195:
 4787 1f36 00BF     		.align	2
 4788              	.L194:
 4789 1f38 002C0140 		.word	1073818624
 4790 1f3c 00040040 		.word	1073742848
 4791 1f40 00080040 		.word	1073743872
 4792 1f44 000C0040 		.word	1073744896
 4793 1f48 00340140 		.word	1073820672
 4794 1f4c 00000000 		.word	.LC0
 4795              		.cfi_endproc
 4796              	.LFE51:
 4798              		.align	2
 4799              		.global	TIM_ETRClockMode2Config
 4800              		.thumb
 4801              		.thumb_func
 4803              	TIM_ETRClockMode2Config:
 4804              	.LFB52:
1099:../SPL/src/stm32f10x_tim.c **** 
1100:../SPL/src/stm32f10x_tim.c **** /**
1101:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the External clock Mode2
1102:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1103:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
1104:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1105:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
1106:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
1107:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
1108:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
1109:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
1110:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1111:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
1112:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
1113:../SPL/src/stm32f10x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
1114:../SPL/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
1115:../SPL/src/stm32f10x_tim.c ****   * @retval None
1116:../SPL/src/stm32f10x_tim.c ****   */
1117:../SPL/src/stm32f10x_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
1118:../SPL/src/stm32f10x_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
1119:../SPL/src/stm32f10x_tim.c **** {
 4805              		.loc 1 1119 0
 4806              		.cfi_startproc
 4807              		@ args = 0, pretend = 0, frame = 16
 4808              		@ frame_needed = 1, uses_anonymous_args = 0
 4809 1f50 80B5     		push	{r7, lr}
 4810              	.LCFI69:
 4811              		.cfi_def_cfa_offset 8
 4812              		.cfi_offset 7, -8
 4813              		.cfi_offset 14, -4
 4814 1f52 84B0     		sub	sp, sp, #16
 4815              	.LCFI70:
 4816              		.cfi_def_cfa_offset 24
 4817 1f54 00AF     		add	r7, sp, #0
 4818              	.LCFI71:
 4819              		.cfi_def_cfa_register 7
 4820 1f56 F860     		str	r0, [r7, #12]
 4821 1f58 7981     		strh	r1, [r7, #10]	@ movhi
 4822 1f5a 3A81     		strh	r2, [r7, #8]	@ movhi
 4823 1f5c FB80     		strh	r3, [r7, #6]	@ movhi
1120:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1121:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 4824              		.loc 1 1121 0
 4825 1f5e FA68     		ldr	r2, [r7, #12]
 4826 1f60 2A4B     		ldr	r3, .L201
 4827 1f62 9A42     		cmp	r2, r3
 4828 1f64 18D0     		beq	.L197
 4829              		.loc 1 1121 0 is_stmt 0 discriminator 1
 4830 1f66 FB68     		ldr	r3, [r7, #12]
 4831 1f68 B3F1804F 		cmp	r3, #1073741824
 4832 1f6c 14D0     		beq	.L197
 4833              		.loc 1 1121 0 discriminator 2
 4834 1f6e FA68     		ldr	r2, [r7, #12]
 4835 1f70 274B     		ldr	r3, .L201+4
 4836 1f72 9A42     		cmp	r2, r3
 4837 1f74 10D0     		beq	.L197
 4838              		.loc 1 1121 0 discriminator 3
 4839 1f76 FA68     		ldr	r2, [r7, #12]
 4840 1f78 264B     		ldr	r3, .L201+8
 4841 1f7a 9A42     		cmp	r2, r3
 4842 1f7c 0CD0     		beq	.L197
 4843              		.loc 1 1121 0 discriminator 4
 4844 1f7e FA68     		ldr	r2, [r7, #12]
 4845 1f80 254B     		ldr	r3, .L201+12
 4846 1f82 9A42     		cmp	r2, r3
 4847 1f84 08D0     		beq	.L197
 4848              		.loc 1 1121 0 discriminator 5
 4849 1f86 FA68     		ldr	r2, [r7, #12]
 4850 1f88 244B     		ldr	r3, .L201+16
 4851 1f8a 9A42     		cmp	r2, r3
 4852 1f8c 04D0     		beq	.L197
 4853              		.loc 1 1121 0 discriminator 6
 4854 1f8e 2448     		ldr	r0, .L201+20
 4855 1f90 40F26141 		movw	r1, #1121
 4856 1f94 FFF7FEFF 		bl	assert_failed
 4857              	.L197:
1122:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
 4858              		.loc 1 1122 0 is_stmt 1
 4859 1f98 7B89     		ldrh	r3, [r7, #10]
 4860 1f9a 002B     		cmp	r3, #0
 4861 1f9c 10D0     		beq	.L198
 4862              		.loc 1 1122 0 is_stmt 0 discriminator 1
 4863 1f9e 7B89     		ldrh	r3, [r7, #10]
 4864 1fa0 B3F5805F 		cmp	r3, #4096
 4865 1fa4 0CD0     		beq	.L198
 4866              		.loc 1 1122 0 discriminator 2
 4867 1fa6 7B89     		ldrh	r3, [r7, #10]
 4868 1fa8 B3F5005F 		cmp	r3, #8192
 4869 1fac 08D0     		beq	.L198
 4870              		.loc 1 1122 0 discriminator 3
 4871 1fae 7B89     		ldrh	r3, [r7, #10]
 4872 1fb0 B3F5405F 		cmp	r3, #12288
 4873 1fb4 04D0     		beq	.L198
 4874              		.loc 1 1122 0 discriminator 4
 4875 1fb6 1A48     		ldr	r0, .L201+20
 4876 1fb8 40F26241 		movw	r1, #1122
 4877 1fbc FFF7FEFF 		bl	assert_failed
 4878              	.L198:
1123:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
 4879              		.loc 1 1123 0 is_stmt 1
 4880 1fc0 3B89     		ldrh	r3, [r7, #8]
 4881 1fc2 B3F5004F 		cmp	r3, #32768
 4882 1fc6 07D0     		beq	.L199
 4883              		.loc 1 1123 0 is_stmt 0 discriminator 1
 4884 1fc8 3B89     		ldrh	r3, [r7, #8]
 4885 1fca 002B     		cmp	r3, #0
 4886 1fcc 04D0     		beq	.L199
 4887              		.loc 1 1123 0 discriminator 2
 4888 1fce 1448     		ldr	r0, .L201+20
 4889 1fd0 40F26341 		movw	r1, #1123
 4890 1fd4 FFF7FEFF 		bl	assert_failed
 4891              	.L199:
1124:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
 4892              		.loc 1 1124 0 is_stmt 1
 4893 1fd8 FB88     		ldrh	r3, [r7, #6]
 4894 1fda 0F2B     		cmp	r3, #15
 4895 1fdc 04D9     		bls	.L200
 4896              		.loc 1 1124 0 is_stmt 0 discriminator 1
 4897 1fde 1048     		ldr	r0, .L201+20
 4898 1fe0 40F26441 		movw	r1, #1124
 4899 1fe4 FFF7FEFF 		bl	assert_failed
 4900              	.L200:
1125:../SPL/src/stm32f10x_tim.c ****   /* Configure the ETR Clock source */
1126:../SPL/src/stm32f10x_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 4901              		.loc 1 1126 0 is_stmt 1
 4902 1fe8 7989     		ldrh	r1, [r7, #10]
 4903 1fea 3A89     		ldrh	r2, [r7, #8]
 4904 1fec FB88     		ldrh	r3, [r7, #6]
 4905 1fee F868     		ldr	r0, [r7, #12]
 4906 1ff0 FFF7FEFF 		bl	TIM_ETRConfig
1127:../SPL/src/stm32f10x_tim.c ****   /* Enable the External clock mode2 */
1128:../SPL/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
 4907              		.loc 1 1128 0
 4908 1ff4 FB68     		ldr	r3, [r7, #12]
 4909 1ff6 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4910 1ff8 9BB2     		uxth	r3, r3
 4911 1ffa 43F48043 		orr	r3, r3, #16384
 4912 1ffe 9AB2     		uxth	r2, r3
 4913 2000 FB68     		ldr	r3, [r7, #12]
 4914 2002 1A81     		strh	r2, [r3, #8]	@ movhi
1129:../SPL/src/stm32f10x_tim.c **** }
 4915              		.loc 1 1129 0
 4916 2004 07F11007 		add	r7, r7, #16
 4917 2008 BD46     		mov	sp, r7
 4918 200a 80BD     		pop	{r7, pc}
 4919              	.L202:
 4920              		.align	2
 4921              	.L201:
 4922 200c 002C0140 		.word	1073818624
 4923 2010 00040040 		.word	1073742848
 4924 2014 00080040 		.word	1073743872
 4925 2018 000C0040 		.word	1073744896
 4926 201c 00340140 		.word	1073820672
 4927 2020 00000000 		.word	.LC0
 4928              		.cfi_endproc
 4929              	.LFE52:
 4931              		.align	2
 4932              		.global	TIM_ETRConfig
 4933              		.thumb
 4934              		.thumb_func
 4936              	TIM_ETRConfig:
 4937              	.LFB53:
1130:../SPL/src/stm32f10x_tim.c **** 
1131:../SPL/src/stm32f10x_tim.c **** /**
1132:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
1133:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1134:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
1135:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1136:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
1137:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
1138:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
1139:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
1140:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
1141:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1142:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
1143:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
1144:../SPL/src/stm32f10x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
1145:../SPL/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
1146:../SPL/src/stm32f10x_tim.c ****   * @retval None
1147:../SPL/src/stm32f10x_tim.c ****   */
1148:../SPL/src/stm32f10x_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity,
1149:../SPL/src/stm32f10x_tim.c ****                    uint16_t ExtTRGFilter)
1150:../SPL/src/stm32f10x_tim.c **** {
 4938              		.loc 1 1150 0
 4939              		.cfi_startproc
 4940              		@ args = 0, pretend = 0, frame = 24
 4941              		@ frame_needed = 1, uses_anonymous_args = 0
 4942 2024 80B5     		push	{r7, lr}
 4943              	.LCFI72:
 4944              		.cfi_def_cfa_offset 8
 4945              		.cfi_offset 7, -8
 4946              		.cfi_offset 14, -4
 4947 2026 86B0     		sub	sp, sp, #24
 4948              	.LCFI73:
 4949              		.cfi_def_cfa_offset 32
 4950 2028 00AF     		add	r7, sp, #0
 4951              	.LCFI74:
 4952              		.cfi_def_cfa_register 7
 4953 202a F860     		str	r0, [r7, #12]
 4954 202c 7981     		strh	r1, [r7, #10]	@ movhi
 4955 202e 3A81     		strh	r2, [r7, #8]	@ movhi
 4956 2030 FB80     		strh	r3, [r7, #6]	@ movhi
1151:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 4957              		.loc 1 1151 0
 4958 2032 4FF00003 		mov	r3, #0
 4959 2036 FB82     		strh	r3, [r7, #22]	@ movhi
1152:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1153:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 4960              		.loc 1 1153 0
 4961 2038 FA68     		ldr	r2, [r7, #12]
 4962 203a 2F4B     		ldr	r3, .L208
 4963 203c 9A42     		cmp	r2, r3
 4964 203e 18D0     		beq	.L204
 4965              		.loc 1 1153 0 is_stmt 0 discriminator 1
 4966 2040 FB68     		ldr	r3, [r7, #12]
 4967 2042 B3F1804F 		cmp	r3, #1073741824
 4968 2046 14D0     		beq	.L204
 4969              		.loc 1 1153 0 discriminator 2
 4970 2048 FA68     		ldr	r2, [r7, #12]
 4971 204a 2C4B     		ldr	r3, .L208+4
 4972 204c 9A42     		cmp	r2, r3
 4973 204e 10D0     		beq	.L204
 4974              		.loc 1 1153 0 discriminator 3
 4975 2050 FA68     		ldr	r2, [r7, #12]
 4976 2052 2B4B     		ldr	r3, .L208+8
 4977 2054 9A42     		cmp	r2, r3
 4978 2056 0CD0     		beq	.L204
 4979              		.loc 1 1153 0 discriminator 4
 4980 2058 FA68     		ldr	r2, [r7, #12]
 4981 205a 2A4B     		ldr	r3, .L208+12
 4982 205c 9A42     		cmp	r2, r3
 4983 205e 08D0     		beq	.L204
 4984              		.loc 1 1153 0 discriminator 5
 4985 2060 FA68     		ldr	r2, [r7, #12]
 4986 2062 294B     		ldr	r3, .L208+16
 4987 2064 9A42     		cmp	r2, r3
 4988 2066 04D0     		beq	.L204
 4989              		.loc 1 1153 0 discriminator 6
 4990 2068 2848     		ldr	r0, .L208+20
 4991 206a 40F28141 		movw	r1, #1153
 4992 206e FFF7FEFF 		bl	assert_failed
 4993              	.L204:
1154:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
 4994              		.loc 1 1154 0 is_stmt 1
 4995 2072 7B89     		ldrh	r3, [r7, #10]
 4996 2074 002B     		cmp	r3, #0
 4997 2076 10D0     		beq	.L205
 4998              		.loc 1 1154 0 is_stmt 0 discriminator 1
 4999 2078 7B89     		ldrh	r3, [r7, #10]
 5000 207a B3F5805F 		cmp	r3, #4096
 5001 207e 0CD0     		beq	.L205
 5002              		.loc 1 1154 0 discriminator 2
 5003 2080 7B89     		ldrh	r3, [r7, #10]
 5004 2082 B3F5005F 		cmp	r3, #8192
 5005 2086 08D0     		beq	.L205
 5006              		.loc 1 1154 0 discriminator 3
 5007 2088 7B89     		ldrh	r3, [r7, #10]
 5008 208a B3F5405F 		cmp	r3, #12288
 5009 208e 04D0     		beq	.L205
 5010              		.loc 1 1154 0 discriminator 4
 5011 2090 1E48     		ldr	r0, .L208+20
 5012 2092 40F28241 		movw	r1, #1154
 5013 2096 FFF7FEFF 		bl	assert_failed
 5014              	.L205:
1155:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
 5015              		.loc 1 1155 0 is_stmt 1
 5016 209a 3B89     		ldrh	r3, [r7, #8]
 5017 209c B3F5004F 		cmp	r3, #32768
 5018 20a0 07D0     		beq	.L206
 5019              		.loc 1 1155 0 is_stmt 0 discriminator 1
 5020 20a2 3B89     		ldrh	r3, [r7, #8]
 5021 20a4 002B     		cmp	r3, #0
 5022 20a6 04D0     		beq	.L206
 5023              		.loc 1 1155 0 discriminator 2
 5024 20a8 1848     		ldr	r0, .L208+20
 5025 20aa 40F28341 		movw	r1, #1155
 5026 20ae FFF7FEFF 		bl	assert_failed
 5027              	.L206:
1156:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
 5028              		.loc 1 1156 0 is_stmt 1
 5029 20b2 FB88     		ldrh	r3, [r7, #6]
 5030 20b4 0F2B     		cmp	r3, #15
 5031 20b6 04D9     		bls	.L207
 5032              		.loc 1 1156 0 is_stmt 0 discriminator 1
 5033 20b8 1448     		ldr	r0, .L208+20
 5034 20ba 40F28441 		movw	r1, #1156
 5035 20be FFF7FEFF 		bl	assert_failed
 5036              	.L207:
1157:../SPL/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
 5037              		.loc 1 1157 0 is_stmt 1
 5038 20c2 FB68     		ldr	r3, [r7, #12]
 5039 20c4 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5040 20c6 FB82     		strh	r3, [r7, #22]	@ movhi
1158:../SPL/src/stm32f10x_tim.c ****   /* Reset the ETR Bits */
1159:../SPL/src/stm32f10x_tim.c ****   tmpsmcr &= SMCR_ETR_Mask;
 5041              		.loc 1 1159 0
 5042 20c8 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5043 20ca DBB2     		uxtb	r3, r3
 5044 20cc FB82     		strh	r3, [r7, #22]	@ movhi
1160:../SPL/src/stm32f10x_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
1161:../SPL/src/stm32f10x_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
 5045              		.loc 1 1161 0
 5046 20ce FB88     		ldrh	r3, [r7, #6]	@ movhi
 5047 20d0 4FEA0323 		lsl	r3, r3, #8
 5048 20d4 9AB2     		uxth	r2, r3
 5049 20d6 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5050 20d8 1343     		orrs	r3, r3, r2
 5051 20da 9AB2     		uxth	r2, r3
 5052 20dc 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5053 20de 1343     		orrs	r3, r3, r2
 5054 20e0 9AB2     		uxth	r2, r3
 5055 20e2 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5056 20e4 1343     		orrs	r3, r3, r2
 5057 20e6 FB82     		strh	r3, [r7, #22]	@ movhi
1162:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1163:../SPL/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
 5058              		.loc 1 1163 0
 5059 20e8 FB68     		ldr	r3, [r7, #12]
 5060 20ea FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5061 20ec 1A81     		strh	r2, [r3, #8]	@ movhi
1164:../SPL/src/stm32f10x_tim.c **** }
 5062              		.loc 1 1164 0
 5063 20ee 07F11807 		add	r7, r7, #24
 5064 20f2 BD46     		mov	sp, r7
 5065 20f4 80BD     		pop	{r7, pc}
 5066              	.L209:
 5067 20f6 00BF     		.align	2
 5068              	.L208:
 5069 20f8 002C0140 		.word	1073818624
 5070 20fc 00040040 		.word	1073742848
 5071 2100 00080040 		.word	1073743872
 5072 2104 000C0040 		.word	1073744896
 5073 2108 00340140 		.word	1073820672
 5074 210c 00000000 		.word	.LC0
 5075              		.cfi_endproc
 5076              	.LFE53:
 5078              		.align	2
 5079              		.global	TIM_PrescalerConfig
 5080              		.thumb
 5081              		.thumb_func
 5083              	TIM_PrescalerConfig:
 5084              	.LFB54:
1165:../SPL/src/stm32f10x_tim.c **** 
1166:../SPL/src/stm32f10x_tim.c **** /**
1167:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Prescaler.
1168:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
1169:../SPL/src/stm32f10x_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
1170:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
1171:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1172:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
1173:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediately.
1174:../SPL/src/stm32f10x_tim.c ****   * @retval None
1175:../SPL/src/stm32f10x_tim.c ****   */
1176:../SPL/src/stm32f10x_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
1177:../SPL/src/stm32f10x_tim.c **** {
 5085              		.loc 1 1177 0
 5086              		.cfi_startproc
 5087              		@ args = 0, pretend = 0, frame = 8
 5088              		@ frame_needed = 1, uses_anonymous_args = 0
 5089 2110 80B5     		push	{r7, lr}
 5090              	.LCFI75:
 5091              		.cfi_def_cfa_offset 8
 5092              		.cfi_offset 7, -8
 5093              		.cfi_offset 14, -4
 5094 2112 82B0     		sub	sp, sp, #8
 5095              	.LCFI76:
 5096              		.cfi_def_cfa_offset 16
 5097 2114 00AF     		add	r7, sp, #0
 5098              	.LCFI77:
 5099              		.cfi_def_cfa_register 7
 5100 2116 7860     		str	r0, [r7, #4]
 5101 2118 1346     		mov	r3, r2
 5102 211a 0A46     		mov	r2, r1	@ movhi
 5103 211c 7A80     		strh	r2, [r7, #2]	@ movhi
 5104 211e 3B80     		strh	r3, [r7, #0]	@ movhi
1178:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1179:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 5105              		.loc 1 1179 0
 5106 2120 7A68     		ldr	r2, [r7, #4]
 5107 2122 2E4B     		ldr	r3, .L213
 5108 2124 9A42     		cmp	r2, r3
 5109 2126 44D0     		beq	.L211
 5110              		.loc 1 1179 0 is_stmt 0 discriminator 1
 5111 2128 7B68     		ldr	r3, [r7, #4]
 5112 212a B3F1804F 		cmp	r3, #1073741824
 5113 212e 40D0     		beq	.L211
 5114              		.loc 1 1179 0 discriminator 2
 5115 2130 7A68     		ldr	r2, [r7, #4]
 5116 2132 2B4B     		ldr	r3, .L213+4
 5117 2134 9A42     		cmp	r2, r3
 5118 2136 3CD0     		beq	.L211
 5119              		.loc 1 1179 0 discriminator 3
 5120 2138 7A68     		ldr	r2, [r7, #4]
 5121 213a 2A4B     		ldr	r3, .L213+8
 5122 213c 9A42     		cmp	r2, r3
 5123 213e 38D0     		beq	.L211
 5124              		.loc 1 1179 0 discriminator 4
 5125 2140 7A68     		ldr	r2, [r7, #4]
 5126 2142 294B     		ldr	r3, .L213+12
 5127 2144 9A42     		cmp	r2, r3
 5128 2146 34D0     		beq	.L211
 5129              		.loc 1 1179 0 discriminator 5
 5130 2148 7A68     		ldr	r2, [r7, #4]
 5131 214a 284B     		ldr	r3, .L213+16
 5132 214c 9A42     		cmp	r2, r3
 5133 214e 30D0     		beq	.L211
 5134              		.loc 1 1179 0 discriminator 6
 5135 2150 7A68     		ldr	r2, [r7, #4]
 5136 2152 274B     		ldr	r3, .L213+20
 5137 2154 9A42     		cmp	r2, r3
 5138 2156 2CD0     		beq	.L211
 5139              		.loc 1 1179 0 discriminator 7
 5140 2158 7A68     		ldr	r2, [r7, #4]
 5141 215a 264B     		ldr	r3, .L213+24
 5142 215c 9A42     		cmp	r2, r3
 5143 215e 28D0     		beq	.L211
 5144              		.loc 1 1179 0 discriminator 8
 5145 2160 7A68     		ldr	r2, [r7, #4]
 5146 2162 254B     		ldr	r3, .L213+28
 5147 2164 9A42     		cmp	r2, r3
 5148 2166 24D0     		beq	.L211
 5149              		.loc 1 1179 0 discriminator 9
 5150 2168 7A68     		ldr	r2, [r7, #4]
 5151 216a 244B     		ldr	r3, .L213+32
 5152 216c 9A42     		cmp	r2, r3
 5153 216e 20D0     		beq	.L211
 5154              		.loc 1 1179 0 discriminator 10
 5155 2170 7A68     		ldr	r2, [r7, #4]
 5156 2172 234B     		ldr	r3, .L213+36
 5157 2174 9A42     		cmp	r2, r3
 5158 2176 1CD0     		beq	.L211
 5159              		.loc 1 1179 0 discriminator 11
 5160 2178 7A68     		ldr	r2, [r7, #4]
 5161 217a 224B     		ldr	r3, .L213+40
 5162 217c 9A42     		cmp	r2, r3
 5163 217e 18D0     		beq	.L211
 5164              		.loc 1 1179 0 discriminator 12
 5165 2180 7A68     		ldr	r2, [r7, #4]
 5166 2182 214B     		ldr	r3, .L213+44
 5167 2184 9A42     		cmp	r2, r3
 5168 2186 14D0     		beq	.L211
 5169              		.loc 1 1179 0 discriminator 13
 5170 2188 7A68     		ldr	r2, [r7, #4]
 5171 218a 204B     		ldr	r3, .L213+48
 5172 218c 9A42     		cmp	r2, r3
 5173 218e 10D0     		beq	.L211
 5174              		.loc 1 1179 0 discriminator 14
 5175 2190 7A68     		ldr	r2, [r7, #4]
 5176 2192 1F4B     		ldr	r3, .L213+52
 5177 2194 9A42     		cmp	r2, r3
 5178 2196 0CD0     		beq	.L211
 5179              		.loc 1 1179 0 discriminator 15
 5180 2198 7A68     		ldr	r2, [r7, #4]
 5181 219a 1E4B     		ldr	r3, .L213+56
 5182 219c 9A42     		cmp	r2, r3
 5183 219e 08D0     		beq	.L211
 5184              		.loc 1 1179 0 discriminator 16
 5185 21a0 7A68     		ldr	r2, [r7, #4]
 5186 21a2 1D4B     		ldr	r3, .L213+60
 5187 21a4 9A42     		cmp	r2, r3
 5188 21a6 04D0     		beq	.L211
 5189              		.loc 1 1179 0 discriminator 17
 5190 21a8 1C48     		ldr	r0, .L213+64
 5191 21aa 40F29B41 		movw	r1, #1179
 5192 21ae FFF7FEFF 		bl	assert_failed
 5193              	.L211:
1180:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
 5194              		.loc 1 1180 0 is_stmt 1
 5195 21b2 3B88     		ldrh	r3, [r7, #0]
 5196 21b4 002B     		cmp	r3, #0
 5197 21b6 07D0     		beq	.L212
 5198              		.loc 1 1180 0 is_stmt 0 discriminator 1
 5199 21b8 3B88     		ldrh	r3, [r7, #0]
 5200 21ba 012B     		cmp	r3, #1
 5201 21bc 04D0     		beq	.L212
 5202              		.loc 1 1180 0 discriminator 2
 5203 21be 1748     		ldr	r0, .L213+64
 5204 21c0 40F29C41 		movw	r1, #1180
 5205 21c4 FFF7FEFF 		bl	assert_failed
 5206              	.L212:
1181:../SPL/src/stm32f10x_tim.c ****   /* Set the Prescaler value */
1182:../SPL/src/stm32f10x_tim.c ****   TIMx->PSC = Prescaler;
 5207              		.loc 1 1182 0 is_stmt 1
 5208 21c8 7B68     		ldr	r3, [r7, #4]
 5209 21ca 7A88     		ldrh	r2, [r7, #2]	@ movhi
 5210 21cc 1A85     		strh	r2, [r3, #40]	@ movhi
1183:../SPL/src/stm32f10x_tim.c ****   /* Set or reset the UG Bit */
1184:../SPL/src/stm32f10x_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 5211              		.loc 1 1184 0
 5212 21ce 7B68     		ldr	r3, [r7, #4]
 5213 21d0 3A88     		ldrh	r2, [r7, #0]	@ movhi
 5214 21d2 9A82     		strh	r2, [r3, #20]	@ movhi
1185:../SPL/src/stm32f10x_tim.c **** }
 5215              		.loc 1 1185 0
 5216 21d4 07F10807 		add	r7, r7, #8
 5217 21d8 BD46     		mov	sp, r7
 5218 21da 80BD     		pop	{r7, pc}
 5219              	.L214:
 5220              		.align	2
 5221              	.L213:
 5222 21dc 002C0140 		.word	1073818624
 5223 21e0 00040040 		.word	1073742848
 5224 21e4 00080040 		.word	1073743872
 5225 21e8 000C0040 		.word	1073744896
 5226 21ec 00100040 		.word	1073745920
 5227 21f0 00140040 		.word	1073746944
 5228 21f4 00340140 		.word	1073820672
 5229 21f8 004C0140 		.word	1073826816
 5230 21fc 00500140 		.word	1073827840
 5231 2200 00540140 		.word	1073828864
 5232 2204 00180040 		.word	1073747968
 5233 2208 001C0040 		.word	1073748992
 5234 220c 00200040 		.word	1073750016
 5235 2210 00400140 		.word	1073823744
 5236 2214 00440140 		.word	1073824768
 5237 2218 00480140 		.word	1073825792
 5238 221c 00000000 		.word	.LC0
 5239              		.cfi_endproc
 5240              	.LFE54:
 5242              		.align	2
 5243              		.global	TIM_CounterModeConfig
 5244              		.thumb
 5245              		.thumb_func
 5247              	TIM_CounterModeConfig:
 5248              	.LFB55:
1186:../SPL/src/stm32f10x_tim.c **** 
1187:../SPL/src/stm32f10x_tim.c **** /**
1188:../SPL/src/stm32f10x_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
1189:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1190:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
1191:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1192:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_Up: TIM Up Counting Mode
1193:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_Down: TIM Down Counting Mode
1194:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
1195:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
1196:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
1197:../SPL/src/stm32f10x_tim.c ****   * @retval None
1198:../SPL/src/stm32f10x_tim.c ****   */
1199:../SPL/src/stm32f10x_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
1200:../SPL/src/stm32f10x_tim.c **** {
 5249              		.loc 1 1200 0
 5250              		.cfi_startproc
 5251              		@ args = 0, pretend = 0, frame = 16
 5252              		@ frame_needed = 1, uses_anonymous_args = 0
 5253 2220 80B5     		push	{r7, lr}
 5254              	.LCFI78:
 5255              		.cfi_def_cfa_offset 8
 5256              		.cfi_offset 7, -8
 5257              		.cfi_offset 14, -4
 5258 2222 84B0     		sub	sp, sp, #16
 5259              	.LCFI79:
 5260              		.cfi_def_cfa_offset 24
 5261 2224 00AF     		add	r7, sp, #0
 5262              	.LCFI80:
 5263              		.cfi_def_cfa_register 7
 5264 2226 7860     		str	r0, [r7, #4]
 5265 2228 0B46     		mov	r3, r1
 5266 222a 7B80     		strh	r3, [r7, #2]	@ movhi
1201:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
 5267              		.loc 1 1201 0
 5268 222c 4FF00003 		mov	r3, #0
 5269 2230 FB81     		strh	r3, [r7, #14]	@ movhi
1202:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1203:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 5270              		.loc 1 1203 0
 5271 2232 7A68     		ldr	r2, [r7, #4]
 5272 2234 204B     		ldr	r3, .L218
 5273 2236 9A42     		cmp	r2, r3
 5274 2238 18D0     		beq	.L216
 5275              		.loc 1 1203 0 is_stmt 0 discriminator 1
 5276 223a 7B68     		ldr	r3, [r7, #4]
 5277 223c B3F1804F 		cmp	r3, #1073741824
 5278 2240 14D0     		beq	.L216
 5279              		.loc 1 1203 0 discriminator 2
 5280 2242 7A68     		ldr	r2, [r7, #4]
 5281 2244 1D4B     		ldr	r3, .L218+4
 5282 2246 9A42     		cmp	r2, r3
 5283 2248 10D0     		beq	.L216
 5284              		.loc 1 1203 0 discriminator 3
 5285 224a 7A68     		ldr	r2, [r7, #4]
 5286 224c 1C4B     		ldr	r3, .L218+8
 5287 224e 9A42     		cmp	r2, r3
 5288 2250 0CD0     		beq	.L216
 5289              		.loc 1 1203 0 discriminator 4
 5290 2252 7A68     		ldr	r2, [r7, #4]
 5291 2254 1B4B     		ldr	r3, .L218+12
 5292 2256 9A42     		cmp	r2, r3
 5293 2258 08D0     		beq	.L216
 5294              		.loc 1 1203 0 discriminator 5
 5295 225a 7A68     		ldr	r2, [r7, #4]
 5296 225c 1A4B     		ldr	r3, .L218+16
 5297 225e 9A42     		cmp	r2, r3
 5298 2260 04D0     		beq	.L216
 5299              		.loc 1 1203 0 discriminator 6
 5300 2262 1A48     		ldr	r0, .L218+20
 5301 2264 40F2B341 		movw	r1, #1203
 5302 2268 FFF7FEFF 		bl	assert_failed
 5303              	.L216:
1204:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
 5304              		.loc 1 1204 0 is_stmt 1
 5305 226c 7B88     		ldrh	r3, [r7, #2]
 5306 226e 002B     		cmp	r3, #0
 5307 2270 10D0     		beq	.L217
 5308              		.loc 1 1204 0 is_stmt 0 discriminator 1
 5309 2272 7B88     		ldrh	r3, [r7, #2]
 5310 2274 102B     		cmp	r3, #16
 5311 2276 0DD0     		beq	.L217
 5312              		.loc 1 1204 0 discriminator 2
 5313 2278 7B88     		ldrh	r3, [r7, #2]
 5314 227a 202B     		cmp	r3, #32
 5315 227c 0AD0     		beq	.L217
 5316              		.loc 1 1204 0 discriminator 3
 5317 227e 7B88     		ldrh	r3, [r7, #2]
 5318 2280 402B     		cmp	r3, #64
 5319 2282 07D0     		beq	.L217
 5320              		.loc 1 1204 0 discriminator 4
 5321 2284 7B88     		ldrh	r3, [r7, #2]
 5322 2286 602B     		cmp	r3, #96
 5323 2288 04D0     		beq	.L217
 5324              		.loc 1 1204 0 discriminator 5
 5325 228a 1048     		ldr	r0, .L218+20
 5326 228c 40F2B441 		movw	r1, #1204
 5327 2290 FFF7FEFF 		bl	assert_failed
 5328              	.L217:
1205:../SPL/src/stm32f10x_tim.c ****   tmpcr1 = TIMx->CR1;
 5329              		.loc 1 1205 0 is_stmt 1
 5330 2294 7B68     		ldr	r3, [r7, #4]
 5331 2296 1B88     		ldrh	r3, [r3, #0]	@ movhi
 5332 2298 FB81     		strh	r3, [r7, #14]	@ movhi
1206:../SPL/src/stm32f10x_tim.c ****   /* Reset the CMS and DIR Bits */
1207:../SPL/src/stm32f10x_tim.c ****   tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_CR1_DIR | TIM_CR1_CMS)));
 5333              		.loc 1 1207 0
 5334 229a FB89     		ldrh	r3, [r7, #14]	@ movhi
 5335 229c 23F07003 		bic	r3, r3, #112
 5336 22a0 FB81     		strh	r3, [r7, #14]	@ movhi
1208:../SPL/src/stm32f10x_tim.c ****   /* Set the Counter Mode */
1209:../SPL/src/stm32f10x_tim.c ****   tmpcr1 |= TIM_CounterMode;
 5337              		.loc 1 1209 0
 5338 22a2 FA89     		ldrh	r2, [r7, #14]	@ movhi
 5339 22a4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5340 22a6 1343     		orrs	r3, r3, r2
 5341 22a8 FB81     		strh	r3, [r7, #14]	@ movhi
1210:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CR1 register */
1211:../SPL/src/stm32f10x_tim.c ****   TIMx->CR1 = tmpcr1;
 5342              		.loc 1 1211 0
 5343 22aa 7B68     		ldr	r3, [r7, #4]
 5344 22ac FA89     		ldrh	r2, [r7, #14]	@ movhi
 5345 22ae 1A80     		strh	r2, [r3, #0]	@ movhi
1212:../SPL/src/stm32f10x_tim.c **** }
 5346              		.loc 1 1212 0
 5347 22b0 07F11007 		add	r7, r7, #16
 5348 22b4 BD46     		mov	sp, r7
 5349 22b6 80BD     		pop	{r7, pc}
 5350              	.L219:
 5351              		.align	2
 5352              	.L218:
 5353 22b8 002C0140 		.word	1073818624
 5354 22bc 00040040 		.word	1073742848
 5355 22c0 00080040 		.word	1073743872
 5356 22c4 000C0040 		.word	1073744896
 5357 22c8 00340140 		.word	1073820672
 5358 22cc 00000000 		.word	.LC0
 5359              		.cfi_endproc
 5360              	.LFE55:
 5362              		.align	2
 5363              		.global	TIM_SelectInputTrigger
 5364              		.thumb
 5365              		.thumb_func
 5367              	TIM_SelectInputTrigger:
 5368              	.LFB56:
1213:../SPL/src/stm32f10x_tim.c **** 
1214:../SPL/src/stm32f10x_tim.c **** /**
1215:../SPL/src/stm32f10x_tim.c ****   * @brief  Selects the Input Trigger source
1216:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
1217:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
1218:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1219:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR0: Internal Trigger 0
1220:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR1: Internal Trigger 1
1221:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR2: Internal Trigger 2
1222:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR3: Internal Trigger 3
1223:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TS_TI1F_ED: TI1 Edge Detector
1224:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TS_TI1FP1: Filtered Timer Input 1
1225:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TS_TI2FP2: Filtered Timer Input 2
1226:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ETRF: External Trigger input
1227:../SPL/src/stm32f10x_tim.c ****   * @retval None
1228:../SPL/src/stm32f10x_tim.c ****   */
1229:../SPL/src/stm32f10x_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
1230:../SPL/src/stm32f10x_tim.c **** {
 5369              		.loc 1 1230 0
 5370              		.cfi_startproc
 5371              		@ args = 0, pretend = 0, frame = 16
 5372              		@ frame_needed = 1, uses_anonymous_args = 0
 5373 22d0 80B5     		push	{r7, lr}
 5374              	.LCFI81:
 5375              		.cfi_def_cfa_offset 8
 5376              		.cfi_offset 7, -8
 5377              		.cfi_offset 14, -4
 5378 22d2 84B0     		sub	sp, sp, #16
 5379              	.LCFI82:
 5380              		.cfi_def_cfa_offset 24
 5381 22d4 00AF     		add	r7, sp, #0
 5382              	.LCFI83:
 5383              		.cfi_def_cfa_register 7
 5384 22d6 7860     		str	r0, [r7, #4]
 5385 22d8 0B46     		mov	r3, r1
 5386 22da 7B80     		strh	r3, [r7, #2]	@ movhi
1231:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 5387              		.loc 1 1231 0
 5388 22dc 4FF00003 		mov	r3, #0
 5389 22e0 FB81     		strh	r3, [r7, #14]	@ movhi
1232:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1233:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 5390              		.loc 1 1233 0
 5391 22e2 7A68     		ldr	r2, [r7, #4]
 5392 22e4 2B4B     		ldr	r3, .L223
 5393 22e6 9A42     		cmp	r2, r3
 5394 22e8 24D0     		beq	.L221
 5395              		.loc 1 1233 0 is_stmt 0 discriminator 1
 5396 22ea 7B68     		ldr	r3, [r7, #4]
 5397 22ec B3F1804F 		cmp	r3, #1073741824
 5398 22f0 20D0     		beq	.L221
 5399              		.loc 1 1233 0 discriminator 2
 5400 22f2 7A68     		ldr	r2, [r7, #4]
 5401 22f4 284B     		ldr	r3, .L223+4
 5402 22f6 9A42     		cmp	r2, r3
 5403 22f8 1CD0     		beq	.L221
 5404              		.loc 1 1233 0 discriminator 3
 5405 22fa 7A68     		ldr	r2, [r7, #4]
 5406 22fc 274B     		ldr	r3, .L223+8
 5407 22fe 9A42     		cmp	r2, r3
 5408 2300 18D0     		beq	.L221
 5409              		.loc 1 1233 0 discriminator 4
 5410 2302 7A68     		ldr	r2, [r7, #4]
 5411 2304 264B     		ldr	r3, .L223+12
 5412 2306 9A42     		cmp	r2, r3
 5413 2308 14D0     		beq	.L221
 5414              		.loc 1 1233 0 discriminator 5
 5415 230a 7A68     		ldr	r2, [r7, #4]
 5416 230c 254B     		ldr	r3, .L223+16
 5417 230e 9A42     		cmp	r2, r3
 5418 2310 10D0     		beq	.L221
 5419              		.loc 1 1233 0 discriminator 6
 5420 2312 7A68     		ldr	r2, [r7, #4]
 5421 2314 244B     		ldr	r3, .L223+20
 5422 2316 9A42     		cmp	r2, r3
 5423 2318 0CD0     		beq	.L221
 5424              		.loc 1 1233 0 discriminator 7
 5425 231a 7A68     		ldr	r2, [r7, #4]
 5426 231c 234B     		ldr	r3, .L223+24
 5427 231e 9A42     		cmp	r2, r3
 5428 2320 08D0     		beq	.L221
 5429              		.loc 1 1233 0 discriminator 8
 5430 2322 7A68     		ldr	r2, [r7, #4]
 5431 2324 224B     		ldr	r3, .L223+28
 5432 2326 9A42     		cmp	r2, r3
 5433 2328 04D0     		beq	.L221
 5434              		.loc 1 1233 0 discriminator 9
 5435 232a 2248     		ldr	r0, .L223+32
 5436 232c 40F2D141 		movw	r1, #1233
 5437 2330 FFF7FEFF 		bl	assert_failed
 5438              	.L221:
1234:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
 5439              		.loc 1 1234 0 is_stmt 1
 5440 2334 7B88     		ldrh	r3, [r7, #2]
 5441 2336 002B     		cmp	r3, #0
 5442 2338 19D0     		beq	.L222
 5443              		.loc 1 1234 0 is_stmt 0 discriminator 1
 5444 233a 7B88     		ldrh	r3, [r7, #2]
 5445 233c 102B     		cmp	r3, #16
 5446 233e 16D0     		beq	.L222
 5447              		.loc 1 1234 0 discriminator 2
 5448 2340 7B88     		ldrh	r3, [r7, #2]
 5449 2342 202B     		cmp	r3, #32
 5450 2344 13D0     		beq	.L222
 5451              		.loc 1 1234 0 discriminator 3
 5452 2346 7B88     		ldrh	r3, [r7, #2]
 5453 2348 302B     		cmp	r3, #48
 5454 234a 10D0     		beq	.L222
 5455              		.loc 1 1234 0 discriminator 4
 5456 234c 7B88     		ldrh	r3, [r7, #2]
 5457 234e 402B     		cmp	r3, #64
 5458 2350 0DD0     		beq	.L222
 5459              		.loc 1 1234 0 discriminator 5
 5460 2352 7B88     		ldrh	r3, [r7, #2]
 5461 2354 502B     		cmp	r3, #80
 5462 2356 0AD0     		beq	.L222
 5463              		.loc 1 1234 0 discriminator 6
 5464 2358 7B88     		ldrh	r3, [r7, #2]
 5465 235a 602B     		cmp	r3, #96
 5466 235c 07D0     		beq	.L222
 5467              		.loc 1 1234 0 discriminator 7
 5468 235e 7B88     		ldrh	r3, [r7, #2]
 5469 2360 702B     		cmp	r3, #112
 5470 2362 04D0     		beq	.L222
 5471              		.loc 1 1234 0 discriminator 8
 5472 2364 1348     		ldr	r0, .L223+32
 5473 2366 40F2D241 		movw	r1, #1234
 5474 236a FFF7FEFF 		bl	assert_failed
 5475              	.L222:
1235:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
1236:../SPL/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
 5476              		.loc 1 1236 0 is_stmt 1
 5477 236e 7B68     		ldr	r3, [r7, #4]
 5478 2370 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5479 2372 FB81     		strh	r3, [r7, #14]	@ movhi
1237:../SPL/src/stm32f10x_tim.c ****   /* Reset the TS Bits */
1238:../SPL/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_TS));
 5480              		.loc 1 1238 0
 5481 2374 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5482 2376 23F07003 		bic	r3, r3, #112
 5483 237a FB81     		strh	r3, [r7, #14]	@ movhi
1239:../SPL/src/stm32f10x_tim.c ****   /* Set the Input Trigger source */
1240:../SPL/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 5484              		.loc 1 1240 0
 5485 237c FA89     		ldrh	r2, [r7, #14]	@ movhi
 5486 237e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5487 2380 1343     		orrs	r3, r3, r2
 5488 2382 FB81     		strh	r3, [r7, #14]	@ movhi
1241:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1242:../SPL/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
 5489              		.loc 1 1242 0
 5490 2384 7B68     		ldr	r3, [r7, #4]
 5491 2386 FA89     		ldrh	r2, [r7, #14]	@ movhi
 5492 2388 1A81     		strh	r2, [r3, #8]	@ movhi
1243:../SPL/src/stm32f10x_tim.c **** }
 5493              		.loc 1 1243 0
 5494 238a 07F11007 		add	r7, r7, #16
 5495 238e BD46     		mov	sp, r7
 5496 2390 80BD     		pop	{r7, pc}
 5497              	.L224:
 5498 2392 00BF     		.align	2
 5499              	.L223:
 5500 2394 002C0140 		.word	1073818624
 5501 2398 00040040 		.word	1073742848
 5502 239c 00080040 		.word	1073743872
 5503 23a0 000C0040 		.word	1073744896
 5504 23a4 00340140 		.word	1073820672
 5505 23a8 004C0140 		.word	1073826816
 5506 23ac 00180040 		.word	1073747968
 5507 23b0 00400140 		.word	1073823744
 5508 23b4 00000000 		.word	.LC0
 5509              		.cfi_endproc
 5510              	.LFE56:
 5512              		.align	2
 5513              		.global	TIM_EncoderInterfaceConfig
 5514              		.thumb
 5515              		.thumb_func
 5517              	TIM_EncoderInterfaceConfig:
 5518              	.LFB57:
1244:../SPL/src/stm32f10x_tim.c **** 
1245:../SPL/src/stm32f10x_tim.c **** /**
1246:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
1247:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1248:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
1249:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1250:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
1251:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
1252:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
1253:../SPL/src/stm32f10x_tim.c ****   *                                on the level of the other input.
1254:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
1255:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1256:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling: IC Falling edge.
1257:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising: IC Rising edge.
1258:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
1259:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1260:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling: IC Falling edge.
1261:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising: IC Rising edge.
1262:../SPL/src/stm32f10x_tim.c ****   * @retval None
1263:../SPL/src/stm32f10x_tim.c ****   */
1264:../SPL/src/stm32f10x_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
1265:../SPL/src/stm32f10x_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
1266:../SPL/src/stm32f10x_tim.c **** {
 5519              		.loc 1 1266 0
 5520              		.cfi_startproc
 5521              		@ args = 0, pretend = 0, frame = 24
 5522              		@ frame_needed = 1, uses_anonymous_args = 0
 5523 23b8 80B5     		push	{r7, lr}
 5524              	.LCFI84:
 5525              		.cfi_def_cfa_offset 8
 5526              		.cfi_offset 7, -8
 5527              		.cfi_offset 14, -4
 5528 23ba 86B0     		sub	sp, sp, #24
 5529              	.LCFI85:
 5530              		.cfi_def_cfa_offset 32
 5531 23bc 00AF     		add	r7, sp, #0
 5532              	.LCFI86:
 5533              		.cfi_def_cfa_register 7
 5534 23be F860     		str	r0, [r7, #12]
 5535 23c0 7981     		strh	r1, [r7, #10]	@ movhi
 5536 23c2 3A81     		strh	r2, [r7, #8]	@ movhi
 5537 23c4 FB80     		strh	r3, [r7, #6]	@ movhi
1267:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 5538              		.loc 1 1267 0
 5539 23c6 4FF00003 		mov	r3, #0
 5540 23ca FB82     		strh	r3, [r7, #22]	@ movhi
1268:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 5541              		.loc 1 1268 0
 5542 23cc 4FF00003 		mov	r3, #0
 5543 23d0 BB82     		strh	r3, [r7, #20]	@ movhi
1269:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 5544              		.loc 1 1269 0
 5545 23d2 4FF00003 		mov	r3, #0
 5546 23d6 7B82     		strh	r3, [r7, #18]	@ movhi
1270:../SPL/src/stm32f10x_tim.c ****     
1271:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1272:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
 5547              		.loc 1 1272 0
 5548 23d8 FA68     		ldr	r2, [r7, #12]
 5549 23da 3E4B     		ldr	r3, .L230
 5550 23dc 9A42     		cmp	r2, r3
 5551 23de 1CD0     		beq	.L226
 5552              		.loc 1 1272 0 is_stmt 0 discriminator 1
 5553 23e0 FB68     		ldr	r3, [r7, #12]
 5554 23e2 B3F1804F 		cmp	r3, #1073741824
 5555 23e6 18D0     		beq	.L226
 5556              		.loc 1 1272 0 discriminator 2
 5557 23e8 FA68     		ldr	r2, [r7, #12]
 5558 23ea 3B4B     		ldr	r3, .L230+4
 5559 23ec 9A42     		cmp	r2, r3
 5560 23ee 14D0     		beq	.L226
 5561              		.loc 1 1272 0 discriminator 3
 5562 23f0 FA68     		ldr	r2, [r7, #12]
 5563 23f2 3A4B     		ldr	r3, .L230+8
 5564 23f4 9A42     		cmp	r2, r3
 5565 23f6 10D0     		beq	.L226
 5566              		.loc 1 1272 0 discriminator 4
 5567 23f8 FA68     		ldr	r2, [r7, #12]
 5568 23fa 394B     		ldr	r3, .L230+12
 5569 23fc 9A42     		cmp	r2, r3
 5570 23fe 0CD0     		beq	.L226
 5571              		.loc 1 1272 0 discriminator 5
 5572 2400 FA68     		ldr	r2, [r7, #12]
 5573 2402 384B     		ldr	r3, .L230+16
 5574 2404 9A42     		cmp	r2, r3
 5575 2406 08D0     		beq	.L226
 5576              		.loc 1 1272 0 discriminator 6
 5577 2408 FA68     		ldr	r2, [r7, #12]
 5578 240a 374B     		ldr	r3, .L230+20
 5579 240c 9A42     		cmp	r2, r3
 5580 240e 04D0     		beq	.L226
 5581              		.loc 1 1272 0 discriminator 7
 5582 2410 3648     		ldr	r0, .L230+24
 5583 2412 4FF49F61 		mov	r1, #1272
 5584 2416 FFF7FEFF 		bl	assert_failed
 5585              	.L226:
1273:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
 5586              		.loc 1 1273 0 is_stmt 1
 5587 241a 7B89     		ldrh	r3, [r7, #10]
 5588 241c 012B     		cmp	r3, #1
 5589 241e 0AD0     		beq	.L227
 5590              		.loc 1 1273 0 is_stmt 0 discriminator 1
 5591 2420 7B89     		ldrh	r3, [r7, #10]
 5592 2422 022B     		cmp	r3, #2
 5593 2424 07D0     		beq	.L227
 5594              		.loc 1 1273 0 discriminator 2
 5595 2426 7B89     		ldrh	r3, [r7, #10]
 5596 2428 032B     		cmp	r3, #3
 5597 242a 04D0     		beq	.L227
 5598              		.loc 1 1273 0 discriminator 3
 5599 242c 2F48     		ldr	r0, .L230+24
 5600 242e 40F2F941 		movw	r1, #1273
 5601 2432 FFF7FEFF 		bl	assert_failed
 5602              	.L227:
1274:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
 5603              		.loc 1 1274 0 is_stmt 1
 5604 2436 3B89     		ldrh	r3, [r7, #8]
 5605 2438 002B     		cmp	r3, #0
 5606 243a 07D0     		beq	.L228
 5607              		.loc 1 1274 0 is_stmt 0 discriminator 1
 5608 243c 3B89     		ldrh	r3, [r7, #8]
 5609 243e 022B     		cmp	r3, #2
 5610 2440 04D0     		beq	.L228
 5611              		.loc 1 1274 0 discriminator 2
 5612 2442 2A48     		ldr	r0, .L230+24
 5613 2444 40F2FA41 		movw	r1, #1274
 5614 2448 FFF7FEFF 		bl	assert_failed
 5615              	.L228:
1275:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
 5616              		.loc 1 1275 0 is_stmt 1
 5617 244c FB88     		ldrh	r3, [r7, #6]
 5618 244e 002B     		cmp	r3, #0
 5619 2450 07D0     		beq	.L229
 5620              		.loc 1 1275 0 is_stmt 0 discriminator 1
 5621 2452 FB88     		ldrh	r3, [r7, #6]
 5622 2454 022B     		cmp	r3, #2
 5623 2456 04D0     		beq	.L229
 5624              		.loc 1 1275 0 discriminator 2
 5625 2458 2448     		ldr	r0, .L230+24
 5626 245a 40F2FB41 		movw	r1, #1275
 5627 245e FFF7FEFF 		bl	assert_failed
 5628              	.L229:
1276:../SPL/src/stm32f10x_tim.c **** 
1277:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
1278:../SPL/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
 5629              		.loc 1 1278 0 is_stmt 1
 5630 2462 FB68     		ldr	r3, [r7, #12]
 5631 2464 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5632 2466 FB82     		strh	r3, [r7, #22]	@ movhi
1279:../SPL/src/stm32f10x_tim.c ****   
1280:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
1281:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5633              		.loc 1 1281 0
 5634 2468 FB68     		ldr	r3, [r7, #12]
 5635 246a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5636 246c BB82     		strh	r3, [r7, #20]	@ movhi
1282:../SPL/src/stm32f10x_tim.c ****   
1283:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
1284:../SPL/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 5637              		.loc 1 1284 0
 5638 246e FB68     		ldr	r3, [r7, #12]
 5639 2470 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5640 2472 7B82     		strh	r3, [r7, #18]	@ movhi
1285:../SPL/src/stm32f10x_tim.c ****   
1286:../SPL/src/stm32f10x_tim.c ****   /* Set the encoder Mode */
1287:../SPL/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
 5641              		.loc 1 1287 0
 5642 2474 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5643 2476 23F00703 		bic	r3, r3, #7
 5644 247a FB82     		strh	r3, [r7, #22]	@ movhi
1288:../SPL/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 5645              		.loc 1 1288 0
 5646 247c FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5647 247e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5648 2480 1343     		orrs	r3, r3, r2
 5649 2482 FB82     		strh	r3, [r7, #22]	@ movhi
1289:../SPL/src/stm32f10x_tim.c ****   
1290:../SPL/src/stm32f10x_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
1291:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC1S)) & (uint16_t)(~((uint16_t)TIM_CCMR1
 5650              		.loc 1 1291 0
 5651 2484 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5652 2486 23F44073 		bic	r3, r3, #768
 5653 248a 23F00303 		bic	r3, r3, #3
 5654 248e BB82     		strh	r3, [r7, #20]	@ movhi
1292:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 5655              		.loc 1 1292 0
 5656 2490 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5657 2492 43F48073 		orr	r3, r3, #256
 5658 2496 43F00103 		orr	r3, r3, #1
 5659 249a BB82     		strh	r3, [r7, #20]	@ movhi
1293:../SPL/src/stm32f10x_tim.c ****   
1294:../SPL/src/stm32f10x_tim.c ****   /* Set the TI1 and the TI2 Polarities */
1295:../SPL/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCER_CC1P)) & ((uint16_t)~((uint16_t)TIM_CCER_CC
 5660              		.loc 1 1295 0
 5661 249c 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5662 249e 23F02203 		bic	r3, r3, #34
 5663 24a2 7B82     		strh	r3, [r7, #18]	@ movhi
1296:../SPL/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 5664              		.loc 1 1296 0
 5665 24a4 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5666 24a6 4FEA0313 		lsl	r3, r3, #4
 5667 24aa 9AB2     		uxth	r2, r3
 5668 24ac 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5669 24ae 1343     		orrs	r3, r3, r2
 5670 24b0 9AB2     		uxth	r2, r3
 5671 24b2 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5672 24b4 1343     		orrs	r3, r3, r2
 5673 24b6 7B82     		strh	r3, [r7, #18]	@ movhi
1297:../SPL/src/stm32f10x_tim.c ****   
1298:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1299:../SPL/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
 5674              		.loc 1 1299 0
 5675 24b8 FB68     		ldr	r3, [r7, #12]
 5676 24ba FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5677 24bc 1A81     		strh	r2, [r3, #8]	@ movhi
1300:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
1301:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5678              		.loc 1 1301 0
 5679 24be FB68     		ldr	r3, [r7, #12]
 5680 24c0 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5681 24c2 1A83     		strh	r2, [r3, #24]	@ movhi
1302:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
1303:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 5682              		.loc 1 1303 0
 5683 24c4 FB68     		ldr	r3, [r7, #12]
 5684 24c6 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5685 24c8 1A84     		strh	r2, [r3, #32]	@ movhi
1304:../SPL/src/stm32f10x_tim.c **** }
 5686              		.loc 1 1304 0
 5687 24ca 07F11807 		add	r7, r7, #24
 5688 24ce BD46     		mov	sp, r7
 5689 24d0 80BD     		pop	{r7, pc}
 5690              	.L231:
 5691 24d2 00BF     		.align	2
 5692              	.L230:
 5693 24d4 002C0140 		.word	1073818624
 5694 24d8 00040040 		.word	1073742848
 5695 24dc 00080040 		.word	1073743872
 5696 24e0 000C0040 		.word	1073744896
 5697 24e4 00340140 		.word	1073820672
 5698 24e8 00400140 		.word	1073823744
 5699 24ec 00000000 		.word	.LC0
 5700              		.cfi_endproc
 5701              	.LFE57:
 5703              		.align	2
 5704              		.global	TIM_ForcedOC1Config
 5705              		.thumb
 5706              		.thumb_func
 5708              	TIM_ForcedOC1Config:
 5709              	.LFB58:
1305:../SPL/src/stm32f10x_tim.c **** 
1306:../SPL/src/stm32f10x_tim.c **** /**
1307:../SPL/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1308:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
1309:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1310:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1311:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC1REF
1312:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1313:../SPL/src/stm32f10x_tim.c ****   * @retval None
1314:../SPL/src/stm32f10x_tim.c ****   */
1315:../SPL/src/stm32f10x_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1316:../SPL/src/stm32f10x_tim.c **** {
 5710              		.loc 1 1316 0
 5711              		.cfi_startproc
 5712              		@ args = 0, pretend = 0, frame = 16
 5713              		@ frame_needed = 1, uses_anonymous_args = 0
 5714 24f0 80B5     		push	{r7, lr}
 5715              	.LCFI87:
 5716              		.cfi_def_cfa_offset 8
 5717              		.cfi_offset 7, -8
 5718              		.cfi_offset 14, -4
 5719 24f2 84B0     		sub	sp, sp, #16
 5720              	.LCFI88:
 5721              		.cfi_def_cfa_offset 24
 5722 24f4 00AF     		add	r7, sp, #0
 5723              	.LCFI89:
 5724              		.cfi_def_cfa_register 7
 5725 24f6 7860     		str	r0, [r7, #4]
 5726 24f8 0B46     		mov	r3, r1
 5727 24fa 7B80     		strh	r3, [r7, #2]	@ movhi
1317:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 5728              		.loc 1 1317 0
 5729 24fc 4FF00003 		mov	r3, #0
 5730 2500 FB81     		strh	r3, [r7, #14]	@ movhi
1318:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1319:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 5731              		.loc 1 1319 0
 5732 2502 7A68     		ldr	r2, [r7, #4]
 5733 2504 2E4B     		ldr	r3, .L235
 5734 2506 9A42     		cmp	r2, r3
 5735 2508 3CD0     		beq	.L233
 5736              		.loc 1 1319 0 is_stmt 0 discriminator 1
 5737 250a 7B68     		ldr	r3, [r7, #4]
 5738 250c B3F1804F 		cmp	r3, #1073741824
 5739 2510 38D0     		beq	.L233
 5740              		.loc 1 1319 0 discriminator 2
 5741 2512 7A68     		ldr	r2, [r7, #4]
 5742 2514 2B4B     		ldr	r3, .L235+4
 5743 2516 9A42     		cmp	r2, r3
 5744 2518 34D0     		beq	.L233
 5745              		.loc 1 1319 0 discriminator 3
 5746 251a 7A68     		ldr	r2, [r7, #4]
 5747 251c 2A4B     		ldr	r3, .L235+8
 5748 251e 9A42     		cmp	r2, r3
 5749 2520 30D0     		beq	.L233
 5750              		.loc 1 1319 0 discriminator 4
 5751 2522 7A68     		ldr	r2, [r7, #4]
 5752 2524 294B     		ldr	r3, .L235+12
 5753 2526 9A42     		cmp	r2, r3
 5754 2528 2CD0     		beq	.L233
 5755              		.loc 1 1319 0 discriminator 5
 5756 252a 7A68     		ldr	r2, [r7, #4]
 5757 252c 284B     		ldr	r3, .L235+16
 5758 252e 9A42     		cmp	r2, r3
 5759 2530 28D0     		beq	.L233
 5760              		.loc 1 1319 0 discriminator 6
 5761 2532 7A68     		ldr	r2, [r7, #4]
 5762 2534 274B     		ldr	r3, .L235+20
 5763 2536 9A42     		cmp	r2, r3
 5764 2538 24D0     		beq	.L233
 5765              		.loc 1 1319 0 discriminator 7
 5766 253a 7A68     		ldr	r2, [r7, #4]
 5767 253c 264B     		ldr	r3, .L235+24
 5768 253e 9A42     		cmp	r2, r3
 5769 2540 20D0     		beq	.L233
 5770              		.loc 1 1319 0 discriminator 8
 5771 2542 7A68     		ldr	r2, [r7, #4]
 5772 2544 254B     		ldr	r3, .L235+28
 5773 2546 9A42     		cmp	r2, r3
 5774 2548 1CD0     		beq	.L233
 5775              		.loc 1 1319 0 discriminator 9
 5776 254a 7A68     		ldr	r2, [r7, #4]
 5777 254c 244B     		ldr	r3, .L235+32
 5778 254e 9A42     		cmp	r2, r3
 5779 2550 18D0     		beq	.L233
 5780              		.loc 1 1319 0 discriminator 10
 5781 2552 7A68     		ldr	r2, [r7, #4]
 5782 2554 234B     		ldr	r3, .L235+36
 5783 2556 9A42     		cmp	r2, r3
 5784 2558 14D0     		beq	.L233
 5785              		.loc 1 1319 0 discriminator 11
 5786 255a 7A68     		ldr	r2, [r7, #4]
 5787 255c 224B     		ldr	r3, .L235+40
 5788 255e 9A42     		cmp	r2, r3
 5789 2560 10D0     		beq	.L233
 5790              		.loc 1 1319 0 discriminator 12
 5791 2562 7A68     		ldr	r2, [r7, #4]
 5792 2564 214B     		ldr	r3, .L235+44
 5793 2566 9A42     		cmp	r2, r3
 5794 2568 0CD0     		beq	.L233
 5795              		.loc 1 1319 0 discriminator 13
 5796 256a 7A68     		ldr	r2, [r7, #4]
 5797 256c 204B     		ldr	r3, .L235+48
 5798 256e 9A42     		cmp	r2, r3
 5799 2570 08D0     		beq	.L233
 5800              		.loc 1 1319 0 discriminator 14
 5801 2572 7A68     		ldr	r2, [r7, #4]
 5802 2574 1F4B     		ldr	r3, .L235+52
 5803 2576 9A42     		cmp	r2, r3
 5804 2578 04D0     		beq	.L233
 5805              		.loc 1 1319 0 discriminator 15
 5806 257a 1F48     		ldr	r0, .L235+56
 5807 257c 40F22751 		movw	r1, #1319
 5808 2580 FFF7FEFF 		bl	assert_failed
 5809              	.L233:
1320:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
 5810              		.loc 1 1320 0 is_stmt 1
 5811 2584 7B88     		ldrh	r3, [r7, #2]
 5812 2586 502B     		cmp	r3, #80
 5813 2588 07D0     		beq	.L234
 5814              		.loc 1 1320 0 is_stmt 0 discriminator 1
 5815 258a 7B88     		ldrh	r3, [r7, #2]
 5816 258c 402B     		cmp	r3, #64
 5817 258e 04D0     		beq	.L234
 5818              		.loc 1 1320 0 discriminator 2
 5819 2590 1948     		ldr	r0, .L235+56
 5820 2592 4FF4A561 		mov	r1, #1320
 5821 2596 FFF7FEFF 		bl	assert_failed
 5822              	.L234:
1321:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5823              		.loc 1 1321 0 is_stmt 1
 5824 259a 7B68     		ldr	r3, [r7, #4]
 5825 259c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5826 259e FB81     		strh	r3, [r7, #14]	@ movhi
1322:../SPL/src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
1323:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1M);
 5827              		.loc 1 1323 0
 5828 25a0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5829 25a2 23F07003 		bic	r3, r3, #112
 5830 25a6 FB81     		strh	r3, [r7, #14]	@ movhi
1324:../SPL/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1325:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
 5831              		.loc 1 1325 0
 5832 25a8 FA89     		ldrh	r2, [r7, #14]	@ movhi
 5833 25aa 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5834 25ac 1343     		orrs	r3, r3, r2
 5835 25ae FB81     		strh	r3, [r7, #14]	@ movhi
1326:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1327:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5836              		.loc 1 1327 0
 5837 25b0 7B68     		ldr	r3, [r7, #4]
 5838 25b2 FA89     		ldrh	r2, [r7, #14]	@ movhi
 5839 25b4 1A83     		strh	r2, [r3, #24]	@ movhi
1328:../SPL/src/stm32f10x_tim.c **** }
 5840              		.loc 1 1328 0
 5841 25b6 07F11007 		add	r7, r7, #16
 5842 25ba BD46     		mov	sp, r7
 5843 25bc 80BD     		pop	{r7, pc}
 5844              	.L236:
 5845 25be 00BF     		.align	2
 5846              	.L235:
 5847 25c0 002C0140 		.word	1073818624
 5848 25c4 00040040 		.word	1073742848
 5849 25c8 00080040 		.word	1073743872
 5850 25cc 000C0040 		.word	1073744896
 5851 25d0 00340140 		.word	1073820672
 5852 25d4 004C0140 		.word	1073826816
 5853 25d8 00500140 		.word	1073827840
 5854 25dc 00540140 		.word	1073828864
 5855 25e0 00180040 		.word	1073747968
 5856 25e4 001C0040 		.word	1073748992
 5857 25e8 00200040 		.word	1073750016
 5858 25ec 00400140 		.word	1073823744
 5859 25f0 00440140 		.word	1073824768
 5860 25f4 00480140 		.word	1073825792
 5861 25f8 00000000 		.word	.LC0
 5862              		.cfi_endproc
 5863              	.LFE58:
 5865              		.align	2
 5866              		.global	TIM_ForcedOC2Config
 5867              		.thumb
 5868              		.thumb_func
 5870              	TIM_ForcedOC2Config:
 5871              	.LFB59:
1329:../SPL/src/stm32f10x_tim.c **** 
1330:../SPL/src/stm32f10x_tim.c **** /**
1331:../SPL/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1332:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
1333:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1334:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1335:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC2REF
1336:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1337:../SPL/src/stm32f10x_tim.c ****   * @retval None
1338:../SPL/src/stm32f10x_tim.c ****   */
1339:../SPL/src/stm32f10x_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1340:../SPL/src/stm32f10x_tim.c **** {
 5872              		.loc 1 1340 0
 5873              		.cfi_startproc
 5874              		@ args = 0, pretend = 0, frame = 16
 5875              		@ frame_needed = 1, uses_anonymous_args = 0
 5876 25fc 80B5     		push	{r7, lr}
 5877              	.LCFI90:
 5878              		.cfi_def_cfa_offset 8
 5879              		.cfi_offset 7, -8
 5880              		.cfi_offset 14, -4
 5881 25fe 84B0     		sub	sp, sp, #16
 5882              	.LCFI91:
 5883              		.cfi_def_cfa_offset 24
 5884 2600 00AF     		add	r7, sp, #0
 5885              	.LCFI92:
 5886              		.cfi_def_cfa_register 7
 5887 2602 7860     		str	r0, [r7, #4]
 5888 2604 0B46     		mov	r3, r1
 5889 2606 7B80     		strh	r3, [r7, #2]	@ movhi
1341:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 5890              		.loc 1 1341 0
 5891 2608 4FF00003 		mov	r3, #0
 5892 260c FB81     		strh	r3, [r7, #14]	@ movhi
1342:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1343:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 5893              		.loc 1 1343 0
 5894 260e 7A68     		ldr	r2, [r7, #4]
 5895 2610 234B     		ldr	r3, .L240
 5896 2612 9A42     		cmp	r2, r3
 5897 2614 24D0     		beq	.L238
 5898              		.loc 1 1343 0 is_stmt 0 discriminator 1
 5899 2616 7B68     		ldr	r3, [r7, #4]
 5900 2618 B3F1804F 		cmp	r3, #1073741824
 5901 261c 20D0     		beq	.L238
 5902              		.loc 1 1343 0 discriminator 2
 5903 261e 7A68     		ldr	r2, [r7, #4]
 5904 2620 204B     		ldr	r3, .L240+4
 5905 2622 9A42     		cmp	r2, r3
 5906 2624 1CD0     		beq	.L238
 5907              		.loc 1 1343 0 discriminator 3
 5908 2626 7A68     		ldr	r2, [r7, #4]
 5909 2628 1F4B     		ldr	r3, .L240+8
 5910 262a 9A42     		cmp	r2, r3
 5911 262c 18D0     		beq	.L238
 5912              		.loc 1 1343 0 discriminator 4
 5913 262e 7A68     		ldr	r2, [r7, #4]
 5914 2630 1E4B     		ldr	r3, .L240+12
 5915 2632 9A42     		cmp	r2, r3
 5916 2634 14D0     		beq	.L238
 5917              		.loc 1 1343 0 discriminator 5
 5918 2636 7A68     		ldr	r2, [r7, #4]
 5919 2638 1D4B     		ldr	r3, .L240+16
 5920 263a 9A42     		cmp	r2, r3
 5921 263c 10D0     		beq	.L238
 5922              		.loc 1 1343 0 discriminator 6
 5923 263e 7A68     		ldr	r2, [r7, #4]
 5924 2640 1C4B     		ldr	r3, .L240+20
 5925 2642 9A42     		cmp	r2, r3
 5926 2644 0CD0     		beq	.L238
 5927              		.loc 1 1343 0 discriminator 7
 5928 2646 7A68     		ldr	r2, [r7, #4]
 5929 2648 1B4B     		ldr	r3, .L240+24
 5930 264a 9A42     		cmp	r2, r3
 5931 264c 08D0     		beq	.L238
 5932              		.loc 1 1343 0 discriminator 8
 5933 264e 7A68     		ldr	r2, [r7, #4]
 5934 2650 1A4B     		ldr	r3, .L240+28
 5935 2652 9A42     		cmp	r2, r3
 5936 2654 04D0     		beq	.L238
 5937              		.loc 1 1343 0 discriminator 9
 5938 2656 1A48     		ldr	r0, .L240+32
 5939 2658 40F23F51 		movw	r1, #1343
 5940 265c FFF7FEFF 		bl	assert_failed
 5941              	.L238:
1344:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
 5942              		.loc 1 1344 0 is_stmt 1
 5943 2660 7B88     		ldrh	r3, [r7, #2]
 5944 2662 502B     		cmp	r3, #80
 5945 2664 07D0     		beq	.L239
 5946              		.loc 1 1344 0 is_stmt 0 discriminator 1
 5947 2666 7B88     		ldrh	r3, [r7, #2]
 5948 2668 402B     		cmp	r3, #64
 5949 266a 04D0     		beq	.L239
 5950              		.loc 1 1344 0 discriminator 2
 5951 266c 1448     		ldr	r0, .L240+32
 5952 266e 4FF4A861 		mov	r1, #1344
 5953 2672 FFF7FEFF 		bl	assert_failed
 5954              	.L239:
1345:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5955              		.loc 1 1345 0 is_stmt 1
 5956 2676 7B68     		ldr	r3, [r7, #4]
 5957 2678 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5958 267a FB81     		strh	r3, [r7, #14]	@ movhi
1346:../SPL/src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
1347:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2M);
 5959              		.loc 1 1347 0
 5960 267c FB89     		ldrh	r3, [r7, #14]	@ movhi
 5961 267e 23F4E043 		bic	r3, r3, #28672
 5962 2682 FB81     		strh	r3, [r7, #14]	@ movhi
1348:../SPL/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1349:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
 5963              		.loc 1 1349 0
 5964 2684 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5965 2686 4FEA0323 		lsl	r3, r3, #8
 5966 268a 9AB2     		uxth	r2, r3
 5967 268c FB89     		ldrh	r3, [r7, #14]	@ movhi
 5968 268e 1343     		orrs	r3, r3, r2
 5969 2690 FB81     		strh	r3, [r7, #14]	@ movhi
1350:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1351:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5970              		.loc 1 1351 0
 5971 2692 7B68     		ldr	r3, [r7, #4]
 5972 2694 FA89     		ldrh	r2, [r7, #14]	@ movhi
 5973 2696 1A83     		strh	r2, [r3, #24]	@ movhi
1352:../SPL/src/stm32f10x_tim.c **** }
 5974              		.loc 1 1352 0
 5975 2698 07F11007 		add	r7, r7, #16
 5976 269c BD46     		mov	sp, r7
 5977 269e 80BD     		pop	{r7, pc}
 5978              	.L241:
 5979              		.align	2
 5980              	.L240:
 5981 26a0 002C0140 		.word	1073818624
 5982 26a4 00040040 		.word	1073742848
 5983 26a8 00080040 		.word	1073743872
 5984 26ac 000C0040 		.word	1073744896
 5985 26b0 00340140 		.word	1073820672
 5986 26b4 004C0140 		.word	1073826816
 5987 26b8 00180040 		.word	1073747968
 5988 26bc 00400140 		.word	1073823744
 5989 26c0 00000000 		.word	.LC0
 5990              		.cfi_endproc
 5991              	.LFE59:
 5993              		.align	2
 5994              		.global	TIM_ForcedOC3Config
 5995              		.thumb
 5996              		.thumb_func
 5998              	TIM_ForcedOC3Config:
 5999              	.LFB60:
1353:../SPL/src/stm32f10x_tim.c **** 
1354:../SPL/src/stm32f10x_tim.c **** /**
1355:../SPL/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1356:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1357:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1358:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1359:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC3REF
1360:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1361:../SPL/src/stm32f10x_tim.c ****   * @retval None
1362:../SPL/src/stm32f10x_tim.c ****   */
1363:../SPL/src/stm32f10x_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1364:../SPL/src/stm32f10x_tim.c **** {
 6000              		.loc 1 1364 0
 6001              		.cfi_startproc
 6002              		@ args = 0, pretend = 0, frame = 16
 6003              		@ frame_needed = 1, uses_anonymous_args = 0
 6004 26c4 80B5     		push	{r7, lr}
 6005              	.LCFI93:
 6006              		.cfi_def_cfa_offset 8
 6007              		.cfi_offset 7, -8
 6008              		.cfi_offset 14, -4
 6009 26c6 84B0     		sub	sp, sp, #16
 6010              	.LCFI94:
 6011              		.cfi_def_cfa_offset 24
 6012 26c8 00AF     		add	r7, sp, #0
 6013              	.LCFI95:
 6014              		.cfi_def_cfa_register 7
 6015 26ca 7860     		str	r0, [r7, #4]
 6016 26cc 0B46     		mov	r3, r1
 6017 26ce 7B80     		strh	r3, [r7, #2]	@ movhi
1365:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 6018              		.loc 1 1365 0
 6019 26d0 4FF00003 		mov	r3, #0
 6020 26d4 FB81     		strh	r3, [r7, #14]	@ movhi
1366:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1367:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 6021              		.loc 1 1367 0
 6022 26d6 7A68     		ldr	r2, [r7, #4]
 6023 26d8 1C4B     		ldr	r3, .L245
 6024 26da 9A42     		cmp	r2, r3
 6025 26dc 18D0     		beq	.L243
 6026              		.loc 1 1367 0 is_stmt 0 discriminator 1
 6027 26de 7B68     		ldr	r3, [r7, #4]
 6028 26e0 B3F1804F 		cmp	r3, #1073741824
 6029 26e4 14D0     		beq	.L243
 6030              		.loc 1 1367 0 discriminator 2
 6031 26e6 7A68     		ldr	r2, [r7, #4]
 6032 26e8 194B     		ldr	r3, .L245+4
 6033 26ea 9A42     		cmp	r2, r3
 6034 26ec 10D0     		beq	.L243
 6035              		.loc 1 1367 0 discriminator 3
 6036 26ee 7A68     		ldr	r2, [r7, #4]
 6037 26f0 184B     		ldr	r3, .L245+8
 6038 26f2 9A42     		cmp	r2, r3
 6039 26f4 0CD0     		beq	.L243
 6040              		.loc 1 1367 0 discriminator 4
 6041 26f6 7A68     		ldr	r2, [r7, #4]
 6042 26f8 174B     		ldr	r3, .L245+12
 6043 26fa 9A42     		cmp	r2, r3
 6044 26fc 08D0     		beq	.L243
 6045              		.loc 1 1367 0 discriminator 5
 6046 26fe 7A68     		ldr	r2, [r7, #4]
 6047 2700 164B     		ldr	r3, .L245+16
 6048 2702 9A42     		cmp	r2, r3
 6049 2704 04D0     		beq	.L243
 6050              		.loc 1 1367 0 discriminator 6
 6051 2706 1648     		ldr	r0, .L245+20
 6052 2708 40F25751 		movw	r1, #1367
 6053 270c FFF7FEFF 		bl	assert_failed
 6054              	.L243:
1368:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
 6055              		.loc 1 1368 0 is_stmt 1
 6056 2710 7B88     		ldrh	r3, [r7, #2]
 6057 2712 502B     		cmp	r3, #80
 6058 2714 07D0     		beq	.L244
 6059              		.loc 1 1368 0 is_stmt 0 discriminator 1
 6060 2716 7B88     		ldrh	r3, [r7, #2]
 6061 2718 402B     		cmp	r3, #64
 6062 271a 04D0     		beq	.L244
 6063              		.loc 1 1368 0 discriminator 2
 6064 271c 1048     		ldr	r0, .L245+20
 6065 271e 4FF4AB61 		mov	r1, #1368
 6066 2722 FFF7FEFF 		bl	assert_failed
 6067              	.L244:
1369:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 6068              		.loc 1 1369 0 is_stmt 1
 6069 2726 7B68     		ldr	r3, [r7, #4]
 6070 2728 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 6071 272a FB81     		strh	r3, [r7, #14]	@ movhi
1370:../SPL/src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
1371:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3M);
 6072              		.loc 1 1371 0
 6073 272c FB89     		ldrh	r3, [r7, #14]	@ movhi
 6074 272e 23F07003 		bic	r3, r3, #112
 6075 2732 FB81     		strh	r3, [r7, #14]	@ movhi
1372:../SPL/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1373:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
 6076              		.loc 1 1373 0
 6077 2734 FA89     		ldrh	r2, [r7, #14]	@ movhi
 6078 2736 7B88     		ldrh	r3, [r7, #2]	@ movhi
 6079 2738 1343     		orrs	r3, r3, r2
 6080 273a FB81     		strh	r3, [r7, #14]	@ movhi
1374:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1375:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 6081              		.loc 1 1375 0
 6082 273c 7B68     		ldr	r3, [r7, #4]
 6083 273e FA89     		ldrh	r2, [r7, #14]	@ movhi
 6084 2740 9A83     		strh	r2, [r3, #28]	@ movhi
1376:../SPL/src/stm32f10x_tim.c **** }
 6085              		.loc 1 1376 0
 6086 2742 07F11007 		add	r7, r7, #16
 6087 2746 BD46     		mov	sp, r7
 6088 2748 80BD     		pop	{r7, pc}
 6089              	.L246:
 6090 274a 00BF     		.align	2
 6091              	.L245:
 6092 274c 002C0140 		.word	1073818624
 6093 2750 00040040 		.word	1073742848
 6094 2754 00080040 		.word	1073743872
 6095 2758 000C0040 		.word	1073744896
 6096 275c 00340140 		.word	1073820672
 6097 2760 00000000 		.word	.LC0
 6098              		.cfi_endproc
 6099              	.LFE60:
 6101              		.align	2
 6102              		.global	TIM_ForcedOC4Config
 6103              		.thumb
 6104              		.thumb_func
 6106              	TIM_ForcedOC4Config:
 6107              	.LFB61:
1377:../SPL/src/stm32f10x_tim.c **** 
1378:../SPL/src/stm32f10x_tim.c **** /**
1379:../SPL/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1380:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1381:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1382:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1383:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC4REF
1384:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1385:../SPL/src/stm32f10x_tim.c ****   * @retval None
1386:../SPL/src/stm32f10x_tim.c ****   */
1387:../SPL/src/stm32f10x_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1388:../SPL/src/stm32f10x_tim.c **** {
 6108              		.loc 1 1388 0
 6109              		.cfi_startproc
 6110              		@ args = 0, pretend = 0, frame = 16
 6111              		@ frame_needed = 1, uses_anonymous_args = 0
 6112 2764 80B5     		push	{r7, lr}
 6113              	.LCFI96:
 6114              		.cfi_def_cfa_offset 8
 6115              		.cfi_offset 7, -8
 6116              		.cfi_offset 14, -4
 6117 2766 84B0     		sub	sp, sp, #16
 6118              	.LCFI97:
 6119              		.cfi_def_cfa_offset 24
 6120 2768 00AF     		add	r7, sp, #0
 6121              	.LCFI98:
 6122              		.cfi_def_cfa_register 7
 6123 276a 7860     		str	r0, [r7, #4]
 6124 276c 0B46     		mov	r3, r1
 6125 276e 7B80     		strh	r3, [r7, #2]	@ movhi
1389:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 6126              		.loc 1 1389 0
 6127 2770 4FF00003 		mov	r3, #0
 6128 2774 FB81     		strh	r3, [r7, #14]	@ movhi
1390:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1391:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 6129              		.loc 1 1391 0
 6130 2776 7A68     		ldr	r2, [r7, #4]
 6131 2778 1D4B     		ldr	r3, .L250
 6132 277a 9A42     		cmp	r2, r3
 6133 277c 18D0     		beq	.L248
 6134              		.loc 1 1391 0 is_stmt 0 discriminator 1
 6135 277e 7B68     		ldr	r3, [r7, #4]
 6136 2780 B3F1804F 		cmp	r3, #1073741824
 6137 2784 14D0     		beq	.L248
 6138              		.loc 1 1391 0 discriminator 2
 6139 2786 7A68     		ldr	r2, [r7, #4]
 6140 2788 1A4B     		ldr	r3, .L250+4
 6141 278a 9A42     		cmp	r2, r3
 6142 278c 10D0     		beq	.L248
 6143              		.loc 1 1391 0 discriminator 3
 6144 278e 7A68     		ldr	r2, [r7, #4]
 6145 2790 194B     		ldr	r3, .L250+8
 6146 2792 9A42     		cmp	r2, r3
 6147 2794 0CD0     		beq	.L248
 6148              		.loc 1 1391 0 discriminator 4
 6149 2796 7A68     		ldr	r2, [r7, #4]
 6150 2798 184B     		ldr	r3, .L250+12
 6151 279a 9A42     		cmp	r2, r3
 6152 279c 08D0     		beq	.L248
 6153              		.loc 1 1391 0 discriminator 5
 6154 279e 7A68     		ldr	r2, [r7, #4]
 6155 27a0 174B     		ldr	r3, .L250+16
 6156 27a2 9A42     		cmp	r2, r3
 6157 27a4 04D0     		beq	.L248
 6158              		.loc 1 1391 0 discriminator 6
 6159 27a6 1748     		ldr	r0, .L250+20
 6160 27a8 40F26F51 		movw	r1, #1391
 6161 27ac FFF7FEFF 		bl	assert_failed
 6162              	.L248:
1392:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
 6163              		.loc 1 1392 0 is_stmt 1
 6164 27b0 7B88     		ldrh	r3, [r7, #2]
 6165 27b2 502B     		cmp	r3, #80
 6166 27b4 07D0     		beq	.L249
 6167              		.loc 1 1392 0 is_stmt 0 discriminator 1
 6168 27b6 7B88     		ldrh	r3, [r7, #2]
 6169 27b8 402B     		cmp	r3, #64
 6170 27ba 04D0     		beq	.L249
 6171              		.loc 1 1392 0 discriminator 2
 6172 27bc 1148     		ldr	r0, .L250+20
 6173 27be 4FF4AE61 		mov	r1, #1392
 6174 27c2 FFF7FEFF 		bl	assert_failed
 6175              	.L249:
1393:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 6176              		.loc 1 1393 0 is_stmt 1
 6177 27c6 7B68     		ldr	r3, [r7, #4]
 6178 27c8 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 6179 27ca FB81     		strh	r3, [r7, #14]	@ movhi
1394:../SPL/src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
1395:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4M);
 6180              		.loc 1 1395 0
 6181 27cc FB89     		ldrh	r3, [r7, #14]	@ movhi
 6182 27ce 23F4E043 		bic	r3, r3, #28672
 6183 27d2 FB81     		strh	r3, [r7, #14]	@ movhi
1396:../SPL/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1397:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
 6184              		.loc 1 1397 0
 6185 27d4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 6186 27d6 4FEA0323 		lsl	r3, r3, #8
 6187 27da 9AB2     		uxth	r2, r3
 6188 27dc FB89     		ldrh	r3, [r7, #14]	@ movhi
 6189 27de 1343     		orrs	r3, r3, r2
 6190 27e0 FB81     		strh	r3, [r7, #14]	@ movhi
1398:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1399:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 6191              		.loc 1 1399 0
 6192 27e2 7B68     		ldr	r3, [r7, #4]
 6193 27e4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 6194 27e6 9A83     		strh	r2, [r3, #28]	@ movhi
1400:../SPL/src/stm32f10x_tim.c **** }
 6195              		.loc 1 1400 0
 6196 27e8 07F11007 		add	r7, r7, #16
 6197 27ec BD46     		mov	sp, r7
 6198 27ee 80BD     		pop	{r7, pc}
 6199              	.L251:
 6200              		.align	2
 6201              	.L250:
 6202 27f0 002C0140 		.word	1073818624
 6203 27f4 00040040 		.word	1073742848
 6204 27f8 00080040 		.word	1073743872
 6205 27fc 000C0040 		.word	1073744896
 6206 2800 00340140 		.word	1073820672
 6207 2804 00000000 		.word	.LC0
 6208              		.cfi_endproc
 6209              	.LFE61:
 6211              		.align	2
 6212              		.global	TIM_ARRPreloadConfig
 6213              		.thumb
 6214              		.thumb_func
 6216              	TIM_ARRPreloadConfig:
 6217              	.LFB62:
1401:../SPL/src/stm32f10x_tim.c **** 
1402:../SPL/src/stm32f10x_tim.c **** /**
1403:../SPL/src/stm32f10x_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
1404:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 to select the TIM peripheral.
1405:../SPL/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
1406:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1407:../SPL/src/stm32f10x_tim.c ****   * @retval None
1408:../SPL/src/stm32f10x_tim.c ****   */
1409:../SPL/src/stm32f10x_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
1410:../SPL/src/stm32f10x_tim.c **** {
 6218              		.loc 1 1410 0
 6219              		.cfi_startproc
 6220              		@ args = 0, pretend = 0, frame = 8
 6221              		@ frame_needed = 1, uses_anonymous_args = 0
 6222 2808 80B5     		push	{r7, lr}
 6223              	.LCFI99:
 6224              		.cfi_def_cfa_offset 8
 6225              		.cfi_offset 7, -8
 6226              		.cfi_offset 14, -4
 6227 280a 82B0     		sub	sp, sp, #8
 6228              	.LCFI100:
 6229              		.cfi_def_cfa_offset 16
 6230 280c 00AF     		add	r7, sp, #0
 6231              	.LCFI101:
 6232              		.cfi_def_cfa_register 7
 6233 280e 7860     		str	r0, [r7, #4]
 6234 2810 0B46     		mov	r3, r1
 6235 2812 FB70     		strb	r3, [r7, #3]
1411:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1412:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 6236              		.loc 1 1412 0
 6237 2814 7A68     		ldr	r2, [r7, #4]
 6238 2816 354B     		ldr	r3, .L257
 6239 2818 9A42     		cmp	r2, r3
 6240 281a 44D0     		beq	.L253
 6241              		.loc 1 1412 0 is_stmt 0 discriminator 1
 6242 281c 7B68     		ldr	r3, [r7, #4]
 6243 281e B3F1804F 		cmp	r3, #1073741824
 6244 2822 40D0     		beq	.L253
 6245              		.loc 1 1412 0 discriminator 2
 6246 2824 7A68     		ldr	r2, [r7, #4]
 6247 2826 324B     		ldr	r3, .L257+4
 6248 2828 9A42     		cmp	r2, r3
 6249 282a 3CD0     		beq	.L253
 6250              		.loc 1 1412 0 discriminator 3
 6251 282c 7A68     		ldr	r2, [r7, #4]
 6252 282e 314B     		ldr	r3, .L257+8
 6253 2830 9A42     		cmp	r2, r3
 6254 2832 38D0     		beq	.L253
 6255              		.loc 1 1412 0 discriminator 4
 6256 2834 7A68     		ldr	r2, [r7, #4]
 6257 2836 304B     		ldr	r3, .L257+12
 6258 2838 9A42     		cmp	r2, r3
 6259 283a 34D0     		beq	.L253
 6260              		.loc 1 1412 0 discriminator 5
 6261 283c 7A68     		ldr	r2, [r7, #4]
 6262 283e 2F4B     		ldr	r3, .L257+16
 6263 2840 9A42     		cmp	r2, r3
 6264 2842 30D0     		beq	.L253
 6265              		.loc 1 1412 0 discriminator 6
 6266 2844 7A68     		ldr	r2, [r7, #4]
 6267 2846 2E4B     		ldr	r3, .L257+20
 6268 2848 9A42     		cmp	r2, r3
 6269 284a 2CD0     		beq	.L253
 6270              		.loc 1 1412 0 discriminator 7
 6271 284c 7A68     		ldr	r2, [r7, #4]
 6272 284e 2D4B     		ldr	r3, .L257+24
 6273 2850 9A42     		cmp	r2, r3
 6274 2852 28D0     		beq	.L253
 6275              		.loc 1 1412 0 discriminator 8
 6276 2854 7A68     		ldr	r2, [r7, #4]
 6277 2856 2C4B     		ldr	r3, .L257+28
 6278 2858 9A42     		cmp	r2, r3
 6279 285a 24D0     		beq	.L253
 6280              		.loc 1 1412 0 discriminator 9
 6281 285c 7A68     		ldr	r2, [r7, #4]
 6282 285e 2B4B     		ldr	r3, .L257+32
 6283 2860 9A42     		cmp	r2, r3
 6284 2862 20D0     		beq	.L253
 6285              		.loc 1 1412 0 discriminator 10
 6286 2864 7A68     		ldr	r2, [r7, #4]
 6287 2866 2A4B     		ldr	r3, .L257+36
 6288 2868 9A42     		cmp	r2, r3
 6289 286a 1CD0     		beq	.L253
 6290              		.loc 1 1412 0 discriminator 11
 6291 286c 7A68     		ldr	r2, [r7, #4]
 6292 286e 294B     		ldr	r3, .L257+40
 6293 2870 9A42     		cmp	r2, r3
 6294 2872 18D0     		beq	.L253
 6295              		.loc 1 1412 0 discriminator 12
 6296 2874 7A68     		ldr	r2, [r7, #4]
 6297 2876 284B     		ldr	r3, .L257+44
 6298 2878 9A42     		cmp	r2, r3
 6299 287a 14D0     		beq	.L253
 6300              		.loc 1 1412 0 discriminator 13
 6301 287c 7A68     		ldr	r2, [r7, #4]
 6302 287e 274B     		ldr	r3, .L257+48
 6303 2880 9A42     		cmp	r2, r3
 6304 2882 10D0     		beq	.L253
 6305              		.loc 1 1412 0 discriminator 14
 6306 2884 7A68     		ldr	r2, [r7, #4]
 6307 2886 264B     		ldr	r3, .L257+52
 6308 2888 9A42     		cmp	r2, r3
 6309 288a 0CD0     		beq	.L253
 6310              		.loc 1 1412 0 discriminator 15
 6311 288c 7A68     		ldr	r2, [r7, #4]
 6312 288e 254B     		ldr	r3, .L257+56
 6313 2890 9A42     		cmp	r2, r3
 6314 2892 08D0     		beq	.L253
 6315              		.loc 1 1412 0 discriminator 16
 6316 2894 7A68     		ldr	r2, [r7, #4]
 6317 2896 244B     		ldr	r3, .L257+60
 6318 2898 9A42     		cmp	r2, r3
 6319 289a 04D0     		beq	.L253
 6320              		.loc 1 1412 0 discriminator 17
 6321 289c 2348     		ldr	r0, .L257+64
 6322 289e 40F28451 		movw	r1, #1412
 6323 28a2 FFF7FEFF 		bl	assert_failed
 6324              	.L253:
1413:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 6325              		.loc 1 1413 0 is_stmt 1
 6326 28a6 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6327 28a8 002B     		cmp	r3, #0
 6328 28aa 07D0     		beq	.L254
 6329              		.loc 1 1413 0 is_stmt 0 discriminator 1
 6330 28ac FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6331 28ae 012B     		cmp	r3, #1
 6332 28b0 04D0     		beq	.L254
 6333              		.loc 1 1413 0 discriminator 2
 6334 28b2 1E48     		ldr	r0, .L257+64
 6335 28b4 40F28551 		movw	r1, #1413
 6336 28b8 FFF7FEFF 		bl	assert_failed
 6337              	.L254:
1414:../SPL/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 6338              		.loc 1 1414 0 is_stmt 1
 6339 28bc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6340 28be 002B     		cmp	r3, #0
 6341 28c0 08D0     		beq	.L255
1415:../SPL/src/stm32f10x_tim.c ****   {
1416:../SPL/src/stm32f10x_tim.c ****     /* Set the ARR Preload Bit */
1417:../SPL/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 6342              		.loc 1 1417 0
 6343 28c2 7B68     		ldr	r3, [r7, #4]
 6344 28c4 1B88     		ldrh	r3, [r3, #0]	@ movhi
 6345 28c6 9BB2     		uxth	r3, r3
 6346 28c8 43F08003 		orr	r3, r3, #128
 6347 28cc 9AB2     		uxth	r2, r3
 6348 28ce 7B68     		ldr	r3, [r7, #4]
 6349 28d0 1A80     		strh	r2, [r3, #0]	@ movhi
 6350 28d2 07E0     		b	.L252
 6351              	.L255:
1418:../SPL/src/stm32f10x_tim.c ****   }
1419:../SPL/src/stm32f10x_tim.c ****   else
1420:../SPL/src/stm32f10x_tim.c ****   {
1421:../SPL/src/stm32f10x_tim.c ****     /* Reset the ARR Preload Bit */
1422:../SPL/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_ARPE);
 6352              		.loc 1 1422 0
 6353 28d4 7B68     		ldr	r3, [r7, #4]
 6354 28d6 1B88     		ldrh	r3, [r3, #0]	@ movhi
 6355 28d8 9BB2     		uxth	r3, r3
 6356 28da 23F08003 		bic	r3, r3, #128
 6357 28de 9AB2     		uxth	r2, r3
 6358 28e0 7B68     		ldr	r3, [r7, #4]
 6359 28e2 1A80     		strh	r2, [r3, #0]	@ movhi
 6360              	.L252:
1423:../SPL/src/stm32f10x_tim.c ****   }
1424:../SPL/src/stm32f10x_tim.c **** }
 6361              		.loc 1 1424 0
 6362 28e4 07F10807 		add	r7, r7, #8
 6363 28e8 BD46     		mov	sp, r7
 6364 28ea 80BD     		pop	{r7, pc}
 6365              	.L258:
 6366              		.align	2
 6367              	.L257:
 6368 28ec 002C0140 		.word	1073818624
 6369 28f0 00040040 		.word	1073742848
 6370 28f4 00080040 		.word	1073743872
 6371 28f8 000C0040 		.word	1073744896
 6372 28fc 00100040 		.word	1073745920
 6373 2900 00140040 		.word	1073746944
 6374 2904 00340140 		.word	1073820672
 6375 2908 004C0140 		.word	1073826816
 6376 290c 00500140 		.word	1073827840
 6377 2910 00540140 		.word	1073828864
 6378 2914 00180040 		.word	1073747968
 6379 2918 001C0040 		.word	1073748992
 6380 291c 00200040 		.word	1073750016
 6381 2920 00400140 		.word	1073823744
 6382 2924 00440140 		.word	1073824768
 6383 2928 00480140 		.word	1073825792
 6384 292c 00000000 		.word	.LC0
 6385              		.cfi_endproc
 6386              	.LFE62:
 6388              		.align	2
 6389              		.global	TIM_SelectCOM
 6390              		.thumb
 6391              		.thumb_func
 6393              	TIM_SelectCOM:
 6394              	.LFB63:
1425:../SPL/src/stm32f10x_tim.c **** 
1426:../SPL/src/stm32f10x_tim.c **** /**
1427:../SPL/src/stm32f10x_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
1428:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 8, 15, 16 or 17 to select the TIMx peripheral
1429:../SPL/src/stm32f10x_tim.c ****   * @param  NewState: new state of the Commutation event.
1430:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1431:../SPL/src/stm32f10x_tim.c ****   * @retval None
1432:../SPL/src/stm32f10x_tim.c ****   */
1433:../SPL/src/stm32f10x_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
1434:../SPL/src/stm32f10x_tim.c **** {
 6395              		.loc 1 1434 0
 6396              		.cfi_startproc
 6397              		@ args = 0, pretend = 0, frame = 8
 6398              		@ frame_needed = 1, uses_anonymous_args = 0
 6399 2930 80B5     		push	{r7, lr}
 6400              	.LCFI102:
 6401              		.cfi_def_cfa_offset 8
 6402              		.cfi_offset 7, -8
 6403              		.cfi_offset 14, -4
 6404 2932 82B0     		sub	sp, sp, #8
 6405              	.LCFI103:
 6406              		.cfi_def_cfa_offset 16
 6407 2934 00AF     		add	r7, sp, #0
 6408              	.LCFI104:
 6409              		.cfi_def_cfa_register 7
 6410 2936 7860     		str	r0, [r7, #4]
 6411 2938 0B46     		mov	r3, r1
 6412 293a FB70     		strb	r3, [r7, #3]
1435:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1436:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 6413              		.loc 1 1436 0
 6414 293c 7A68     		ldr	r2, [r7, #4]
 6415 293e 1D4B     		ldr	r3, .L264
 6416 2940 9A42     		cmp	r2, r3
 6417 2942 14D0     		beq	.L260
 6418              		.loc 1 1436 0 is_stmt 0 discriminator 1
 6419 2944 7A68     		ldr	r2, [r7, #4]
 6420 2946 1C4B     		ldr	r3, .L264+4
 6421 2948 9A42     		cmp	r2, r3
 6422 294a 10D0     		beq	.L260
 6423              		.loc 1 1436 0 discriminator 2
 6424 294c 7A68     		ldr	r2, [r7, #4]
 6425 294e 1B4B     		ldr	r3, .L264+8
 6426 2950 9A42     		cmp	r2, r3
 6427 2952 0CD0     		beq	.L260
 6428              		.loc 1 1436 0 discriminator 3
 6429 2954 7A68     		ldr	r2, [r7, #4]
 6430 2956 1A4B     		ldr	r3, .L264+12
 6431 2958 9A42     		cmp	r2, r3
 6432 295a 08D0     		beq	.L260
 6433              		.loc 1 1436 0 discriminator 4
 6434 295c 7A68     		ldr	r2, [r7, #4]
 6435 295e 194B     		ldr	r3, .L264+16
 6436 2960 9A42     		cmp	r2, r3
 6437 2962 04D0     		beq	.L260
 6438              		.loc 1 1436 0 discriminator 5
 6439 2964 1848     		ldr	r0, .L264+20
 6440 2966 40F29C51 		movw	r1, #1436
 6441 296a FFF7FEFF 		bl	assert_failed
 6442              	.L260:
1437:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 6443              		.loc 1 1437 0 is_stmt 1
 6444 296e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6445 2970 002B     		cmp	r3, #0
 6446 2972 07D0     		beq	.L261
 6447              		.loc 1 1437 0 is_stmt 0 discriminator 1
 6448 2974 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6449 2976 012B     		cmp	r3, #1
 6450 2978 04D0     		beq	.L261
 6451              		.loc 1 1437 0 discriminator 2
 6452 297a 1348     		ldr	r0, .L264+20
 6453 297c 40F29D51 		movw	r1, #1437
 6454 2980 FFF7FEFF 		bl	assert_failed
 6455              	.L261:
1438:../SPL/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 6456              		.loc 1 1438 0 is_stmt 1
 6457 2984 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6458 2986 002B     		cmp	r3, #0
 6459 2988 08D0     		beq	.L262
1439:../SPL/src/stm32f10x_tim.c ****   {
1440:../SPL/src/stm32f10x_tim.c ****     /* Set the COM Bit */
1441:../SPL/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
 6460              		.loc 1 1441 0
 6461 298a 7B68     		ldr	r3, [r7, #4]
 6462 298c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 6463 298e 9BB2     		uxth	r3, r3
 6464 2990 43F00403 		orr	r3, r3, #4
 6465 2994 9AB2     		uxth	r2, r3
 6466 2996 7B68     		ldr	r3, [r7, #4]
 6467 2998 9A80     		strh	r2, [r3, #4]	@ movhi
 6468 299a 07E0     		b	.L259
 6469              	.L262:
1442:../SPL/src/stm32f10x_tim.c ****   }
1443:../SPL/src/stm32f10x_tim.c ****   else
1444:../SPL/src/stm32f10x_tim.c ****   {
1445:../SPL/src/stm32f10x_tim.c ****     /* Reset the COM Bit */
1446:../SPL/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCUS);
 6470              		.loc 1 1446 0
 6471 299c 7B68     		ldr	r3, [r7, #4]
 6472 299e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 6473 29a0 9BB2     		uxth	r3, r3
 6474 29a2 23F00403 		bic	r3, r3, #4
 6475 29a6 9AB2     		uxth	r2, r3
 6476 29a8 7B68     		ldr	r3, [r7, #4]
 6477 29aa 9A80     		strh	r2, [r3, #4]	@ movhi
 6478              	.L259:
1447:../SPL/src/stm32f10x_tim.c ****   }
1448:../SPL/src/stm32f10x_tim.c **** }
 6479              		.loc 1 1448 0
 6480 29ac 07F10807 		add	r7, r7, #8
 6481 29b0 BD46     		mov	sp, r7
 6482 29b2 80BD     		pop	{r7, pc}
 6483              	.L265:
 6484              		.align	2
 6485              	.L264:
 6486 29b4 002C0140 		.word	1073818624
 6487 29b8 00340140 		.word	1073820672
 6488 29bc 00400140 		.word	1073823744
 6489 29c0 00440140 		.word	1073824768
 6490 29c4 00480140 		.word	1073825792
 6491 29c8 00000000 		.word	.LC0
 6492              		.cfi_endproc
 6493              	.LFE63:
 6495              		.align	2
 6496              		.global	TIM_SelectCCDMA
 6497              		.thumb
 6498              		.thumb_func
 6500              	TIM_SelectCCDMA:
 6501              	.LFB64:
1449:../SPL/src/stm32f10x_tim.c **** 
1450:../SPL/src/stm32f10x_tim.c **** /**
1451:../SPL/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
1452:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 15, 16 or 17 to select 
1453:../SPL/src/stm32f10x_tim.c ****   *         the TIM peripheral.
1454:../SPL/src/stm32f10x_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
1455:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1456:../SPL/src/stm32f10x_tim.c ****   * @retval None
1457:../SPL/src/stm32f10x_tim.c ****   */
1458:../SPL/src/stm32f10x_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
1459:../SPL/src/stm32f10x_tim.c **** {
 6502              		.loc 1 1459 0
 6503              		.cfi_startproc
 6504              		@ args = 0, pretend = 0, frame = 8
 6505              		@ frame_needed = 1, uses_anonymous_args = 0
 6506 29cc 80B5     		push	{r7, lr}
 6507              	.LCFI105:
 6508              		.cfi_def_cfa_offset 8
 6509              		.cfi_offset 7, -8
 6510              		.cfi_offset 14, -4
 6511 29ce 82B0     		sub	sp, sp, #8
 6512              	.LCFI106:
 6513              		.cfi_def_cfa_offset 16
 6514 29d0 00AF     		add	r7, sp, #0
 6515              	.LCFI107:
 6516              		.cfi_def_cfa_register 7
 6517 29d2 7860     		str	r0, [r7, #4]
 6518 29d4 0B46     		mov	r3, r1
 6519 29d6 FB70     		strb	r3, [r7, #3]
1460:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1461:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 6520              		.loc 1 1461 0
 6521 29d8 7A68     		ldr	r2, [r7, #4]
 6522 29da 254B     		ldr	r3, .L271
 6523 29dc 9A42     		cmp	r2, r3
 6524 29de 24D0     		beq	.L267
 6525              		.loc 1 1461 0 is_stmt 0 discriminator 1
 6526 29e0 7B68     		ldr	r3, [r7, #4]
 6527 29e2 B3F1804F 		cmp	r3, #1073741824
 6528 29e6 20D0     		beq	.L267
 6529              		.loc 1 1461 0 discriminator 2
 6530 29e8 7A68     		ldr	r2, [r7, #4]
 6531 29ea 224B     		ldr	r3, .L271+4
 6532 29ec 9A42     		cmp	r2, r3
 6533 29ee 1CD0     		beq	.L267
 6534              		.loc 1 1461 0 discriminator 3
 6535 29f0 7A68     		ldr	r2, [r7, #4]
 6536 29f2 214B     		ldr	r3, .L271+8
 6537 29f4 9A42     		cmp	r2, r3
 6538 29f6 18D0     		beq	.L267
 6539              		.loc 1 1461 0 discriminator 4
 6540 29f8 7A68     		ldr	r2, [r7, #4]
 6541 29fa 204B     		ldr	r3, .L271+12
 6542 29fc 9A42     		cmp	r2, r3
 6543 29fe 14D0     		beq	.L267
 6544              		.loc 1 1461 0 discriminator 5
 6545 2a00 7A68     		ldr	r2, [r7, #4]
 6546 2a02 1F4B     		ldr	r3, .L271+16
 6547 2a04 9A42     		cmp	r2, r3
 6548 2a06 10D0     		beq	.L267
 6549              		.loc 1 1461 0 discriminator 6
 6550 2a08 7A68     		ldr	r2, [r7, #4]
 6551 2a0a 1E4B     		ldr	r3, .L271+20
 6552 2a0c 9A42     		cmp	r2, r3
 6553 2a0e 0CD0     		beq	.L267
 6554              		.loc 1 1461 0 discriminator 7
 6555 2a10 7A68     		ldr	r2, [r7, #4]
 6556 2a12 1D4B     		ldr	r3, .L271+24
 6557 2a14 9A42     		cmp	r2, r3
 6558 2a16 08D0     		beq	.L267
 6559              		.loc 1 1461 0 discriminator 8
 6560 2a18 7A68     		ldr	r2, [r7, #4]
 6561 2a1a 1C4B     		ldr	r3, .L271+28
 6562 2a1c 9A42     		cmp	r2, r3
 6563 2a1e 04D0     		beq	.L267
 6564              		.loc 1 1461 0 discriminator 9
 6565 2a20 1B48     		ldr	r0, .L271+32
 6566 2a22 40F2B551 		movw	r1, #1461
 6567 2a26 FFF7FEFF 		bl	assert_failed
 6568              	.L267:
1462:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 6569              		.loc 1 1462 0 is_stmt 1
 6570 2a2a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6571 2a2c 002B     		cmp	r3, #0
 6572 2a2e 07D0     		beq	.L268
 6573              		.loc 1 1462 0 is_stmt 0 discriminator 1
 6574 2a30 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6575 2a32 012B     		cmp	r3, #1
 6576 2a34 04D0     		beq	.L268
 6577              		.loc 1 1462 0 discriminator 2
 6578 2a36 1648     		ldr	r0, .L271+32
 6579 2a38 40F2B651 		movw	r1, #1462
 6580 2a3c FFF7FEFF 		bl	assert_failed
 6581              	.L268:
1463:../SPL/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 6582              		.loc 1 1463 0 is_stmt 1
 6583 2a40 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6584 2a42 002B     		cmp	r3, #0
 6585 2a44 08D0     		beq	.L269
1464:../SPL/src/stm32f10x_tim.c ****   {
1465:../SPL/src/stm32f10x_tim.c ****     /* Set the CCDS Bit */
1466:../SPL/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
 6586              		.loc 1 1466 0
 6587 2a46 7B68     		ldr	r3, [r7, #4]
 6588 2a48 9B88     		ldrh	r3, [r3, #4]	@ movhi
 6589 2a4a 9BB2     		uxth	r3, r3
 6590 2a4c 43F00803 		orr	r3, r3, #8
 6591 2a50 9AB2     		uxth	r2, r3
 6592 2a52 7B68     		ldr	r3, [r7, #4]
 6593 2a54 9A80     		strh	r2, [r3, #4]	@ movhi
 6594 2a56 07E0     		b	.L266
 6595              	.L269:
1467:../SPL/src/stm32f10x_tim.c ****   }
1468:../SPL/src/stm32f10x_tim.c ****   else
1469:../SPL/src/stm32f10x_tim.c ****   {
1470:../SPL/src/stm32f10x_tim.c ****     /* Reset the CCDS Bit */
1471:../SPL/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCDS);
 6596              		.loc 1 1471 0
 6597 2a58 7B68     		ldr	r3, [r7, #4]
 6598 2a5a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 6599 2a5c 9BB2     		uxth	r3, r3
 6600 2a5e 23F00803 		bic	r3, r3, #8
 6601 2a62 9AB2     		uxth	r2, r3
 6602 2a64 7B68     		ldr	r3, [r7, #4]
 6603 2a66 9A80     		strh	r2, [r3, #4]	@ movhi
 6604              	.L266:
1472:../SPL/src/stm32f10x_tim.c ****   }
1473:../SPL/src/stm32f10x_tim.c **** }
 6605              		.loc 1 1473 0
 6606 2a68 07F10807 		add	r7, r7, #8
 6607 2a6c BD46     		mov	sp, r7
 6608 2a6e 80BD     		pop	{r7, pc}
 6609              	.L272:
 6610              		.align	2
 6611              	.L271:
 6612 2a70 002C0140 		.word	1073818624
 6613 2a74 00040040 		.word	1073742848
 6614 2a78 00080040 		.word	1073743872
 6615 2a7c 000C0040 		.word	1073744896
 6616 2a80 00340140 		.word	1073820672
 6617 2a84 00400140 		.word	1073823744
 6618 2a88 00440140 		.word	1073824768
 6619 2a8c 00480140 		.word	1073825792
 6620 2a90 00000000 		.word	.LC0
 6621              		.cfi_endproc
 6622              	.LFE64:
 6624              		.align	2
 6625              		.global	TIM_CCPreloadControl
 6626              		.thumb
 6627              		.thumb_func
 6629              	TIM_CCPreloadControl:
 6630              	.LFB65:
1474:../SPL/src/stm32f10x_tim.c **** 
1475:../SPL/src/stm32f10x_tim.c **** /**
1476:../SPL/src/stm32f10x_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
1477:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be   1, 2, 3, 4, 5, 8 or 15 
1478:../SPL/src/stm32f10x_tim.c ****   *         to select the TIMx peripheral
1479:../SPL/src/stm32f10x_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
1480:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1481:../SPL/src/stm32f10x_tim.c ****   * @retval None
1482:../SPL/src/stm32f10x_tim.c ****   */
1483:../SPL/src/stm32f10x_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
1484:../SPL/src/stm32f10x_tim.c **** { 
 6631              		.loc 1 1484 0
 6632              		.cfi_startproc
 6633              		@ args = 0, pretend = 0, frame = 8
 6634              		@ frame_needed = 1, uses_anonymous_args = 0
 6635 2a94 80B5     		push	{r7, lr}
 6636              	.LCFI108:
 6637              		.cfi_def_cfa_offset 8
 6638              		.cfi_offset 7, -8
 6639              		.cfi_offset 14, -4
 6640 2a96 82B0     		sub	sp, sp, #8
 6641              	.LCFI109:
 6642              		.cfi_def_cfa_offset 16
 6643 2a98 00AF     		add	r7, sp, #0
 6644              	.LCFI110:
 6645              		.cfi_def_cfa_register 7
 6646 2a9a 7860     		str	r0, [r7, #4]
 6647 2a9c 0B46     		mov	r3, r1
 6648 2a9e FB70     		strb	r3, [r7, #3]
1485:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1486:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
 6649              		.loc 1 1486 0
 6650 2aa0 7A68     		ldr	r2, [r7, #4]
 6651 2aa2 214B     		ldr	r3, .L278
 6652 2aa4 9A42     		cmp	r2, r3
 6653 2aa6 1CD0     		beq	.L274
 6654              		.loc 1 1486 0 is_stmt 0 discriminator 1
 6655 2aa8 7B68     		ldr	r3, [r7, #4]
 6656 2aaa B3F1804F 		cmp	r3, #1073741824
 6657 2aae 18D0     		beq	.L274
 6658              		.loc 1 1486 0 discriminator 2
 6659 2ab0 7A68     		ldr	r2, [r7, #4]
 6660 2ab2 1E4B     		ldr	r3, .L278+4
 6661 2ab4 9A42     		cmp	r2, r3
 6662 2ab6 14D0     		beq	.L274
 6663              		.loc 1 1486 0 discriminator 3
 6664 2ab8 7A68     		ldr	r2, [r7, #4]
 6665 2aba 1D4B     		ldr	r3, .L278+8
 6666 2abc 9A42     		cmp	r2, r3
 6667 2abe 10D0     		beq	.L274
 6668              		.loc 1 1486 0 discriminator 4
 6669 2ac0 7A68     		ldr	r2, [r7, #4]
 6670 2ac2 1C4B     		ldr	r3, .L278+12
 6671 2ac4 9A42     		cmp	r2, r3
 6672 2ac6 0CD0     		beq	.L274
 6673              		.loc 1 1486 0 discriminator 5
 6674 2ac8 7A68     		ldr	r2, [r7, #4]
 6675 2aca 1B4B     		ldr	r3, .L278+16
 6676 2acc 9A42     		cmp	r2, r3
 6677 2ace 08D0     		beq	.L274
 6678              		.loc 1 1486 0 discriminator 6
 6679 2ad0 7A68     		ldr	r2, [r7, #4]
 6680 2ad2 1A4B     		ldr	r3, .L278+20
 6681 2ad4 9A42     		cmp	r2, r3
 6682 2ad6 04D0     		beq	.L274
 6683              		.loc 1 1486 0 discriminator 7
 6684 2ad8 1948     		ldr	r0, .L278+24
 6685 2ada 40F2CE51 		movw	r1, #1486
 6686 2ade FFF7FEFF 		bl	assert_failed
 6687              	.L274:
1487:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 6688              		.loc 1 1487 0 is_stmt 1
 6689 2ae2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6690 2ae4 002B     		cmp	r3, #0
 6691 2ae6 07D0     		beq	.L275
 6692              		.loc 1 1487 0 is_stmt 0 discriminator 1
 6693 2ae8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6694 2aea 012B     		cmp	r3, #1
 6695 2aec 04D0     		beq	.L275
 6696              		.loc 1 1487 0 discriminator 2
 6697 2aee 1448     		ldr	r0, .L278+24
 6698 2af0 40F2CF51 		movw	r1, #1487
 6699 2af4 FFF7FEFF 		bl	assert_failed
 6700              	.L275:
1488:../SPL/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 6701              		.loc 1 1488 0 is_stmt 1
 6702 2af8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6703 2afa 002B     		cmp	r3, #0
 6704 2afc 08D0     		beq	.L276
1489:../SPL/src/stm32f10x_tim.c ****   {
1490:../SPL/src/stm32f10x_tim.c ****     /* Set the CCPC Bit */
1491:../SPL/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
 6705              		.loc 1 1491 0
 6706 2afe 7B68     		ldr	r3, [r7, #4]
 6707 2b00 9B88     		ldrh	r3, [r3, #4]	@ movhi
 6708 2b02 9BB2     		uxth	r3, r3
 6709 2b04 43F00103 		orr	r3, r3, #1
 6710 2b08 9AB2     		uxth	r2, r3
 6711 2b0a 7B68     		ldr	r3, [r7, #4]
 6712 2b0c 9A80     		strh	r2, [r3, #4]	@ movhi
 6713 2b0e 07E0     		b	.L273
 6714              	.L276:
1492:../SPL/src/stm32f10x_tim.c ****   }
1493:../SPL/src/stm32f10x_tim.c ****   else
1494:../SPL/src/stm32f10x_tim.c ****   {
1495:../SPL/src/stm32f10x_tim.c ****     /* Reset the CCPC Bit */
1496:../SPL/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCPC);
 6715              		.loc 1 1496 0
 6716 2b10 7B68     		ldr	r3, [r7, #4]
 6717 2b12 9B88     		ldrh	r3, [r3, #4]	@ movhi
 6718 2b14 9BB2     		uxth	r3, r3
 6719 2b16 23F00103 		bic	r3, r3, #1
 6720 2b1a 9AB2     		uxth	r2, r3
 6721 2b1c 7B68     		ldr	r3, [r7, #4]
 6722 2b1e 9A80     		strh	r2, [r3, #4]	@ movhi
 6723              	.L273:
1497:../SPL/src/stm32f10x_tim.c ****   }
1498:../SPL/src/stm32f10x_tim.c **** }
 6724              		.loc 1 1498 0
 6725 2b20 07F10807 		add	r7, r7, #8
 6726 2b24 BD46     		mov	sp, r7
 6727 2b26 80BD     		pop	{r7, pc}
 6728              	.L279:
 6729              		.align	2
 6730              	.L278:
 6731 2b28 002C0140 		.word	1073818624
 6732 2b2c 00040040 		.word	1073742848
 6733 2b30 00080040 		.word	1073743872
 6734 2b34 000C0040 		.word	1073744896
 6735 2b38 00340140 		.word	1073820672
 6736 2b3c 00400140 		.word	1073823744
 6737 2b40 00000000 		.word	.LC0
 6738              		.cfi_endproc
 6739              	.LFE65:
 6741              		.align	2
 6742              		.global	TIM_OC1PreloadConfig
 6743              		.thumb
 6744              		.thumb_func
 6746              	TIM_OC1PreloadConfig:
 6747              	.LFB66:
1499:../SPL/src/stm32f10x_tim.c **** 
1500:../SPL/src/stm32f10x_tim.c **** /**
1501:../SPL/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1502:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
1503:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1504:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1505:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1506:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1507:../SPL/src/stm32f10x_tim.c ****   * @retval None
1508:../SPL/src/stm32f10x_tim.c ****   */
1509:../SPL/src/stm32f10x_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1510:../SPL/src/stm32f10x_tim.c **** {
 6748              		.loc 1 1510 0
 6749              		.cfi_startproc
 6750              		@ args = 0, pretend = 0, frame = 16
 6751              		@ frame_needed = 1, uses_anonymous_args = 0
 6752 2b44 80B5     		push	{r7, lr}
 6753              	.LCFI111:
 6754              		.cfi_def_cfa_offset 8
 6755              		.cfi_offset 7, -8
 6756              		.cfi_offset 14, -4
 6757 2b46 84B0     		sub	sp, sp, #16
 6758              	.LCFI112:
 6759              		.cfi_def_cfa_offset 24
 6760 2b48 00AF     		add	r7, sp, #0
 6761              	.LCFI113:
 6762              		.cfi_def_cfa_register 7
 6763 2b4a 7860     		str	r0, [r7, #4]
 6764 2b4c 0B46     		mov	r3, r1
 6765 2b4e 7B80     		strh	r3, [r7, #2]	@ movhi
1511:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 6766              		.loc 1 1511 0
 6767 2b50 4FF00003 		mov	r3, #0
 6768 2b54 FB81     		strh	r3, [r7, #14]	@ movhi
1512:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1513:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 6769              		.loc 1 1513 0
 6770 2b56 7A68     		ldr	r2, [r7, #4]
 6771 2b58 2E4B     		ldr	r3, .L283
 6772 2b5a 9A42     		cmp	r2, r3
 6773 2b5c 3CD0     		beq	.L281
 6774              		.loc 1 1513 0 is_stmt 0 discriminator 1
 6775 2b5e 7B68     		ldr	r3, [r7, #4]
 6776 2b60 B3F1804F 		cmp	r3, #1073741824
 6777 2b64 38D0     		beq	.L281
 6778              		.loc 1 1513 0 discriminator 2
 6779 2b66 7A68     		ldr	r2, [r7, #4]
 6780 2b68 2B4B     		ldr	r3, .L283+4
 6781 2b6a 9A42     		cmp	r2, r3
 6782 2b6c 34D0     		beq	.L281
 6783              		.loc 1 1513 0 discriminator 3
 6784 2b6e 7A68     		ldr	r2, [r7, #4]
 6785 2b70 2A4B     		ldr	r3, .L283+8
 6786 2b72 9A42     		cmp	r2, r3
 6787 2b74 30D0     		beq	.L281
 6788              		.loc 1 1513 0 discriminator 4
 6789 2b76 7A68     		ldr	r2, [r7, #4]
 6790 2b78 294B     		ldr	r3, .L283+12
 6791 2b7a 9A42     		cmp	r2, r3
 6792 2b7c 2CD0     		beq	.L281
 6793              		.loc 1 1513 0 discriminator 5
 6794 2b7e 7A68     		ldr	r2, [r7, #4]
 6795 2b80 284B     		ldr	r3, .L283+16
 6796 2b82 9A42     		cmp	r2, r3
 6797 2b84 28D0     		beq	.L281
 6798              		.loc 1 1513 0 discriminator 6
 6799 2b86 7A68     		ldr	r2, [r7, #4]
 6800 2b88 274B     		ldr	r3, .L283+20
 6801 2b8a 9A42     		cmp	r2, r3
 6802 2b8c 24D0     		beq	.L281
 6803              		.loc 1 1513 0 discriminator 7
 6804 2b8e 7A68     		ldr	r2, [r7, #4]
 6805 2b90 264B     		ldr	r3, .L283+24
 6806 2b92 9A42     		cmp	r2, r3
 6807 2b94 20D0     		beq	.L281
 6808              		.loc 1 1513 0 discriminator 8
 6809 2b96 7A68     		ldr	r2, [r7, #4]
 6810 2b98 254B     		ldr	r3, .L283+28
 6811 2b9a 9A42     		cmp	r2, r3
 6812 2b9c 1CD0     		beq	.L281
 6813              		.loc 1 1513 0 discriminator 9
 6814 2b9e 7A68     		ldr	r2, [r7, #4]
 6815 2ba0 244B     		ldr	r3, .L283+32
 6816 2ba2 9A42     		cmp	r2, r3
 6817 2ba4 18D0     		beq	.L281
 6818              		.loc 1 1513 0 discriminator 10
 6819 2ba6 7A68     		ldr	r2, [r7, #4]
 6820 2ba8 234B     		ldr	r3, .L283+36
 6821 2baa 9A42     		cmp	r2, r3
 6822 2bac 14D0     		beq	.L281
 6823              		.loc 1 1513 0 discriminator 11
 6824 2bae 7A68     		ldr	r2, [r7, #4]
 6825 2bb0 224B     		ldr	r3, .L283+40
 6826 2bb2 9A42     		cmp	r2, r3
 6827 2bb4 10D0     		beq	.L281
 6828              		.loc 1 1513 0 discriminator 12
 6829 2bb6 7A68     		ldr	r2, [r7, #4]
 6830 2bb8 214B     		ldr	r3, .L283+44
 6831 2bba 9A42     		cmp	r2, r3
 6832 2bbc 0CD0     		beq	.L281
 6833              		.loc 1 1513 0 discriminator 13
 6834 2bbe 7A68     		ldr	r2, [r7, #4]
 6835 2bc0 204B     		ldr	r3, .L283+48
 6836 2bc2 9A42     		cmp	r2, r3
 6837 2bc4 08D0     		beq	.L281
 6838              		.loc 1 1513 0 discriminator 14
 6839 2bc6 7A68     		ldr	r2, [r7, #4]
 6840 2bc8 1F4B     		ldr	r3, .L283+52
 6841 2bca 9A42     		cmp	r2, r3
 6842 2bcc 04D0     		beq	.L281
 6843              		.loc 1 1513 0 discriminator 15
 6844 2bce 1F48     		ldr	r0, .L283+56
 6845 2bd0 40F2E951 		movw	r1, #1513
 6846 2bd4 FFF7FEFF 		bl	assert_failed
 6847              	.L281:
1514:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
 6848              		.loc 1 1514 0 is_stmt 1
 6849 2bd8 7B88     		ldrh	r3, [r7, #2]
 6850 2bda 082B     		cmp	r3, #8
 6851 2bdc 07D0     		beq	.L282
 6852              		.loc 1 1514 0 is_stmt 0 discriminator 1
 6853 2bde 7B88     		ldrh	r3, [r7, #2]
 6854 2be0 002B     		cmp	r3, #0
 6855 2be2 04D0     		beq	.L282
 6856              		.loc 1 1514 0 discriminator 2
 6857 2be4 1948     		ldr	r0, .L283+56
 6858 2be6 40F2EA51 		movw	r1, #1514
 6859 2bea FFF7FEFF 		bl	assert_failed
 6860              	.L282:
1515:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 6861              		.loc 1 1515 0 is_stmt 1
 6862 2bee 7B68     		ldr	r3, [r7, #4]
 6863 2bf0 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 6864 2bf2 FB81     		strh	r3, [r7, #14]	@ movhi
1516:../SPL/src/stm32f10x_tim.c ****   /* Reset the OC1PE Bit */
1517:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1PE);
 6865              		.loc 1 1517 0
 6866 2bf4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 6867 2bf6 23F00803 		bic	r3, r3, #8
 6868 2bfa FB81     		strh	r3, [r7, #14]	@ movhi
1518:../SPL/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1519:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCPreload;
 6869              		.loc 1 1519 0
 6870 2bfc FA89     		ldrh	r2, [r7, #14]	@ movhi
 6871 2bfe 7B88     		ldrh	r3, [r7, #2]	@ movhi
 6872 2c00 1343     		orrs	r3, r3, r2
 6873 2c02 FB81     		strh	r3, [r7, #14]	@ movhi
1520:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1521:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 6874              		.loc 1 1521 0
 6875 2c04 7B68     		ldr	r3, [r7, #4]
 6876 2c06 FA89     		ldrh	r2, [r7, #14]	@ movhi
 6877 2c08 1A83     		strh	r2, [r3, #24]	@ movhi
1522:../SPL/src/stm32f10x_tim.c **** }
 6878              		.loc 1 1522 0
 6879 2c0a 07F11007 		add	r7, r7, #16
 6880 2c0e BD46     		mov	sp, r7
 6881 2c10 80BD     		pop	{r7, pc}
 6882              	.L284:
 6883 2c12 00BF     		.align	2
 6884              	.L283:
 6885 2c14 002C0140 		.word	1073818624
 6886 2c18 00040040 		.word	1073742848
 6887 2c1c 00080040 		.word	1073743872
 6888 2c20 000C0040 		.word	1073744896
 6889 2c24 00340140 		.word	1073820672
 6890 2c28 004C0140 		.word	1073826816
 6891 2c2c 00500140 		.word	1073827840
 6892 2c30 00540140 		.word	1073828864
 6893 2c34 00180040 		.word	1073747968
 6894 2c38 001C0040 		.word	1073748992
 6895 2c3c 00200040 		.word	1073750016
 6896 2c40 00400140 		.word	1073823744
 6897 2c44 00440140 		.word	1073824768
 6898 2c48 00480140 		.word	1073825792
 6899 2c4c 00000000 		.word	.LC0
 6900              		.cfi_endproc
 6901              	.LFE66:
 6903              		.align	2
 6904              		.global	TIM_OC2PreloadConfig
 6905              		.thumb
 6906              		.thumb_func
 6908              	TIM_OC2PreloadConfig:
 6909              	.LFB67:
1523:../SPL/src/stm32f10x_tim.c **** 
1524:../SPL/src/stm32f10x_tim.c **** /**
1525:../SPL/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1526:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select 
1527:../SPL/src/stm32f10x_tim.c ****   *         the TIM peripheral.
1528:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1529:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1530:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1531:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1532:../SPL/src/stm32f10x_tim.c ****   * @retval None
1533:../SPL/src/stm32f10x_tim.c ****   */
1534:../SPL/src/stm32f10x_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1535:../SPL/src/stm32f10x_tim.c **** {
 6910              		.loc 1 1535 0
 6911              		.cfi_startproc
 6912              		@ args = 0, pretend = 0, frame = 16
 6913              		@ frame_needed = 1, uses_anonymous_args = 0
 6914 2c50 80B5     		push	{r7, lr}
 6915              	.LCFI114:
 6916              		.cfi_def_cfa_offset 8
 6917              		.cfi_offset 7, -8
 6918              		.cfi_offset 14, -4
 6919 2c52 84B0     		sub	sp, sp, #16
 6920              	.LCFI115:
 6921              		.cfi_def_cfa_offset 24
 6922 2c54 00AF     		add	r7, sp, #0
 6923              	.LCFI116:
 6924              		.cfi_def_cfa_register 7
 6925 2c56 7860     		str	r0, [r7, #4]
 6926 2c58 0B46     		mov	r3, r1
 6927 2c5a 7B80     		strh	r3, [r7, #2]	@ movhi
1536:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 6928              		.loc 1 1536 0
 6929 2c5c 4FF00003 		mov	r3, #0
 6930 2c60 FB81     		strh	r3, [r7, #14]	@ movhi
1537:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1538:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 6931              		.loc 1 1538 0
 6932 2c62 7A68     		ldr	r2, [r7, #4]
 6933 2c64 234B     		ldr	r3, .L288
 6934 2c66 9A42     		cmp	r2, r3
 6935 2c68 24D0     		beq	.L286
 6936              		.loc 1 1538 0 is_stmt 0 discriminator 1
 6937 2c6a 7B68     		ldr	r3, [r7, #4]
 6938 2c6c B3F1804F 		cmp	r3, #1073741824
 6939 2c70 20D0     		beq	.L286
 6940              		.loc 1 1538 0 discriminator 2
 6941 2c72 7A68     		ldr	r2, [r7, #4]
 6942 2c74 204B     		ldr	r3, .L288+4
 6943 2c76 9A42     		cmp	r2, r3
 6944 2c78 1CD0     		beq	.L286
 6945              		.loc 1 1538 0 discriminator 3
 6946 2c7a 7A68     		ldr	r2, [r7, #4]
 6947 2c7c 1F4B     		ldr	r3, .L288+8
 6948 2c7e 9A42     		cmp	r2, r3
 6949 2c80 18D0     		beq	.L286
 6950              		.loc 1 1538 0 discriminator 4
 6951 2c82 7A68     		ldr	r2, [r7, #4]
 6952 2c84 1E4B     		ldr	r3, .L288+12
 6953 2c86 9A42     		cmp	r2, r3
 6954 2c88 14D0     		beq	.L286
 6955              		.loc 1 1538 0 discriminator 5
 6956 2c8a 7A68     		ldr	r2, [r7, #4]
 6957 2c8c 1D4B     		ldr	r3, .L288+16
 6958 2c8e 9A42     		cmp	r2, r3
 6959 2c90 10D0     		beq	.L286
 6960              		.loc 1 1538 0 discriminator 6
 6961 2c92 7A68     		ldr	r2, [r7, #4]
 6962 2c94 1C4B     		ldr	r3, .L288+20
 6963 2c96 9A42     		cmp	r2, r3
 6964 2c98 0CD0     		beq	.L286
 6965              		.loc 1 1538 0 discriminator 7
 6966 2c9a 7A68     		ldr	r2, [r7, #4]
 6967 2c9c 1B4B     		ldr	r3, .L288+24
 6968 2c9e 9A42     		cmp	r2, r3
 6969 2ca0 08D0     		beq	.L286
 6970              		.loc 1 1538 0 discriminator 8
 6971 2ca2 7A68     		ldr	r2, [r7, #4]
 6972 2ca4 1A4B     		ldr	r3, .L288+28
 6973 2ca6 9A42     		cmp	r2, r3
 6974 2ca8 04D0     		beq	.L286
 6975              		.loc 1 1538 0 discriminator 9
 6976 2caa 1A48     		ldr	r0, .L288+32
 6977 2cac 40F20261 		movw	r1, #1538
 6978 2cb0 FFF7FEFF 		bl	assert_failed
 6979              	.L286:
1539:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
 6980              		.loc 1 1539 0 is_stmt 1
 6981 2cb4 7B88     		ldrh	r3, [r7, #2]
 6982 2cb6 082B     		cmp	r3, #8
 6983 2cb8 07D0     		beq	.L287
 6984              		.loc 1 1539 0 is_stmt 0 discriminator 1
 6985 2cba 7B88     		ldrh	r3, [r7, #2]
 6986 2cbc 002B     		cmp	r3, #0
 6987 2cbe 04D0     		beq	.L287
 6988              		.loc 1 1539 0 discriminator 2
 6989 2cc0 1448     		ldr	r0, .L288+32
 6990 2cc2 40F20361 		movw	r1, #1539
 6991 2cc6 FFF7FEFF 		bl	assert_failed
 6992              	.L287:
1540:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 6993              		.loc 1 1540 0 is_stmt 1
 6994 2cca 7B68     		ldr	r3, [r7, #4]
 6995 2ccc 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 6996 2cce FB81     		strh	r3, [r7, #14]	@ movhi
1541:../SPL/src/stm32f10x_tim.c ****   /* Reset the OC2PE Bit */
1542:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2PE);
 6997              		.loc 1 1542 0
 6998 2cd0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 6999 2cd2 23F40063 		bic	r3, r3, #2048
 7000 2cd6 FB81     		strh	r3, [r7, #14]	@ movhi
1543:../SPL/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1544:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
 7001              		.loc 1 1544 0
 7002 2cd8 7B88     		ldrh	r3, [r7, #2]	@ movhi
 7003 2cda 4FEA0323 		lsl	r3, r3, #8
 7004 2cde 9AB2     		uxth	r2, r3
 7005 2ce0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7006 2ce2 1343     		orrs	r3, r3, r2
 7007 2ce4 FB81     		strh	r3, [r7, #14]	@ movhi
1545:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1546:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 7008              		.loc 1 1546 0
 7009 2ce6 7B68     		ldr	r3, [r7, #4]
 7010 2ce8 FA89     		ldrh	r2, [r7, #14]	@ movhi
 7011 2cea 1A83     		strh	r2, [r3, #24]	@ movhi
1547:../SPL/src/stm32f10x_tim.c **** }
 7012              		.loc 1 1547 0
 7013 2cec 07F11007 		add	r7, r7, #16
 7014 2cf0 BD46     		mov	sp, r7
 7015 2cf2 80BD     		pop	{r7, pc}
 7016              	.L289:
 7017              		.align	2
 7018              	.L288:
 7019 2cf4 002C0140 		.word	1073818624
 7020 2cf8 00040040 		.word	1073742848
 7021 2cfc 00080040 		.word	1073743872
 7022 2d00 000C0040 		.word	1073744896
 7023 2d04 00340140 		.word	1073820672
 7024 2d08 004C0140 		.word	1073826816
 7025 2d0c 00180040 		.word	1073747968
 7026 2d10 00400140 		.word	1073823744
 7027 2d14 00000000 		.word	.LC0
 7028              		.cfi_endproc
 7029              	.LFE67:
 7031              		.align	2
 7032              		.global	TIM_OC3PreloadConfig
 7033              		.thumb
 7034              		.thumb_func
 7036              	TIM_OC3PreloadConfig:
 7037              	.LFB68:
1548:../SPL/src/stm32f10x_tim.c **** 
1549:../SPL/src/stm32f10x_tim.c **** /**
1550:../SPL/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1551:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1552:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1553:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1554:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1555:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1556:../SPL/src/stm32f10x_tim.c ****   * @retval None
1557:../SPL/src/stm32f10x_tim.c ****   */
1558:../SPL/src/stm32f10x_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1559:../SPL/src/stm32f10x_tim.c **** {
 7038              		.loc 1 1559 0
 7039              		.cfi_startproc
 7040              		@ args = 0, pretend = 0, frame = 16
 7041              		@ frame_needed = 1, uses_anonymous_args = 0
 7042 2d18 80B5     		push	{r7, lr}
 7043              	.LCFI117:
 7044              		.cfi_def_cfa_offset 8
 7045              		.cfi_offset 7, -8
 7046              		.cfi_offset 14, -4
 7047 2d1a 84B0     		sub	sp, sp, #16
 7048              	.LCFI118:
 7049              		.cfi_def_cfa_offset 24
 7050 2d1c 00AF     		add	r7, sp, #0
 7051              	.LCFI119:
 7052              		.cfi_def_cfa_register 7
 7053 2d1e 7860     		str	r0, [r7, #4]
 7054 2d20 0B46     		mov	r3, r1
 7055 2d22 7B80     		strh	r3, [r7, #2]	@ movhi
1560:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 7056              		.loc 1 1560 0
 7057 2d24 4FF00003 		mov	r3, #0
 7058 2d28 FB81     		strh	r3, [r7, #14]	@ movhi
1561:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1562:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 7059              		.loc 1 1562 0
 7060 2d2a 7A68     		ldr	r2, [r7, #4]
 7061 2d2c 1C4B     		ldr	r3, .L293
 7062 2d2e 9A42     		cmp	r2, r3
 7063 2d30 18D0     		beq	.L291
 7064              		.loc 1 1562 0 is_stmt 0 discriminator 1
 7065 2d32 7B68     		ldr	r3, [r7, #4]
 7066 2d34 B3F1804F 		cmp	r3, #1073741824
 7067 2d38 14D0     		beq	.L291
 7068              		.loc 1 1562 0 discriminator 2
 7069 2d3a 7A68     		ldr	r2, [r7, #4]
 7070 2d3c 194B     		ldr	r3, .L293+4
 7071 2d3e 9A42     		cmp	r2, r3
 7072 2d40 10D0     		beq	.L291
 7073              		.loc 1 1562 0 discriminator 3
 7074 2d42 7A68     		ldr	r2, [r7, #4]
 7075 2d44 184B     		ldr	r3, .L293+8
 7076 2d46 9A42     		cmp	r2, r3
 7077 2d48 0CD0     		beq	.L291
 7078              		.loc 1 1562 0 discriminator 4
 7079 2d4a 7A68     		ldr	r2, [r7, #4]
 7080 2d4c 174B     		ldr	r3, .L293+12
 7081 2d4e 9A42     		cmp	r2, r3
 7082 2d50 08D0     		beq	.L291
 7083              		.loc 1 1562 0 discriminator 5
 7084 2d52 7A68     		ldr	r2, [r7, #4]
 7085 2d54 164B     		ldr	r3, .L293+16
 7086 2d56 9A42     		cmp	r2, r3
 7087 2d58 04D0     		beq	.L291
 7088              		.loc 1 1562 0 discriminator 6
 7089 2d5a 1648     		ldr	r0, .L293+20
 7090 2d5c 40F21A61 		movw	r1, #1562
 7091 2d60 FFF7FEFF 		bl	assert_failed
 7092              	.L291:
1563:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
 7093              		.loc 1 1563 0 is_stmt 1
 7094 2d64 7B88     		ldrh	r3, [r7, #2]
 7095 2d66 082B     		cmp	r3, #8
 7096 2d68 07D0     		beq	.L292
 7097              		.loc 1 1563 0 is_stmt 0 discriminator 1
 7098 2d6a 7B88     		ldrh	r3, [r7, #2]
 7099 2d6c 002B     		cmp	r3, #0
 7100 2d6e 04D0     		beq	.L292
 7101              		.loc 1 1563 0 discriminator 2
 7102 2d70 1048     		ldr	r0, .L293+20
 7103 2d72 40F21B61 		movw	r1, #1563
 7104 2d76 FFF7FEFF 		bl	assert_failed
 7105              	.L292:
1564:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 7106              		.loc 1 1564 0 is_stmt 1
 7107 2d7a 7B68     		ldr	r3, [r7, #4]
 7108 2d7c 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 7109 2d7e FB81     		strh	r3, [r7, #14]	@ movhi
1565:../SPL/src/stm32f10x_tim.c ****   /* Reset the OC3PE Bit */
1566:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3PE);
 7110              		.loc 1 1566 0
 7111 2d80 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7112 2d82 23F00803 		bic	r3, r3, #8
 7113 2d86 FB81     		strh	r3, [r7, #14]	@ movhi
1567:../SPL/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1568:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCPreload;
 7114              		.loc 1 1568 0
 7115 2d88 FA89     		ldrh	r2, [r7, #14]	@ movhi
 7116 2d8a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 7117 2d8c 1343     		orrs	r3, r3, r2
 7118 2d8e FB81     		strh	r3, [r7, #14]	@ movhi
1569:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1570:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 7119              		.loc 1 1570 0
 7120 2d90 7B68     		ldr	r3, [r7, #4]
 7121 2d92 FA89     		ldrh	r2, [r7, #14]	@ movhi
 7122 2d94 9A83     		strh	r2, [r3, #28]	@ movhi
1571:../SPL/src/stm32f10x_tim.c **** }
 7123              		.loc 1 1571 0
 7124 2d96 07F11007 		add	r7, r7, #16
 7125 2d9a BD46     		mov	sp, r7
 7126 2d9c 80BD     		pop	{r7, pc}
 7127              	.L294:
 7128 2d9e 00BF     		.align	2
 7129              	.L293:
 7130 2da0 002C0140 		.word	1073818624
 7131 2da4 00040040 		.word	1073742848
 7132 2da8 00080040 		.word	1073743872
 7133 2dac 000C0040 		.word	1073744896
 7134 2db0 00340140 		.word	1073820672
 7135 2db4 00000000 		.word	.LC0
 7136              		.cfi_endproc
 7137              	.LFE68:
 7139              		.align	2
 7140              		.global	TIM_OC4PreloadConfig
 7141              		.thumb
 7142              		.thumb_func
 7144              	TIM_OC4PreloadConfig:
 7145              	.LFB69:
1572:../SPL/src/stm32f10x_tim.c **** 
1573:../SPL/src/stm32f10x_tim.c **** /**
1574:../SPL/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1575:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1576:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1577:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1578:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1579:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1580:../SPL/src/stm32f10x_tim.c ****   * @retval None
1581:../SPL/src/stm32f10x_tim.c ****   */
1582:../SPL/src/stm32f10x_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1583:../SPL/src/stm32f10x_tim.c **** {
 7146              		.loc 1 1583 0
 7147              		.cfi_startproc
 7148              		@ args = 0, pretend = 0, frame = 16
 7149              		@ frame_needed = 1, uses_anonymous_args = 0
 7150 2db8 80B5     		push	{r7, lr}
 7151              	.LCFI120:
 7152              		.cfi_def_cfa_offset 8
 7153              		.cfi_offset 7, -8
 7154              		.cfi_offset 14, -4
 7155 2dba 84B0     		sub	sp, sp, #16
 7156              	.LCFI121:
 7157              		.cfi_def_cfa_offset 24
 7158 2dbc 00AF     		add	r7, sp, #0
 7159              	.LCFI122:
 7160              		.cfi_def_cfa_register 7
 7161 2dbe 7860     		str	r0, [r7, #4]
 7162 2dc0 0B46     		mov	r3, r1
 7163 2dc2 7B80     		strh	r3, [r7, #2]	@ movhi
1584:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 7164              		.loc 1 1584 0
 7165 2dc4 4FF00003 		mov	r3, #0
 7166 2dc8 FB81     		strh	r3, [r7, #14]	@ movhi
1585:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1586:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 7167              		.loc 1 1586 0
 7168 2dca 7A68     		ldr	r2, [r7, #4]
 7169 2dcc 1D4B     		ldr	r3, .L298
 7170 2dce 9A42     		cmp	r2, r3
 7171 2dd0 18D0     		beq	.L296
 7172              		.loc 1 1586 0 is_stmt 0 discriminator 1
 7173 2dd2 7B68     		ldr	r3, [r7, #4]
 7174 2dd4 B3F1804F 		cmp	r3, #1073741824
 7175 2dd8 14D0     		beq	.L296
 7176              		.loc 1 1586 0 discriminator 2
 7177 2dda 7A68     		ldr	r2, [r7, #4]
 7178 2ddc 1A4B     		ldr	r3, .L298+4
 7179 2dde 9A42     		cmp	r2, r3
 7180 2de0 10D0     		beq	.L296
 7181              		.loc 1 1586 0 discriminator 3
 7182 2de2 7A68     		ldr	r2, [r7, #4]
 7183 2de4 194B     		ldr	r3, .L298+8
 7184 2de6 9A42     		cmp	r2, r3
 7185 2de8 0CD0     		beq	.L296
 7186              		.loc 1 1586 0 discriminator 4
 7187 2dea 7A68     		ldr	r2, [r7, #4]
 7188 2dec 184B     		ldr	r3, .L298+12
 7189 2dee 9A42     		cmp	r2, r3
 7190 2df0 08D0     		beq	.L296
 7191              		.loc 1 1586 0 discriminator 5
 7192 2df2 7A68     		ldr	r2, [r7, #4]
 7193 2df4 174B     		ldr	r3, .L298+16
 7194 2df6 9A42     		cmp	r2, r3
 7195 2df8 04D0     		beq	.L296
 7196              		.loc 1 1586 0 discriminator 6
 7197 2dfa 1748     		ldr	r0, .L298+20
 7198 2dfc 40F23261 		movw	r1, #1586
 7199 2e00 FFF7FEFF 		bl	assert_failed
 7200              	.L296:
1587:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
 7201              		.loc 1 1587 0 is_stmt 1
 7202 2e04 7B88     		ldrh	r3, [r7, #2]
 7203 2e06 082B     		cmp	r3, #8
 7204 2e08 07D0     		beq	.L297
 7205              		.loc 1 1587 0 is_stmt 0 discriminator 1
 7206 2e0a 7B88     		ldrh	r3, [r7, #2]
 7207 2e0c 002B     		cmp	r3, #0
 7208 2e0e 04D0     		beq	.L297
 7209              		.loc 1 1587 0 discriminator 2
 7210 2e10 1148     		ldr	r0, .L298+20
 7211 2e12 40F23361 		movw	r1, #1587
 7212 2e16 FFF7FEFF 		bl	assert_failed
 7213              	.L297:
1588:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 7214              		.loc 1 1588 0 is_stmt 1
 7215 2e1a 7B68     		ldr	r3, [r7, #4]
 7216 2e1c 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 7217 2e1e FB81     		strh	r3, [r7, #14]	@ movhi
1589:../SPL/src/stm32f10x_tim.c ****   /* Reset the OC4PE Bit */
1590:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4PE);
 7218              		.loc 1 1590 0
 7219 2e20 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7220 2e22 23F40063 		bic	r3, r3, #2048
 7221 2e26 FB81     		strh	r3, [r7, #14]	@ movhi
1591:../SPL/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1592:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
 7222              		.loc 1 1592 0
 7223 2e28 7B88     		ldrh	r3, [r7, #2]	@ movhi
 7224 2e2a 4FEA0323 		lsl	r3, r3, #8
 7225 2e2e 9AB2     		uxth	r2, r3
 7226 2e30 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7227 2e32 1343     		orrs	r3, r3, r2
 7228 2e34 FB81     		strh	r3, [r7, #14]	@ movhi
1593:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1594:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 7229              		.loc 1 1594 0
 7230 2e36 7B68     		ldr	r3, [r7, #4]
 7231 2e38 FA89     		ldrh	r2, [r7, #14]	@ movhi
 7232 2e3a 9A83     		strh	r2, [r3, #28]	@ movhi
1595:../SPL/src/stm32f10x_tim.c **** }
 7233              		.loc 1 1595 0
 7234 2e3c 07F11007 		add	r7, r7, #16
 7235 2e40 BD46     		mov	sp, r7
 7236 2e42 80BD     		pop	{r7, pc}
 7237              	.L299:
 7238              		.align	2
 7239              	.L298:
 7240 2e44 002C0140 		.word	1073818624
 7241 2e48 00040040 		.word	1073742848
 7242 2e4c 00080040 		.word	1073743872
 7243 2e50 000C0040 		.word	1073744896
 7244 2e54 00340140 		.word	1073820672
 7245 2e58 00000000 		.word	.LC0
 7246              		.cfi_endproc
 7247              	.LFE69:
 7249              		.align	2
 7250              		.global	TIM_OC1FastConfig
 7251              		.thumb
 7252              		.thumb_func
 7254              	TIM_OC1FastConfig:
 7255              	.LFB70:
1596:../SPL/src/stm32f10x_tim.c **** 
1597:../SPL/src/stm32f10x_tim.c **** /**
1598:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1599:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
1600:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1601:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1602:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1603:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1604:../SPL/src/stm32f10x_tim.c ****   * @retval None
1605:../SPL/src/stm32f10x_tim.c ****   */
1606:../SPL/src/stm32f10x_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1607:../SPL/src/stm32f10x_tim.c **** {
 7256              		.loc 1 1607 0
 7257              		.cfi_startproc
 7258              		@ args = 0, pretend = 0, frame = 16
 7259              		@ frame_needed = 1, uses_anonymous_args = 0
 7260 2e5c 80B5     		push	{r7, lr}
 7261              	.LCFI123:
 7262              		.cfi_def_cfa_offset 8
 7263              		.cfi_offset 7, -8
 7264              		.cfi_offset 14, -4
 7265 2e5e 84B0     		sub	sp, sp, #16
 7266              	.LCFI124:
 7267              		.cfi_def_cfa_offset 24
 7268 2e60 00AF     		add	r7, sp, #0
 7269              	.LCFI125:
 7270              		.cfi_def_cfa_register 7
 7271 2e62 7860     		str	r0, [r7, #4]
 7272 2e64 0B46     		mov	r3, r1
 7273 2e66 7B80     		strh	r3, [r7, #2]	@ movhi
1608:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 7274              		.loc 1 1608 0
 7275 2e68 4FF00003 		mov	r3, #0
 7276 2e6c FB81     		strh	r3, [r7, #14]	@ movhi
1609:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1610:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 7277              		.loc 1 1610 0
 7278 2e6e 7A68     		ldr	r2, [r7, #4]
 7279 2e70 2E4B     		ldr	r3, .L303
 7280 2e72 9A42     		cmp	r2, r3
 7281 2e74 3CD0     		beq	.L301
 7282              		.loc 1 1610 0 is_stmt 0 discriminator 1
 7283 2e76 7B68     		ldr	r3, [r7, #4]
 7284 2e78 B3F1804F 		cmp	r3, #1073741824
 7285 2e7c 38D0     		beq	.L301
 7286              		.loc 1 1610 0 discriminator 2
 7287 2e7e 7A68     		ldr	r2, [r7, #4]
 7288 2e80 2B4B     		ldr	r3, .L303+4
 7289 2e82 9A42     		cmp	r2, r3
 7290 2e84 34D0     		beq	.L301
 7291              		.loc 1 1610 0 discriminator 3
 7292 2e86 7A68     		ldr	r2, [r7, #4]
 7293 2e88 2A4B     		ldr	r3, .L303+8
 7294 2e8a 9A42     		cmp	r2, r3
 7295 2e8c 30D0     		beq	.L301
 7296              		.loc 1 1610 0 discriminator 4
 7297 2e8e 7A68     		ldr	r2, [r7, #4]
 7298 2e90 294B     		ldr	r3, .L303+12
 7299 2e92 9A42     		cmp	r2, r3
 7300 2e94 2CD0     		beq	.L301
 7301              		.loc 1 1610 0 discriminator 5
 7302 2e96 7A68     		ldr	r2, [r7, #4]
 7303 2e98 284B     		ldr	r3, .L303+16
 7304 2e9a 9A42     		cmp	r2, r3
 7305 2e9c 28D0     		beq	.L301
 7306              		.loc 1 1610 0 discriminator 6
 7307 2e9e 7A68     		ldr	r2, [r7, #4]
 7308 2ea0 274B     		ldr	r3, .L303+20
 7309 2ea2 9A42     		cmp	r2, r3
 7310 2ea4 24D0     		beq	.L301
 7311              		.loc 1 1610 0 discriminator 7
 7312 2ea6 7A68     		ldr	r2, [r7, #4]
 7313 2ea8 264B     		ldr	r3, .L303+24
 7314 2eaa 9A42     		cmp	r2, r3
 7315 2eac 20D0     		beq	.L301
 7316              		.loc 1 1610 0 discriminator 8
 7317 2eae 7A68     		ldr	r2, [r7, #4]
 7318 2eb0 254B     		ldr	r3, .L303+28
 7319 2eb2 9A42     		cmp	r2, r3
 7320 2eb4 1CD0     		beq	.L301
 7321              		.loc 1 1610 0 discriminator 9
 7322 2eb6 7A68     		ldr	r2, [r7, #4]
 7323 2eb8 244B     		ldr	r3, .L303+32
 7324 2eba 9A42     		cmp	r2, r3
 7325 2ebc 18D0     		beq	.L301
 7326              		.loc 1 1610 0 discriminator 10
 7327 2ebe 7A68     		ldr	r2, [r7, #4]
 7328 2ec0 234B     		ldr	r3, .L303+36
 7329 2ec2 9A42     		cmp	r2, r3
 7330 2ec4 14D0     		beq	.L301
 7331              		.loc 1 1610 0 discriminator 11
 7332 2ec6 7A68     		ldr	r2, [r7, #4]
 7333 2ec8 224B     		ldr	r3, .L303+40
 7334 2eca 9A42     		cmp	r2, r3
 7335 2ecc 10D0     		beq	.L301
 7336              		.loc 1 1610 0 discriminator 12
 7337 2ece 7A68     		ldr	r2, [r7, #4]
 7338 2ed0 214B     		ldr	r3, .L303+44
 7339 2ed2 9A42     		cmp	r2, r3
 7340 2ed4 0CD0     		beq	.L301
 7341              		.loc 1 1610 0 discriminator 13
 7342 2ed6 7A68     		ldr	r2, [r7, #4]
 7343 2ed8 204B     		ldr	r3, .L303+48
 7344 2eda 9A42     		cmp	r2, r3
 7345 2edc 08D0     		beq	.L301
 7346              		.loc 1 1610 0 discriminator 14
 7347 2ede 7A68     		ldr	r2, [r7, #4]
 7348 2ee0 1F4B     		ldr	r3, .L303+52
 7349 2ee2 9A42     		cmp	r2, r3
 7350 2ee4 04D0     		beq	.L301
 7351              		.loc 1 1610 0 discriminator 15
 7352 2ee6 1F48     		ldr	r0, .L303+56
 7353 2ee8 40F24A61 		movw	r1, #1610
 7354 2eec FFF7FEFF 		bl	assert_failed
 7355              	.L301:
1611:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
 7356              		.loc 1 1611 0 is_stmt 1
 7357 2ef0 7B88     		ldrh	r3, [r7, #2]
 7358 2ef2 042B     		cmp	r3, #4
 7359 2ef4 07D0     		beq	.L302
 7360              		.loc 1 1611 0 is_stmt 0 discriminator 1
 7361 2ef6 7B88     		ldrh	r3, [r7, #2]
 7362 2ef8 002B     		cmp	r3, #0
 7363 2efa 04D0     		beq	.L302
 7364              		.loc 1 1611 0 discriminator 2
 7365 2efc 1948     		ldr	r0, .L303+56
 7366 2efe 40F24B61 		movw	r1, #1611
 7367 2f02 FFF7FEFF 		bl	assert_failed
 7368              	.L302:
1612:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
1613:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 7369              		.loc 1 1613 0 is_stmt 1
 7370 2f06 7B68     		ldr	r3, [r7, #4]
 7371 2f08 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 7372 2f0a FB81     		strh	r3, [r7, #14]	@ movhi
1614:../SPL/src/stm32f10x_tim.c ****   /* Reset the OC1FE Bit */
1615:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1FE);
 7373              		.loc 1 1615 0
 7374 2f0c FB89     		ldrh	r3, [r7, #14]	@ movhi
 7375 2f0e 23F00403 		bic	r3, r3, #4
 7376 2f12 FB81     		strh	r3, [r7, #14]	@ movhi
1616:../SPL/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1617:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCFast;
 7377              		.loc 1 1617 0
 7378 2f14 FA89     		ldrh	r2, [r7, #14]	@ movhi
 7379 2f16 7B88     		ldrh	r3, [r7, #2]	@ movhi
 7380 2f18 1343     		orrs	r3, r3, r2
 7381 2f1a FB81     		strh	r3, [r7, #14]	@ movhi
1618:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
1619:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 7382              		.loc 1 1619 0
 7383 2f1c 7B68     		ldr	r3, [r7, #4]
 7384 2f1e FA89     		ldrh	r2, [r7, #14]	@ movhi
 7385 2f20 1A83     		strh	r2, [r3, #24]	@ movhi
1620:../SPL/src/stm32f10x_tim.c **** }
 7386              		.loc 1 1620 0
 7387 2f22 07F11007 		add	r7, r7, #16
 7388 2f26 BD46     		mov	sp, r7
 7389 2f28 80BD     		pop	{r7, pc}
 7390              	.L304:
 7391 2f2a 00BF     		.align	2
 7392              	.L303:
 7393 2f2c 002C0140 		.word	1073818624
 7394 2f30 00040040 		.word	1073742848
 7395 2f34 00080040 		.word	1073743872
 7396 2f38 000C0040 		.word	1073744896
 7397 2f3c 00340140 		.word	1073820672
 7398 2f40 004C0140 		.word	1073826816
 7399 2f44 00500140 		.word	1073827840
 7400 2f48 00540140 		.word	1073828864
 7401 2f4c 00180040 		.word	1073747968
 7402 2f50 001C0040 		.word	1073748992
 7403 2f54 00200040 		.word	1073750016
 7404 2f58 00400140 		.word	1073823744
 7405 2f5c 00440140 		.word	1073824768
 7406 2f60 00480140 		.word	1073825792
 7407 2f64 00000000 		.word	.LC0
 7408              		.cfi_endproc
 7409              	.LFE70:
 7411              		.align	2
 7412              		.global	TIM_OC2FastConfig
 7413              		.thumb
 7414              		.thumb_func
 7416              	TIM_OC2FastConfig:
 7417              	.LFB71:
1621:../SPL/src/stm32f10x_tim.c **** 
1622:../SPL/src/stm32f10x_tim.c **** /**
1623:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1624:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select 
1625:../SPL/src/stm32f10x_tim.c ****   *         the TIM peripheral.
1626:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1627:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1628:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1629:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1630:../SPL/src/stm32f10x_tim.c ****   * @retval None
1631:../SPL/src/stm32f10x_tim.c ****   */
1632:../SPL/src/stm32f10x_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1633:../SPL/src/stm32f10x_tim.c **** {
 7418              		.loc 1 1633 0
 7419              		.cfi_startproc
 7420              		@ args = 0, pretend = 0, frame = 16
 7421              		@ frame_needed = 1, uses_anonymous_args = 0
 7422 2f68 80B5     		push	{r7, lr}
 7423              	.LCFI126:
 7424              		.cfi_def_cfa_offset 8
 7425              		.cfi_offset 7, -8
 7426              		.cfi_offset 14, -4
 7427 2f6a 84B0     		sub	sp, sp, #16
 7428              	.LCFI127:
 7429              		.cfi_def_cfa_offset 24
 7430 2f6c 00AF     		add	r7, sp, #0
 7431              	.LCFI128:
 7432              		.cfi_def_cfa_register 7
 7433 2f6e 7860     		str	r0, [r7, #4]
 7434 2f70 0B46     		mov	r3, r1
 7435 2f72 7B80     		strh	r3, [r7, #2]	@ movhi
1634:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 7436              		.loc 1 1634 0
 7437 2f74 4FF00003 		mov	r3, #0
 7438 2f78 FB81     		strh	r3, [r7, #14]	@ movhi
1635:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1636:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 7439              		.loc 1 1636 0
 7440 2f7a 7A68     		ldr	r2, [r7, #4]
 7441 2f7c 234B     		ldr	r3, .L308
 7442 2f7e 9A42     		cmp	r2, r3
 7443 2f80 24D0     		beq	.L306
 7444              		.loc 1 1636 0 is_stmt 0 discriminator 1
 7445 2f82 7B68     		ldr	r3, [r7, #4]
 7446 2f84 B3F1804F 		cmp	r3, #1073741824
 7447 2f88 20D0     		beq	.L306
 7448              		.loc 1 1636 0 discriminator 2
 7449 2f8a 7A68     		ldr	r2, [r7, #4]
 7450 2f8c 204B     		ldr	r3, .L308+4
 7451 2f8e 9A42     		cmp	r2, r3
 7452 2f90 1CD0     		beq	.L306
 7453              		.loc 1 1636 0 discriminator 3
 7454 2f92 7A68     		ldr	r2, [r7, #4]
 7455 2f94 1F4B     		ldr	r3, .L308+8
 7456 2f96 9A42     		cmp	r2, r3
 7457 2f98 18D0     		beq	.L306
 7458              		.loc 1 1636 0 discriminator 4
 7459 2f9a 7A68     		ldr	r2, [r7, #4]
 7460 2f9c 1E4B     		ldr	r3, .L308+12
 7461 2f9e 9A42     		cmp	r2, r3
 7462 2fa0 14D0     		beq	.L306
 7463              		.loc 1 1636 0 discriminator 5
 7464 2fa2 7A68     		ldr	r2, [r7, #4]
 7465 2fa4 1D4B     		ldr	r3, .L308+16
 7466 2fa6 9A42     		cmp	r2, r3
 7467 2fa8 10D0     		beq	.L306
 7468              		.loc 1 1636 0 discriminator 6
 7469 2faa 7A68     		ldr	r2, [r7, #4]
 7470 2fac 1C4B     		ldr	r3, .L308+20
 7471 2fae 9A42     		cmp	r2, r3
 7472 2fb0 0CD0     		beq	.L306
 7473              		.loc 1 1636 0 discriminator 7
 7474 2fb2 7A68     		ldr	r2, [r7, #4]
 7475 2fb4 1B4B     		ldr	r3, .L308+24
 7476 2fb6 9A42     		cmp	r2, r3
 7477 2fb8 08D0     		beq	.L306
 7478              		.loc 1 1636 0 discriminator 8
 7479 2fba 7A68     		ldr	r2, [r7, #4]
 7480 2fbc 1A4B     		ldr	r3, .L308+28
 7481 2fbe 9A42     		cmp	r2, r3
 7482 2fc0 04D0     		beq	.L306
 7483              		.loc 1 1636 0 discriminator 9
 7484 2fc2 1A48     		ldr	r0, .L308+32
 7485 2fc4 40F26461 		movw	r1, #1636
 7486 2fc8 FFF7FEFF 		bl	assert_failed
 7487              	.L306:
1637:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
 7488              		.loc 1 1637 0 is_stmt 1
 7489 2fcc 7B88     		ldrh	r3, [r7, #2]
 7490 2fce 042B     		cmp	r3, #4
 7491 2fd0 07D0     		beq	.L307
 7492              		.loc 1 1637 0 is_stmt 0 discriminator 1
 7493 2fd2 7B88     		ldrh	r3, [r7, #2]
 7494 2fd4 002B     		cmp	r3, #0
 7495 2fd6 04D0     		beq	.L307
 7496              		.loc 1 1637 0 discriminator 2
 7497 2fd8 1448     		ldr	r0, .L308+32
 7498 2fda 40F26561 		movw	r1, #1637
 7499 2fde FFF7FEFF 		bl	assert_failed
 7500              	.L307:
1638:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
1639:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 7501              		.loc 1 1639 0 is_stmt 1
 7502 2fe2 7B68     		ldr	r3, [r7, #4]
 7503 2fe4 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 7504 2fe6 FB81     		strh	r3, [r7, #14]	@ movhi
1640:../SPL/src/stm32f10x_tim.c ****   /* Reset the OC2FE Bit */
1641:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2FE);
 7505              		.loc 1 1641 0
 7506 2fe8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7507 2fea 23F48063 		bic	r3, r3, #1024
 7508 2fee FB81     		strh	r3, [r7, #14]	@ movhi
1642:../SPL/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1643:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
 7509              		.loc 1 1643 0
 7510 2ff0 7B88     		ldrh	r3, [r7, #2]	@ movhi
 7511 2ff2 4FEA0323 		lsl	r3, r3, #8
 7512 2ff6 9AB2     		uxth	r2, r3
 7513 2ff8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7514 2ffa 1343     		orrs	r3, r3, r2
 7515 2ffc FB81     		strh	r3, [r7, #14]	@ movhi
1644:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
1645:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 7516              		.loc 1 1645 0
 7517 2ffe 7B68     		ldr	r3, [r7, #4]
 7518 3000 FA89     		ldrh	r2, [r7, #14]	@ movhi
 7519 3002 1A83     		strh	r2, [r3, #24]	@ movhi
1646:../SPL/src/stm32f10x_tim.c **** }
 7520              		.loc 1 1646 0
 7521 3004 07F11007 		add	r7, r7, #16
 7522 3008 BD46     		mov	sp, r7
 7523 300a 80BD     		pop	{r7, pc}
 7524              	.L309:
 7525              		.align	2
 7526              	.L308:
 7527 300c 002C0140 		.word	1073818624
 7528 3010 00040040 		.word	1073742848
 7529 3014 00080040 		.word	1073743872
 7530 3018 000C0040 		.word	1073744896
 7531 301c 00340140 		.word	1073820672
 7532 3020 004C0140 		.word	1073826816
 7533 3024 00180040 		.word	1073747968
 7534 3028 00400140 		.word	1073823744
 7535 302c 00000000 		.word	.LC0
 7536              		.cfi_endproc
 7537              	.LFE71:
 7539              		.align	2
 7540              		.global	TIM_OC3FastConfig
 7541              		.thumb
 7542              		.thumb_func
 7544              	TIM_OC3FastConfig:
 7545              	.LFB72:
1647:../SPL/src/stm32f10x_tim.c **** 
1648:../SPL/src/stm32f10x_tim.c **** /**
1649:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1650:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1651:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1652:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1653:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1654:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1655:../SPL/src/stm32f10x_tim.c ****   * @retval None
1656:../SPL/src/stm32f10x_tim.c ****   */
1657:../SPL/src/stm32f10x_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1658:../SPL/src/stm32f10x_tim.c **** {
 7546              		.loc 1 1658 0
 7547              		.cfi_startproc
 7548              		@ args = 0, pretend = 0, frame = 16
 7549              		@ frame_needed = 1, uses_anonymous_args = 0
 7550 3030 80B5     		push	{r7, lr}
 7551              	.LCFI129:
 7552              		.cfi_def_cfa_offset 8
 7553              		.cfi_offset 7, -8
 7554              		.cfi_offset 14, -4
 7555 3032 84B0     		sub	sp, sp, #16
 7556              	.LCFI130:
 7557              		.cfi_def_cfa_offset 24
 7558 3034 00AF     		add	r7, sp, #0
 7559              	.LCFI131:
 7560              		.cfi_def_cfa_register 7
 7561 3036 7860     		str	r0, [r7, #4]
 7562 3038 0B46     		mov	r3, r1
 7563 303a 7B80     		strh	r3, [r7, #2]	@ movhi
1659:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 7564              		.loc 1 1659 0
 7565 303c 4FF00003 		mov	r3, #0
 7566 3040 FB81     		strh	r3, [r7, #14]	@ movhi
1660:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1661:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 7567              		.loc 1 1661 0
 7568 3042 7A68     		ldr	r2, [r7, #4]
 7569 3044 1C4B     		ldr	r3, .L313
 7570 3046 9A42     		cmp	r2, r3
 7571 3048 18D0     		beq	.L311
 7572              		.loc 1 1661 0 is_stmt 0 discriminator 1
 7573 304a 7B68     		ldr	r3, [r7, #4]
 7574 304c B3F1804F 		cmp	r3, #1073741824
 7575 3050 14D0     		beq	.L311
 7576              		.loc 1 1661 0 discriminator 2
 7577 3052 7A68     		ldr	r2, [r7, #4]
 7578 3054 194B     		ldr	r3, .L313+4
 7579 3056 9A42     		cmp	r2, r3
 7580 3058 10D0     		beq	.L311
 7581              		.loc 1 1661 0 discriminator 3
 7582 305a 7A68     		ldr	r2, [r7, #4]
 7583 305c 184B     		ldr	r3, .L313+8
 7584 305e 9A42     		cmp	r2, r3
 7585 3060 0CD0     		beq	.L311
 7586              		.loc 1 1661 0 discriminator 4
 7587 3062 7A68     		ldr	r2, [r7, #4]
 7588 3064 174B     		ldr	r3, .L313+12
 7589 3066 9A42     		cmp	r2, r3
 7590 3068 08D0     		beq	.L311
 7591              		.loc 1 1661 0 discriminator 5
 7592 306a 7A68     		ldr	r2, [r7, #4]
 7593 306c 164B     		ldr	r3, .L313+16
 7594 306e 9A42     		cmp	r2, r3
 7595 3070 04D0     		beq	.L311
 7596              		.loc 1 1661 0 discriminator 6
 7597 3072 1648     		ldr	r0, .L313+20
 7598 3074 40F27D61 		movw	r1, #1661
 7599 3078 FFF7FEFF 		bl	assert_failed
 7600              	.L311:
1662:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
 7601              		.loc 1 1662 0 is_stmt 1
 7602 307c 7B88     		ldrh	r3, [r7, #2]
 7603 307e 042B     		cmp	r3, #4
 7604 3080 07D0     		beq	.L312
 7605              		.loc 1 1662 0 is_stmt 0 discriminator 1
 7606 3082 7B88     		ldrh	r3, [r7, #2]
 7607 3084 002B     		cmp	r3, #0
 7608 3086 04D0     		beq	.L312
 7609              		.loc 1 1662 0 discriminator 2
 7610 3088 1048     		ldr	r0, .L313+20
 7611 308a 40F27E61 		movw	r1, #1662
 7612 308e FFF7FEFF 		bl	assert_failed
 7613              	.L312:
1663:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
1664:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 7614              		.loc 1 1664 0 is_stmt 1
 7615 3092 7B68     		ldr	r3, [r7, #4]
 7616 3094 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 7617 3096 FB81     		strh	r3, [r7, #14]	@ movhi
1665:../SPL/src/stm32f10x_tim.c ****   /* Reset the OC3FE Bit */
1666:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3FE);
 7618              		.loc 1 1666 0
 7619 3098 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7620 309a 23F00403 		bic	r3, r3, #4
 7621 309e FB81     		strh	r3, [r7, #14]	@ movhi
1667:../SPL/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1668:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCFast;
 7622              		.loc 1 1668 0
 7623 30a0 FA89     		ldrh	r2, [r7, #14]	@ movhi
 7624 30a2 7B88     		ldrh	r3, [r7, #2]	@ movhi
 7625 30a4 1343     		orrs	r3, r3, r2
 7626 30a6 FB81     		strh	r3, [r7, #14]	@ movhi
1669:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
1670:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 7627              		.loc 1 1670 0
 7628 30a8 7B68     		ldr	r3, [r7, #4]
 7629 30aa FA89     		ldrh	r2, [r7, #14]	@ movhi
 7630 30ac 9A83     		strh	r2, [r3, #28]	@ movhi
1671:../SPL/src/stm32f10x_tim.c **** }
 7631              		.loc 1 1671 0
 7632 30ae 07F11007 		add	r7, r7, #16
 7633 30b2 BD46     		mov	sp, r7
 7634 30b4 80BD     		pop	{r7, pc}
 7635              	.L314:
 7636 30b6 00BF     		.align	2
 7637              	.L313:
 7638 30b8 002C0140 		.word	1073818624
 7639 30bc 00040040 		.word	1073742848
 7640 30c0 00080040 		.word	1073743872
 7641 30c4 000C0040 		.word	1073744896
 7642 30c8 00340140 		.word	1073820672
 7643 30cc 00000000 		.word	.LC0
 7644              		.cfi_endproc
 7645              	.LFE72:
 7647              		.align	2
 7648              		.global	TIM_OC4FastConfig
 7649              		.thumb
 7650              		.thumb_func
 7652              	TIM_OC4FastConfig:
 7653              	.LFB73:
1672:../SPL/src/stm32f10x_tim.c **** 
1673:../SPL/src/stm32f10x_tim.c **** /**
1674:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1675:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1676:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1677:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1678:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1679:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1680:../SPL/src/stm32f10x_tim.c ****   * @retval None
1681:../SPL/src/stm32f10x_tim.c ****   */
1682:../SPL/src/stm32f10x_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1683:../SPL/src/stm32f10x_tim.c **** {
 7654              		.loc 1 1683 0
 7655              		.cfi_startproc
 7656              		@ args = 0, pretend = 0, frame = 16
 7657              		@ frame_needed = 1, uses_anonymous_args = 0
 7658 30d0 80B5     		push	{r7, lr}
 7659              	.LCFI132:
 7660              		.cfi_def_cfa_offset 8
 7661              		.cfi_offset 7, -8
 7662              		.cfi_offset 14, -4
 7663 30d2 84B0     		sub	sp, sp, #16
 7664              	.LCFI133:
 7665              		.cfi_def_cfa_offset 24
 7666 30d4 00AF     		add	r7, sp, #0
 7667              	.LCFI134:
 7668              		.cfi_def_cfa_register 7
 7669 30d6 7860     		str	r0, [r7, #4]
 7670 30d8 0B46     		mov	r3, r1
 7671 30da 7B80     		strh	r3, [r7, #2]	@ movhi
1684:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 7672              		.loc 1 1684 0
 7673 30dc 4FF00003 		mov	r3, #0
 7674 30e0 FB81     		strh	r3, [r7, #14]	@ movhi
1685:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1686:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 7675              		.loc 1 1686 0
 7676 30e2 7A68     		ldr	r2, [r7, #4]
 7677 30e4 1D4B     		ldr	r3, .L318
 7678 30e6 9A42     		cmp	r2, r3
 7679 30e8 18D0     		beq	.L316
 7680              		.loc 1 1686 0 is_stmt 0 discriminator 1
 7681 30ea 7B68     		ldr	r3, [r7, #4]
 7682 30ec B3F1804F 		cmp	r3, #1073741824
 7683 30f0 14D0     		beq	.L316
 7684              		.loc 1 1686 0 discriminator 2
 7685 30f2 7A68     		ldr	r2, [r7, #4]
 7686 30f4 1A4B     		ldr	r3, .L318+4
 7687 30f6 9A42     		cmp	r2, r3
 7688 30f8 10D0     		beq	.L316
 7689              		.loc 1 1686 0 discriminator 3
 7690 30fa 7A68     		ldr	r2, [r7, #4]
 7691 30fc 194B     		ldr	r3, .L318+8
 7692 30fe 9A42     		cmp	r2, r3
 7693 3100 0CD0     		beq	.L316
 7694              		.loc 1 1686 0 discriminator 4
 7695 3102 7A68     		ldr	r2, [r7, #4]
 7696 3104 184B     		ldr	r3, .L318+12
 7697 3106 9A42     		cmp	r2, r3
 7698 3108 08D0     		beq	.L316
 7699              		.loc 1 1686 0 discriminator 5
 7700 310a 7A68     		ldr	r2, [r7, #4]
 7701 310c 174B     		ldr	r3, .L318+16
 7702 310e 9A42     		cmp	r2, r3
 7703 3110 04D0     		beq	.L316
 7704              		.loc 1 1686 0 discriminator 6
 7705 3112 1748     		ldr	r0, .L318+20
 7706 3114 40F29661 		movw	r1, #1686
 7707 3118 FFF7FEFF 		bl	assert_failed
 7708              	.L316:
1687:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
 7709              		.loc 1 1687 0 is_stmt 1
 7710 311c 7B88     		ldrh	r3, [r7, #2]
 7711 311e 042B     		cmp	r3, #4
 7712 3120 07D0     		beq	.L317
 7713              		.loc 1 1687 0 is_stmt 0 discriminator 1
 7714 3122 7B88     		ldrh	r3, [r7, #2]
 7715 3124 002B     		cmp	r3, #0
 7716 3126 04D0     		beq	.L317
 7717              		.loc 1 1687 0 discriminator 2
 7718 3128 1148     		ldr	r0, .L318+20
 7719 312a 40F29761 		movw	r1, #1687
 7720 312e FFF7FEFF 		bl	assert_failed
 7721              	.L317:
1688:../SPL/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
1689:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 7722              		.loc 1 1689 0 is_stmt 1
 7723 3132 7B68     		ldr	r3, [r7, #4]
 7724 3134 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 7725 3136 FB81     		strh	r3, [r7, #14]	@ movhi
1690:../SPL/src/stm32f10x_tim.c ****   /* Reset the OC4FE Bit */
1691:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4FE);
 7726              		.loc 1 1691 0
 7727 3138 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7728 313a 23F48063 		bic	r3, r3, #1024
 7729 313e FB81     		strh	r3, [r7, #14]	@ movhi
1692:../SPL/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1693:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
 7730              		.loc 1 1693 0
 7731 3140 7B88     		ldrh	r3, [r7, #2]	@ movhi
 7732 3142 4FEA0323 		lsl	r3, r3, #8
 7733 3146 9AB2     		uxth	r2, r3
 7734 3148 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7735 314a 1343     		orrs	r3, r3, r2
 7736 314c FB81     		strh	r3, [r7, #14]	@ movhi
1694:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
1695:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 7737              		.loc 1 1695 0
 7738 314e 7B68     		ldr	r3, [r7, #4]
 7739 3150 FA89     		ldrh	r2, [r7, #14]	@ movhi
 7740 3152 9A83     		strh	r2, [r3, #28]	@ movhi
1696:../SPL/src/stm32f10x_tim.c **** }
 7741              		.loc 1 1696 0
 7742 3154 07F11007 		add	r7, r7, #16
 7743 3158 BD46     		mov	sp, r7
 7744 315a 80BD     		pop	{r7, pc}
 7745              	.L319:
 7746              		.align	2
 7747              	.L318:
 7748 315c 002C0140 		.word	1073818624
 7749 3160 00040040 		.word	1073742848
 7750 3164 00080040 		.word	1073743872
 7751 3168 000C0040 		.word	1073744896
 7752 316c 00340140 		.word	1073820672
 7753 3170 00000000 		.word	.LC0
 7754              		.cfi_endproc
 7755              	.LFE73:
 7757              		.align	2
 7758              		.global	TIM_ClearOC1Ref
 7759              		.thumb
 7760              		.thumb_func
 7762              	TIM_ClearOC1Ref:
 7763              	.LFB74:
1697:../SPL/src/stm32f10x_tim.c **** 
1698:../SPL/src/stm32f10x_tim.c **** /**
1699:../SPL/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1700:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1701:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1702:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1703:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1704:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1705:../SPL/src/stm32f10x_tim.c ****   * @retval None
1706:../SPL/src/stm32f10x_tim.c ****   */
1707:../SPL/src/stm32f10x_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1708:../SPL/src/stm32f10x_tim.c **** {
 7764              		.loc 1 1708 0
 7765              		.cfi_startproc
 7766              		@ args = 0, pretend = 0, frame = 16
 7767              		@ frame_needed = 1, uses_anonymous_args = 0
 7768 3174 80B5     		push	{r7, lr}
 7769              	.LCFI135:
 7770              		.cfi_def_cfa_offset 8
 7771              		.cfi_offset 7, -8
 7772              		.cfi_offset 14, -4
 7773 3176 84B0     		sub	sp, sp, #16
 7774              	.LCFI136:
 7775              		.cfi_def_cfa_offset 24
 7776 3178 00AF     		add	r7, sp, #0
 7777              	.LCFI137:
 7778              		.cfi_def_cfa_register 7
 7779 317a 7860     		str	r0, [r7, #4]
 7780 317c 0B46     		mov	r3, r1
 7781 317e 7B80     		strh	r3, [r7, #2]	@ movhi
1709:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 7782              		.loc 1 1709 0
 7783 3180 4FF00003 		mov	r3, #0
 7784 3184 FB81     		strh	r3, [r7, #14]	@ movhi
1710:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1711:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 7785              		.loc 1 1711 0
 7786 3186 7A68     		ldr	r2, [r7, #4]
 7787 3188 1C4B     		ldr	r3, .L323
 7788 318a 9A42     		cmp	r2, r3
 7789 318c 18D0     		beq	.L321
 7790              		.loc 1 1711 0 is_stmt 0 discriminator 1
 7791 318e 7B68     		ldr	r3, [r7, #4]
 7792 3190 B3F1804F 		cmp	r3, #1073741824
 7793 3194 14D0     		beq	.L321
 7794              		.loc 1 1711 0 discriminator 2
 7795 3196 7A68     		ldr	r2, [r7, #4]
 7796 3198 194B     		ldr	r3, .L323+4
 7797 319a 9A42     		cmp	r2, r3
 7798 319c 10D0     		beq	.L321
 7799              		.loc 1 1711 0 discriminator 3
 7800 319e 7A68     		ldr	r2, [r7, #4]
 7801 31a0 184B     		ldr	r3, .L323+8
 7802 31a2 9A42     		cmp	r2, r3
 7803 31a4 0CD0     		beq	.L321
 7804              		.loc 1 1711 0 discriminator 4
 7805 31a6 7A68     		ldr	r2, [r7, #4]
 7806 31a8 174B     		ldr	r3, .L323+12
 7807 31aa 9A42     		cmp	r2, r3
 7808 31ac 08D0     		beq	.L321
 7809              		.loc 1 1711 0 discriminator 5
 7810 31ae 7A68     		ldr	r2, [r7, #4]
 7811 31b0 164B     		ldr	r3, .L323+16
 7812 31b2 9A42     		cmp	r2, r3
 7813 31b4 04D0     		beq	.L321
 7814              		.loc 1 1711 0 discriminator 6
 7815 31b6 1648     		ldr	r0, .L323+20
 7816 31b8 40F2AF61 		movw	r1, #1711
 7817 31bc FFF7FEFF 		bl	assert_failed
 7818              	.L321:
1712:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
 7819              		.loc 1 1712 0 is_stmt 1
 7820 31c0 7B88     		ldrh	r3, [r7, #2]
 7821 31c2 802B     		cmp	r3, #128
 7822 31c4 07D0     		beq	.L322
 7823              		.loc 1 1712 0 is_stmt 0 discriminator 1
 7824 31c6 7B88     		ldrh	r3, [r7, #2]
 7825 31c8 002B     		cmp	r3, #0
 7826 31ca 04D0     		beq	.L322
 7827              		.loc 1 1712 0 discriminator 2
 7828 31cc 1048     		ldr	r0, .L323+20
 7829 31ce 4FF4D661 		mov	r1, #1712
 7830 31d2 FFF7FEFF 		bl	assert_failed
 7831              	.L322:
1713:../SPL/src/stm32f10x_tim.c **** 
1714:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 7832              		.loc 1 1714 0 is_stmt 1
 7833 31d6 7B68     		ldr	r3, [r7, #4]
 7834 31d8 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 7835 31da FB81     		strh	r3, [r7, #14]	@ movhi
1715:../SPL/src/stm32f10x_tim.c **** 
1716:../SPL/src/stm32f10x_tim.c ****   /* Reset the OC1CE Bit */
1717:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1CE);
 7836              		.loc 1 1717 0
 7837 31dc FB89     		ldrh	r3, [r7, #14]	@ movhi
 7838 31de 23F08003 		bic	r3, r3, #128
 7839 31e2 FB81     		strh	r3, [r7, #14]	@ movhi
1718:../SPL/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1719:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCClear;
 7840              		.loc 1 1719 0
 7841 31e4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 7842 31e6 7B88     		ldrh	r3, [r7, #2]	@ movhi
 7843 31e8 1343     		orrs	r3, r3, r2
 7844 31ea FB81     		strh	r3, [r7, #14]	@ movhi
1720:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1721:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 7845              		.loc 1 1721 0
 7846 31ec 7B68     		ldr	r3, [r7, #4]
 7847 31ee FA89     		ldrh	r2, [r7, #14]	@ movhi
 7848 31f0 1A83     		strh	r2, [r3, #24]	@ movhi
1722:../SPL/src/stm32f10x_tim.c **** }
 7849              		.loc 1 1722 0
 7850 31f2 07F11007 		add	r7, r7, #16
 7851 31f6 BD46     		mov	sp, r7
 7852 31f8 80BD     		pop	{r7, pc}
 7853              	.L324:
 7854 31fa 00BF     		.align	2
 7855              	.L323:
 7856 31fc 002C0140 		.word	1073818624
 7857 3200 00040040 		.word	1073742848
 7858 3204 00080040 		.word	1073743872
 7859 3208 000C0040 		.word	1073744896
 7860 320c 00340140 		.word	1073820672
 7861 3210 00000000 		.word	.LC0
 7862              		.cfi_endproc
 7863              	.LFE74:
 7865              		.align	2
 7866              		.global	TIM_ClearOC2Ref
 7867              		.thumb
 7868              		.thumb_func
 7870              	TIM_ClearOC2Ref:
 7871              	.LFB75:
1723:../SPL/src/stm32f10x_tim.c **** 
1724:../SPL/src/stm32f10x_tim.c **** /**
1725:../SPL/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1726:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1727:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1728:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1729:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1730:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1731:../SPL/src/stm32f10x_tim.c ****   * @retval None
1732:../SPL/src/stm32f10x_tim.c ****   */
1733:../SPL/src/stm32f10x_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1734:../SPL/src/stm32f10x_tim.c **** {
 7872              		.loc 1 1734 0
 7873              		.cfi_startproc
 7874              		@ args = 0, pretend = 0, frame = 16
 7875              		@ frame_needed = 1, uses_anonymous_args = 0
 7876 3214 80B5     		push	{r7, lr}
 7877              	.LCFI138:
 7878              		.cfi_def_cfa_offset 8
 7879              		.cfi_offset 7, -8
 7880              		.cfi_offset 14, -4
 7881 3216 84B0     		sub	sp, sp, #16
 7882              	.LCFI139:
 7883              		.cfi_def_cfa_offset 24
 7884 3218 00AF     		add	r7, sp, #0
 7885              	.LCFI140:
 7886              		.cfi_def_cfa_register 7
 7887 321a 7860     		str	r0, [r7, #4]
 7888 321c 0B46     		mov	r3, r1
 7889 321e 7B80     		strh	r3, [r7, #2]	@ movhi
1735:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 7890              		.loc 1 1735 0
 7891 3220 4FF00003 		mov	r3, #0
 7892 3224 FB81     		strh	r3, [r7, #14]	@ movhi
1736:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1737:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 7893              		.loc 1 1737 0
 7894 3226 7A68     		ldr	r2, [r7, #4]
 7895 3228 1E4B     		ldr	r3, .L328
 7896 322a 9A42     		cmp	r2, r3
 7897 322c 18D0     		beq	.L326
 7898              		.loc 1 1737 0 is_stmt 0 discriminator 1
 7899 322e 7B68     		ldr	r3, [r7, #4]
 7900 3230 B3F1804F 		cmp	r3, #1073741824
 7901 3234 14D0     		beq	.L326
 7902              		.loc 1 1737 0 discriminator 2
 7903 3236 7A68     		ldr	r2, [r7, #4]
 7904 3238 1B4B     		ldr	r3, .L328+4
 7905 323a 9A42     		cmp	r2, r3
 7906 323c 10D0     		beq	.L326
 7907              		.loc 1 1737 0 discriminator 3
 7908 323e 7A68     		ldr	r2, [r7, #4]
 7909 3240 1A4B     		ldr	r3, .L328+8
 7910 3242 9A42     		cmp	r2, r3
 7911 3244 0CD0     		beq	.L326
 7912              		.loc 1 1737 0 discriminator 4
 7913 3246 7A68     		ldr	r2, [r7, #4]
 7914 3248 194B     		ldr	r3, .L328+12
 7915 324a 9A42     		cmp	r2, r3
 7916 324c 08D0     		beq	.L326
 7917              		.loc 1 1737 0 discriminator 5
 7918 324e 7A68     		ldr	r2, [r7, #4]
 7919 3250 184B     		ldr	r3, .L328+16
 7920 3252 9A42     		cmp	r2, r3
 7921 3254 04D0     		beq	.L326
 7922              		.loc 1 1737 0 discriminator 6
 7923 3256 1848     		ldr	r0, .L328+20
 7924 3258 40F2C961 		movw	r1, #1737
 7925 325c FFF7FEFF 		bl	assert_failed
 7926              	.L326:
1738:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
 7927              		.loc 1 1738 0 is_stmt 1
 7928 3260 7B88     		ldrh	r3, [r7, #2]
 7929 3262 802B     		cmp	r3, #128
 7930 3264 07D0     		beq	.L327
 7931              		.loc 1 1738 0 is_stmt 0 discriminator 1
 7932 3266 7B88     		ldrh	r3, [r7, #2]
 7933 3268 002B     		cmp	r3, #0
 7934 326a 04D0     		beq	.L327
 7935              		.loc 1 1738 0 discriminator 2
 7936 326c 1248     		ldr	r0, .L328+20
 7937 326e 40F2CA61 		movw	r1, #1738
 7938 3272 FFF7FEFF 		bl	assert_failed
 7939              	.L327:
1739:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 7940              		.loc 1 1739 0 is_stmt 1
 7941 3276 7B68     		ldr	r3, [r7, #4]
 7942 3278 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 7943 327a FB81     		strh	r3, [r7, #14]	@ movhi
1740:../SPL/src/stm32f10x_tim.c ****   /* Reset the OC2CE Bit */
1741:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2CE);
 7944              		.loc 1 1741 0
 7945 327c FB89     		ldrh	r3, [r7, #14]	@ movhi
 7946 327e 4FEA4343 		lsl	r3, r3, #17
 7947 3282 4FEA5343 		lsr	r3, r3, #17
 7948 3286 FB81     		strh	r3, [r7, #14]	@ movhi
1742:../SPL/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1743:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
 7949              		.loc 1 1743 0
 7950 3288 7B88     		ldrh	r3, [r7, #2]	@ movhi
 7951 328a 4FEA0323 		lsl	r3, r3, #8
 7952 328e 9AB2     		uxth	r2, r3
 7953 3290 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7954 3292 1343     		orrs	r3, r3, r2
 7955 3294 FB81     		strh	r3, [r7, #14]	@ movhi
1744:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1745:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 7956              		.loc 1 1745 0
 7957 3296 7B68     		ldr	r3, [r7, #4]
 7958 3298 FA89     		ldrh	r2, [r7, #14]	@ movhi
 7959 329a 1A83     		strh	r2, [r3, #24]	@ movhi
1746:../SPL/src/stm32f10x_tim.c **** }
 7960              		.loc 1 1746 0
 7961 329c 07F11007 		add	r7, r7, #16
 7962 32a0 BD46     		mov	sp, r7
 7963 32a2 80BD     		pop	{r7, pc}
 7964              	.L329:
 7965              		.align	2
 7966              	.L328:
 7967 32a4 002C0140 		.word	1073818624
 7968 32a8 00040040 		.word	1073742848
 7969 32ac 00080040 		.word	1073743872
 7970 32b0 000C0040 		.word	1073744896
 7971 32b4 00340140 		.word	1073820672
 7972 32b8 00000000 		.word	.LC0
 7973              		.cfi_endproc
 7974              	.LFE75:
 7976              		.align	2
 7977              		.global	TIM_ClearOC3Ref
 7978              		.thumb
 7979              		.thumb_func
 7981              	TIM_ClearOC3Ref:
 7982              	.LFB76:
1747:../SPL/src/stm32f10x_tim.c **** 
1748:../SPL/src/stm32f10x_tim.c **** /**
1749:../SPL/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1750:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1751:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1752:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1753:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1754:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1755:../SPL/src/stm32f10x_tim.c ****   * @retval None
1756:../SPL/src/stm32f10x_tim.c ****   */
1757:../SPL/src/stm32f10x_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1758:../SPL/src/stm32f10x_tim.c **** {
 7983              		.loc 1 1758 0
 7984              		.cfi_startproc
 7985              		@ args = 0, pretend = 0, frame = 16
 7986              		@ frame_needed = 1, uses_anonymous_args = 0
 7987 32bc 80B5     		push	{r7, lr}
 7988              	.LCFI141:
 7989              		.cfi_def_cfa_offset 8
 7990              		.cfi_offset 7, -8
 7991              		.cfi_offset 14, -4
 7992 32be 84B0     		sub	sp, sp, #16
 7993              	.LCFI142:
 7994              		.cfi_def_cfa_offset 24
 7995 32c0 00AF     		add	r7, sp, #0
 7996              	.LCFI143:
 7997              		.cfi_def_cfa_register 7
 7998 32c2 7860     		str	r0, [r7, #4]
 7999 32c4 0B46     		mov	r3, r1
 8000 32c6 7B80     		strh	r3, [r7, #2]	@ movhi
1759:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 8001              		.loc 1 1759 0
 8002 32c8 4FF00003 		mov	r3, #0
 8003 32cc FB81     		strh	r3, [r7, #14]	@ movhi
1760:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1761:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 8004              		.loc 1 1761 0
 8005 32ce 7A68     		ldr	r2, [r7, #4]
 8006 32d0 1C4B     		ldr	r3, .L333
 8007 32d2 9A42     		cmp	r2, r3
 8008 32d4 18D0     		beq	.L331
 8009              		.loc 1 1761 0 is_stmt 0 discriminator 1
 8010 32d6 7B68     		ldr	r3, [r7, #4]
 8011 32d8 B3F1804F 		cmp	r3, #1073741824
 8012 32dc 14D0     		beq	.L331
 8013              		.loc 1 1761 0 discriminator 2
 8014 32de 7A68     		ldr	r2, [r7, #4]
 8015 32e0 194B     		ldr	r3, .L333+4
 8016 32e2 9A42     		cmp	r2, r3
 8017 32e4 10D0     		beq	.L331
 8018              		.loc 1 1761 0 discriminator 3
 8019 32e6 7A68     		ldr	r2, [r7, #4]
 8020 32e8 184B     		ldr	r3, .L333+8
 8021 32ea 9A42     		cmp	r2, r3
 8022 32ec 0CD0     		beq	.L331
 8023              		.loc 1 1761 0 discriminator 4
 8024 32ee 7A68     		ldr	r2, [r7, #4]
 8025 32f0 174B     		ldr	r3, .L333+12
 8026 32f2 9A42     		cmp	r2, r3
 8027 32f4 08D0     		beq	.L331
 8028              		.loc 1 1761 0 discriminator 5
 8029 32f6 7A68     		ldr	r2, [r7, #4]
 8030 32f8 164B     		ldr	r3, .L333+16
 8031 32fa 9A42     		cmp	r2, r3
 8032 32fc 04D0     		beq	.L331
 8033              		.loc 1 1761 0 discriminator 6
 8034 32fe 1648     		ldr	r0, .L333+20
 8035 3300 40F2E161 		movw	r1, #1761
 8036 3304 FFF7FEFF 		bl	assert_failed
 8037              	.L331:
1762:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
 8038              		.loc 1 1762 0 is_stmt 1
 8039 3308 7B88     		ldrh	r3, [r7, #2]
 8040 330a 802B     		cmp	r3, #128
 8041 330c 07D0     		beq	.L332
 8042              		.loc 1 1762 0 is_stmt 0 discriminator 1
 8043 330e 7B88     		ldrh	r3, [r7, #2]
 8044 3310 002B     		cmp	r3, #0
 8045 3312 04D0     		beq	.L332
 8046              		.loc 1 1762 0 discriminator 2
 8047 3314 1048     		ldr	r0, .L333+20
 8048 3316 40F2E261 		movw	r1, #1762
 8049 331a FFF7FEFF 		bl	assert_failed
 8050              	.L332:
1763:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 8051              		.loc 1 1763 0 is_stmt 1
 8052 331e 7B68     		ldr	r3, [r7, #4]
 8053 3320 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 8054 3322 FB81     		strh	r3, [r7, #14]	@ movhi
1764:../SPL/src/stm32f10x_tim.c ****   /* Reset the OC3CE Bit */
1765:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3CE);
 8055              		.loc 1 1765 0
 8056 3324 FB89     		ldrh	r3, [r7, #14]	@ movhi
 8057 3326 23F08003 		bic	r3, r3, #128
 8058 332a FB81     		strh	r3, [r7, #14]	@ movhi
1766:../SPL/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1767:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCClear;
 8059              		.loc 1 1767 0
 8060 332c FA89     		ldrh	r2, [r7, #14]	@ movhi
 8061 332e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 8062 3330 1343     		orrs	r3, r3, r2
 8063 3332 FB81     		strh	r3, [r7, #14]	@ movhi
1768:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1769:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 8064              		.loc 1 1769 0
 8065 3334 7B68     		ldr	r3, [r7, #4]
 8066 3336 FA89     		ldrh	r2, [r7, #14]	@ movhi
 8067 3338 9A83     		strh	r2, [r3, #28]	@ movhi
1770:../SPL/src/stm32f10x_tim.c **** }
 8068              		.loc 1 1770 0
 8069 333a 07F11007 		add	r7, r7, #16
 8070 333e BD46     		mov	sp, r7
 8071 3340 80BD     		pop	{r7, pc}
 8072              	.L334:
 8073 3342 00BF     		.align	2
 8074              	.L333:
 8075 3344 002C0140 		.word	1073818624
 8076 3348 00040040 		.word	1073742848
 8077 334c 00080040 		.word	1073743872
 8078 3350 000C0040 		.word	1073744896
 8079 3354 00340140 		.word	1073820672
 8080 3358 00000000 		.word	.LC0
 8081              		.cfi_endproc
 8082              	.LFE76:
 8084              		.align	2
 8085              		.global	TIM_ClearOC4Ref
 8086              		.thumb
 8087              		.thumb_func
 8089              	TIM_ClearOC4Ref:
 8090              	.LFB77:
1771:../SPL/src/stm32f10x_tim.c **** 
1772:../SPL/src/stm32f10x_tim.c **** /**
1773:../SPL/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1774:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1775:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1776:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1777:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1778:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1779:../SPL/src/stm32f10x_tim.c ****   * @retval None
1780:../SPL/src/stm32f10x_tim.c ****   */
1781:../SPL/src/stm32f10x_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1782:../SPL/src/stm32f10x_tim.c **** {
 8091              		.loc 1 1782 0
 8092              		.cfi_startproc
 8093              		@ args = 0, pretend = 0, frame = 16
 8094              		@ frame_needed = 1, uses_anonymous_args = 0
 8095 335c 80B5     		push	{r7, lr}
 8096              	.LCFI144:
 8097              		.cfi_def_cfa_offset 8
 8098              		.cfi_offset 7, -8
 8099              		.cfi_offset 14, -4
 8100 335e 84B0     		sub	sp, sp, #16
 8101              	.LCFI145:
 8102              		.cfi_def_cfa_offset 24
 8103 3360 00AF     		add	r7, sp, #0
 8104              	.LCFI146:
 8105              		.cfi_def_cfa_register 7
 8106 3362 7860     		str	r0, [r7, #4]
 8107 3364 0B46     		mov	r3, r1
 8108 3366 7B80     		strh	r3, [r7, #2]	@ movhi
1783:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 8109              		.loc 1 1783 0
 8110 3368 4FF00003 		mov	r3, #0
 8111 336c FB81     		strh	r3, [r7, #14]	@ movhi
1784:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1785:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 8112              		.loc 1 1785 0
 8113 336e 7A68     		ldr	r2, [r7, #4]
 8114 3370 1E4B     		ldr	r3, .L338
 8115 3372 9A42     		cmp	r2, r3
 8116 3374 18D0     		beq	.L336
 8117              		.loc 1 1785 0 is_stmt 0 discriminator 1
 8118 3376 7B68     		ldr	r3, [r7, #4]
 8119 3378 B3F1804F 		cmp	r3, #1073741824
 8120 337c 14D0     		beq	.L336
 8121              		.loc 1 1785 0 discriminator 2
 8122 337e 7A68     		ldr	r2, [r7, #4]
 8123 3380 1B4B     		ldr	r3, .L338+4
 8124 3382 9A42     		cmp	r2, r3
 8125 3384 10D0     		beq	.L336
 8126              		.loc 1 1785 0 discriminator 3
 8127 3386 7A68     		ldr	r2, [r7, #4]
 8128 3388 1A4B     		ldr	r3, .L338+8
 8129 338a 9A42     		cmp	r2, r3
 8130 338c 0CD0     		beq	.L336
 8131              		.loc 1 1785 0 discriminator 4
 8132 338e 7A68     		ldr	r2, [r7, #4]
 8133 3390 194B     		ldr	r3, .L338+12
 8134 3392 9A42     		cmp	r2, r3
 8135 3394 08D0     		beq	.L336
 8136              		.loc 1 1785 0 discriminator 5
 8137 3396 7A68     		ldr	r2, [r7, #4]
 8138 3398 184B     		ldr	r3, .L338+16
 8139 339a 9A42     		cmp	r2, r3
 8140 339c 04D0     		beq	.L336
 8141              		.loc 1 1785 0 discriminator 6
 8142 339e 1848     		ldr	r0, .L338+20
 8143 33a0 40F2F961 		movw	r1, #1785
 8144 33a4 FFF7FEFF 		bl	assert_failed
 8145              	.L336:
1786:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
 8146              		.loc 1 1786 0 is_stmt 1
 8147 33a8 7B88     		ldrh	r3, [r7, #2]
 8148 33aa 802B     		cmp	r3, #128
 8149 33ac 07D0     		beq	.L337
 8150              		.loc 1 1786 0 is_stmt 0 discriminator 1
 8151 33ae 7B88     		ldrh	r3, [r7, #2]
 8152 33b0 002B     		cmp	r3, #0
 8153 33b2 04D0     		beq	.L337
 8154              		.loc 1 1786 0 discriminator 2
 8155 33b4 1248     		ldr	r0, .L338+20
 8156 33b6 40F2FA61 		movw	r1, #1786
 8157 33ba FFF7FEFF 		bl	assert_failed
 8158              	.L337:
1787:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 8159              		.loc 1 1787 0 is_stmt 1
 8160 33be 7B68     		ldr	r3, [r7, #4]
 8161 33c0 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 8162 33c2 FB81     		strh	r3, [r7, #14]	@ movhi
1788:../SPL/src/stm32f10x_tim.c ****   /* Reset the OC4CE Bit */
1789:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4CE);
 8163              		.loc 1 1789 0
 8164 33c4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 8165 33c6 4FEA4343 		lsl	r3, r3, #17
 8166 33ca 4FEA5343 		lsr	r3, r3, #17
 8167 33ce FB81     		strh	r3, [r7, #14]	@ movhi
1790:../SPL/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1791:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
 8168              		.loc 1 1791 0
 8169 33d0 7B88     		ldrh	r3, [r7, #2]	@ movhi
 8170 33d2 4FEA0323 		lsl	r3, r3, #8
 8171 33d6 9AB2     		uxth	r2, r3
 8172 33d8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 8173 33da 1343     		orrs	r3, r3, r2
 8174 33dc FB81     		strh	r3, [r7, #14]	@ movhi
1792:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1793:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 8175              		.loc 1 1793 0
 8176 33de 7B68     		ldr	r3, [r7, #4]
 8177 33e0 FA89     		ldrh	r2, [r7, #14]	@ movhi
 8178 33e2 9A83     		strh	r2, [r3, #28]	@ movhi
1794:../SPL/src/stm32f10x_tim.c **** }
 8179              		.loc 1 1794 0
 8180 33e4 07F11007 		add	r7, r7, #16
 8181 33e8 BD46     		mov	sp, r7
 8182 33ea 80BD     		pop	{r7, pc}
 8183              	.L339:
 8184              		.align	2
 8185              	.L338:
 8186 33ec 002C0140 		.word	1073818624
 8187 33f0 00040040 		.word	1073742848
 8188 33f4 00080040 		.word	1073743872
 8189 33f8 000C0040 		.word	1073744896
 8190 33fc 00340140 		.word	1073820672
 8191 3400 00000000 		.word	.LC0
 8192              		.cfi_endproc
 8193              	.LFE77:
 8195              		.align	2
 8196              		.global	TIM_OC1PolarityConfig
 8197              		.thumb
 8198              		.thumb_func
 8200              	TIM_OC1PolarityConfig:
 8201              	.LFB78:
1795:../SPL/src/stm32f10x_tim.c **** 
1796:../SPL/src/stm32f10x_tim.c **** /**
1797:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1798:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
1799:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1800:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1801:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1802:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1803:../SPL/src/stm32f10x_tim.c ****   * @retval None
1804:../SPL/src/stm32f10x_tim.c ****   */
1805:../SPL/src/stm32f10x_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1806:../SPL/src/stm32f10x_tim.c **** {
 8202              		.loc 1 1806 0
 8203              		.cfi_startproc
 8204              		@ args = 0, pretend = 0, frame = 16
 8205              		@ frame_needed = 1, uses_anonymous_args = 0
 8206 3404 80B5     		push	{r7, lr}
 8207              	.LCFI147:
 8208              		.cfi_def_cfa_offset 8
 8209              		.cfi_offset 7, -8
 8210              		.cfi_offset 14, -4
 8211 3406 84B0     		sub	sp, sp, #16
 8212              	.LCFI148:
 8213              		.cfi_def_cfa_offset 24
 8214 3408 00AF     		add	r7, sp, #0
 8215              	.LCFI149:
 8216              		.cfi_def_cfa_register 7
 8217 340a 7860     		str	r0, [r7, #4]
 8218 340c 0B46     		mov	r3, r1
 8219 340e 7B80     		strh	r3, [r7, #2]	@ movhi
1807:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 8220              		.loc 1 1807 0
 8221 3410 4FF00003 		mov	r3, #0
 8222 3414 FB81     		strh	r3, [r7, #14]	@ movhi
1808:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1809:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 8223              		.loc 1 1809 0
 8224 3416 7A68     		ldr	r2, [r7, #4]
 8225 3418 2E4B     		ldr	r3, .L343
 8226 341a 9A42     		cmp	r2, r3
 8227 341c 3CD0     		beq	.L341
 8228              		.loc 1 1809 0 is_stmt 0 discriminator 1
 8229 341e 7B68     		ldr	r3, [r7, #4]
 8230 3420 B3F1804F 		cmp	r3, #1073741824
 8231 3424 38D0     		beq	.L341
 8232              		.loc 1 1809 0 discriminator 2
 8233 3426 7A68     		ldr	r2, [r7, #4]
 8234 3428 2B4B     		ldr	r3, .L343+4
 8235 342a 9A42     		cmp	r2, r3
 8236 342c 34D0     		beq	.L341
 8237              		.loc 1 1809 0 discriminator 3
 8238 342e 7A68     		ldr	r2, [r7, #4]
 8239 3430 2A4B     		ldr	r3, .L343+8
 8240 3432 9A42     		cmp	r2, r3
 8241 3434 30D0     		beq	.L341
 8242              		.loc 1 1809 0 discriminator 4
 8243 3436 7A68     		ldr	r2, [r7, #4]
 8244 3438 294B     		ldr	r3, .L343+12
 8245 343a 9A42     		cmp	r2, r3
 8246 343c 2CD0     		beq	.L341
 8247              		.loc 1 1809 0 discriminator 5
 8248 343e 7A68     		ldr	r2, [r7, #4]
 8249 3440 284B     		ldr	r3, .L343+16
 8250 3442 9A42     		cmp	r2, r3
 8251 3444 28D0     		beq	.L341
 8252              		.loc 1 1809 0 discriminator 6
 8253 3446 7A68     		ldr	r2, [r7, #4]
 8254 3448 274B     		ldr	r3, .L343+20
 8255 344a 9A42     		cmp	r2, r3
 8256 344c 24D0     		beq	.L341
 8257              		.loc 1 1809 0 discriminator 7
 8258 344e 7A68     		ldr	r2, [r7, #4]
 8259 3450 264B     		ldr	r3, .L343+24
 8260 3452 9A42     		cmp	r2, r3
 8261 3454 20D0     		beq	.L341
 8262              		.loc 1 1809 0 discriminator 8
 8263 3456 7A68     		ldr	r2, [r7, #4]
 8264 3458 254B     		ldr	r3, .L343+28
 8265 345a 9A42     		cmp	r2, r3
 8266 345c 1CD0     		beq	.L341
 8267              		.loc 1 1809 0 discriminator 9
 8268 345e 7A68     		ldr	r2, [r7, #4]
 8269 3460 244B     		ldr	r3, .L343+32
 8270 3462 9A42     		cmp	r2, r3
 8271 3464 18D0     		beq	.L341
 8272              		.loc 1 1809 0 discriminator 10
 8273 3466 7A68     		ldr	r2, [r7, #4]
 8274 3468 234B     		ldr	r3, .L343+36
 8275 346a 9A42     		cmp	r2, r3
 8276 346c 14D0     		beq	.L341
 8277              		.loc 1 1809 0 discriminator 11
 8278 346e 7A68     		ldr	r2, [r7, #4]
 8279 3470 224B     		ldr	r3, .L343+40
 8280 3472 9A42     		cmp	r2, r3
 8281 3474 10D0     		beq	.L341
 8282              		.loc 1 1809 0 discriminator 12
 8283 3476 7A68     		ldr	r2, [r7, #4]
 8284 3478 214B     		ldr	r3, .L343+44
 8285 347a 9A42     		cmp	r2, r3
 8286 347c 0CD0     		beq	.L341
 8287              		.loc 1 1809 0 discriminator 13
 8288 347e 7A68     		ldr	r2, [r7, #4]
 8289 3480 204B     		ldr	r3, .L343+48
 8290 3482 9A42     		cmp	r2, r3
 8291 3484 08D0     		beq	.L341
 8292              		.loc 1 1809 0 discriminator 14
 8293 3486 7A68     		ldr	r2, [r7, #4]
 8294 3488 1F4B     		ldr	r3, .L343+52
 8295 348a 9A42     		cmp	r2, r3
 8296 348c 04D0     		beq	.L341
 8297              		.loc 1 1809 0 discriminator 15
 8298 348e 1F48     		ldr	r0, .L343+56
 8299 3490 40F21171 		movw	r1, #1809
 8300 3494 FFF7FEFF 		bl	assert_failed
 8301              	.L341:
1810:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
 8302              		.loc 1 1810 0 is_stmt 1
 8303 3498 7B88     		ldrh	r3, [r7, #2]
 8304 349a 002B     		cmp	r3, #0
 8305 349c 07D0     		beq	.L342
 8306              		.loc 1 1810 0 is_stmt 0 discriminator 1
 8307 349e 7B88     		ldrh	r3, [r7, #2]
 8308 34a0 022B     		cmp	r3, #2
 8309 34a2 04D0     		beq	.L342
 8310              		.loc 1 1810 0 discriminator 2
 8311 34a4 1948     		ldr	r0, .L343+56
 8312 34a6 40F21271 		movw	r1, #1810
 8313 34aa FFF7FEFF 		bl	assert_failed
 8314              	.L342:
1811:../SPL/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 8315              		.loc 1 1811 0 is_stmt 1
 8316 34ae 7B68     		ldr	r3, [r7, #4]
 8317 34b0 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 8318 34b2 FB81     		strh	r3, [r7, #14]	@ movhi
1812:../SPL/src/stm32f10x_tim.c ****   /* Set or Reset the CC1P Bit */
1813:../SPL/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC1P);
 8319              		.loc 1 1813 0
 8320 34b4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 8321 34b6 23F00203 		bic	r3, r3, #2
 8322 34ba FB81     		strh	r3, [r7, #14]	@ movhi
1814:../SPL/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCPolarity;
 8323              		.loc 1 1814 0
 8324 34bc FA89     		ldrh	r2, [r7, #14]	@ movhi
 8325 34be 7B88     		ldrh	r3, [r7, #2]	@ movhi
 8326 34c0 1343     		orrs	r3, r3, r2
 8327 34c2 FB81     		strh	r3, [r7, #14]	@ movhi
1815:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1816:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 8328              		.loc 1 1816 0
 8329 34c4 7B68     		ldr	r3, [r7, #4]
 8330 34c6 FA89     		ldrh	r2, [r7, #14]	@ movhi
 8331 34c8 1A84     		strh	r2, [r3, #32]	@ movhi
1817:../SPL/src/stm32f10x_tim.c **** }
 8332              		.loc 1 1817 0
 8333 34ca 07F11007 		add	r7, r7, #16
 8334 34ce BD46     		mov	sp, r7
 8335 34d0 80BD     		pop	{r7, pc}
 8336              	.L344:
 8337 34d2 00BF     		.align	2
 8338              	.L343:
 8339 34d4 002C0140 		.word	1073818624
 8340 34d8 00040040 		.word	1073742848
 8341 34dc 00080040 		.word	1073743872
 8342 34e0 000C0040 		.word	1073744896
 8343 34e4 00340140 		.word	1073820672
 8344 34e8 004C0140 		.word	1073826816
 8345 34ec 00500140 		.word	1073827840
 8346 34f0 00540140 		.word	1073828864
 8347 34f4 00180040 		.word	1073747968
 8348 34f8 001C0040 		.word	1073748992
 8349 34fc 00200040 		.word	1073750016
 8350 3500 00400140 		.word	1073823744
 8351 3504 00440140 		.word	1073824768
 8352 3508 00480140 		.word	1073825792
 8353 350c 00000000 		.word	.LC0
 8354              		.cfi_endproc
 8355              	.LFE78:
 8357              		.align	2
 8358              		.global	TIM_OC1NPolarityConfig
 8359              		.thumb
 8360              		.thumb_func
 8362              	TIM_OC1NPolarityConfig:
 8363              	.LFB79:
1818:../SPL/src/stm32f10x_tim.c **** 
1819:../SPL/src/stm32f10x_tim.c **** /**
1820:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1821:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIM peripheral.
1822:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1823:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1824:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1825:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1826:../SPL/src/stm32f10x_tim.c ****   * @retval None
1827:../SPL/src/stm32f10x_tim.c ****   */
1828:../SPL/src/stm32f10x_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1829:../SPL/src/stm32f10x_tim.c **** {
 8364              		.loc 1 1829 0
 8365              		.cfi_startproc
 8366              		@ args = 0, pretend = 0, frame = 16
 8367              		@ frame_needed = 1, uses_anonymous_args = 0
 8368 3510 80B5     		push	{r7, lr}
 8369              	.LCFI150:
 8370              		.cfi_def_cfa_offset 8
 8371              		.cfi_offset 7, -8
 8372              		.cfi_offset 14, -4
 8373 3512 84B0     		sub	sp, sp, #16
 8374              	.LCFI151:
 8375              		.cfi_def_cfa_offset 24
 8376 3514 00AF     		add	r7, sp, #0
 8377              	.LCFI152:
 8378              		.cfi_def_cfa_register 7
 8379 3516 7860     		str	r0, [r7, #4]
 8380 3518 0B46     		mov	r3, r1
 8381 351a 7B80     		strh	r3, [r7, #2]	@ movhi
1830:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 8382              		.loc 1 1830 0
 8383 351c 4FF00003 		mov	r3, #0
 8384 3520 FB81     		strh	r3, [r7, #14]	@ movhi
1831:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1832:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 8385              		.loc 1 1832 0
 8386 3522 7A68     		ldr	r2, [r7, #4]
 8387 3524 1A4B     		ldr	r3, .L348
 8388 3526 9A42     		cmp	r2, r3
 8389 3528 14D0     		beq	.L346
 8390              		.loc 1 1832 0 is_stmt 0 discriminator 1
 8391 352a 7A68     		ldr	r2, [r7, #4]
 8392 352c 194B     		ldr	r3, .L348+4
 8393 352e 9A42     		cmp	r2, r3
 8394 3530 10D0     		beq	.L346
 8395              		.loc 1 1832 0 discriminator 2
 8396 3532 7A68     		ldr	r2, [r7, #4]
 8397 3534 184B     		ldr	r3, .L348+8
 8398 3536 9A42     		cmp	r2, r3
 8399 3538 0CD0     		beq	.L346
 8400              		.loc 1 1832 0 discriminator 3
 8401 353a 7A68     		ldr	r2, [r7, #4]
 8402 353c 174B     		ldr	r3, .L348+12
 8403 353e 9A42     		cmp	r2, r3
 8404 3540 08D0     		beq	.L346
 8405              		.loc 1 1832 0 discriminator 4
 8406 3542 7A68     		ldr	r2, [r7, #4]
 8407 3544 164B     		ldr	r3, .L348+16
 8408 3546 9A42     		cmp	r2, r3
 8409 3548 04D0     		beq	.L346
 8410              		.loc 1 1832 0 discriminator 5
 8411 354a 1648     		ldr	r0, .L348+20
 8412 354c 4FF4E561 		mov	r1, #1832
 8413 3550 FFF7FEFF 		bl	assert_failed
 8414              	.L346:
1833:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
 8415              		.loc 1 1833 0 is_stmt 1
 8416 3554 7B88     		ldrh	r3, [r7, #2]
 8417 3556 002B     		cmp	r3, #0
 8418 3558 07D0     		beq	.L347
 8419              		.loc 1 1833 0 is_stmt 0 discriminator 1
 8420 355a 7B88     		ldrh	r3, [r7, #2]
 8421 355c 082B     		cmp	r3, #8
 8422 355e 04D0     		beq	.L347
 8423              		.loc 1 1833 0 discriminator 2
 8424 3560 1048     		ldr	r0, .L348+20
 8425 3562 40F22971 		movw	r1, #1833
 8426 3566 FFF7FEFF 		bl	assert_failed
 8427              	.L347:
1834:../SPL/src/stm32f10x_tim.c ****    
1835:../SPL/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 8428              		.loc 1 1835 0 is_stmt 1
 8429 356a 7B68     		ldr	r3, [r7, #4]
 8430 356c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 8431 356e FB81     		strh	r3, [r7, #14]	@ movhi
1836:../SPL/src/stm32f10x_tim.c ****   /* Set or Reset the CC1NP Bit */
1837:../SPL/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC1NP);
 8432              		.loc 1 1837 0
 8433 3570 FB89     		ldrh	r3, [r7, #14]	@ movhi
 8434 3572 23F00803 		bic	r3, r3, #8
 8435 3576 FB81     		strh	r3, [r7, #14]	@ movhi
1838:../SPL/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCNPolarity;
 8436              		.loc 1 1838 0
 8437 3578 FA89     		ldrh	r2, [r7, #14]	@ movhi
 8438 357a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 8439 357c 1343     		orrs	r3, r3, r2
 8440 357e FB81     		strh	r3, [r7, #14]	@ movhi
1839:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1840:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 8441              		.loc 1 1840 0
 8442 3580 7B68     		ldr	r3, [r7, #4]
 8443 3582 FA89     		ldrh	r2, [r7, #14]	@ movhi
 8444 3584 1A84     		strh	r2, [r3, #32]	@ movhi
1841:../SPL/src/stm32f10x_tim.c **** }
 8445              		.loc 1 1841 0
 8446 3586 07F11007 		add	r7, r7, #16
 8447 358a BD46     		mov	sp, r7
 8448 358c 80BD     		pop	{r7, pc}
 8449              	.L349:
 8450 358e 00BF     		.align	2
 8451              	.L348:
 8452 3590 002C0140 		.word	1073818624
 8453 3594 00340140 		.word	1073820672
 8454 3598 00400140 		.word	1073823744
 8455 359c 00440140 		.word	1073824768
 8456 35a0 00480140 		.word	1073825792
 8457 35a4 00000000 		.word	.LC0
 8458              		.cfi_endproc
 8459              	.LFE79:
 8461              		.align	2
 8462              		.global	TIM_OC2PolarityConfig
 8463              		.thumb
 8464              		.thumb_func
 8466              	TIM_OC2PolarityConfig:
 8467              	.LFB80:
1842:../SPL/src/stm32f10x_tim.c **** 
1843:../SPL/src/stm32f10x_tim.c **** /**
1844:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1845:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
1846:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1847:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1848:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1849:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1850:../SPL/src/stm32f10x_tim.c ****   * @retval None
1851:../SPL/src/stm32f10x_tim.c ****   */
1852:../SPL/src/stm32f10x_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1853:../SPL/src/stm32f10x_tim.c **** {
 8468              		.loc 1 1853 0
 8469              		.cfi_startproc
 8470              		@ args = 0, pretend = 0, frame = 16
 8471              		@ frame_needed = 1, uses_anonymous_args = 0
 8472 35a8 80B5     		push	{r7, lr}
 8473              	.LCFI153:
 8474              		.cfi_def_cfa_offset 8
 8475              		.cfi_offset 7, -8
 8476              		.cfi_offset 14, -4
 8477 35aa 84B0     		sub	sp, sp, #16
 8478              	.LCFI154:
 8479              		.cfi_def_cfa_offset 24
 8480 35ac 00AF     		add	r7, sp, #0
 8481              	.LCFI155:
 8482              		.cfi_def_cfa_register 7
 8483 35ae 7860     		str	r0, [r7, #4]
 8484 35b0 0B46     		mov	r3, r1
 8485 35b2 7B80     		strh	r3, [r7, #2]	@ movhi
1854:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 8486              		.loc 1 1854 0
 8487 35b4 4FF00003 		mov	r3, #0
 8488 35b8 FB81     		strh	r3, [r7, #14]	@ movhi
1855:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1856:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 8489              		.loc 1 1856 0
 8490 35ba 7A68     		ldr	r2, [r7, #4]
 8491 35bc 234B     		ldr	r3, .L353
 8492 35be 9A42     		cmp	r2, r3
 8493 35c0 24D0     		beq	.L351
 8494              		.loc 1 1856 0 is_stmt 0 discriminator 1
 8495 35c2 7B68     		ldr	r3, [r7, #4]
 8496 35c4 B3F1804F 		cmp	r3, #1073741824
 8497 35c8 20D0     		beq	.L351
 8498              		.loc 1 1856 0 discriminator 2
 8499 35ca 7A68     		ldr	r2, [r7, #4]
 8500 35cc 204B     		ldr	r3, .L353+4
 8501 35ce 9A42     		cmp	r2, r3
 8502 35d0 1CD0     		beq	.L351
 8503              		.loc 1 1856 0 discriminator 3
 8504 35d2 7A68     		ldr	r2, [r7, #4]
 8505 35d4 1F4B     		ldr	r3, .L353+8
 8506 35d6 9A42     		cmp	r2, r3
 8507 35d8 18D0     		beq	.L351
 8508              		.loc 1 1856 0 discriminator 4
 8509 35da 7A68     		ldr	r2, [r7, #4]
 8510 35dc 1E4B     		ldr	r3, .L353+12
 8511 35de 9A42     		cmp	r2, r3
 8512 35e0 14D0     		beq	.L351
 8513              		.loc 1 1856 0 discriminator 5
 8514 35e2 7A68     		ldr	r2, [r7, #4]
 8515 35e4 1D4B     		ldr	r3, .L353+16
 8516 35e6 9A42     		cmp	r2, r3
 8517 35e8 10D0     		beq	.L351
 8518              		.loc 1 1856 0 discriminator 6
 8519 35ea 7A68     		ldr	r2, [r7, #4]
 8520 35ec 1C4B     		ldr	r3, .L353+20
 8521 35ee 9A42     		cmp	r2, r3
 8522 35f0 0CD0     		beq	.L351
 8523              		.loc 1 1856 0 discriminator 7
 8524 35f2 7A68     		ldr	r2, [r7, #4]
 8525 35f4 1B4B     		ldr	r3, .L353+24
 8526 35f6 9A42     		cmp	r2, r3
 8527 35f8 08D0     		beq	.L351
 8528              		.loc 1 1856 0 discriminator 8
 8529 35fa 7A68     		ldr	r2, [r7, #4]
 8530 35fc 1A4B     		ldr	r3, .L353+28
 8531 35fe 9A42     		cmp	r2, r3
 8532 3600 04D0     		beq	.L351
 8533              		.loc 1 1856 0 discriminator 9
 8534 3602 1A48     		ldr	r0, .L353+32
 8535 3604 4FF4E861 		mov	r1, #1856
 8536 3608 FFF7FEFF 		bl	assert_failed
 8537              	.L351:
1857:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
 8538              		.loc 1 1857 0 is_stmt 1
 8539 360c 7B88     		ldrh	r3, [r7, #2]
 8540 360e 002B     		cmp	r3, #0
 8541 3610 07D0     		beq	.L352
 8542              		.loc 1 1857 0 is_stmt 0 discriminator 1
 8543 3612 7B88     		ldrh	r3, [r7, #2]
 8544 3614 022B     		cmp	r3, #2
 8545 3616 04D0     		beq	.L352
 8546              		.loc 1 1857 0 discriminator 2
 8547 3618 1448     		ldr	r0, .L353+32
 8548 361a 40F24171 		movw	r1, #1857
 8549 361e FFF7FEFF 		bl	assert_failed
 8550              	.L352:
1858:../SPL/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 8551              		.loc 1 1858 0 is_stmt 1
 8552 3622 7B68     		ldr	r3, [r7, #4]
 8553 3624 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 8554 3626 FB81     		strh	r3, [r7, #14]	@ movhi
1859:../SPL/src/stm32f10x_tim.c ****   /* Set or Reset the CC2P Bit */
1860:../SPL/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC2P);
 8555              		.loc 1 1860 0
 8556 3628 FB89     		ldrh	r3, [r7, #14]	@ movhi
 8557 362a 23F02003 		bic	r3, r3, #32
 8558 362e FB81     		strh	r3, [r7, #14]	@ movhi
1861:../SPL/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 8559              		.loc 1 1861 0
 8560 3630 7B88     		ldrh	r3, [r7, #2]	@ movhi
 8561 3632 4FEA0313 		lsl	r3, r3, #4
 8562 3636 9AB2     		uxth	r2, r3
 8563 3638 FB89     		ldrh	r3, [r7, #14]	@ movhi
 8564 363a 1343     		orrs	r3, r3, r2
 8565 363c FB81     		strh	r3, [r7, #14]	@ movhi
1862:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1863:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 8566              		.loc 1 1863 0
 8567 363e 7B68     		ldr	r3, [r7, #4]
 8568 3640 FA89     		ldrh	r2, [r7, #14]	@ movhi
 8569 3642 1A84     		strh	r2, [r3, #32]	@ movhi
1864:../SPL/src/stm32f10x_tim.c **** }
 8570              		.loc 1 1864 0
 8571 3644 07F11007 		add	r7, r7, #16
 8572 3648 BD46     		mov	sp, r7
 8573 364a 80BD     		pop	{r7, pc}
 8574              	.L354:
 8575              		.align	2
 8576              	.L353:
 8577 364c 002C0140 		.word	1073818624
 8578 3650 00040040 		.word	1073742848
 8579 3654 00080040 		.word	1073743872
 8580 3658 000C0040 		.word	1073744896
 8581 365c 00340140 		.word	1073820672
 8582 3660 004C0140 		.word	1073826816
 8583 3664 00180040 		.word	1073747968
 8584 3668 00400140 		.word	1073823744
 8585 366c 00000000 		.word	.LC0
 8586              		.cfi_endproc
 8587              	.LFE80:
 8589              		.align	2
 8590              		.global	TIM_OC2NPolarityConfig
 8591              		.thumb
 8592              		.thumb_func
 8594              	TIM_OC2NPolarityConfig:
 8595              	.LFB81:
1865:../SPL/src/stm32f10x_tim.c **** 
1866:../SPL/src/stm32f10x_tim.c **** /**
1867:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1868:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1869:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1870:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1871:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1872:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1873:../SPL/src/stm32f10x_tim.c ****   * @retval None
1874:../SPL/src/stm32f10x_tim.c ****   */
1875:../SPL/src/stm32f10x_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1876:../SPL/src/stm32f10x_tim.c **** {
 8596              		.loc 1 1876 0
 8597              		.cfi_startproc
 8598              		@ args = 0, pretend = 0, frame = 16
 8599              		@ frame_needed = 1, uses_anonymous_args = 0
 8600 3670 80B5     		push	{r7, lr}
 8601              	.LCFI156:
 8602              		.cfi_def_cfa_offset 8
 8603              		.cfi_offset 7, -8
 8604              		.cfi_offset 14, -4
 8605 3672 84B0     		sub	sp, sp, #16
 8606              	.LCFI157:
 8607              		.cfi_def_cfa_offset 24
 8608 3674 00AF     		add	r7, sp, #0
 8609              	.LCFI158:
 8610              		.cfi_def_cfa_register 7
 8611 3676 7860     		str	r0, [r7, #4]
 8612 3678 0B46     		mov	r3, r1
 8613 367a 7B80     		strh	r3, [r7, #2]	@ movhi
1877:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 8614              		.loc 1 1877 0
 8615 367c 4FF00003 		mov	r3, #0
 8616 3680 FB81     		strh	r3, [r7, #14]	@ movhi
1878:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1879:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 8617              		.loc 1 1879 0
 8618 3682 7A68     		ldr	r2, [r7, #4]
 8619 3684 154B     		ldr	r3, .L358
 8620 3686 9A42     		cmp	r2, r3
 8621 3688 08D0     		beq	.L356
 8622              		.loc 1 1879 0 is_stmt 0 discriminator 1
 8623 368a 7A68     		ldr	r2, [r7, #4]
 8624 368c 144B     		ldr	r3, .L358+4
 8625 368e 9A42     		cmp	r2, r3
 8626 3690 04D0     		beq	.L356
 8627              		.loc 1 1879 0 discriminator 2
 8628 3692 1448     		ldr	r0, .L358+8
 8629 3694 40F25771 		movw	r1, #1879
 8630 3698 FFF7FEFF 		bl	assert_failed
 8631              	.L356:
1880:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
 8632              		.loc 1 1880 0 is_stmt 1
 8633 369c 7B88     		ldrh	r3, [r7, #2]
 8634 369e 002B     		cmp	r3, #0
 8635 36a0 07D0     		beq	.L357
 8636              		.loc 1 1880 0 is_stmt 0 discriminator 1
 8637 36a2 7B88     		ldrh	r3, [r7, #2]
 8638 36a4 082B     		cmp	r3, #8
 8639 36a6 04D0     		beq	.L357
 8640              		.loc 1 1880 0 discriminator 2
 8641 36a8 0E48     		ldr	r0, .L358+8
 8642 36aa 4FF4EB61 		mov	r1, #1880
 8643 36ae FFF7FEFF 		bl	assert_failed
 8644              	.L357:
1881:../SPL/src/stm32f10x_tim.c ****   
1882:../SPL/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 8645              		.loc 1 1882 0 is_stmt 1
 8646 36b2 7B68     		ldr	r3, [r7, #4]
 8647 36b4 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 8648 36b6 FB81     		strh	r3, [r7, #14]	@ movhi
1883:../SPL/src/stm32f10x_tim.c ****   /* Set or Reset the CC2NP Bit */
1884:../SPL/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC2NP);
 8649              		.loc 1 1884 0
 8650 36b8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 8651 36ba 23F08003 		bic	r3, r3, #128
 8652 36be FB81     		strh	r3, [r7, #14]	@ movhi
1885:../SPL/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 8653              		.loc 1 1885 0
 8654 36c0 7B88     		ldrh	r3, [r7, #2]	@ movhi
 8655 36c2 4FEA0313 		lsl	r3, r3, #4
 8656 36c6 9AB2     		uxth	r2, r3
 8657 36c8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 8658 36ca 1343     		orrs	r3, r3, r2
 8659 36cc FB81     		strh	r3, [r7, #14]	@ movhi
1886:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1887:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 8660              		.loc 1 1887 0
 8661 36ce 7B68     		ldr	r3, [r7, #4]
 8662 36d0 FA89     		ldrh	r2, [r7, #14]	@ movhi
 8663 36d2 1A84     		strh	r2, [r3, #32]	@ movhi
1888:../SPL/src/stm32f10x_tim.c **** }
 8664              		.loc 1 1888 0
 8665 36d4 07F11007 		add	r7, r7, #16
 8666 36d8 BD46     		mov	sp, r7
 8667 36da 80BD     		pop	{r7, pc}
 8668              	.L359:
 8669              		.align	2
 8670              	.L358:
 8671 36dc 002C0140 		.word	1073818624
 8672 36e0 00340140 		.word	1073820672
 8673 36e4 00000000 		.word	.LC0
 8674              		.cfi_endproc
 8675              	.LFE81:
 8677              		.align	2
 8678              		.global	TIM_OC3PolarityConfig
 8679              		.thumb
 8680              		.thumb_func
 8682              	TIM_OC3PolarityConfig:
 8683              	.LFB82:
1889:../SPL/src/stm32f10x_tim.c **** 
1890:../SPL/src/stm32f10x_tim.c **** /**
1891:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1892:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1893:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1894:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1895:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1896:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1897:../SPL/src/stm32f10x_tim.c ****   * @retval None
1898:../SPL/src/stm32f10x_tim.c ****   */
1899:../SPL/src/stm32f10x_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1900:../SPL/src/stm32f10x_tim.c **** {
 8684              		.loc 1 1900 0
 8685              		.cfi_startproc
 8686              		@ args = 0, pretend = 0, frame = 16
 8687              		@ frame_needed = 1, uses_anonymous_args = 0
 8688 36e8 80B5     		push	{r7, lr}
 8689              	.LCFI159:
 8690              		.cfi_def_cfa_offset 8
 8691              		.cfi_offset 7, -8
 8692              		.cfi_offset 14, -4
 8693 36ea 84B0     		sub	sp, sp, #16
 8694              	.LCFI160:
 8695              		.cfi_def_cfa_offset 24
 8696 36ec 00AF     		add	r7, sp, #0
 8697              	.LCFI161:
 8698              		.cfi_def_cfa_register 7
 8699 36ee 7860     		str	r0, [r7, #4]
 8700 36f0 0B46     		mov	r3, r1
 8701 36f2 7B80     		strh	r3, [r7, #2]	@ movhi
1901:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 8702              		.loc 1 1901 0
 8703 36f4 4FF00003 		mov	r3, #0
 8704 36f8 FB81     		strh	r3, [r7, #14]	@ movhi
1902:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1903:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 8705              		.loc 1 1903 0
 8706 36fa 7A68     		ldr	r2, [r7, #4]
 8707 36fc 1D4B     		ldr	r3, .L363
 8708 36fe 9A42     		cmp	r2, r3
 8709 3700 18D0     		beq	.L361
 8710              		.loc 1 1903 0 is_stmt 0 discriminator 1
 8711 3702 7B68     		ldr	r3, [r7, #4]
 8712 3704 B3F1804F 		cmp	r3, #1073741824
 8713 3708 14D0     		beq	.L361
 8714              		.loc 1 1903 0 discriminator 2
 8715 370a 7A68     		ldr	r2, [r7, #4]
 8716 370c 1A4B     		ldr	r3, .L363+4
 8717 370e 9A42     		cmp	r2, r3
 8718 3710 10D0     		beq	.L361
 8719              		.loc 1 1903 0 discriminator 3
 8720 3712 7A68     		ldr	r2, [r7, #4]
 8721 3714 194B     		ldr	r3, .L363+8
 8722 3716 9A42     		cmp	r2, r3
 8723 3718 0CD0     		beq	.L361
 8724              		.loc 1 1903 0 discriminator 4
 8725 371a 7A68     		ldr	r2, [r7, #4]
 8726 371c 184B     		ldr	r3, .L363+12
 8727 371e 9A42     		cmp	r2, r3
 8728 3720 08D0     		beq	.L361
 8729              		.loc 1 1903 0 discriminator 5
 8730 3722 7A68     		ldr	r2, [r7, #4]
 8731 3724 174B     		ldr	r3, .L363+16
 8732 3726 9A42     		cmp	r2, r3
 8733 3728 04D0     		beq	.L361
 8734              		.loc 1 1903 0 discriminator 6
 8735 372a 1748     		ldr	r0, .L363+20
 8736 372c 40F26F71 		movw	r1, #1903
 8737 3730 FFF7FEFF 		bl	assert_failed
 8738              	.L361:
1904:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
 8739              		.loc 1 1904 0 is_stmt 1
 8740 3734 7B88     		ldrh	r3, [r7, #2]
 8741 3736 002B     		cmp	r3, #0
 8742 3738 07D0     		beq	.L362
 8743              		.loc 1 1904 0 is_stmt 0 discriminator 1
 8744 373a 7B88     		ldrh	r3, [r7, #2]
 8745 373c 022B     		cmp	r3, #2
 8746 373e 04D0     		beq	.L362
 8747              		.loc 1 1904 0 discriminator 2
 8748 3740 1148     		ldr	r0, .L363+20
 8749 3742 4FF4EE61 		mov	r1, #1904
 8750 3746 FFF7FEFF 		bl	assert_failed
 8751              	.L362:
1905:../SPL/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 8752              		.loc 1 1905 0 is_stmt 1
 8753 374a 7B68     		ldr	r3, [r7, #4]
 8754 374c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 8755 374e FB81     		strh	r3, [r7, #14]	@ movhi
1906:../SPL/src/stm32f10x_tim.c ****   /* Set or Reset the CC3P Bit */
1907:../SPL/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC3P);
 8756              		.loc 1 1907 0
 8757 3750 FB89     		ldrh	r3, [r7, #14]	@ movhi
 8758 3752 23F40073 		bic	r3, r3, #512
 8759 3756 FB81     		strh	r3, [r7, #14]	@ movhi
1908:../SPL/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 8760              		.loc 1 1908 0
 8761 3758 7B88     		ldrh	r3, [r7, #2]	@ movhi
 8762 375a 4FEA0323 		lsl	r3, r3, #8
 8763 375e 9AB2     		uxth	r2, r3
 8764 3760 FB89     		ldrh	r3, [r7, #14]	@ movhi
 8765 3762 1343     		orrs	r3, r3, r2
 8766 3764 FB81     		strh	r3, [r7, #14]	@ movhi
1909:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1910:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 8767              		.loc 1 1910 0
 8768 3766 7B68     		ldr	r3, [r7, #4]
 8769 3768 FA89     		ldrh	r2, [r7, #14]	@ movhi
 8770 376a 1A84     		strh	r2, [r3, #32]	@ movhi
1911:../SPL/src/stm32f10x_tim.c **** }
 8771              		.loc 1 1911 0
 8772 376c 07F11007 		add	r7, r7, #16
 8773 3770 BD46     		mov	sp, r7
 8774 3772 80BD     		pop	{r7, pc}
 8775              	.L364:
 8776              		.align	2
 8777              	.L363:
 8778 3774 002C0140 		.word	1073818624
 8779 3778 00040040 		.word	1073742848
 8780 377c 00080040 		.word	1073743872
 8781 3780 000C0040 		.word	1073744896
 8782 3784 00340140 		.word	1073820672
 8783 3788 00000000 		.word	.LC0
 8784              		.cfi_endproc
 8785              	.LFE82:
 8787              		.align	2
 8788              		.global	TIM_OC3NPolarityConfig
 8789              		.thumb
 8790              		.thumb_func
 8792              	TIM_OC3NPolarityConfig:
 8793              	.LFB83:
1912:../SPL/src/stm32f10x_tim.c **** 
1913:../SPL/src/stm32f10x_tim.c **** /**
1914:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1915:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1916:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1917:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1918:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1919:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1920:../SPL/src/stm32f10x_tim.c ****   * @retval None
1921:../SPL/src/stm32f10x_tim.c ****   */
1922:../SPL/src/stm32f10x_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1923:../SPL/src/stm32f10x_tim.c **** {
 8794              		.loc 1 1923 0
 8795              		.cfi_startproc
 8796              		@ args = 0, pretend = 0, frame = 16
 8797              		@ frame_needed = 1, uses_anonymous_args = 0
 8798 378c 80B5     		push	{r7, lr}
 8799              	.LCFI162:
 8800              		.cfi_def_cfa_offset 8
 8801              		.cfi_offset 7, -8
 8802              		.cfi_offset 14, -4
 8803 378e 84B0     		sub	sp, sp, #16
 8804              	.LCFI163:
 8805              		.cfi_def_cfa_offset 24
 8806 3790 00AF     		add	r7, sp, #0
 8807              	.LCFI164:
 8808              		.cfi_def_cfa_register 7
 8809 3792 7860     		str	r0, [r7, #4]
 8810 3794 0B46     		mov	r3, r1
 8811 3796 7B80     		strh	r3, [r7, #2]	@ movhi
1924:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 8812              		.loc 1 1924 0
 8813 3798 4FF00003 		mov	r3, #0
 8814 379c FB81     		strh	r3, [r7, #14]	@ movhi
1925:../SPL/src/stm32f10x_tim.c ****  
1926:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1927:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 8815              		.loc 1 1927 0
 8816 379e 7A68     		ldr	r2, [r7, #4]
 8817 37a0 154B     		ldr	r3, .L368
 8818 37a2 9A42     		cmp	r2, r3
 8819 37a4 08D0     		beq	.L366
 8820              		.loc 1 1927 0 is_stmt 0 discriminator 1
 8821 37a6 7A68     		ldr	r2, [r7, #4]
 8822 37a8 144B     		ldr	r3, .L368+4
 8823 37aa 9A42     		cmp	r2, r3
 8824 37ac 04D0     		beq	.L366
 8825              		.loc 1 1927 0 discriminator 2
 8826 37ae 1448     		ldr	r0, .L368+8
 8827 37b0 40F28771 		movw	r1, #1927
 8828 37b4 FFF7FEFF 		bl	assert_failed
 8829              	.L366:
1928:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
 8830              		.loc 1 1928 0 is_stmt 1
 8831 37b8 7B88     		ldrh	r3, [r7, #2]
 8832 37ba 002B     		cmp	r3, #0
 8833 37bc 07D0     		beq	.L367
 8834              		.loc 1 1928 0 is_stmt 0 discriminator 1
 8835 37be 7B88     		ldrh	r3, [r7, #2]
 8836 37c0 082B     		cmp	r3, #8
 8837 37c2 04D0     		beq	.L367
 8838              		.loc 1 1928 0 discriminator 2
 8839 37c4 0E48     		ldr	r0, .L368+8
 8840 37c6 4FF4F161 		mov	r1, #1928
 8841 37ca FFF7FEFF 		bl	assert_failed
 8842              	.L367:
1929:../SPL/src/stm32f10x_tim.c ****     
1930:../SPL/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 8843              		.loc 1 1930 0 is_stmt 1
 8844 37ce 7B68     		ldr	r3, [r7, #4]
 8845 37d0 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 8846 37d2 FB81     		strh	r3, [r7, #14]	@ movhi
1931:../SPL/src/stm32f10x_tim.c ****   /* Set or Reset the CC3NP Bit */
1932:../SPL/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC3NP);
 8847              		.loc 1 1932 0
 8848 37d4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 8849 37d6 23F40063 		bic	r3, r3, #2048
 8850 37da FB81     		strh	r3, [r7, #14]	@ movhi
1933:../SPL/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 8851              		.loc 1 1933 0
 8852 37dc 7B88     		ldrh	r3, [r7, #2]	@ movhi
 8853 37de 4FEA0323 		lsl	r3, r3, #8
 8854 37e2 9AB2     		uxth	r2, r3
 8855 37e4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 8856 37e6 1343     		orrs	r3, r3, r2
 8857 37e8 FB81     		strh	r3, [r7, #14]	@ movhi
1934:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1935:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 8858              		.loc 1 1935 0
 8859 37ea 7B68     		ldr	r3, [r7, #4]
 8860 37ec FA89     		ldrh	r2, [r7, #14]	@ movhi
 8861 37ee 1A84     		strh	r2, [r3, #32]	@ movhi
1936:../SPL/src/stm32f10x_tim.c **** }
 8862              		.loc 1 1936 0
 8863 37f0 07F11007 		add	r7, r7, #16
 8864 37f4 BD46     		mov	sp, r7
 8865 37f6 80BD     		pop	{r7, pc}
 8866              	.L369:
 8867              		.align	2
 8868              	.L368:
 8869 37f8 002C0140 		.word	1073818624
 8870 37fc 00340140 		.word	1073820672
 8871 3800 00000000 		.word	.LC0
 8872              		.cfi_endproc
 8873              	.LFE83:
 8875              		.align	2
 8876              		.global	TIM_OC4PolarityConfig
 8877              		.thumb
 8878              		.thumb_func
 8880              	TIM_OC4PolarityConfig:
 8881              	.LFB84:
1937:../SPL/src/stm32f10x_tim.c **** 
1938:../SPL/src/stm32f10x_tim.c **** /**
1939:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1940:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1941:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1942:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1943:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1944:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1945:../SPL/src/stm32f10x_tim.c ****   * @retval None
1946:../SPL/src/stm32f10x_tim.c ****   */
1947:../SPL/src/stm32f10x_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1948:../SPL/src/stm32f10x_tim.c **** {
 8882              		.loc 1 1948 0
 8883              		.cfi_startproc
 8884              		@ args = 0, pretend = 0, frame = 16
 8885              		@ frame_needed = 1, uses_anonymous_args = 0
 8886 3804 80B5     		push	{r7, lr}
 8887              	.LCFI165:
 8888              		.cfi_def_cfa_offset 8
 8889              		.cfi_offset 7, -8
 8890              		.cfi_offset 14, -4
 8891 3806 84B0     		sub	sp, sp, #16
 8892              	.LCFI166:
 8893              		.cfi_def_cfa_offset 24
 8894 3808 00AF     		add	r7, sp, #0
 8895              	.LCFI167:
 8896              		.cfi_def_cfa_register 7
 8897 380a 7860     		str	r0, [r7, #4]
 8898 380c 0B46     		mov	r3, r1
 8899 380e 7B80     		strh	r3, [r7, #2]	@ movhi
1949:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 8900              		.loc 1 1949 0
 8901 3810 4FF00003 		mov	r3, #0
 8902 3814 FB81     		strh	r3, [r7, #14]	@ movhi
1950:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1951:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 8903              		.loc 1 1951 0
 8904 3816 7A68     		ldr	r2, [r7, #4]
 8905 3818 1D4B     		ldr	r3, .L373
 8906 381a 9A42     		cmp	r2, r3
 8907 381c 18D0     		beq	.L371
 8908              		.loc 1 1951 0 is_stmt 0 discriminator 1
 8909 381e 7B68     		ldr	r3, [r7, #4]
 8910 3820 B3F1804F 		cmp	r3, #1073741824
 8911 3824 14D0     		beq	.L371
 8912              		.loc 1 1951 0 discriminator 2
 8913 3826 7A68     		ldr	r2, [r7, #4]
 8914 3828 1A4B     		ldr	r3, .L373+4
 8915 382a 9A42     		cmp	r2, r3
 8916 382c 10D0     		beq	.L371
 8917              		.loc 1 1951 0 discriminator 3
 8918 382e 7A68     		ldr	r2, [r7, #4]
 8919 3830 194B     		ldr	r3, .L373+8
 8920 3832 9A42     		cmp	r2, r3
 8921 3834 0CD0     		beq	.L371
 8922              		.loc 1 1951 0 discriminator 4
 8923 3836 7A68     		ldr	r2, [r7, #4]
 8924 3838 184B     		ldr	r3, .L373+12
 8925 383a 9A42     		cmp	r2, r3
 8926 383c 08D0     		beq	.L371
 8927              		.loc 1 1951 0 discriminator 5
 8928 383e 7A68     		ldr	r2, [r7, #4]
 8929 3840 174B     		ldr	r3, .L373+16
 8930 3842 9A42     		cmp	r2, r3
 8931 3844 04D0     		beq	.L371
 8932              		.loc 1 1951 0 discriminator 6
 8933 3846 1748     		ldr	r0, .L373+20
 8934 3848 40F29F71 		movw	r1, #1951
 8935 384c FFF7FEFF 		bl	assert_failed
 8936              	.L371:
1952:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
 8937              		.loc 1 1952 0 is_stmt 1
 8938 3850 7B88     		ldrh	r3, [r7, #2]
 8939 3852 002B     		cmp	r3, #0
 8940 3854 07D0     		beq	.L372
 8941              		.loc 1 1952 0 is_stmt 0 discriminator 1
 8942 3856 7B88     		ldrh	r3, [r7, #2]
 8943 3858 022B     		cmp	r3, #2
 8944 385a 04D0     		beq	.L372
 8945              		.loc 1 1952 0 discriminator 2
 8946 385c 1148     		ldr	r0, .L373+20
 8947 385e 4FF4F461 		mov	r1, #1952
 8948 3862 FFF7FEFF 		bl	assert_failed
 8949              	.L372:
1953:../SPL/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 8950              		.loc 1 1953 0 is_stmt 1
 8951 3866 7B68     		ldr	r3, [r7, #4]
 8952 3868 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 8953 386a FB81     		strh	r3, [r7, #14]	@ movhi
1954:../SPL/src/stm32f10x_tim.c ****   /* Set or Reset the CC4P Bit */
1955:../SPL/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC4P);
 8954              		.loc 1 1955 0
 8955 386c FB89     		ldrh	r3, [r7, #14]	@ movhi
 8956 386e 23F40053 		bic	r3, r3, #8192
 8957 3872 FB81     		strh	r3, [r7, #14]	@ movhi
1956:../SPL/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 8958              		.loc 1 1956 0
 8959 3874 7B88     		ldrh	r3, [r7, #2]	@ movhi
 8960 3876 4FEA0333 		lsl	r3, r3, #12
 8961 387a 9AB2     		uxth	r2, r3
 8962 387c FB89     		ldrh	r3, [r7, #14]	@ movhi
 8963 387e 1343     		orrs	r3, r3, r2
 8964 3880 FB81     		strh	r3, [r7, #14]	@ movhi
1957:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1958:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 8965              		.loc 1 1958 0
 8966 3882 7B68     		ldr	r3, [r7, #4]
 8967 3884 FA89     		ldrh	r2, [r7, #14]	@ movhi
 8968 3886 1A84     		strh	r2, [r3, #32]	@ movhi
1959:../SPL/src/stm32f10x_tim.c **** }
 8969              		.loc 1 1959 0
 8970 3888 07F11007 		add	r7, r7, #16
 8971 388c BD46     		mov	sp, r7
 8972 388e 80BD     		pop	{r7, pc}
 8973              	.L374:
 8974              		.align	2
 8975              	.L373:
 8976 3890 002C0140 		.word	1073818624
 8977 3894 00040040 		.word	1073742848
 8978 3898 00080040 		.word	1073743872
 8979 389c 000C0040 		.word	1073744896
 8980 38a0 00340140 		.word	1073820672
 8981 38a4 00000000 		.word	.LC0
 8982              		.cfi_endproc
 8983              	.LFE84:
 8985              		.align	2
 8986              		.global	TIM_CCxCmd
 8987              		.thumb
 8988              		.thumb_func
 8990              	TIM_CCxCmd:
 8991              	.LFB85:
1960:../SPL/src/stm32f10x_tim.c **** 
1961:../SPL/src/stm32f10x_tim.c **** /**
1962:../SPL/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1963:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
1964:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1965:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1966:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
1967:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
1968:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
1969:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_4: TIM Channel 4
1970:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1971:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1972:../SPL/src/stm32f10x_tim.c ****   * @retval None
1973:../SPL/src/stm32f10x_tim.c ****   */
1974:../SPL/src/stm32f10x_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1975:../SPL/src/stm32f10x_tim.c **** {
 8992              		.loc 1 1975 0
 8993              		.cfi_startproc
 8994              		@ args = 0, pretend = 0, frame = 16
 8995              		@ frame_needed = 1, uses_anonymous_args = 0
 8996 38a8 80B5     		push	{r7, lr}
 8997              	.LCFI168:
 8998              		.cfi_def_cfa_offset 8
 8999              		.cfi_offset 7, -8
 9000              		.cfi_offset 14, -4
 9001 38aa 84B0     		sub	sp, sp, #16
 9002              	.LCFI169:
 9003              		.cfi_def_cfa_offset 24
 9004 38ac 00AF     		add	r7, sp, #0
 9005              	.LCFI170:
 9006              		.cfi_def_cfa_register 7
 9007 38ae 7860     		str	r0, [r7, #4]
 9008 38b0 1346     		mov	r3, r2
 9009 38b2 0A46     		mov	r2, r1	@ movhi
 9010 38b4 7A80     		strh	r2, [r7, #2]	@ movhi
 9011 38b6 3B80     		strh	r3, [r7, #0]	@ movhi
1976:../SPL/src/stm32f10x_tim.c ****   uint16_t tmp = 0;
 9012              		.loc 1 1976 0
 9013 38b8 4FF00003 		mov	r3, #0
 9014 38bc FB81     		strh	r3, [r7, #14]	@ movhi
1977:../SPL/src/stm32f10x_tim.c **** 
1978:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
1979:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 9015              		.loc 1 1979 0
 9016 38be 7A68     		ldr	r2, [r7, #4]
 9017 38c0 3E4B     		ldr	r3, .L379
 9018 38c2 9A42     		cmp	r2, r3
 9019 38c4 3CD0     		beq	.L376
 9020              		.loc 1 1979 0 is_stmt 0 discriminator 1
 9021 38c6 7B68     		ldr	r3, [r7, #4]
 9022 38c8 B3F1804F 		cmp	r3, #1073741824
 9023 38cc 38D0     		beq	.L376
 9024              		.loc 1 1979 0 discriminator 2
 9025 38ce 7A68     		ldr	r2, [r7, #4]
 9026 38d0 3B4B     		ldr	r3, .L379+4
 9027 38d2 9A42     		cmp	r2, r3
 9028 38d4 34D0     		beq	.L376
 9029              		.loc 1 1979 0 discriminator 3
 9030 38d6 7A68     		ldr	r2, [r7, #4]
 9031 38d8 3A4B     		ldr	r3, .L379+8
 9032 38da 9A42     		cmp	r2, r3
 9033 38dc 30D0     		beq	.L376
 9034              		.loc 1 1979 0 discriminator 4
 9035 38de 7A68     		ldr	r2, [r7, #4]
 9036 38e0 394B     		ldr	r3, .L379+12
 9037 38e2 9A42     		cmp	r2, r3
 9038 38e4 2CD0     		beq	.L376
 9039              		.loc 1 1979 0 discriminator 5
 9040 38e6 7A68     		ldr	r2, [r7, #4]
 9041 38e8 384B     		ldr	r3, .L379+16
 9042 38ea 9A42     		cmp	r2, r3
 9043 38ec 28D0     		beq	.L376
 9044              		.loc 1 1979 0 discriminator 6
 9045 38ee 7A68     		ldr	r2, [r7, #4]
 9046 38f0 374B     		ldr	r3, .L379+20
 9047 38f2 9A42     		cmp	r2, r3
 9048 38f4 24D0     		beq	.L376
 9049              		.loc 1 1979 0 discriminator 7
 9050 38f6 7A68     		ldr	r2, [r7, #4]
 9051 38f8 364B     		ldr	r3, .L379+24
 9052 38fa 9A42     		cmp	r2, r3
 9053 38fc 20D0     		beq	.L376
 9054              		.loc 1 1979 0 discriminator 8
 9055 38fe 7A68     		ldr	r2, [r7, #4]
 9056 3900 354B     		ldr	r3, .L379+28
 9057 3902 9A42     		cmp	r2, r3
 9058 3904 1CD0     		beq	.L376
 9059              		.loc 1 1979 0 discriminator 9
 9060 3906 7A68     		ldr	r2, [r7, #4]
 9061 3908 344B     		ldr	r3, .L379+32
 9062 390a 9A42     		cmp	r2, r3
 9063 390c 18D0     		beq	.L376
 9064              		.loc 1 1979 0 discriminator 10
 9065 390e 7A68     		ldr	r2, [r7, #4]
 9066 3910 334B     		ldr	r3, .L379+36
 9067 3912 9A42     		cmp	r2, r3
 9068 3914 14D0     		beq	.L376
 9069              		.loc 1 1979 0 discriminator 11
 9070 3916 7A68     		ldr	r2, [r7, #4]
 9071 3918 324B     		ldr	r3, .L379+40
 9072 391a 9A42     		cmp	r2, r3
 9073 391c 10D0     		beq	.L376
 9074              		.loc 1 1979 0 discriminator 12
 9075 391e 7A68     		ldr	r2, [r7, #4]
 9076 3920 314B     		ldr	r3, .L379+44
 9077 3922 9A42     		cmp	r2, r3
 9078 3924 0CD0     		beq	.L376
 9079              		.loc 1 1979 0 discriminator 13
 9080 3926 7A68     		ldr	r2, [r7, #4]
 9081 3928 304B     		ldr	r3, .L379+48
 9082 392a 9A42     		cmp	r2, r3
 9083 392c 08D0     		beq	.L376
 9084              		.loc 1 1979 0 discriminator 14
 9085 392e 7A68     		ldr	r2, [r7, #4]
 9086 3930 2F4B     		ldr	r3, .L379+52
 9087 3932 9A42     		cmp	r2, r3
 9088 3934 04D0     		beq	.L376
 9089              		.loc 1 1979 0 discriminator 15
 9090 3936 2F48     		ldr	r0, .L379+56
 9091 3938 40F2BB71 		movw	r1, #1979
 9092 393c FFF7FEFF 		bl	assert_failed
 9093              	.L376:
1980:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
 9094              		.loc 1 1980 0 is_stmt 1
 9095 3940 7B88     		ldrh	r3, [r7, #2]
 9096 3942 002B     		cmp	r3, #0
 9097 3944 0DD0     		beq	.L377
 9098              		.loc 1 1980 0 is_stmt 0 discriminator 1
 9099 3946 7B88     		ldrh	r3, [r7, #2]
 9100 3948 042B     		cmp	r3, #4
 9101 394a 0AD0     		beq	.L377
 9102              		.loc 1 1980 0 discriminator 2
 9103 394c 7B88     		ldrh	r3, [r7, #2]
 9104 394e 082B     		cmp	r3, #8
 9105 3950 07D0     		beq	.L377
 9106              		.loc 1 1980 0 discriminator 3
 9107 3952 7B88     		ldrh	r3, [r7, #2]
 9108 3954 0C2B     		cmp	r3, #12
 9109 3956 04D0     		beq	.L377
 9110              		.loc 1 1980 0 discriminator 4
 9111 3958 2648     		ldr	r0, .L379+56
 9112 395a 40F2BC71 		movw	r1, #1980
 9113 395e FFF7FEFF 		bl	assert_failed
 9114              	.L377:
1981:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
 9115              		.loc 1 1981 0 is_stmt 1
 9116 3962 3B88     		ldrh	r3, [r7, #0]
 9117 3964 012B     		cmp	r3, #1
 9118 3966 07D0     		beq	.L378
 9119              		.loc 1 1981 0 is_stmt 0 discriminator 1
 9120 3968 3B88     		ldrh	r3, [r7, #0]
 9121 396a 002B     		cmp	r3, #0
 9122 396c 04D0     		beq	.L378
 9123              		.loc 1 1981 0 discriminator 2
 9124 396e 2148     		ldr	r0, .L379+56
 9125 3970 40F2BD71 		movw	r1, #1981
 9126 3974 FFF7FEFF 		bl	assert_failed
 9127              	.L378:
1982:../SPL/src/stm32f10x_tim.c **** 
1983:../SPL/src/stm32f10x_tim.c ****   tmp = CCER_CCE_Set << TIM_Channel;
 9128              		.loc 1 1983 0 is_stmt 1
 9129 3978 7B88     		ldrh	r3, [r7, #2]
 9130 397a 4FF00102 		mov	r2, #1
 9131 397e 02FA03F3 		lsl	r3, r2, r3
 9132 3982 FB81     		strh	r3, [r7, #14]	@ movhi
1984:../SPL/src/stm32f10x_tim.c **** 
1985:../SPL/src/stm32f10x_tim.c ****   /* Reset the CCxE Bit */
1986:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
 9133              		.loc 1 1986 0
 9134 3984 7B68     		ldr	r3, [r7, #4]
 9135 3986 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 9136 3988 9AB2     		uxth	r2, r3
 9137 398a FB89     		ldrh	r3, [r7, #14]	@ movhi
 9138 398c 6FEA0303 		mvn	r3, r3
 9139 3990 9BB2     		uxth	r3, r3
 9140 3992 1340     		ands	r3, r3, r2
 9141 3994 9AB2     		uxth	r2, r3
 9142 3996 7B68     		ldr	r3, [r7, #4]
 9143 3998 1A84     		strh	r2, [r3, #32]	@ movhi
1987:../SPL/src/stm32f10x_tim.c **** 
1988:../SPL/src/stm32f10x_tim.c ****   /* Set or reset the CCxE Bit */ 
1989:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
 9144              		.loc 1 1989 0
 9145 399a 7B68     		ldr	r3, [r7, #4]
 9146 399c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 9147 399e 9AB2     		uxth	r2, r3
 9148 39a0 3988     		ldrh	r1, [r7, #0]
 9149 39a2 7B88     		ldrh	r3, [r7, #2]
 9150 39a4 01FA03F3 		lsl	r3, r1, r3
 9151 39a8 9BB2     		uxth	r3, r3
 9152 39aa 1343     		orrs	r3, r3, r2
 9153 39ac 9AB2     		uxth	r2, r3
 9154 39ae 7B68     		ldr	r3, [r7, #4]
 9155 39b0 1A84     		strh	r2, [r3, #32]	@ movhi
1990:../SPL/src/stm32f10x_tim.c **** }
 9156              		.loc 1 1990 0
 9157 39b2 07F11007 		add	r7, r7, #16
 9158 39b6 BD46     		mov	sp, r7
 9159 39b8 80BD     		pop	{r7, pc}
 9160              	.L380:
 9161 39ba 00BF     		.align	2
 9162              	.L379:
 9163 39bc 002C0140 		.word	1073818624
 9164 39c0 00040040 		.word	1073742848
 9165 39c4 00080040 		.word	1073743872
 9166 39c8 000C0040 		.word	1073744896
 9167 39cc 00340140 		.word	1073820672
 9168 39d0 004C0140 		.word	1073826816
 9169 39d4 00500140 		.word	1073827840
 9170 39d8 00540140 		.word	1073828864
 9171 39dc 00180040 		.word	1073747968
 9172 39e0 001C0040 		.word	1073748992
 9173 39e4 00200040 		.word	1073750016
 9174 39e8 00400140 		.word	1073823744
 9175 39ec 00440140 		.word	1073824768
 9176 39f0 00480140 		.word	1073825792
 9177 39f4 00000000 		.word	.LC0
 9178              		.cfi_endproc
 9179              	.LFE85:
 9181              		.align	2
 9182              		.global	TIM_CCxNCmd
 9183              		.thumb
 9184              		.thumb_func
 9186              	TIM_CCxNCmd:
 9187              	.LFB86:
1991:../SPL/src/stm32f10x_tim.c **** 
1992:../SPL/src/stm32f10x_tim.c **** /**
1993:../SPL/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1994:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIM peripheral.
1995:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1996:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1997:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
1998:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
1999:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
2000:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
2001:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
2002:../SPL/src/stm32f10x_tim.c ****   * @retval None
2003:../SPL/src/stm32f10x_tim.c ****   */
2004:../SPL/src/stm32f10x_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
2005:../SPL/src/stm32f10x_tim.c **** {
 9188              		.loc 1 2005 0
 9189              		.cfi_startproc
 9190              		@ args = 0, pretend = 0, frame = 16
 9191              		@ frame_needed = 1, uses_anonymous_args = 0
 9192 39f8 80B5     		push	{r7, lr}
 9193              	.LCFI171:
 9194              		.cfi_def_cfa_offset 8
 9195              		.cfi_offset 7, -8
 9196              		.cfi_offset 14, -4
 9197 39fa 84B0     		sub	sp, sp, #16
 9198              	.LCFI172:
 9199              		.cfi_def_cfa_offset 24
 9200 39fc 00AF     		add	r7, sp, #0
 9201              	.LCFI173:
 9202              		.cfi_def_cfa_register 7
 9203 39fe 7860     		str	r0, [r7, #4]
 9204 3a00 1346     		mov	r3, r2
 9205 3a02 0A46     		mov	r2, r1	@ movhi
 9206 3a04 7A80     		strh	r2, [r7, #2]	@ movhi
 9207 3a06 3B80     		strh	r3, [r7, #0]	@ movhi
2006:../SPL/src/stm32f10x_tim.c ****   uint16_t tmp = 0;
 9208              		.loc 1 2006 0
 9209 3a08 4FF00003 		mov	r3, #0
 9210 3a0c FB81     		strh	r3, [r7, #14]	@ movhi
2007:../SPL/src/stm32f10x_tim.c **** 
2008:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2009:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 9211              		.loc 1 2009 0
 9212 3a0e 7A68     		ldr	r2, [r7, #4]
 9213 3a10 284B     		ldr	r3, .L385
 9214 3a12 9A42     		cmp	r2, r3
 9215 3a14 14D0     		beq	.L382
 9216              		.loc 1 2009 0 is_stmt 0 discriminator 1
 9217 3a16 7A68     		ldr	r2, [r7, #4]
 9218 3a18 274B     		ldr	r3, .L385+4
 9219 3a1a 9A42     		cmp	r2, r3
 9220 3a1c 10D0     		beq	.L382
 9221              		.loc 1 2009 0 discriminator 2
 9222 3a1e 7A68     		ldr	r2, [r7, #4]
 9223 3a20 264B     		ldr	r3, .L385+8
 9224 3a22 9A42     		cmp	r2, r3
 9225 3a24 0CD0     		beq	.L382
 9226              		.loc 1 2009 0 discriminator 3
 9227 3a26 7A68     		ldr	r2, [r7, #4]
 9228 3a28 254B     		ldr	r3, .L385+12
 9229 3a2a 9A42     		cmp	r2, r3
 9230 3a2c 08D0     		beq	.L382
 9231              		.loc 1 2009 0 discriminator 4
 9232 3a2e 7A68     		ldr	r2, [r7, #4]
 9233 3a30 244B     		ldr	r3, .L385+16
 9234 3a32 9A42     		cmp	r2, r3
 9235 3a34 04D0     		beq	.L382
 9236              		.loc 1 2009 0 discriminator 5
 9237 3a36 2448     		ldr	r0, .L385+20
 9238 3a38 40F2D971 		movw	r1, #2009
 9239 3a3c FFF7FEFF 		bl	assert_failed
 9240              	.L382:
2010:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
 9241              		.loc 1 2010 0 is_stmt 1
 9242 3a40 7B88     		ldrh	r3, [r7, #2]
 9243 3a42 002B     		cmp	r3, #0
 9244 3a44 0AD0     		beq	.L383
 9245              		.loc 1 2010 0 is_stmt 0 discriminator 1
 9246 3a46 7B88     		ldrh	r3, [r7, #2]
 9247 3a48 042B     		cmp	r3, #4
 9248 3a4a 07D0     		beq	.L383
 9249              		.loc 1 2010 0 discriminator 2
 9250 3a4c 7B88     		ldrh	r3, [r7, #2]
 9251 3a4e 082B     		cmp	r3, #8
 9252 3a50 04D0     		beq	.L383
 9253              		.loc 1 2010 0 discriminator 3
 9254 3a52 1D48     		ldr	r0, .L385+20
 9255 3a54 40F2DA71 		movw	r1, #2010
 9256 3a58 FFF7FEFF 		bl	assert_failed
 9257              	.L383:
2011:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
 9258              		.loc 1 2011 0 is_stmt 1
 9259 3a5c 3B88     		ldrh	r3, [r7, #0]
 9260 3a5e 042B     		cmp	r3, #4
 9261 3a60 07D0     		beq	.L384
 9262              		.loc 1 2011 0 is_stmt 0 discriminator 1
 9263 3a62 3B88     		ldrh	r3, [r7, #0]
 9264 3a64 002B     		cmp	r3, #0
 9265 3a66 04D0     		beq	.L384
 9266              		.loc 1 2011 0 discriminator 2
 9267 3a68 1748     		ldr	r0, .L385+20
 9268 3a6a 40F2DB71 		movw	r1, #2011
 9269 3a6e FFF7FEFF 		bl	assert_failed
 9270              	.L384:
2012:../SPL/src/stm32f10x_tim.c **** 
2013:../SPL/src/stm32f10x_tim.c ****   tmp = CCER_CCNE_Set << TIM_Channel;
 9271              		.loc 1 2013 0 is_stmt 1
 9272 3a72 7B88     		ldrh	r3, [r7, #2]
 9273 3a74 4FF00402 		mov	r2, #4
 9274 3a78 02FA03F3 		lsl	r3, r2, r3
 9275 3a7c FB81     		strh	r3, [r7, #14]	@ movhi
2014:../SPL/src/stm32f10x_tim.c **** 
2015:../SPL/src/stm32f10x_tim.c ****   /* Reset the CCxNE Bit */
2016:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
 9276              		.loc 1 2016 0
 9277 3a7e 7B68     		ldr	r3, [r7, #4]
 9278 3a80 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 9279 3a82 9AB2     		uxth	r2, r3
 9280 3a84 FB89     		ldrh	r3, [r7, #14]	@ movhi
 9281 3a86 6FEA0303 		mvn	r3, r3
 9282 3a8a 9BB2     		uxth	r3, r3
 9283 3a8c 1340     		ands	r3, r3, r2
 9284 3a8e 9AB2     		uxth	r2, r3
 9285 3a90 7B68     		ldr	r3, [r7, #4]
 9286 3a92 1A84     		strh	r2, [r3, #32]	@ movhi
2017:../SPL/src/stm32f10x_tim.c **** 
2018:../SPL/src/stm32f10x_tim.c ****   /* Set or reset the CCxNE Bit */ 
2019:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
 9287              		.loc 1 2019 0
 9288 3a94 7B68     		ldr	r3, [r7, #4]
 9289 3a96 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 9290 3a98 9AB2     		uxth	r2, r3
 9291 3a9a 3988     		ldrh	r1, [r7, #0]
 9292 3a9c 7B88     		ldrh	r3, [r7, #2]
 9293 3a9e 01FA03F3 		lsl	r3, r1, r3
 9294 3aa2 9BB2     		uxth	r3, r3
 9295 3aa4 1343     		orrs	r3, r3, r2
 9296 3aa6 9AB2     		uxth	r2, r3
 9297 3aa8 7B68     		ldr	r3, [r7, #4]
 9298 3aaa 1A84     		strh	r2, [r3, #32]	@ movhi
2020:../SPL/src/stm32f10x_tim.c **** }
 9299              		.loc 1 2020 0
 9300 3aac 07F11007 		add	r7, r7, #16
 9301 3ab0 BD46     		mov	sp, r7
 9302 3ab2 80BD     		pop	{r7, pc}
 9303              	.L386:
 9304              		.align	2
 9305              	.L385:
 9306 3ab4 002C0140 		.word	1073818624
 9307 3ab8 00340140 		.word	1073820672
 9308 3abc 00400140 		.word	1073823744
 9309 3ac0 00440140 		.word	1073824768
 9310 3ac4 00480140 		.word	1073825792
 9311 3ac8 00000000 		.word	.LC0
 9312              		.cfi_endproc
 9313              	.LFE86:
 9315              		.align	2
 9316              		.global	TIM_SelectOCxM
 9317              		.thumb
 9318              		.thumb_func
 9320              	TIM_SelectOCxM:
 9321              	.LFB87:
2021:../SPL/src/stm32f10x_tim.c **** 
2022:../SPL/src/stm32f10x_tim.c **** /**
2023:../SPL/src/stm32f10x_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
2024:../SPL/src/stm32f10x_tim.c ****   * @note   This function disables the selected channel before changing the Output
2025:../SPL/src/stm32f10x_tim.c ****   *         Compare Mode.
2026:../SPL/src/stm32f10x_tim.c ****   *         User has to enable this channel using TIM_CCxCmd and TIM_CCxNCmd functions.
2027:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2028:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
2029:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2030:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
2031:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
2032:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
2033:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_4: TIM Channel 4
2034:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
2035:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2036:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_Timing
2037:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_Active
2038:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_Toggle
2039:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_PWM1
2040:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_PWM2
2041:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active
2042:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive
2043:../SPL/src/stm32f10x_tim.c ****   * @retval None
2044:../SPL/src/stm32f10x_tim.c ****   */
2045:../SPL/src/stm32f10x_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
2046:../SPL/src/stm32f10x_tim.c **** {
 9322              		.loc 1 2046 0
 9323              		.cfi_startproc
 9324              		@ args = 0, pretend = 0, frame = 16
 9325              		@ frame_needed = 1, uses_anonymous_args = 0
 9326 3acc 80B5     		push	{r7, lr}
 9327              	.LCFI174:
 9328              		.cfi_def_cfa_offset 8
 9329              		.cfi_offset 7, -8
 9330              		.cfi_offset 14, -4
 9331 3ace 84B0     		sub	sp, sp, #16
 9332              	.LCFI175:
 9333              		.cfi_def_cfa_offset 24
 9334 3ad0 00AF     		add	r7, sp, #0
 9335              	.LCFI176:
 9336              		.cfi_def_cfa_register 7
 9337 3ad2 7860     		str	r0, [r7, #4]
 9338 3ad4 1346     		mov	r3, r2
 9339 3ad6 0A46     		mov	r2, r1	@ movhi
 9340 3ad8 7A80     		strh	r2, [r7, #2]	@ movhi
 9341 3ada 3B80     		strh	r3, [r7, #0]	@ movhi
2047:../SPL/src/stm32f10x_tim.c ****   uint32_t tmp = 0;
 9342              		.loc 1 2047 0
 9343 3adc 4FF00003 		mov	r3, #0
 9344 3ae0 FB60     		str	r3, [r7, #12]
2048:../SPL/src/stm32f10x_tim.c ****   uint16_t tmp1 = 0;
 9345              		.loc 1 2048 0
 9346 3ae2 4FF00003 		mov	r3, #0
 9347 3ae6 7B81     		strh	r3, [r7, #10]	@ movhi
2049:../SPL/src/stm32f10x_tim.c **** 
2050:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2051:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 9348              		.loc 1 2051 0
 9349 3ae8 7A68     		ldr	r2, [r7, #4]
 9350 3aea 5E4B     		ldr	r3, .L394
 9351 3aec 9A42     		cmp	r2, r3
 9352 3aee 3CD0     		beq	.L388
 9353              		.loc 1 2051 0 is_stmt 0 discriminator 1
 9354 3af0 7B68     		ldr	r3, [r7, #4]
 9355 3af2 B3F1804F 		cmp	r3, #1073741824
 9356 3af6 38D0     		beq	.L388
 9357              		.loc 1 2051 0 discriminator 2
 9358 3af8 7A68     		ldr	r2, [r7, #4]
 9359 3afa 5B4B     		ldr	r3, .L394+4
 9360 3afc 9A42     		cmp	r2, r3
 9361 3afe 34D0     		beq	.L388
 9362              		.loc 1 2051 0 discriminator 3
 9363 3b00 7A68     		ldr	r2, [r7, #4]
 9364 3b02 5A4B     		ldr	r3, .L394+8
 9365 3b04 9A42     		cmp	r2, r3
 9366 3b06 30D0     		beq	.L388
 9367              		.loc 1 2051 0 discriminator 4
 9368 3b08 7A68     		ldr	r2, [r7, #4]
 9369 3b0a 594B     		ldr	r3, .L394+12
 9370 3b0c 9A42     		cmp	r2, r3
 9371 3b0e 2CD0     		beq	.L388
 9372              		.loc 1 2051 0 discriminator 5
 9373 3b10 7A68     		ldr	r2, [r7, #4]
 9374 3b12 584B     		ldr	r3, .L394+16
 9375 3b14 9A42     		cmp	r2, r3
 9376 3b16 28D0     		beq	.L388
 9377              		.loc 1 2051 0 discriminator 6
 9378 3b18 7A68     		ldr	r2, [r7, #4]
 9379 3b1a 574B     		ldr	r3, .L394+20
 9380 3b1c 9A42     		cmp	r2, r3
 9381 3b1e 24D0     		beq	.L388
 9382              		.loc 1 2051 0 discriminator 7
 9383 3b20 7A68     		ldr	r2, [r7, #4]
 9384 3b22 564B     		ldr	r3, .L394+24
 9385 3b24 9A42     		cmp	r2, r3
 9386 3b26 20D0     		beq	.L388
 9387              		.loc 1 2051 0 discriminator 8
 9388 3b28 7A68     		ldr	r2, [r7, #4]
 9389 3b2a 554B     		ldr	r3, .L394+28
 9390 3b2c 9A42     		cmp	r2, r3
 9391 3b2e 1CD0     		beq	.L388
 9392              		.loc 1 2051 0 discriminator 9
 9393 3b30 7A68     		ldr	r2, [r7, #4]
 9394 3b32 544B     		ldr	r3, .L394+32
 9395 3b34 9A42     		cmp	r2, r3
 9396 3b36 18D0     		beq	.L388
 9397              		.loc 1 2051 0 discriminator 10
 9398 3b38 7A68     		ldr	r2, [r7, #4]
 9399 3b3a 534B     		ldr	r3, .L394+36
 9400 3b3c 9A42     		cmp	r2, r3
 9401 3b3e 14D0     		beq	.L388
 9402              		.loc 1 2051 0 discriminator 11
 9403 3b40 7A68     		ldr	r2, [r7, #4]
 9404 3b42 524B     		ldr	r3, .L394+40
 9405 3b44 9A42     		cmp	r2, r3
 9406 3b46 10D0     		beq	.L388
 9407              		.loc 1 2051 0 discriminator 12
 9408 3b48 7A68     		ldr	r2, [r7, #4]
 9409 3b4a 514B     		ldr	r3, .L394+44
 9410 3b4c 9A42     		cmp	r2, r3
 9411 3b4e 0CD0     		beq	.L388
 9412              		.loc 1 2051 0 discriminator 13
 9413 3b50 7A68     		ldr	r2, [r7, #4]
 9414 3b52 504B     		ldr	r3, .L394+48
 9415 3b54 9A42     		cmp	r2, r3
 9416 3b56 08D0     		beq	.L388
 9417              		.loc 1 2051 0 discriminator 14
 9418 3b58 7A68     		ldr	r2, [r7, #4]
 9419 3b5a 4F4B     		ldr	r3, .L394+52
 9420 3b5c 9A42     		cmp	r2, r3
 9421 3b5e 04D0     		beq	.L388
 9422              		.loc 1 2051 0 discriminator 15
 9423 3b60 4E48     		ldr	r0, .L394+56
 9424 3b62 40F60301 		movw	r1, #2051
 9425 3b66 FFF7FEFF 		bl	assert_failed
 9426              	.L388:
2052:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
 9427              		.loc 1 2052 0 is_stmt 1
 9428 3b6a 7B88     		ldrh	r3, [r7, #2]
 9429 3b6c 002B     		cmp	r3, #0
 9430 3b6e 0DD0     		beq	.L389
 9431              		.loc 1 2052 0 is_stmt 0 discriminator 1
 9432 3b70 7B88     		ldrh	r3, [r7, #2]
 9433 3b72 042B     		cmp	r3, #4
 9434 3b74 0AD0     		beq	.L389
 9435              		.loc 1 2052 0 discriminator 2
 9436 3b76 7B88     		ldrh	r3, [r7, #2]
 9437 3b78 082B     		cmp	r3, #8
 9438 3b7a 07D0     		beq	.L389
 9439              		.loc 1 2052 0 discriminator 3
 9440 3b7c 7B88     		ldrh	r3, [r7, #2]
 9441 3b7e 0C2B     		cmp	r3, #12
 9442 3b80 04D0     		beq	.L389
 9443              		.loc 1 2052 0 discriminator 4
 9444 3b82 4648     		ldr	r0, .L394+56
 9445 3b84 40F60401 		movw	r1, #2052
 9446 3b88 FFF7FEFF 		bl	assert_failed
 9447              	.L389:
2053:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
 9448              		.loc 1 2053 0 is_stmt 1
 9449 3b8c 3B88     		ldrh	r3, [r7, #0]
 9450 3b8e 002B     		cmp	r3, #0
 9451 3b90 19D0     		beq	.L390
 9452              		.loc 1 2053 0 is_stmt 0 discriminator 1
 9453 3b92 3B88     		ldrh	r3, [r7, #0]
 9454 3b94 102B     		cmp	r3, #16
 9455 3b96 16D0     		beq	.L390
 9456              		.loc 1 2053 0 discriminator 2
 9457 3b98 3B88     		ldrh	r3, [r7, #0]
 9458 3b9a 202B     		cmp	r3, #32
 9459 3b9c 13D0     		beq	.L390
 9460              		.loc 1 2053 0 discriminator 3
 9461 3b9e 3B88     		ldrh	r3, [r7, #0]
 9462 3ba0 302B     		cmp	r3, #48
 9463 3ba2 10D0     		beq	.L390
 9464              		.loc 1 2053 0 discriminator 4
 9465 3ba4 3B88     		ldrh	r3, [r7, #0]
 9466 3ba6 602B     		cmp	r3, #96
 9467 3ba8 0DD0     		beq	.L390
 9468              		.loc 1 2053 0 discriminator 5
 9469 3baa 3B88     		ldrh	r3, [r7, #0]
 9470 3bac 702B     		cmp	r3, #112
 9471 3bae 0AD0     		beq	.L390
 9472              		.loc 1 2053 0 discriminator 6
 9473 3bb0 3B88     		ldrh	r3, [r7, #0]
 9474 3bb2 502B     		cmp	r3, #80
 9475 3bb4 07D0     		beq	.L390
 9476              		.loc 1 2053 0 discriminator 7
 9477 3bb6 3B88     		ldrh	r3, [r7, #0]
 9478 3bb8 402B     		cmp	r3, #64
 9479 3bba 04D0     		beq	.L390
 9480              		.loc 1 2053 0 discriminator 8
 9481 3bbc 3748     		ldr	r0, .L394+56
 9482 3bbe 40F60501 		movw	r1, #2053
 9483 3bc2 FFF7FEFF 		bl	assert_failed
 9484              	.L390:
2054:../SPL/src/stm32f10x_tim.c **** 
2055:../SPL/src/stm32f10x_tim.c ****   tmp = (uint32_t) TIMx;
 9485              		.loc 1 2055 0 is_stmt 1
 9486 3bc6 7B68     		ldr	r3, [r7, #4]
 9487 3bc8 FB60     		str	r3, [r7, #12]
2056:../SPL/src/stm32f10x_tim.c ****   tmp += CCMR_Offset;
 9488              		.loc 1 2056 0
 9489 3bca FB68     		ldr	r3, [r7, #12]
 9490 3bcc 03F11803 		add	r3, r3, #24
 9491 3bd0 FB60     		str	r3, [r7, #12]
2057:../SPL/src/stm32f10x_tim.c **** 
2058:../SPL/src/stm32f10x_tim.c ****   tmp1 = CCER_CCE_Set << (uint16_t)TIM_Channel;
 9492              		.loc 1 2058 0
 9493 3bd2 7B88     		ldrh	r3, [r7, #2]
 9494 3bd4 4FF00102 		mov	r2, #1
 9495 3bd8 02FA03F3 		lsl	r3, r2, r3
 9496 3bdc 7B81     		strh	r3, [r7, #10]	@ movhi
2059:../SPL/src/stm32f10x_tim.c **** 
2060:../SPL/src/stm32f10x_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
2061:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 9497              		.loc 1 2061 0
 9498 3bde 7B68     		ldr	r3, [r7, #4]
 9499 3be0 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 9500 3be2 9AB2     		uxth	r2, r3
 9501 3be4 7B89     		ldrh	r3, [r7, #10]	@ movhi
 9502 3be6 6FEA0303 		mvn	r3, r3
 9503 3bea 9BB2     		uxth	r3, r3
 9504 3bec 1340     		ands	r3, r3, r2
 9505 3bee 9AB2     		uxth	r2, r3
 9506 3bf0 7B68     		ldr	r3, [r7, #4]
 9507 3bf2 1A84     		strh	r2, [r3, #32]	@ movhi
2062:../SPL/src/stm32f10x_tim.c **** 
2063:../SPL/src/stm32f10x_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
 9508              		.loc 1 2063 0
 9509 3bf4 7B88     		ldrh	r3, [r7, #2]
 9510 3bf6 002B     		cmp	r3, #0
 9511 3bf8 02D0     		beq	.L391
 9512              		.loc 1 2063 0 is_stmt 0 discriminator 1
 9513 3bfa 7B88     		ldrh	r3, [r7, #2]
 9514 3bfc 082B     		cmp	r3, #8
 9515 3bfe 13D1     		bne	.L392
 9516              	.L391:
2064:../SPL/src/stm32f10x_tim.c ****   {
2065:../SPL/src/stm32f10x_tim.c ****     tmp += (TIM_Channel>>1);
 9517              		.loc 1 2065 0 is_stmt 1
 9518 3c00 7B88     		ldrh	r3, [r7, #2]
 9519 3c02 4FEA5303 		lsr	r3, r3, #1
 9520 3c06 9BB2     		uxth	r3, r3
 9521 3c08 FA68     		ldr	r2, [r7, #12]
 9522 3c0a D318     		adds	r3, r2, r3
 9523 3c0c FB60     		str	r3, [r7, #12]
2066:../SPL/src/stm32f10x_tim.c **** 
2067:../SPL/src/stm32f10x_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
2068:../SPL/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp &= (uint32_t)~((uint32_t)TIM_CCMR1_OC1M);
 9524              		.loc 1 2068 0
 9525 3c0e FB68     		ldr	r3, [r7, #12]
 9526 3c10 FA68     		ldr	r2, [r7, #12]
 9527 3c12 1268     		ldr	r2, [r2, #0]
 9528 3c14 22F07002 		bic	r2, r2, #112
 9529 3c18 1A60     		str	r2, [r3, #0]
2069:../SPL/src/stm32f10x_tim.c ****    
2070:../SPL/src/stm32f10x_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
2071:../SPL/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
 9530              		.loc 1 2071 0
 9531 3c1a FB68     		ldr	r3, [r7, #12]
 9532 3c1c FA68     		ldr	r2, [r7, #12]
 9533 3c1e 1168     		ldr	r1, [r2, #0]
 9534 3c20 3A88     		ldrh	r2, [r7, #0]
 9535 3c22 0A43     		orrs	r2, r2, r1
 9536 3c24 1A60     		str	r2, [r3, #0]
 9537 3c26 18E0     		b	.L387
 9538              	.L392:
2072:../SPL/src/stm32f10x_tim.c ****   }
2073:../SPL/src/stm32f10x_tim.c ****   else
2074:../SPL/src/stm32f10x_tim.c ****   {
2075:../SPL/src/stm32f10x_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
 9539              		.loc 1 2075 0
 9540 3c28 7B88     		ldrh	r3, [r7, #2]	@ movhi
 9541 3c2a A3F10403 		sub	r3, r3, #4
 9542 3c2e 9BB2     		uxth	r3, r3
 9543 3c30 4FEA5303 		lsr	r3, r3, #1
 9544 3c34 9BB2     		uxth	r3, r3
 9545 3c36 FA68     		ldr	r2, [r7, #12]
 9546 3c38 D318     		adds	r3, r2, r3
 9547 3c3a FB60     		str	r3, [r7, #12]
2076:../SPL/src/stm32f10x_tim.c **** 
2077:../SPL/src/stm32f10x_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
2078:../SPL/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp &= (uint32_t)~((uint32_t)TIM_CCMR1_OC2M);
 9548              		.loc 1 2078 0
 9549 3c3c FB68     		ldr	r3, [r7, #12]
 9550 3c3e FA68     		ldr	r2, [r7, #12]
 9551 3c40 1268     		ldr	r2, [r2, #0]
 9552 3c42 22F4E042 		bic	r2, r2, #28672
 9553 3c46 1A60     		str	r2, [r3, #0]
2079:../SPL/src/stm32f10x_tim.c ****     
2080:../SPL/src/stm32f10x_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
2081:../SPL/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
 9554              		.loc 1 2081 0
 9555 3c48 FB68     		ldr	r3, [r7, #12]
 9556 3c4a FA68     		ldr	r2, [r7, #12]
 9557 3c4c 1168     		ldr	r1, [r2, #0]
 9558 3c4e 3A88     		ldrh	r2, [r7, #0]	@ movhi
 9559 3c50 4FEA0222 		lsl	r2, r2, #8
 9560 3c54 92B2     		uxth	r2, r2
 9561 3c56 0A43     		orrs	r2, r2, r1
 9562 3c58 1A60     		str	r2, [r3, #0]
 9563              	.L387:
2082:../SPL/src/stm32f10x_tim.c ****   }
2083:../SPL/src/stm32f10x_tim.c **** }
 9564              		.loc 1 2083 0
 9565 3c5a 07F11007 		add	r7, r7, #16
 9566 3c5e BD46     		mov	sp, r7
 9567 3c60 80BD     		pop	{r7, pc}
 9568              	.L395:
 9569 3c62 00BF     		.align	2
 9570              	.L394:
 9571 3c64 002C0140 		.word	1073818624
 9572 3c68 00040040 		.word	1073742848
 9573 3c6c 00080040 		.word	1073743872
 9574 3c70 000C0040 		.word	1073744896
 9575 3c74 00340140 		.word	1073820672
 9576 3c78 004C0140 		.word	1073826816
 9577 3c7c 00500140 		.word	1073827840
 9578 3c80 00540140 		.word	1073828864
 9579 3c84 00180040 		.word	1073747968
 9580 3c88 001C0040 		.word	1073748992
 9581 3c8c 00200040 		.word	1073750016
 9582 3c90 00400140 		.word	1073823744
 9583 3c94 00440140 		.word	1073824768
 9584 3c98 00480140 		.word	1073825792
 9585 3c9c 00000000 		.word	.LC0
 9586              		.cfi_endproc
 9587              	.LFE87:
 9589              		.align	2
 9590              		.global	TIM_UpdateDisableConfig
 9591              		.thumb
 9592              		.thumb_func
 9594              	TIM_UpdateDisableConfig:
 9595              	.LFB88:
2084:../SPL/src/stm32f10x_tim.c **** 
2085:../SPL/src/stm32f10x_tim.c **** /**
2086:../SPL/src/stm32f10x_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
2087:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2088:../SPL/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
2089:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
2090:../SPL/src/stm32f10x_tim.c ****   * @retval None
2091:../SPL/src/stm32f10x_tim.c ****   */
2092:../SPL/src/stm32f10x_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
2093:../SPL/src/stm32f10x_tim.c **** {
 9596              		.loc 1 2093 0
 9597              		.cfi_startproc
 9598              		@ args = 0, pretend = 0, frame = 8
 9599              		@ frame_needed = 1, uses_anonymous_args = 0
 9600 3ca0 80B5     		push	{r7, lr}
 9601              	.LCFI177:
 9602              		.cfi_def_cfa_offset 8
 9603              		.cfi_offset 7, -8
 9604              		.cfi_offset 14, -4
 9605 3ca2 82B0     		sub	sp, sp, #8
 9606              	.LCFI178:
 9607              		.cfi_def_cfa_offset 16
 9608 3ca4 00AF     		add	r7, sp, #0
 9609              	.LCFI179:
 9610              		.cfi_def_cfa_register 7
 9611 3ca6 7860     		str	r0, [r7, #4]
 9612 3ca8 0B46     		mov	r3, r1
 9613 3caa FB70     		strb	r3, [r7, #3]
2094:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2095:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 9614              		.loc 1 2095 0
 9615 3cac 7A68     		ldr	r2, [r7, #4]
 9616 3cae 354B     		ldr	r3, .L401
 9617 3cb0 9A42     		cmp	r2, r3
 9618 3cb2 44D0     		beq	.L397
 9619              		.loc 1 2095 0 is_stmt 0 discriminator 1
 9620 3cb4 7B68     		ldr	r3, [r7, #4]
 9621 3cb6 B3F1804F 		cmp	r3, #1073741824
 9622 3cba 40D0     		beq	.L397
 9623              		.loc 1 2095 0 discriminator 2
 9624 3cbc 7A68     		ldr	r2, [r7, #4]
 9625 3cbe 324B     		ldr	r3, .L401+4
 9626 3cc0 9A42     		cmp	r2, r3
 9627 3cc2 3CD0     		beq	.L397
 9628              		.loc 1 2095 0 discriminator 3
 9629 3cc4 7A68     		ldr	r2, [r7, #4]
 9630 3cc6 314B     		ldr	r3, .L401+8
 9631 3cc8 9A42     		cmp	r2, r3
 9632 3cca 38D0     		beq	.L397
 9633              		.loc 1 2095 0 discriminator 4
 9634 3ccc 7A68     		ldr	r2, [r7, #4]
 9635 3cce 304B     		ldr	r3, .L401+12
 9636 3cd0 9A42     		cmp	r2, r3
 9637 3cd2 34D0     		beq	.L397
 9638              		.loc 1 2095 0 discriminator 5
 9639 3cd4 7A68     		ldr	r2, [r7, #4]
 9640 3cd6 2F4B     		ldr	r3, .L401+16
 9641 3cd8 9A42     		cmp	r2, r3
 9642 3cda 30D0     		beq	.L397
 9643              		.loc 1 2095 0 discriminator 6
 9644 3cdc 7A68     		ldr	r2, [r7, #4]
 9645 3cde 2E4B     		ldr	r3, .L401+20
 9646 3ce0 9A42     		cmp	r2, r3
 9647 3ce2 2CD0     		beq	.L397
 9648              		.loc 1 2095 0 discriminator 7
 9649 3ce4 7A68     		ldr	r2, [r7, #4]
 9650 3ce6 2D4B     		ldr	r3, .L401+24
 9651 3ce8 9A42     		cmp	r2, r3
 9652 3cea 28D0     		beq	.L397
 9653              		.loc 1 2095 0 discriminator 8
 9654 3cec 7A68     		ldr	r2, [r7, #4]
 9655 3cee 2C4B     		ldr	r3, .L401+28
 9656 3cf0 9A42     		cmp	r2, r3
 9657 3cf2 24D0     		beq	.L397
 9658              		.loc 1 2095 0 discriminator 9
 9659 3cf4 7A68     		ldr	r2, [r7, #4]
 9660 3cf6 2B4B     		ldr	r3, .L401+32
 9661 3cf8 9A42     		cmp	r2, r3
 9662 3cfa 20D0     		beq	.L397
 9663              		.loc 1 2095 0 discriminator 10
 9664 3cfc 7A68     		ldr	r2, [r7, #4]
 9665 3cfe 2A4B     		ldr	r3, .L401+36
 9666 3d00 9A42     		cmp	r2, r3
 9667 3d02 1CD0     		beq	.L397
 9668              		.loc 1 2095 0 discriminator 11
 9669 3d04 7A68     		ldr	r2, [r7, #4]
 9670 3d06 294B     		ldr	r3, .L401+40
 9671 3d08 9A42     		cmp	r2, r3
 9672 3d0a 18D0     		beq	.L397
 9673              		.loc 1 2095 0 discriminator 12
 9674 3d0c 7A68     		ldr	r2, [r7, #4]
 9675 3d0e 284B     		ldr	r3, .L401+44
 9676 3d10 9A42     		cmp	r2, r3
 9677 3d12 14D0     		beq	.L397
 9678              		.loc 1 2095 0 discriminator 13
 9679 3d14 7A68     		ldr	r2, [r7, #4]
 9680 3d16 274B     		ldr	r3, .L401+48
 9681 3d18 9A42     		cmp	r2, r3
 9682 3d1a 10D0     		beq	.L397
 9683              		.loc 1 2095 0 discriminator 14
 9684 3d1c 7A68     		ldr	r2, [r7, #4]
 9685 3d1e 264B     		ldr	r3, .L401+52
 9686 3d20 9A42     		cmp	r2, r3
 9687 3d22 0CD0     		beq	.L397
 9688              		.loc 1 2095 0 discriminator 15
 9689 3d24 7A68     		ldr	r2, [r7, #4]
 9690 3d26 254B     		ldr	r3, .L401+56
 9691 3d28 9A42     		cmp	r2, r3
 9692 3d2a 08D0     		beq	.L397
 9693              		.loc 1 2095 0 discriminator 16
 9694 3d2c 7A68     		ldr	r2, [r7, #4]
 9695 3d2e 244B     		ldr	r3, .L401+60
 9696 3d30 9A42     		cmp	r2, r3
 9697 3d32 04D0     		beq	.L397
 9698              		.loc 1 2095 0 discriminator 17
 9699 3d34 2348     		ldr	r0, .L401+64
 9700 3d36 40F62F01 		movw	r1, #2095
 9701 3d3a FFF7FEFF 		bl	assert_failed
 9702              	.L397:
2096:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 9703              		.loc 1 2096 0 is_stmt 1
 9704 3d3e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 9705 3d40 002B     		cmp	r3, #0
 9706 3d42 07D0     		beq	.L398
 9707              		.loc 1 2096 0 is_stmt 0 discriminator 1
 9708 3d44 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 9709 3d46 012B     		cmp	r3, #1
 9710 3d48 04D0     		beq	.L398
 9711              		.loc 1 2096 0 discriminator 2
 9712 3d4a 1E48     		ldr	r0, .L401+64
 9713 3d4c 4FF40361 		mov	r1, #2096
 9714 3d50 FFF7FEFF 		bl	assert_failed
 9715              	.L398:
2097:../SPL/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 9716              		.loc 1 2097 0 is_stmt 1
 9717 3d54 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 9718 3d56 002B     		cmp	r3, #0
 9719 3d58 08D0     		beq	.L399
2098:../SPL/src/stm32f10x_tim.c ****   {
2099:../SPL/src/stm32f10x_tim.c ****     /* Set the Update Disable Bit */
2100:../SPL/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 9720              		.loc 1 2100 0
 9721 3d5a 7B68     		ldr	r3, [r7, #4]
 9722 3d5c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 9723 3d5e 9BB2     		uxth	r3, r3
 9724 3d60 43F00203 		orr	r3, r3, #2
 9725 3d64 9AB2     		uxth	r2, r3
 9726 3d66 7B68     		ldr	r3, [r7, #4]
 9727 3d68 1A80     		strh	r2, [r3, #0]	@ movhi
 9728 3d6a 07E0     		b	.L396
 9729              	.L399:
2101:../SPL/src/stm32f10x_tim.c ****   }
2102:../SPL/src/stm32f10x_tim.c ****   else
2103:../SPL/src/stm32f10x_tim.c ****   {
2104:../SPL/src/stm32f10x_tim.c ****     /* Reset the Update Disable Bit */
2105:../SPL/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_UDIS);
 9730              		.loc 1 2105 0
 9731 3d6c 7B68     		ldr	r3, [r7, #4]
 9732 3d6e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 9733 3d70 9BB2     		uxth	r3, r3
 9734 3d72 23F00203 		bic	r3, r3, #2
 9735 3d76 9AB2     		uxth	r2, r3
 9736 3d78 7B68     		ldr	r3, [r7, #4]
 9737 3d7a 1A80     		strh	r2, [r3, #0]	@ movhi
 9738              	.L396:
2106:../SPL/src/stm32f10x_tim.c ****   }
2107:../SPL/src/stm32f10x_tim.c **** }
 9739              		.loc 1 2107 0
 9740 3d7c 07F10807 		add	r7, r7, #8
 9741 3d80 BD46     		mov	sp, r7
 9742 3d82 80BD     		pop	{r7, pc}
 9743              	.L402:
 9744              		.align	2
 9745              	.L401:
 9746 3d84 002C0140 		.word	1073818624
 9747 3d88 00040040 		.word	1073742848
 9748 3d8c 00080040 		.word	1073743872
 9749 3d90 000C0040 		.word	1073744896
 9750 3d94 00100040 		.word	1073745920
 9751 3d98 00140040 		.word	1073746944
 9752 3d9c 00340140 		.word	1073820672
 9753 3da0 004C0140 		.word	1073826816
 9754 3da4 00500140 		.word	1073827840
 9755 3da8 00540140 		.word	1073828864
 9756 3dac 00180040 		.word	1073747968
 9757 3db0 001C0040 		.word	1073748992
 9758 3db4 00200040 		.word	1073750016
 9759 3db8 00400140 		.word	1073823744
 9760 3dbc 00440140 		.word	1073824768
 9761 3dc0 00480140 		.word	1073825792
 9762 3dc4 00000000 		.word	.LC0
 9763              		.cfi_endproc
 9764              	.LFE88:
 9766              		.align	2
 9767              		.global	TIM_UpdateRequestConfig
 9768              		.thumb
 9769              		.thumb_func
 9771              	TIM_UpdateRequestConfig:
 9772              	.LFB89:
2108:../SPL/src/stm32f10x_tim.c **** 
2109:../SPL/src/stm32f10x_tim.c **** /**
2110:../SPL/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
2111:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2112:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
2113:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2114:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_UpdateSource_Regular: Source of update is the counter overflow/underflow
2115:../SPL/src/stm32f10x_tim.c ****                                        or the setting of UG bit, or an update generation
2116:../SPL/src/stm32f10x_tim.c ****                                        through the slave mode controller.
2117:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_UpdateSource_Global: Source of update is counter overflow/underflow.
2118:../SPL/src/stm32f10x_tim.c ****   * @retval None
2119:../SPL/src/stm32f10x_tim.c ****   */
2120:../SPL/src/stm32f10x_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
2121:../SPL/src/stm32f10x_tim.c **** {
 9773              		.loc 1 2121 0
 9774              		.cfi_startproc
 9775              		@ args = 0, pretend = 0, frame = 8
 9776              		@ frame_needed = 1, uses_anonymous_args = 0
 9777 3dc8 80B5     		push	{r7, lr}
 9778              	.LCFI180:
 9779              		.cfi_def_cfa_offset 8
 9780              		.cfi_offset 7, -8
 9781              		.cfi_offset 14, -4
 9782 3dca 82B0     		sub	sp, sp, #8
 9783              	.LCFI181:
 9784              		.cfi_def_cfa_offset 16
 9785 3dcc 00AF     		add	r7, sp, #0
 9786              	.LCFI182:
 9787              		.cfi_def_cfa_register 7
 9788 3dce 7860     		str	r0, [r7, #4]
 9789 3dd0 0B46     		mov	r3, r1
 9790 3dd2 7B80     		strh	r3, [r7, #2]	@ movhi
2122:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2123:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 9791              		.loc 1 2123 0
 9792 3dd4 7A68     		ldr	r2, [r7, #4]
 9793 3dd6 354B     		ldr	r3, .L408
 9794 3dd8 9A42     		cmp	r2, r3
 9795 3dda 44D0     		beq	.L404
 9796              		.loc 1 2123 0 is_stmt 0 discriminator 1
 9797 3ddc 7B68     		ldr	r3, [r7, #4]
 9798 3dde B3F1804F 		cmp	r3, #1073741824
 9799 3de2 40D0     		beq	.L404
 9800              		.loc 1 2123 0 discriminator 2
 9801 3de4 7A68     		ldr	r2, [r7, #4]
 9802 3de6 324B     		ldr	r3, .L408+4
 9803 3de8 9A42     		cmp	r2, r3
 9804 3dea 3CD0     		beq	.L404
 9805              		.loc 1 2123 0 discriminator 3
 9806 3dec 7A68     		ldr	r2, [r7, #4]
 9807 3dee 314B     		ldr	r3, .L408+8
 9808 3df0 9A42     		cmp	r2, r3
 9809 3df2 38D0     		beq	.L404
 9810              		.loc 1 2123 0 discriminator 4
 9811 3df4 7A68     		ldr	r2, [r7, #4]
 9812 3df6 304B     		ldr	r3, .L408+12
 9813 3df8 9A42     		cmp	r2, r3
 9814 3dfa 34D0     		beq	.L404
 9815              		.loc 1 2123 0 discriminator 5
 9816 3dfc 7A68     		ldr	r2, [r7, #4]
 9817 3dfe 2F4B     		ldr	r3, .L408+16
 9818 3e00 9A42     		cmp	r2, r3
 9819 3e02 30D0     		beq	.L404
 9820              		.loc 1 2123 0 discriminator 6
 9821 3e04 7A68     		ldr	r2, [r7, #4]
 9822 3e06 2E4B     		ldr	r3, .L408+20
 9823 3e08 9A42     		cmp	r2, r3
 9824 3e0a 2CD0     		beq	.L404
 9825              		.loc 1 2123 0 discriminator 7
 9826 3e0c 7A68     		ldr	r2, [r7, #4]
 9827 3e0e 2D4B     		ldr	r3, .L408+24
 9828 3e10 9A42     		cmp	r2, r3
 9829 3e12 28D0     		beq	.L404
 9830              		.loc 1 2123 0 discriminator 8
 9831 3e14 7A68     		ldr	r2, [r7, #4]
 9832 3e16 2C4B     		ldr	r3, .L408+28
 9833 3e18 9A42     		cmp	r2, r3
 9834 3e1a 24D0     		beq	.L404
 9835              		.loc 1 2123 0 discriminator 9
 9836 3e1c 7A68     		ldr	r2, [r7, #4]
 9837 3e1e 2B4B     		ldr	r3, .L408+32
 9838 3e20 9A42     		cmp	r2, r3
 9839 3e22 20D0     		beq	.L404
 9840              		.loc 1 2123 0 discriminator 10
 9841 3e24 7A68     		ldr	r2, [r7, #4]
 9842 3e26 2A4B     		ldr	r3, .L408+36
 9843 3e28 9A42     		cmp	r2, r3
 9844 3e2a 1CD0     		beq	.L404
 9845              		.loc 1 2123 0 discriminator 11
 9846 3e2c 7A68     		ldr	r2, [r7, #4]
 9847 3e2e 294B     		ldr	r3, .L408+40
 9848 3e30 9A42     		cmp	r2, r3
 9849 3e32 18D0     		beq	.L404
 9850              		.loc 1 2123 0 discriminator 12
 9851 3e34 7A68     		ldr	r2, [r7, #4]
 9852 3e36 284B     		ldr	r3, .L408+44
 9853 3e38 9A42     		cmp	r2, r3
 9854 3e3a 14D0     		beq	.L404
 9855              		.loc 1 2123 0 discriminator 13
 9856 3e3c 7A68     		ldr	r2, [r7, #4]
 9857 3e3e 274B     		ldr	r3, .L408+48
 9858 3e40 9A42     		cmp	r2, r3
 9859 3e42 10D0     		beq	.L404
 9860              		.loc 1 2123 0 discriminator 14
 9861 3e44 7A68     		ldr	r2, [r7, #4]
 9862 3e46 264B     		ldr	r3, .L408+52
 9863 3e48 9A42     		cmp	r2, r3
 9864 3e4a 0CD0     		beq	.L404
 9865              		.loc 1 2123 0 discriminator 15
 9866 3e4c 7A68     		ldr	r2, [r7, #4]
 9867 3e4e 254B     		ldr	r3, .L408+56
 9868 3e50 9A42     		cmp	r2, r3
 9869 3e52 08D0     		beq	.L404
 9870              		.loc 1 2123 0 discriminator 16
 9871 3e54 7A68     		ldr	r2, [r7, #4]
 9872 3e56 244B     		ldr	r3, .L408+60
 9873 3e58 9A42     		cmp	r2, r3
 9874 3e5a 04D0     		beq	.L404
 9875              		.loc 1 2123 0 discriminator 17
 9876 3e5c 2348     		ldr	r0, .L408+64
 9877 3e5e 40F64B01 		movw	r1, #2123
 9878 3e62 FFF7FEFF 		bl	assert_failed
 9879              	.L404:
2124:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
 9880              		.loc 1 2124 0 is_stmt 1
 9881 3e66 7B88     		ldrh	r3, [r7, #2]
 9882 3e68 002B     		cmp	r3, #0
 9883 3e6a 07D0     		beq	.L405
 9884              		.loc 1 2124 0 is_stmt 0 discriminator 1
 9885 3e6c 7B88     		ldrh	r3, [r7, #2]
 9886 3e6e 012B     		cmp	r3, #1
 9887 3e70 04D0     		beq	.L405
 9888              		.loc 1 2124 0 discriminator 2
 9889 3e72 1E48     		ldr	r0, .L408+64
 9890 3e74 40F64C01 		movw	r1, #2124
 9891 3e78 FFF7FEFF 		bl	assert_failed
 9892              	.L405:
2125:../SPL/src/stm32f10x_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 9893              		.loc 1 2125 0 is_stmt 1
 9894 3e7c 7B88     		ldrh	r3, [r7, #2]
 9895 3e7e 002B     		cmp	r3, #0
 9896 3e80 08D0     		beq	.L406
2126:../SPL/src/stm32f10x_tim.c ****   {
2127:../SPL/src/stm32f10x_tim.c ****     /* Set the URS Bit */
2128:../SPL/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 9897              		.loc 1 2128 0
 9898 3e82 7B68     		ldr	r3, [r7, #4]
 9899 3e84 1B88     		ldrh	r3, [r3, #0]	@ movhi
 9900 3e86 9BB2     		uxth	r3, r3
 9901 3e88 43F00403 		orr	r3, r3, #4
 9902 3e8c 9AB2     		uxth	r2, r3
 9903 3e8e 7B68     		ldr	r3, [r7, #4]
 9904 3e90 1A80     		strh	r2, [r3, #0]	@ movhi
 9905 3e92 07E0     		b	.L403
 9906              	.L406:
2129:../SPL/src/stm32f10x_tim.c ****   }
2130:../SPL/src/stm32f10x_tim.c ****   else
2131:../SPL/src/stm32f10x_tim.c ****   {
2132:../SPL/src/stm32f10x_tim.c ****     /* Reset the URS Bit */
2133:../SPL/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_URS);
 9907              		.loc 1 2133 0
 9908 3e94 7B68     		ldr	r3, [r7, #4]
 9909 3e96 1B88     		ldrh	r3, [r3, #0]	@ movhi
 9910 3e98 9BB2     		uxth	r3, r3
 9911 3e9a 23F00403 		bic	r3, r3, #4
 9912 3e9e 9AB2     		uxth	r2, r3
 9913 3ea0 7B68     		ldr	r3, [r7, #4]
 9914 3ea2 1A80     		strh	r2, [r3, #0]	@ movhi
 9915              	.L403:
2134:../SPL/src/stm32f10x_tim.c ****   }
2135:../SPL/src/stm32f10x_tim.c **** }
 9916              		.loc 1 2135 0
 9917 3ea4 07F10807 		add	r7, r7, #8
 9918 3ea8 BD46     		mov	sp, r7
 9919 3eaa 80BD     		pop	{r7, pc}
 9920              	.L409:
 9921              		.align	2
 9922              	.L408:
 9923 3eac 002C0140 		.word	1073818624
 9924 3eb0 00040040 		.word	1073742848
 9925 3eb4 00080040 		.word	1073743872
 9926 3eb8 000C0040 		.word	1073744896
 9927 3ebc 00100040 		.word	1073745920
 9928 3ec0 00140040 		.word	1073746944
 9929 3ec4 00340140 		.word	1073820672
 9930 3ec8 004C0140 		.word	1073826816
 9931 3ecc 00500140 		.word	1073827840
 9932 3ed0 00540140 		.word	1073828864
 9933 3ed4 00180040 		.word	1073747968
 9934 3ed8 001C0040 		.word	1073748992
 9935 3edc 00200040 		.word	1073750016
 9936 3ee0 00400140 		.word	1073823744
 9937 3ee4 00440140 		.word	1073824768
 9938 3ee8 00480140 		.word	1073825792
 9939 3eec 00000000 		.word	.LC0
 9940              		.cfi_endproc
 9941              	.LFE89:
 9943              		.align	2
 9944              		.global	TIM_SelectHallSensor
 9945              		.thumb
 9946              		.thumb_func
 9948              	TIM_SelectHallSensor:
 9949              	.LFB90:
2136:../SPL/src/stm32f10x_tim.c **** 
2137:../SPL/src/stm32f10x_tim.c **** /**
2138:../SPL/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
2139:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2140:../SPL/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
2141:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
2142:../SPL/src/stm32f10x_tim.c ****   * @retval None
2143:../SPL/src/stm32f10x_tim.c ****   */
2144:../SPL/src/stm32f10x_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
2145:../SPL/src/stm32f10x_tim.c **** {
 9950              		.loc 1 2145 0
 9951              		.cfi_startproc
 9952              		@ args = 0, pretend = 0, frame = 8
 9953              		@ frame_needed = 1, uses_anonymous_args = 0
 9954 3ef0 80B5     		push	{r7, lr}
 9955              	.LCFI183:
 9956              		.cfi_def_cfa_offset 8
 9957              		.cfi_offset 7, -8
 9958              		.cfi_offset 14, -4
 9959 3ef2 82B0     		sub	sp, sp, #8
 9960              	.LCFI184:
 9961              		.cfi_def_cfa_offset 16
 9962 3ef4 00AF     		add	r7, sp, #0
 9963              	.LCFI185:
 9964              		.cfi_def_cfa_register 7
 9965 3ef6 7860     		str	r0, [r7, #4]
 9966 3ef8 0B46     		mov	r3, r1
 9967 3efa FB70     		strb	r3, [r7, #3]
2146:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2147:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 9968              		.loc 1 2147 0
 9969 3efc 7A68     		ldr	r2, [r7, #4]
 9970 3efe 254B     		ldr	r3, .L415
 9971 3f00 9A42     		cmp	r2, r3
 9972 3f02 24D0     		beq	.L411
 9973              		.loc 1 2147 0 is_stmt 0 discriminator 1
 9974 3f04 7B68     		ldr	r3, [r7, #4]
 9975 3f06 B3F1804F 		cmp	r3, #1073741824
 9976 3f0a 20D0     		beq	.L411
 9977              		.loc 1 2147 0 discriminator 2
 9978 3f0c 7A68     		ldr	r2, [r7, #4]
 9979 3f0e 224B     		ldr	r3, .L415+4
 9980 3f10 9A42     		cmp	r2, r3
 9981 3f12 1CD0     		beq	.L411
 9982              		.loc 1 2147 0 discriminator 3
 9983 3f14 7A68     		ldr	r2, [r7, #4]
 9984 3f16 214B     		ldr	r3, .L415+8
 9985 3f18 9A42     		cmp	r2, r3
 9986 3f1a 18D0     		beq	.L411
 9987              		.loc 1 2147 0 discriminator 4
 9988 3f1c 7A68     		ldr	r2, [r7, #4]
 9989 3f1e 204B     		ldr	r3, .L415+12
 9990 3f20 9A42     		cmp	r2, r3
 9991 3f22 14D0     		beq	.L411
 9992              		.loc 1 2147 0 discriminator 5
 9993 3f24 7A68     		ldr	r2, [r7, #4]
 9994 3f26 1F4B     		ldr	r3, .L415+16
 9995 3f28 9A42     		cmp	r2, r3
 9996 3f2a 10D0     		beq	.L411
 9997              		.loc 1 2147 0 discriminator 6
 9998 3f2c 7A68     		ldr	r2, [r7, #4]
 9999 3f2e 1E4B     		ldr	r3, .L415+20
 10000 3f30 9A42     		cmp	r2, r3
 10001 3f32 0CD0     		beq	.L411
 10002              		.loc 1 2147 0 discriminator 7
 10003 3f34 7A68     		ldr	r2, [r7, #4]
 10004 3f36 1D4B     		ldr	r3, .L415+24
 10005 3f38 9A42     		cmp	r2, r3
 10006 3f3a 08D0     		beq	.L411
 10007              		.loc 1 2147 0 discriminator 8
 10008 3f3c 7A68     		ldr	r2, [r7, #4]
 10009 3f3e 1C4B     		ldr	r3, .L415+28
 10010 3f40 9A42     		cmp	r2, r3
 10011 3f42 04D0     		beq	.L411
 10012              		.loc 1 2147 0 discriminator 9
 10013 3f44 1B48     		ldr	r0, .L415+32
 10014 3f46 40F66301 		movw	r1, #2147
 10015 3f4a FFF7FEFF 		bl	assert_failed
 10016              	.L411:
2148:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 10017              		.loc 1 2148 0 is_stmt 1
 10018 3f4e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 10019 3f50 002B     		cmp	r3, #0
 10020 3f52 07D0     		beq	.L412
 10021              		.loc 1 2148 0 is_stmt 0 discriminator 1
 10022 3f54 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 10023 3f56 012B     		cmp	r3, #1
 10024 3f58 04D0     		beq	.L412
 10025              		.loc 1 2148 0 discriminator 2
 10026 3f5a 1648     		ldr	r0, .L415+32
 10027 3f5c 40F66401 		movw	r1, #2148
 10028 3f60 FFF7FEFF 		bl	assert_failed
 10029              	.L412:
2149:../SPL/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 10030              		.loc 1 2149 0 is_stmt 1
 10031 3f64 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 10032 3f66 002B     		cmp	r3, #0
 10033 3f68 08D0     		beq	.L413
2150:../SPL/src/stm32f10x_tim.c ****   {
2151:../SPL/src/stm32f10x_tim.c ****     /* Set the TI1S Bit */
2152:../SPL/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
 10034              		.loc 1 2152 0
 10035 3f6a 7B68     		ldr	r3, [r7, #4]
 10036 3f6c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 10037 3f6e 9BB2     		uxth	r3, r3
 10038 3f70 43F08003 		orr	r3, r3, #128
 10039 3f74 9AB2     		uxth	r2, r3
 10040 3f76 7B68     		ldr	r3, [r7, #4]
 10041 3f78 9A80     		strh	r2, [r3, #4]	@ movhi
 10042 3f7a 07E0     		b	.L410
 10043              	.L413:
2153:../SPL/src/stm32f10x_tim.c ****   }
2154:../SPL/src/stm32f10x_tim.c ****   else
2155:../SPL/src/stm32f10x_tim.c ****   {
2156:../SPL/src/stm32f10x_tim.c ****     /* Reset the TI1S Bit */
2157:../SPL/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_TI1S);
 10044              		.loc 1 2157 0
 10045 3f7c 7B68     		ldr	r3, [r7, #4]
 10046 3f7e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 10047 3f80 9BB2     		uxth	r3, r3
 10048 3f82 23F08003 		bic	r3, r3, #128
 10049 3f86 9AB2     		uxth	r2, r3
 10050 3f88 7B68     		ldr	r3, [r7, #4]
 10051 3f8a 9A80     		strh	r2, [r3, #4]	@ movhi
 10052              	.L410:
2158:../SPL/src/stm32f10x_tim.c ****   }
2159:../SPL/src/stm32f10x_tim.c **** }
 10053              		.loc 1 2159 0
 10054 3f8c 07F10807 		add	r7, r7, #8
 10055 3f90 BD46     		mov	sp, r7
 10056 3f92 80BD     		pop	{r7, pc}
 10057              	.L416:
 10058              		.align	2
 10059              	.L415:
 10060 3f94 002C0140 		.word	1073818624
 10061 3f98 00040040 		.word	1073742848
 10062 3f9c 00080040 		.word	1073743872
 10063 3fa0 000C0040 		.word	1073744896
 10064 3fa4 00340140 		.word	1073820672
 10065 3fa8 004C0140 		.word	1073826816
 10066 3fac 00180040 		.word	1073747968
 10067 3fb0 00400140 		.word	1073823744
 10068 3fb4 00000000 		.word	.LC0
 10069              		.cfi_endproc
 10070              	.LFE90:
 10072              		.align	2
 10073              		.global	TIM_SelectOnePulseMode
 10074              		.thumb
 10075              		.thumb_func
 10077              	TIM_SelectOnePulseMode:
 10078              	.LFB91:
2160:../SPL/src/stm32f10x_tim.c **** 
2161:../SPL/src/stm32f10x_tim.c **** /**
2162:../SPL/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
2163:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2164:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
2165:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2166:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OPMode_Single
2167:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_OPMode_Repetitive
2168:../SPL/src/stm32f10x_tim.c ****   * @retval None
2169:../SPL/src/stm32f10x_tim.c ****   */
2170:../SPL/src/stm32f10x_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
2171:../SPL/src/stm32f10x_tim.c **** {
 10079              		.loc 1 2171 0
 10080              		.cfi_startproc
 10081              		@ args = 0, pretend = 0, frame = 8
 10082              		@ frame_needed = 1, uses_anonymous_args = 0
 10083 3fb8 80B5     		push	{r7, lr}
 10084              	.LCFI186:
 10085              		.cfi_def_cfa_offset 8
 10086              		.cfi_offset 7, -8
 10087              		.cfi_offset 14, -4
 10088 3fba 82B0     		sub	sp, sp, #8
 10089              	.LCFI187:
 10090              		.cfi_def_cfa_offset 16
 10091 3fbc 00AF     		add	r7, sp, #0
 10092              	.LCFI188:
 10093              		.cfi_def_cfa_register 7
 10094 3fbe 7860     		str	r0, [r7, #4]
 10095 3fc0 0B46     		mov	r3, r1
 10096 3fc2 7B80     		strh	r3, [r7, #2]	@ movhi
2172:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2173:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 10097              		.loc 1 2173 0
 10098 3fc4 7A68     		ldr	r2, [r7, #4]
 10099 3fc6 334B     		ldr	r3, .L420
 10100 3fc8 9A42     		cmp	r2, r3
 10101 3fca 44D0     		beq	.L418
 10102              		.loc 1 2173 0 is_stmt 0 discriminator 1
 10103 3fcc 7B68     		ldr	r3, [r7, #4]
 10104 3fce B3F1804F 		cmp	r3, #1073741824
 10105 3fd2 40D0     		beq	.L418
 10106              		.loc 1 2173 0 discriminator 2
 10107 3fd4 7A68     		ldr	r2, [r7, #4]
 10108 3fd6 304B     		ldr	r3, .L420+4
 10109 3fd8 9A42     		cmp	r2, r3
 10110 3fda 3CD0     		beq	.L418
 10111              		.loc 1 2173 0 discriminator 3
 10112 3fdc 7A68     		ldr	r2, [r7, #4]
 10113 3fde 2F4B     		ldr	r3, .L420+8
 10114 3fe0 9A42     		cmp	r2, r3
 10115 3fe2 38D0     		beq	.L418
 10116              		.loc 1 2173 0 discriminator 4
 10117 3fe4 7A68     		ldr	r2, [r7, #4]
 10118 3fe6 2E4B     		ldr	r3, .L420+12
 10119 3fe8 9A42     		cmp	r2, r3
 10120 3fea 34D0     		beq	.L418
 10121              		.loc 1 2173 0 discriminator 5
 10122 3fec 7A68     		ldr	r2, [r7, #4]
 10123 3fee 2D4B     		ldr	r3, .L420+16
 10124 3ff0 9A42     		cmp	r2, r3
 10125 3ff2 30D0     		beq	.L418
 10126              		.loc 1 2173 0 discriminator 6
 10127 3ff4 7A68     		ldr	r2, [r7, #4]
 10128 3ff6 2C4B     		ldr	r3, .L420+20
 10129 3ff8 9A42     		cmp	r2, r3
 10130 3ffa 2CD0     		beq	.L418
 10131              		.loc 1 2173 0 discriminator 7
 10132 3ffc 7A68     		ldr	r2, [r7, #4]
 10133 3ffe 2B4B     		ldr	r3, .L420+24
 10134 4000 9A42     		cmp	r2, r3
 10135 4002 28D0     		beq	.L418
 10136              		.loc 1 2173 0 discriminator 8
 10137 4004 7A68     		ldr	r2, [r7, #4]
 10138 4006 2A4B     		ldr	r3, .L420+28
 10139 4008 9A42     		cmp	r2, r3
 10140 400a 24D0     		beq	.L418
 10141              		.loc 1 2173 0 discriminator 9
 10142 400c 7A68     		ldr	r2, [r7, #4]
 10143 400e 294B     		ldr	r3, .L420+32
 10144 4010 9A42     		cmp	r2, r3
 10145 4012 20D0     		beq	.L418
 10146              		.loc 1 2173 0 discriminator 10
 10147 4014 7A68     		ldr	r2, [r7, #4]
 10148 4016 284B     		ldr	r3, .L420+36
 10149 4018 9A42     		cmp	r2, r3
 10150 401a 1CD0     		beq	.L418
 10151              		.loc 1 2173 0 discriminator 11
 10152 401c 7A68     		ldr	r2, [r7, #4]
 10153 401e 274B     		ldr	r3, .L420+40
 10154 4020 9A42     		cmp	r2, r3
 10155 4022 18D0     		beq	.L418
 10156              		.loc 1 2173 0 discriminator 12
 10157 4024 7A68     		ldr	r2, [r7, #4]
 10158 4026 264B     		ldr	r3, .L420+44
 10159 4028 9A42     		cmp	r2, r3
 10160 402a 14D0     		beq	.L418
 10161              		.loc 1 2173 0 discriminator 13
 10162 402c 7A68     		ldr	r2, [r7, #4]
 10163 402e 254B     		ldr	r3, .L420+48
 10164 4030 9A42     		cmp	r2, r3
 10165 4032 10D0     		beq	.L418
 10166              		.loc 1 2173 0 discriminator 14
 10167 4034 7A68     		ldr	r2, [r7, #4]
 10168 4036 244B     		ldr	r3, .L420+52
 10169 4038 9A42     		cmp	r2, r3
 10170 403a 0CD0     		beq	.L418
 10171              		.loc 1 2173 0 discriminator 15
 10172 403c 7A68     		ldr	r2, [r7, #4]
 10173 403e 234B     		ldr	r3, .L420+56
 10174 4040 9A42     		cmp	r2, r3
 10175 4042 08D0     		beq	.L418
 10176              		.loc 1 2173 0 discriminator 16
 10177 4044 7A68     		ldr	r2, [r7, #4]
 10178 4046 224B     		ldr	r3, .L420+60
 10179 4048 9A42     		cmp	r2, r3
 10180 404a 04D0     		beq	.L418
 10181              		.loc 1 2173 0 discriminator 17
 10182 404c 2148     		ldr	r0, .L420+64
 10183 404e 40F67D01 		movw	r1, #2173
 10184 4052 FFF7FEFF 		bl	assert_failed
 10185              	.L418:
2174:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
 10186              		.loc 1 2174 0 is_stmt 1
 10187 4056 7B88     		ldrh	r3, [r7, #2]
 10188 4058 082B     		cmp	r3, #8
 10189 405a 07D0     		beq	.L419
 10190              		.loc 1 2174 0 is_stmt 0 discriminator 1
 10191 405c 7B88     		ldrh	r3, [r7, #2]
 10192 405e 002B     		cmp	r3, #0
 10193 4060 04D0     		beq	.L419
 10194              		.loc 1 2174 0 discriminator 2
 10195 4062 1C48     		ldr	r0, .L420+64
 10196 4064 40F67E01 		movw	r1, #2174
 10197 4068 FFF7FEFF 		bl	assert_failed
 10198              	.L419:
2175:../SPL/src/stm32f10x_tim.c ****   /* Reset the OPM Bit */
2176:../SPL/src/stm32f10x_tim.c ****   TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_OPM);
 10199              		.loc 1 2176 0 is_stmt 1
 10200 406c 7B68     		ldr	r3, [r7, #4]
 10201 406e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 10202 4070 9BB2     		uxth	r3, r3
 10203 4072 23F00803 		bic	r3, r3, #8
 10204 4076 9AB2     		uxth	r2, r3
 10205 4078 7B68     		ldr	r3, [r7, #4]
 10206 407a 1A80     		strh	r2, [r3, #0]	@ movhi
2177:../SPL/src/stm32f10x_tim.c ****   /* Configure the OPM Mode */
2178:../SPL/src/stm32f10x_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 10207              		.loc 1 2178 0
 10208 407c 7B68     		ldr	r3, [r7, #4]
 10209 407e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 10210 4080 9AB2     		uxth	r2, r3
 10211 4082 7B88     		ldrh	r3, [r7, #2]	@ movhi
 10212 4084 1343     		orrs	r3, r3, r2
 10213 4086 9AB2     		uxth	r2, r3
 10214 4088 7B68     		ldr	r3, [r7, #4]
 10215 408a 1A80     		strh	r2, [r3, #0]	@ movhi
2179:../SPL/src/stm32f10x_tim.c **** }
 10216              		.loc 1 2179 0
 10217 408c 07F10807 		add	r7, r7, #8
 10218 4090 BD46     		mov	sp, r7
 10219 4092 80BD     		pop	{r7, pc}
 10220              	.L421:
 10221              		.align	2
 10222              	.L420:
 10223 4094 002C0140 		.word	1073818624
 10224 4098 00040040 		.word	1073742848
 10225 409c 00080040 		.word	1073743872
 10226 40a0 000C0040 		.word	1073744896
 10227 40a4 00100040 		.word	1073745920
 10228 40a8 00140040 		.word	1073746944
 10229 40ac 00340140 		.word	1073820672
 10230 40b0 004C0140 		.word	1073826816
 10231 40b4 00500140 		.word	1073827840
 10232 40b8 00540140 		.word	1073828864
 10233 40bc 00180040 		.word	1073747968
 10234 40c0 001C0040 		.word	1073748992
 10235 40c4 00200040 		.word	1073750016
 10236 40c8 00400140 		.word	1073823744
 10237 40cc 00440140 		.word	1073824768
 10238 40d0 00480140 		.word	1073825792
 10239 40d4 00000000 		.word	.LC0
 10240              		.cfi_endproc
 10241              	.LFE91:
 10243              		.align	2
 10244              		.global	TIM_SelectOutputTrigger
 10245              		.thumb
 10246              		.thumb_func
 10248              	TIM_SelectOutputTrigger:
 10249              	.LFB92:
2180:../SPL/src/stm32f10x_tim.c **** 
2181:../SPL/src/stm32f10x_tim.c **** /**
2182:../SPL/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2183:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7, 8, 9, 12 or 15 to select the TIM peripheral.
2184:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2185:../SPL/src/stm32f10x_tim.c ****   *   This paramter can be one of the following values:
2186:../SPL/src/stm32f10x_tim.c ****   *
2187:../SPL/src/stm32f10x_tim.c ****   *  - For all TIMx
2188:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigger outpu
2189:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output (TRGO).
2190:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_Update: The update event is selected as the trigger output (TRGO).
2191:../SPL/src/stm32f10x_tim.c ****   *
2192:../SPL/src/stm32f10x_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2193:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF flag
2194:../SPL/src/stm32f10x_tim.c ****   *                              is to be set, as soon as a capture or compare match occurs (TRGO).
2195:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output (TRGO).
2196:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output (TRGO).
2197:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output (TRGO).
2198:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output (TRGO).
2199:../SPL/src/stm32f10x_tim.c ****   *
2200:../SPL/src/stm32f10x_tim.c ****   * @retval None
2201:../SPL/src/stm32f10x_tim.c ****   */
2202:../SPL/src/stm32f10x_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2203:../SPL/src/stm32f10x_tim.c **** {
 10250              		.loc 1 2203 0
 10251              		.cfi_startproc
 10252              		@ args = 0, pretend = 0, frame = 8
 10253              		@ frame_needed = 1, uses_anonymous_args = 0
 10254 40d8 80B5     		push	{r7, lr}
 10255              	.LCFI189:
 10256              		.cfi_def_cfa_offset 8
 10257              		.cfi_offset 7, -8
 10258              		.cfi_offset 14, -4
 10259 40da 82B0     		sub	sp, sp, #8
 10260              	.LCFI190:
 10261              		.cfi_def_cfa_offset 16
 10262 40dc 00AF     		add	r7, sp, #0
 10263              	.LCFI191:
 10264              		.cfi_def_cfa_register 7
 10265 40de 7860     		str	r0, [r7, #4]
 10266 40e0 0B46     		mov	r3, r1
 10267 40e2 7B80     		strh	r3, [r7, #2]	@ movhi
2204:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2205:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST7_PERIPH(TIMx));
 10268              		.loc 1 2205 0
 10269 40e4 7A68     		ldr	r2, [r7, #4]
 10270 40e6 304B     		ldr	r3, .L425
 10271 40e8 9A42     		cmp	r2, r3
 10272 40ea 2CD0     		beq	.L423
 10273              		.loc 1 2205 0 is_stmt 0 discriminator 1
 10274 40ec 7B68     		ldr	r3, [r7, #4]
 10275 40ee B3F1804F 		cmp	r3, #1073741824
 10276 40f2 28D0     		beq	.L423
 10277              		.loc 1 2205 0 discriminator 2
 10278 40f4 7A68     		ldr	r2, [r7, #4]
 10279 40f6 2D4B     		ldr	r3, .L425+4
 10280 40f8 9A42     		cmp	r2, r3
 10281 40fa 24D0     		beq	.L423
 10282              		.loc 1 2205 0 discriminator 3
 10283 40fc 7A68     		ldr	r2, [r7, #4]
 10284 40fe 2C4B     		ldr	r3, .L425+8
 10285 4100 9A42     		cmp	r2, r3
 10286 4102 20D0     		beq	.L423
 10287              		.loc 1 2205 0 discriminator 4
 10288 4104 7A68     		ldr	r2, [r7, #4]
 10289 4106 2B4B     		ldr	r3, .L425+12
 10290 4108 9A42     		cmp	r2, r3
 10291 410a 1CD0     		beq	.L423
 10292              		.loc 1 2205 0 discriminator 5
 10293 410c 7A68     		ldr	r2, [r7, #4]
 10294 410e 2A4B     		ldr	r3, .L425+16
 10295 4110 9A42     		cmp	r2, r3
 10296 4112 18D0     		beq	.L423
 10297              		.loc 1 2205 0 discriminator 6
 10298 4114 7A68     		ldr	r2, [r7, #4]
 10299 4116 294B     		ldr	r3, .L425+20
 10300 4118 9A42     		cmp	r2, r3
 10301 411a 14D0     		beq	.L423
 10302              		.loc 1 2205 0 discriminator 7
 10303 411c 7A68     		ldr	r2, [r7, #4]
 10304 411e 284B     		ldr	r3, .L425+24
 10305 4120 9A42     		cmp	r2, r3
 10306 4122 10D0     		beq	.L423
 10307              		.loc 1 2205 0 discriminator 8
 10308 4124 7A68     		ldr	r2, [r7, #4]
 10309 4126 274B     		ldr	r3, .L425+28
 10310 4128 9A42     		cmp	r2, r3
 10311 412a 0CD0     		beq	.L423
 10312              		.loc 1 2205 0 discriminator 9
 10313 412c 7A68     		ldr	r2, [r7, #4]
 10314 412e 264B     		ldr	r3, .L425+32
 10315 4130 9A42     		cmp	r2, r3
 10316 4132 08D0     		beq	.L423
 10317              		.loc 1 2205 0 discriminator 10
 10318 4134 7A68     		ldr	r2, [r7, #4]
 10319 4136 254B     		ldr	r3, .L425+36
 10320 4138 9A42     		cmp	r2, r3
 10321 413a 04D0     		beq	.L423
 10322              		.loc 1 2205 0 discriminator 11
 10323 413c 2448     		ldr	r0, .L425+40
 10324 413e 40F69D01 		movw	r1, #2205
 10325 4142 FFF7FEFF 		bl	assert_failed
 10326              	.L423:
2206:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
 10327              		.loc 1 2206 0 is_stmt 1
 10328 4146 7B88     		ldrh	r3, [r7, #2]
 10329 4148 002B     		cmp	r3, #0
 10330 414a 19D0     		beq	.L424
 10331              		.loc 1 2206 0 is_stmt 0 discriminator 1
 10332 414c 7B88     		ldrh	r3, [r7, #2]
 10333 414e 102B     		cmp	r3, #16
 10334 4150 16D0     		beq	.L424
 10335              		.loc 1 2206 0 discriminator 2
 10336 4152 7B88     		ldrh	r3, [r7, #2]
 10337 4154 202B     		cmp	r3, #32
 10338 4156 13D0     		beq	.L424
 10339              		.loc 1 2206 0 discriminator 3
 10340 4158 7B88     		ldrh	r3, [r7, #2]
 10341 415a 302B     		cmp	r3, #48
 10342 415c 10D0     		beq	.L424
 10343              		.loc 1 2206 0 discriminator 4
 10344 415e 7B88     		ldrh	r3, [r7, #2]
 10345 4160 402B     		cmp	r3, #64
 10346 4162 0DD0     		beq	.L424
 10347              		.loc 1 2206 0 discriminator 5
 10348 4164 7B88     		ldrh	r3, [r7, #2]
 10349 4166 502B     		cmp	r3, #80
 10350 4168 0AD0     		beq	.L424
 10351              		.loc 1 2206 0 discriminator 6
 10352 416a 7B88     		ldrh	r3, [r7, #2]
 10353 416c 602B     		cmp	r3, #96
 10354 416e 07D0     		beq	.L424
 10355              		.loc 1 2206 0 discriminator 7
 10356 4170 7B88     		ldrh	r3, [r7, #2]
 10357 4172 702B     		cmp	r3, #112
 10358 4174 04D0     		beq	.L424
 10359              		.loc 1 2206 0 discriminator 8
 10360 4176 1648     		ldr	r0, .L425+40
 10361 4178 40F69E01 		movw	r1, #2206
 10362 417c FFF7FEFF 		bl	assert_failed
 10363              	.L424:
2207:../SPL/src/stm32f10x_tim.c ****   /* Reset the MMS Bits */
2208:../SPL/src/stm32f10x_tim.c ****   TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_MMS);
 10364              		.loc 1 2208 0 is_stmt 1
 10365 4180 7B68     		ldr	r3, [r7, #4]
 10366 4182 9B88     		ldrh	r3, [r3, #4]	@ movhi
 10367 4184 9BB2     		uxth	r3, r3
 10368 4186 23F07003 		bic	r3, r3, #112
 10369 418a 9AB2     		uxth	r2, r3
 10370 418c 7B68     		ldr	r3, [r7, #4]
 10371 418e 9A80     		strh	r2, [r3, #4]	@ movhi
2209:../SPL/src/stm32f10x_tim.c ****   /* Select the TRGO source */
2210:../SPL/src/stm32f10x_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
 10372              		.loc 1 2210 0
 10373 4190 7B68     		ldr	r3, [r7, #4]
 10374 4192 9B88     		ldrh	r3, [r3, #4]	@ movhi
 10375 4194 9AB2     		uxth	r2, r3
 10376 4196 7B88     		ldrh	r3, [r7, #2]	@ movhi
 10377 4198 1343     		orrs	r3, r3, r2
 10378 419a 9AB2     		uxth	r2, r3
 10379 419c 7B68     		ldr	r3, [r7, #4]
 10380 419e 9A80     		strh	r2, [r3, #4]	@ movhi
2211:../SPL/src/stm32f10x_tim.c **** }
 10381              		.loc 1 2211 0
 10382 41a0 07F10807 		add	r7, r7, #8
 10383 41a4 BD46     		mov	sp, r7
 10384 41a6 80BD     		pop	{r7, pc}
 10385              	.L426:
 10386              		.align	2
 10387              	.L425:
 10388 41a8 002C0140 		.word	1073818624
 10389 41ac 00040040 		.word	1073742848
 10390 41b0 00080040 		.word	1073743872
 10391 41b4 000C0040 		.word	1073744896
 10392 41b8 00100040 		.word	1073745920
 10393 41bc 00140040 		.word	1073746944
 10394 41c0 00340140 		.word	1073820672
 10395 41c4 004C0140 		.word	1073826816
 10396 41c8 00180040 		.word	1073747968
 10397 41cc 00400140 		.word	1073823744
 10398 41d0 00000000 		.word	.LC0
 10399              		.cfi_endproc
 10400              	.LFE92:
 10402              		.align	2
 10403              		.global	TIM_SelectSlaveMode
 10404              		.thumb
 10405              		.thumb_func
 10407              	TIM_SelectSlaveMode:
 10408              	.LFB93:
2212:../SPL/src/stm32f10x_tim.c **** 
2213:../SPL/src/stm32f10x_tim.c **** /**
2214:../SPL/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2215:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2216:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2217:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2218:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal (TRGI) re-initializes
2219:../SPL/src/stm32f10x_tim.c ****   *                               the counter and triggers an update of the registers.
2220:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (TRGI) i
2221:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRGI.
2222:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the counter
2223:../SPL/src/stm32f10x_tim.c ****   * @retval None
2224:../SPL/src/stm32f10x_tim.c ****   */
2225:../SPL/src/stm32f10x_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2226:../SPL/src/stm32f10x_tim.c **** {
 10409              		.loc 1 2226 0
 10410              		.cfi_startproc
 10411              		@ args = 0, pretend = 0, frame = 8
 10412              		@ frame_needed = 1, uses_anonymous_args = 0
 10413 41d4 80B5     		push	{r7, lr}
 10414              	.LCFI192:
 10415              		.cfi_def_cfa_offset 8
 10416              		.cfi_offset 7, -8
 10417              		.cfi_offset 14, -4
 10418 41d6 82B0     		sub	sp, sp, #8
 10419              	.LCFI193:
 10420              		.cfi_def_cfa_offset 16
 10421 41d8 00AF     		add	r7, sp, #0
 10422              	.LCFI194:
 10423              		.cfi_def_cfa_register 7
 10424 41da 7860     		str	r0, [r7, #4]
 10425 41dc 0B46     		mov	r3, r1
 10426 41de 7B80     		strh	r3, [r7, #2]	@ movhi
2227:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2228:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 10427              		.loc 1 2228 0
 10428 41e0 7A68     		ldr	r2, [r7, #4]
 10429 41e2 264B     		ldr	r3, .L430
 10430 41e4 9A42     		cmp	r2, r3
 10431 41e6 24D0     		beq	.L428
 10432              		.loc 1 2228 0 is_stmt 0 discriminator 1
 10433 41e8 7B68     		ldr	r3, [r7, #4]
 10434 41ea B3F1804F 		cmp	r3, #1073741824
 10435 41ee 20D0     		beq	.L428
 10436              		.loc 1 2228 0 discriminator 2
 10437 41f0 7A68     		ldr	r2, [r7, #4]
 10438 41f2 234B     		ldr	r3, .L430+4
 10439 41f4 9A42     		cmp	r2, r3
 10440 41f6 1CD0     		beq	.L428
 10441              		.loc 1 2228 0 discriminator 3
 10442 41f8 7A68     		ldr	r2, [r7, #4]
 10443 41fa 224B     		ldr	r3, .L430+8
 10444 41fc 9A42     		cmp	r2, r3
 10445 41fe 18D0     		beq	.L428
 10446              		.loc 1 2228 0 discriminator 4
 10447 4200 7A68     		ldr	r2, [r7, #4]
 10448 4202 214B     		ldr	r3, .L430+12
 10449 4204 9A42     		cmp	r2, r3
 10450 4206 14D0     		beq	.L428
 10451              		.loc 1 2228 0 discriminator 5
 10452 4208 7A68     		ldr	r2, [r7, #4]
 10453 420a 204B     		ldr	r3, .L430+16
 10454 420c 9A42     		cmp	r2, r3
 10455 420e 10D0     		beq	.L428
 10456              		.loc 1 2228 0 discriminator 6
 10457 4210 7A68     		ldr	r2, [r7, #4]
 10458 4212 1F4B     		ldr	r3, .L430+20
 10459 4214 9A42     		cmp	r2, r3
 10460 4216 0CD0     		beq	.L428
 10461              		.loc 1 2228 0 discriminator 7
 10462 4218 7A68     		ldr	r2, [r7, #4]
 10463 421a 1E4B     		ldr	r3, .L430+24
 10464 421c 9A42     		cmp	r2, r3
 10465 421e 08D0     		beq	.L428
 10466              		.loc 1 2228 0 discriminator 8
 10467 4220 7A68     		ldr	r2, [r7, #4]
 10468 4222 1D4B     		ldr	r3, .L430+28
 10469 4224 9A42     		cmp	r2, r3
 10470 4226 04D0     		beq	.L428
 10471              		.loc 1 2228 0 discriminator 9
 10472 4228 1C48     		ldr	r0, .L430+32
 10473 422a 40F6B401 		movw	r1, #2228
 10474 422e FFF7FEFF 		bl	assert_failed
 10475              	.L428:
2229:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
 10476              		.loc 1 2229 0 is_stmt 1
 10477 4232 7B88     		ldrh	r3, [r7, #2]
 10478 4234 042B     		cmp	r3, #4
 10479 4236 0DD0     		beq	.L429
 10480              		.loc 1 2229 0 is_stmt 0 discriminator 1
 10481 4238 7B88     		ldrh	r3, [r7, #2]
 10482 423a 052B     		cmp	r3, #5
 10483 423c 0AD0     		beq	.L429
 10484              		.loc 1 2229 0 discriminator 2
 10485 423e 7B88     		ldrh	r3, [r7, #2]
 10486 4240 062B     		cmp	r3, #6
 10487 4242 07D0     		beq	.L429
 10488              		.loc 1 2229 0 discriminator 3
 10489 4244 7B88     		ldrh	r3, [r7, #2]
 10490 4246 072B     		cmp	r3, #7
 10491 4248 04D0     		beq	.L429
 10492              		.loc 1 2229 0 discriminator 4
 10493 424a 1448     		ldr	r0, .L430+32
 10494 424c 40F6B501 		movw	r1, #2229
 10495 4250 FFF7FEFF 		bl	assert_failed
 10496              	.L429:
2230:../SPL/src/stm32f10x_tim.c ****  /* Reset the SMS Bits */
2231:../SPL/src/stm32f10x_tim.c ****   TIMx->SMCR &= (uint16_t)~((uint16_t)TIM_SMCR_SMS);
 10497              		.loc 1 2231 0 is_stmt 1
 10498 4254 7B68     		ldr	r3, [r7, #4]
 10499 4256 1B89     		ldrh	r3, [r3, #8]	@ movhi
 10500 4258 9BB2     		uxth	r3, r3
 10501 425a 23F00703 		bic	r3, r3, #7
 10502 425e 9AB2     		uxth	r2, r3
 10503 4260 7B68     		ldr	r3, [r7, #4]
 10504 4262 1A81     		strh	r2, [r3, #8]	@ movhi
2232:../SPL/src/stm32f10x_tim.c ****   /* Select the Slave Mode */
2233:../SPL/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
 10505              		.loc 1 2233 0
 10506 4264 7B68     		ldr	r3, [r7, #4]
 10507 4266 1B89     		ldrh	r3, [r3, #8]	@ movhi
 10508 4268 9AB2     		uxth	r2, r3
 10509 426a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 10510 426c 1343     		orrs	r3, r3, r2
 10511 426e 9AB2     		uxth	r2, r3
 10512 4270 7B68     		ldr	r3, [r7, #4]
 10513 4272 1A81     		strh	r2, [r3, #8]	@ movhi
2234:../SPL/src/stm32f10x_tim.c **** }
 10514              		.loc 1 2234 0
 10515 4274 07F10807 		add	r7, r7, #8
 10516 4278 BD46     		mov	sp, r7
 10517 427a 80BD     		pop	{r7, pc}
 10518              	.L431:
 10519              		.align	2
 10520              	.L430:
 10521 427c 002C0140 		.word	1073818624
 10522 4280 00040040 		.word	1073742848
 10523 4284 00080040 		.word	1073743872
 10524 4288 000C0040 		.word	1073744896
 10525 428c 00340140 		.word	1073820672
 10526 4290 004C0140 		.word	1073826816
 10527 4294 00180040 		.word	1073747968
 10528 4298 00400140 		.word	1073823744
 10529 429c 00000000 		.word	.LC0
 10530              		.cfi_endproc
 10531              	.LFE93:
 10533              		.align	2
 10534              		.global	TIM_SelectMasterSlaveMode
 10535              		.thumb
 10536              		.thumb_func
 10538              	TIM_SelectMasterSlaveMode:
 10539              	.LFB94:
2235:../SPL/src/stm32f10x_tim.c **** 
2236:../SPL/src/stm32f10x_tim.c **** /**
2237:../SPL/src/stm32f10x_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2238:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2239:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2240:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2241:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2242:../SPL/src/stm32f10x_tim.c ****   *                                      and its slaves (through TRGO).
2243:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_MasterSlaveMode_Disable: No action
2244:../SPL/src/stm32f10x_tim.c ****   * @retval None
2245:../SPL/src/stm32f10x_tim.c ****   */
2246:../SPL/src/stm32f10x_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2247:../SPL/src/stm32f10x_tim.c **** {
 10540              		.loc 1 2247 0
 10541              		.cfi_startproc
 10542              		@ args = 0, pretend = 0, frame = 8
 10543              		@ frame_needed = 1, uses_anonymous_args = 0
 10544 42a0 80B5     		push	{r7, lr}
 10545              	.LCFI195:
 10546              		.cfi_def_cfa_offset 8
 10547              		.cfi_offset 7, -8
 10548              		.cfi_offset 14, -4
 10549 42a2 82B0     		sub	sp, sp, #8
 10550              	.LCFI196:
 10551              		.cfi_def_cfa_offset 16
 10552 42a4 00AF     		add	r7, sp, #0
 10553              	.LCFI197:
 10554              		.cfi_def_cfa_register 7
 10555 42a6 7860     		str	r0, [r7, #4]
 10556 42a8 0B46     		mov	r3, r1
 10557 42aa 7B80     		strh	r3, [r7, #2]	@ movhi
2248:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2249:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 10558              		.loc 1 2249 0
 10559 42ac 7A68     		ldr	r2, [r7, #4]
 10560 42ae 234B     		ldr	r3, .L435
 10561 42b0 9A42     		cmp	r2, r3
 10562 42b2 24D0     		beq	.L433
 10563              		.loc 1 2249 0 is_stmt 0 discriminator 1
 10564 42b4 7B68     		ldr	r3, [r7, #4]
 10565 42b6 B3F1804F 		cmp	r3, #1073741824
 10566 42ba 20D0     		beq	.L433
 10567              		.loc 1 2249 0 discriminator 2
 10568 42bc 7A68     		ldr	r2, [r7, #4]
 10569 42be 204B     		ldr	r3, .L435+4
 10570 42c0 9A42     		cmp	r2, r3
 10571 42c2 1CD0     		beq	.L433
 10572              		.loc 1 2249 0 discriminator 3
 10573 42c4 7A68     		ldr	r2, [r7, #4]
 10574 42c6 1F4B     		ldr	r3, .L435+8
 10575 42c8 9A42     		cmp	r2, r3
 10576 42ca 18D0     		beq	.L433
 10577              		.loc 1 2249 0 discriminator 4
 10578 42cc 7A68     		ldr	r2, [r7, #4]
 10579 42ce 1E4B     		ldr	r3, .L435+12
 10580 42d0 9A42     		cmp	r2, r3
 10581 42d2 14D0     		beq	.L433
 10582              		.loc 1 2249 0 discriminator 5
 10583 42d4 7A68     		ldr	r2, [r7, #4]
 10584 42d6 1D4B     		ldr	r3, .L435+16
 10585 42d8 9A42     		cmp	r2, r3
 10586 42da 10D0     		beq	.L433
 10587              		.loc 1 2249 0 discriminator 6
 10588 42dc 7A68     		ldr	r2, [r7, #4]
 10589 42de 1C4B     		ldr	r3, .L435+20
 10590 42e0 9A42     		cmp	r2, r3
 10591 42e2 0CD0     		beq	.L433
 10592              		.loc 1 2249 0 discriminator 7
 10593 42e4 7A68     		ldr	r2, [r7, #4]
 10594 42e6 1B4B     		ldr	r3, .L435+24
 10595 42e8 9A42     		cmp	r2, r3
 10596 42ea 08D0     		beq	.L433
 10597              		.loc 1 2249 0 discriminator 8
 10598 42ec 7A68     		ldr	r2, [r7, #4]
 10599 42ee 1A4B     		ldr	r3, .L435+28
 10600 42f0 9A42     		cmp	r2, r3
 10601 42f2 04D0     		beq	.L433
 10602              		.loc 1 2249 0 discriminator 9
 10603 42f4 1948     		ldr	r0, .L435+32
 10604 42f6 40F6C901 		movw	r1, #2249
 10605 42fa FFF7FEFF 		bl	assert_failed
 10606              	.L433:
2250:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
 10607              		.loc 1 2250 0 is_stmt 1
 10608 42fe 7B88     		ldrh	r3, [r7, #2]
 10609 4300 802B     		cmp	r3, #128
 10610 4302 07D0     		beq	.L434
 10611              		.loc 1 2250 0 is_stmt 0 discriminator 1
 10612 4304 7B88     		ldrh	r3, [r7, #2]
 10613 4306 002B     		cmp	r3, #0
 10614 4308 04D0     		beq	.L434
 10615              		.loc 1 2250 0 discriminator 2
 10616 430a 1448     		ldr	r0, .L435+32
 10617 430c 40F6CA01 		movw	r1, #2250
 10618 4310 FFF7FEFF 		bl	assert_failed
 10619              	.L434:
2251:../SPL/src/stm32f10x_tim.c ****   /* Reset the MSM Bit */
2252:../SPL/src/stm32f10x_tim.c ****   TIMx->SMCR &= (uint16_t)~((uint16_t)TIM_SMCR_MSM);
 10620              		.loc 1 2252 0 is_stmt 1
 10621 4314 7B68     		ldr	r3, [r7, #4]
 10622 4316 1B89     		ldrh	r3, [r3, #8]	@ movhi
 10623 4318 9BB2     		uxth	r3, r3
 10624 431a 23F08003 		bic	r3, r3, #128
 10625 431e 9AB2     		uxth	r2, r3
 10626 4320 7B68     		ldr	r3, [r7, #4]
 10627 4322 1A81     		strh	r2, [r3, #8]	@ movhi
2253:../SPL/src/stm32f10x_tim.c ****   
2254:../SPL/src/stm32f10x_tim.c ****   /* Set or Reset the MSM Bit */
2255:../SPL/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
 10628              		.loc 1 2255 0
 10629 4324 7B68     		ldr	r3, [r7, #4]
 10630 4326 1B89     		ldrh	r3, [r3, #8]	@ movhi
 10631 4328 9AB2     		uxth	r2, r3
 10632 432a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 10633 432c 1343     		orrs	r3, r3, r2
 10634 432e 9AB2     		uxth	r2, r3
 10635 4330 7B68     		ldr	r3, [r7, #4]
 10636 4332 1A81     		strh	r2, [r3, #8]	@ movhi
2256:../SPL/src/stm32f10x_tim.c **** }
 10637              		.loc 1 2256 0
 10638 4334 07F10807 		add	r7, r7, #8
 10639 4338 BD46     		mov	sp, r7
 10640 433a 80BD     		pop	{r7, pc}
 10641              	.L436:
 10642              		.align	2
 10643              	.L435:
 10644 433c 002C0140 		.word	1073818624
 10645 4340 00040040 		.word	1073742848
 10646 4344 00080040 		.word	1073743872
 10647 4348 000C0040 		.word	1073744896
 10648 434c 00340140 		.word	1073820672
 10649 4350 004C0140 		.word	1073826816
 10650 4354 00180040 		.word	1073747968
 10651 4358 00400140 		.word	1073823744
 10652 435c 00000000 		.word	.LC0
 10653              		.cfi_endproc
 10654              	.LFE94:
 10656              		.align	2
 10657              		.global	TIM_SetCounter
 10658              		.thumb
 10659              		.thumb_func
 10661              	TIM_SetCounter:
 10662              	.LFB95:
2257:../SPL/src/stm32f10x_tim.c **** 
2258:../SPL/src/stm32f10x_tim.c **** /**
2259:../SPL/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Counter Register value
2260:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2261:../SPL/src/stm32f10x_tim.c ****   * @param  Counter: specifies the Counter register new value.
2262:../SPL/src/stm32f10x_tim.c ****   * @retval None
2263:../SPL/src/stm32f10x_tim.c ****   */
2264:../SPL/src/stm32f10x_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint16_t Counter)
2265:../SPL/src/stm32f10x_tim.c **** {
 10663              		.loc 1 2265 0
 10664              		.cfi_startproc
 10665              		@ args = 0, pretend = 0, frame = 8
 10666              		@ frame_needed = 1, uses_anonymous_args = 0
 10667 4360 80B5     		push	{r7, lr}
 10668              	.LCFI198:
 10669              		.cfi_def_cfa_offset 8
 10670              		.cfi_offset 7, -8
 10671              		.cfi_offset 14, -4
 10672 4362 82B0     		sub	sp, sp, #8
 10673              	.LCFI199:
 10674              		.cfi_def_cfa_offset 16
 10675 4364 00AF     		add	r7, sp, #0
 10676              	.LCFI200:
 10677              		.cfi_def_cfa_register 7
 10678 4366 7860     		str	r0, [r7, #4]
 10679 4368 0B46     		mov	r3, r1
 10680 436a 7B80     		strh	r3, [r7, #2]	@ movhi
2266:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2267:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 10681              		.loc 1 2267 0
 10682 436c 7A68     		ldr	r2, [r7, #4]
 10683 436e 274B     		ldr	r3, .L439
 10684 4370 9A42     		cmp	r2, r3
 10685 4372 44D0     		beq	.L438
 10686              		.loc 1 2267 0 is_stmt 0 discriminator 1
 10687 4374 7B68     		ldr	r3, [r7, #4]
 10688 4376 B3F1804F 		cmp	r3, #1073741824
 10689 437a 40D0     		beq	.L438
 10690              		.loc 1 2267 0 discriminator 2
 10691 437c 7A68     		ldr	r2, [r7, #4]
 10692 437e 244B     		ldr	r3, .L439+4
 10693 4380 9A42     		cmp	r2, r3
 10694 4382 3CD0     		beq	.L438
 10695              		.loc 1 2267 0 discriminator 3
 10696 4384 7A68     		ldr	r2, [r7, #4]
 10697 4386 234B     		ldr	r3, .L439+8
 10698 4388 9A42     		cmp	r2, r3
 10699 438a 38D0     		beq	.L438
 10700              		.loc 1 2267 0 discriminator 4
 10701 438c 7A68     		ldr	r2, [r7, #4]
 10702 438e 224B     		ldr	r3, .L439+12
 10703 4390 9A42     		cmp	r2, r3
 10704 4392 34D0     		beq	.L438
 10705              		.loc 1 2267 0 discriminator 5
 10706 4394 7A68     		ldr	r2, [r7, #4]
 10707 4396 214B     		ldr	r3, .L439+16
 10708 4398 9A42     		cmp	r2, r3
 10709 439a 30D0     		beq	.L438
 10710              		.loc 1 2267 0 discriminator 6
 10711 439c 7A68     		ldr	r2, [r7, #4]
 10712 439e 204B     		ldr	r3, .L439+20
 10713 43a0 9A42     		cmp	r2, r3
 10714 43a2 2CD0     		beq	.L438
 10715              		.loc 1 2267 0 discriminator 7
 10716 43a4 7A68     		ldr	r2, [r7, #4]
 10717 43a6 1F4B     		ldr	r3, .L439+24
 10718 43a8 9A42     		cmp	r2, r3
 10719 43aa 28D0     		beq	.L438
 10720              		.loc 1 2267 0 discriminator 8
 10721 43ac 7A68     		ldr	r2, [r7, #4]
 10722 43ae 1E4B     		ldr	r3, .L439+28
 10723 43b0 9A42     		cmp	r2, r3
 10724 43b2 24D0     		beq	.L438
 10725              		.loc 1 2267 0 discriminator 9
 10726 43b4 7A68     		ldr	r2, [r7, #4]
 10727 43b6 1D4B     		ldr	r3, .L439+32
 10728 43b8 9A42     		cmp	r2, r3
 10729 43ba 20D0     		beq	.L438
 10730              		.loc 1 2267 0 discriminator 10
 10731 43bc 7A68     		ldr	r2, [r7, #4]
 10732 43be 1C4B     		ldr	r3, .L439+36
 10733 43c0 9A42     		cmp	r2, r3
 10734 43c2 1CD0     		beq	.L438
 10735              		.loc 1 2267 0 discriminator 11
 10736 43c4 7A68     		ldr	r2, [r7, #4]
 10737 43c6 1B4B     		ldr	r3, .L439+40
 10738 43c8 9A42     		cmp	r2, r3
 10739 43ca 18D0     		beq	.L438
 10740              		.loc 1 2267 0 discriminator 12
 10741 43cc 7A68     		ldr	r2, [r7, #4]
 10742 43ce 1A4B     		ldr	r3, .L439+44
 10743 43d0 9A42     		cmp	r2, r3
 10744 43d2 14D0     		beq	.L438
 10745              		.loc 1 2267 0 discriminator 13
 10746 43d4 7A68     		ldr	r2, [r7, #4]
 10747 43d6 194B     		ldr	r3, .L439+48
 10748 43d8 9A42     		cmp	r2, r3
 10749 43da 10D0     		beq	.L438
 10750              		.loc 1 2267 0 discriminator 14
 10751 43dc 7A68     		ldr	r2, [r7, #4]
 10752 43de 184B     		ldr	r3, .L439+52
 10753 43e0 9A42     		cmp	r2, r3
 10754 43e2 0CD0     		beq	.L438
 10755              		.loc 1 2267 0 discriminator 15
 10756 43e4 7A68     		ldr	r2, [r7, #4]
 10757 43e6 174B     		ldr	r3, .L439+56
 10758 43e8 9A42     		cmp	r2, r3
 10759 43ea 08D0     		beq	.L438
 10760              		.loc 1 2267 0 discriminator 16
 10761 43ec 7A68     		ldr	r2, [r7, #4]
 10762 43ee 164B     		ldr	r3, .L439+60
 10763 43f0 9A42     		cmp	r2, r3
 10764 43f2 04D0     		beq	.L438
 10765              		.loc 1 2267 0 discriminator 17
 10766 43f4 1548     		ldr	r0, .L439+64
 10767 43f6 40F6DB01 		movw	r1, #2267
 10768 43fa FFF7FEFF 		bl	assert_failed
 10769              	.L438:
2268:../SPL/src/stm32f10x_tim.c ****   /* Set the Counter Register value */
2269:../SPL/src/stm32f10x_tim.c ****   TIMx->CNT = Counter;
 10770              		.loc 1 2269 0 is_stmt 1
 10771 43fe 7B68     		ldr	r3, [r7, #4]
 10772 4400 7A88     		ldrh	r2, [r7, #2]	@ movhi
 10773 4402 9A84     		strh	r2, [r3, #36]	@ movhi
2270:../SPL/src/stm32f10x_tim.c **** }
 10774              		.loc 1 2270 0
 10775 4404 07F10807 		add	r7, r7, #8
 10776 4408 BD46     		mov	sp, r7
 10777 440a 80BD     		pop	{r7, pc}
 10778              	.L440:
 10779              		.align	2
 10780              	.L439:
 10781 440c 002C0140 		.word	1073818624
 10782 4410 00040040 		.word	1073742848
 10783 4414 00080040 		.word	1073743872
 10784 4418 000C0040 		.word	1073744896
 10785 441c 00100040 		.word	1073745920
 10786 4420 00140040 		.word	1073746944
 10787 4424 00340140 		.word	1073820672
 10788 4428 004C0140 		.word	1073826816
 10789 442c 00500140 		.word	1073827840
 10790 4430 00540140 		.word	1073828864
 10791 4434 00180040 		.word	1073747968
 10792 4438 001C0040 		.word	1073748992
 10793 443c 00200040 		.word	1073750016
 10794 4440 00400140 		.word	1073823744
 10795 4444 00440140 		.word	1073824768
 10796 4448 00480140 		.word	1073825792
 10797 444c 00000000 		.word	.LC0
 10798              		.cfi_endproc
 10799              	.LFE95:
 10801              		.align	2
 10802              		.global	TIM_SetAutoreload
 10803              		.thumb
 10804              		.thumb_func
 10806              	TIM_SetAutoreload:
 10807              	.LFB96:
2271:../SPL/src/stm32f10x_tim.c **** 
2272:../SPL/src/stm32f10x_tim.c **** /**
2273:../SPL/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
2274:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2275:../SPL/src/stm32f10x_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
2276:../SPL/src/stm32f10x_tim.c ****   * @retval None
2277:../SPL/src/stm32f10x_tim.c ****   */
2278:../SPL/src/stm32f10x_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint16_t Autoreload)
2279:../SPL/src/stm32f10x_tim.c **** {
 10808              		.loc 1 2279 0
 10809              		.cfi_startproc
 10810              		@ args = 0, pretend = 0, frame = 8
 10811              		@ frame_needed = 1, uses_anonymous_args = 0
 10812 4450 80B5     		push	{r7, lr}
 10813              	.LCFI201:
 10814              		.cfi_def_cfa_offset 8
 10815              		.cfi_offset 7, -8
 10816              		.cfi_offset 14, -4
 10817 4452 82B0     		sub	sp, sp, #8
 10818              	.LCFI202:
 10819              		.cfi_def_cfa_offset 16
 10820 4454 00AF     		add	r7, sp, #0
 10821              	.LCFI203:
 10822              		.cfi_def_cfa_register 7
 10823 4456 7860     		str	r0, [r7, #4]
 10824 4458 0B46     		mov	r3, r1
 10825 445a 7B80     		strh	r3, [r7, #2]	@ movhi
2280:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2281:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 10826              		.loc 1 2281 0
 10827 445c 7A68     		ldr	r2, [r7, #4]
 10828 445e 274B     		ldr	r3, .L443
 10829 4460 9A42     		cmp	r2, r3
 10830 4462 44D0     		beq	.L442
 10831              		.loc 1 2281 0 is_stmt 0 discriminator 1
 10832 4464 7B68     		ldr	r3, [r7, #4]
 10833 4466 B3F1804F 		cmp	r3, #1073741824
 10834 446a 40D0     		beq	.L442
 10835              		.loc 1 2281 0 discriminator 2
 10836 446c 7A68     		ldr	r2, [r7, #4]
 10837 446e 244B     		ldr	r3, .L443+4
 10838 4470 9A42     		cmp	r2, r3
 10839 4472 3CD0     		beq	.L442
 10840              		.loc 1 2281 0 discriminator 3
 10841 4474 7A68     		ldr	r2, [r7, #4]
 10842 4476 234B     		ldr	r3, .L443+8
 10843 4478 9A42     		cmp	r2, r3
 10844 447a 38D0     		beq	.L442
 10845              		.loc 1 2281 0 discriminator 4
 10846 447c 7A68     		ldr	r2, [r7, #4]
 10847 447e 224B     		ldr	r3, .L443+12
 10848 4480 9A42     		cmp	r2, r3
 10849 4482 34D0     		beq	.L442
 10850              		.loc 1 2281 0 discriminator 5
 10851 4484 7A68     		ldr	r2, [r7, #4]
 10852 4486 214B     		ldr	r3, .L443+16
 10853 4488 9A42     		cmp	r2, r3
 10854 448a 30D0     		beq	.L442
 10855              		.loc 1 2281 0 discriminator 6
 10856 448c 7A68     		ldr	r2, [r7, #4]
 10857 448e 204B     		ldr	r3, .L443+20
 10858 4490 9A42     		cmp	r2, r3
 10859 4492 2CD0     		beq	.L442
 10860              		.loc 1 2281 0 discriminator 7
 10861 4494 7A68     		ldr	r2, [r7, #4]
 10862 4496 1F4B     		ldr	r3, .L443+24
 10863 4498 9A42     		cmp	r2, r3
 10864 449a 28D0     		beq	.L442
 10865              		.loc 1 2281 0 discriminator 8
 10866 449c 7A68     		ldr	r2, [r7, #4]
 10867 449e 1E4B     		ldr	r3, .L443+28
 10868 44a0 9A42     		cmp	r2, r3
 10869 44a2 24D0     		beq	.L442
 10870              		.loc 1 2281 0 discriminator 9
 10871 44a4 7A68     		ldr	r2, [r7, #4]
 10872 44a6 1D4B     		ldr	r3, .L443+32
 10873 44a8 9A42     		cmp	r2, r3
 10874 44aa 20D0     		beq	.L442
 10875              		.loc 1 2281 0 discriminator 10
 10876 44ac 7A68     		ldr	r2, [r7, #4]
 10877 44ae 1C4B     		ldr	r3, .L443+36
 10878 44b0 9A42     		cmp	r2, r3
 10879 44b2 1CD0     		beq	.L442
 10880              		.loc 1 2281 0 discriminator 11
 10881 44b4 7A68     		ldr	r2, [r7, #4]
 10882 44b6 1B4B     		ldr	r3, .L443+40
 10883 44b8 9A42     		cmp	r2, r3
 10884 44ba 18D0     		beq	.L442
 10885              		.loc 1 2281 0 discriminator 12
 10886 44bc 7A68     		ldr	r2, [r7, #4]
 10887 44be 1A4B     		ldr	r3, .L443+44
 10888 44c0 9A42     		cmp	r2, r3
 10889 44c2 14D0     		beq	.L442
 10890              		.loc 1 2281 0 discriminator 13
 10891 44c4 7A68     		ldr	r2, [r7, #4]
 10892 44c6 194B     		ldr	r3, .L443+48
 10893 44c8 9A42     		cmp	r2, r3
 10894 44ca 10D0     		beq	.L442
 10895              		.loc 1 2281 0 discriminator 14
 10896 44cc 7A68     		ldr	r2, [r7, #4]
 10897 44ce 184B     		ldr	r3, .L443+52
 10898 44d0 9A42     		cmp	r2, r3
 10899 44d2 0CD0     		beq	.L442
 10900              		.loc 1 2281 0 discriminator 15
 10901 44d4 7A68     		ldr	r2, [r7, #4]
 10902 44d6 174B     		ldr	r3, .L443+56
 10903 44d8 9A42     		cmp	r2, r3
 10904 44da 08D0     		beq	.L442
 10905              		.loc 1 2281 0 discriminator 16
 10906 44dc 7A68     		ldr	r2, [r7, #4]
 10907 44de 164B     		ldr	r3, .L443+60
 10908 44e0 9A42     		cmp	r2, r3
 10909 44e2 04D0     		beq	.L442
 10910              		.loc 1 2281 0 discriminator 17
 10911 44e4 1548     		ldr	r0, .L443+64
 10912 44e6 40F6E901 		movw	r1, #2281
 10913 44ea FFF7FEFF 		bl	assert_failed
 10914              	.L442:
2282:../SPL/src/stm32f10x_tim.c ****   /* Set the Autoreload Register value */
2283:../SPL/src/stm32f10x_tim.c ****   TIMx->ARR = Autoreload;
 10915              		.loc 1 2283 0 is_stmt 1
 10916 44ee 7B68     		ldr	r3, [r7, #4]
 10917 44f0 7A88     		ldrh	r2, [r7, #2]	@ movhi
 10918 44f2 9A85     		strh	r2, [r3, #44]	@ movhi
2284:../SPL/src/stm32f10x_tim.c **** }
 10919              		.loc 1 2284 0
 10920 44f4 07F10807 		add	r7, r7, #8
 10921 44f8 BD46     		mov	sp, r7
 10922 44fa 80BD     		pop	{r7, pc}
 10923              	.L444:
 10924              		.align	2
 10925              	.L443:
 10926 44fc 002C0140 		.word	1073818624
 10927 4500 00040040 		.word	1073742848
 10928 4504 00080040 		.word	1073743872
 10929 4508 000C0040 		.word	1073744896
 10930 450c 00100040 		.word	1073745920
 10931 4510 00140040 		.word	1073746944
 10932 4514 00340140 		.word	1073820672
 10933 4518 004C0140 		.word	1073826816
 10934 451c 00500140 		.word	1073827840
 10935 4520 00540140 		.word	1073828864
 10936 4524 00180040 		.word	1073747968
 10937 4528 001C0040 		.word	1073748992
 10938 452c 00200040 		.word	1073750016
 10939 4530 00400140 		.word	1073823744
 10940 4534 00440140 		.word	1073824768
 10941 4538 00480140 		.word	1073825792
 10942 453c 00000000 		.word	.LC0
 10943              		.cfi_endproc
 10944              	.LFE96:
 10946              		.align	2
 10947              		.global	TIM_SetCompare1
 10948              		.thumb
 10949              		.thumb_func
 10951              	TIM_SetCompare1:
 10952              	.LFB97:
2285:../SPL/src/stm32f10x_tim.c **** 
2286:../SPL/src/stm32f10x_tim.c **** /**
2287:../SPL/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
2288:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2289:../SPL/src/stm32f10x_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
2290:../SPL/src/stm32f10x_tim.c ****   * @retval None
2291:../SPL/src/stm32f10x_tim.c ****   */
2292:../SPL/src/stm32f10x_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint16_t Compare1)
2293:../SPL/src/stm32f10x_tim.c **** {
 10953              		.loc 1 2293 0
 10954              		.cfi_startproc
 10955              		@ args = 0, pretend = 0, frame = 8
 10956              		@ frame_needed = 1, uses_anonymous_args = 0
 10957 4540 80B5     		push	{r7, lr}
 10958              	.LCFI204:
 10959              		.cfi_def_cfa_offset 8
 10960              		.cfi_offset 7, -8
 10961              		.cfi_offset 14, -4
 10962 4542 82B0     		sub	sp, sp, #8
 10963              	.LCFI205:
 10964              		.cfi_def_cfa_offset 16
 10965 4544 00AF     		add	r7, sp, #0
 10966              	.LCFI206:
 10967              		.cfi_def_cfa_register 7
 10968 4546 7860     		str	r0, [r7, #4]
 10969 4548 0B46     		mov	r3, r1
 10970 454a 7B80     		strh	r3, [r7, #2]	@ movhi
2294:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2295:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 10971              		.loc 1 2295 0
 10972 454c 7A68     		ldr	r2, [r7, #4]
 10973 454e 234B     		ldr	r3, .L447
 10974 4550 9A42     		cmp	r2, r3
 10975 4552 3CD0     		beq	.L446
 10976              		.loc 1 2295 0 is_stmt 0 discriminator 1
 10977 4554 7B68     		ldr	r3, [r7, #4]
 10978 4556 B3F1804F 		cmp	r3, #1073741824
 10979 455a 38D0     		beq	.L446
 10980              		.loc 1 2295 0 discriminator 2
 10981 455c 7A68     		ldr	r2, [r7, #4]
 10982 455e 204B     		ldr	r3, .L447+4
 10983 4560 9A42     		cmp	r2, r3
 10984 4562 34D0     		beq	.L446
 10985              		.loc 1 2295 0 discriminator 3
 10986 4564 7A68     		ldr	r2, [r7, #4]
 10987 4566 1F4B     		ldr	r3, .L447+8
 10988 4568 9A42     		cmp	r2, r3
 10989 456a 30D0     		beq	.L446
 10990              		.loc 1 2295 0 discriminator 4
 10991 456c 7A68     		ldr	r2, [r7, #4]
 10992 456e 1E4B     		ldr	r3, .L447+12
 10993 4570 9A42     		cmp	r2, r3
 10994 4572 2CD0     		beq	.L446
 10995              		.loc 1 2295 0 discriminator 5
 10996 4574 7A68     		ldr	r2, [r7, #4]
 10997 4576 1D4B     		ldr	r3, .L447+16
 10998 4578 9A42     		cmp	r2, r3
 10999 457a 28D0     		beq	.L446
 11000              		.loc 1 2295 0 discriminator 6
 11001 457c 7A68     		ldr	r2, [r7, #4]
 11002 457e 1C4B     		ldr	r3, .L447+20
 11003 4580 9A42     		cmp	r2, r3
 11004 4582 24D0     		beq	.L446
 11005              		.loc 1 2295 0 discriminator 7
 11006 4584 7A68     		ldr	r2, [r7, #4]
 11007 4586 1B4B     		ldr	r3, .L447+24
 11008 4588 9A42     		cmp	r2, r3
 11009 458a 20D0     		beq	.L446
 11010              		.loc 1 2295 0 discriminator 8
 11011 458c 7A68     		ldr	r2, [r7, #4]
 11012 458e 1A4B     		ldr	r3, .L447+28
 11013 4590 9A42     		cmp	r2, r3
 11014 4592 1CD0     		beq	.L446
 11015              		.loc 1 2295 0 discriminator 9
 11016 4594 7A68     		ldr	r2, [r7, #4]
 11017 4596 194B     		ldr	r3, .L447+32
 11018 4598 9A42     		cmp	r2, r3
 11019 459a 18D0     		beq	.L446
 11020              		.loc 1 2295 0 discriminator 10
 11021 459c 7A68     		ldr	r2, [r7, #4]
 11022 459e 184B     		ldr	r3, .L447+36
 11023 45a0 9A42     		cmp	r2, r3
 11024 45a2 14D0     		beq	.L446
 11025              		.loc 1 2295 0 discriminator 11
 11026 45a4 7A68     		ldr	r2, [r7, #4]
 11027 45a6 174B     		ldr	r3, .L447+40
 11028 45a8 9A42     		cmp	r2, r3
 11029 45aa 10D0     		beq	.L446
 11030              		.loc 1 2295 0 discriminator 12
 11031 45ac 7A68     		ldr	r2, [r7, #4]
 11032 45ae 164B     		ldr	r3, .L447+44
 11033 45b0 9A42     		cmp	r2, r3
 11034 45b2 0CD0     		beq	.L446
 11035              		.loc 1 2295 0 discriminator 13
 11036 45b4 7A68     		ldr	r2, [r7, #4]
 11037 45b6 154B     		ldr	r3, .L447+48
 11038 45b8 9A42     		cmp	r2, r3
 11039 45ba 08D0     		beq	.L446
 11040              		.loc 1 2295 0 discriminator 14
 11041 45bc 7A68     		ldr	r2, [r7, #4]
 11042 45be 144B     		ldr	r3, .L447+52
 11043 45c0 9A42     		cmp	r2, r3
 11044 45c2 04D0     		beq	.L446
 11045              		.loc 1 2295 0 discriminator 15
 11046 45c4 1348     		ldr	r0, .L447+56
 11047 45c6 40F6F701 		movw	r1, #2295
 11048 45ca FFF7FEFF 		bl	assert_failed
 11049              	.L446:
2296:../SPL/src/stm32f10x_tim.c ****   /* Set the Capture Compare1 Register value */
2297:../SPL/src/stm32f10x_tim.c ****   TIMx->CCR1 = Compare1;
 11050              		.loc 1 2297 0 is_stmt 1
 11051 45ce 7B68     		ldr	r3, [r7, #4]
 11052 45d0 7A88     		ldrh	r2, [r7, #2]	@ movhi
 11053 45d2 9A86     		strh	r2, [r3, #52]	@ movhi
2298:../SPL/src/stm32f10x_tim.c **** }
 11054              		.loc 1 2298 0
 11055 45d4 07F10807 		add	r7, r7, #8
 11056 45d8 BD46     		mov	sp, r7
 11057 45da 80BD     		pop	{r7, pc}
 11058              	.L448:
 11059              		.align	2
 11060              	.L447:
 11061 45dc 002C0140 		.word	1073818624
 11062 45e0 00040040 		.word	1073742848
 11063 45e4 00080040 		.word	1073743872
 11064 45e8 000C0040 		.word	1073744896
 11065 45ec 00340140 		.word	1073820672
 11066 45f0 004C0140 		.word	1073826816
 11067 45f4 00500140 		.word	1073827840
 11068 45f8 00540140 		.word	1073828864
 11069 45fc 00180040 		.word	1073747968
 11070 4600 001C0040 		.word	1073748992
 11071 4604 00200040 		.word	1073750016
 11072 4608 00400140 		.word	1073823744
 11073 460c 00440140 		.word	1073824768
 11074 4610 00480140 		.word	1073825792
 11075 4614 00000000 		.word	.LC0
 11076              		.cfi_endproc
 11077              	.LFE97:
 11079              		.align	2
 11080              		.global	TIM_SetCompare2
 11081              		.thumb
 11082              		.thumb_func
 11084              	TIM_SetCompare2:
 11085              	.LFB98:
2299:../SPL/src/stm32f10x_tim.c **** 
2300:../SPL/src/stm32f10x_tim.c **** /**
2301:../SPL/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
2302:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2303:../SPL/src/stm32f10x_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
2304:../SPL/src/stm32f10x_tim.c ****   * @retval None
2305:../SPL/src/stm32f10x_tim.c ****   */
2306:../SPL/src/stm32f10x_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint16_t Compare2)
2307:../SPL/src/stm32f10x_tim.c **** {
 11086              		.loc 1 2307 0
 11087              		.cfi_startproc
 11088              		@ args = 0, pretend = 0, frame = 8
 11089              		@ frame_needed = 1, uses_anonymous_args = 0
 11090 4618 80B5     		push	{r7, lr}
 11091              	.LCFI207:
 11092              		.cfi_def_cfa_offset 8
 11093              		.cfi_offset 7, -8
 11094              		.cfi_offset 14, -4
 11095 461a 82B0     		sub	sp, sp, #8
 11096              	.LCFI208:
 11097              		.cfi_def_cfa_offset 16
 11098 461c 00AF     		add	r7, sp, #0
 11099              	.LCFI209:
 11100              		.cfi_def_cfa_register 7
 11101 461e 7860     		str	r0, [r7, #4]
 11102 4620 0B46     		mov	r3, r1
 11103 4622 7B80     		strh	r3, [r7, #2]	@ movhi
2308:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2309:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 11104              		.loc 1 2309 0
 11105 4624 7A68     		ldr	r2, [r7, #4]
 11106 4626 174B     		ldr	r3, .L451
 11107 4628 9A42     		cmp	r2, r3
 11108 462a 24D0     		beq	.L450
 11109              		.loc 1 2309 0 is_stmt 0 discriminator 1
 11110 462c 7B68     		ldr	r3, [r7, #4]
 11111 462e B3F1804F 		cmp	r3, #1073741824
 11112 4632 20D0     		beq	.L450
 11113              		.loc 1 2309 0 discriminator 2
 11114 4634 7A68     		ldr	r2, [r7, #4]
 11115 4636 144B     		ldr	r3, .L451+4
 11116 4638 9A42     		cmp	r2, r3
 11117 463a 1CD0     		beq	.L450
 11118              		.loc 1 2309 0 discriminator 3
 11119 463c 7A68     		ldr	r2, [r7, #4]
 11120 463e 134B     		ldr	r3, .L451+8
 11121 4640 9A42     		cmp	r2, r3
 11122 4642 18D0     		beq	.L450
 11123              		.loc 1 2309 0 discriminator 4
 11124 4644 7A68     		ldr	r2, [r7, #4]
 11125 4646 124B     		ldr	r3, .L451+12
 11126 4648 9A42     		cmp	r2, r3
 11127 464a 14D0     		beq	.L450
 11128              		.loc 1 2309 0 discriminator 5
 11129 464c 7A68     		ldr	r2, [r7, #4]
 11130 464e 114B     		ldr	r3, .L451+16
 11131 4650 9A42     		cmp	r2, r3
 11132 4652 10D0     		beq	.L450
 11133              		.loc 1 2309 0 discriminator 6
 11134 4654 7A68     		ldr	r2, [r7, #4]
 11135 4656 104B     		ldr	r3, .L451+20
 11136 4658 9A42     		cmp	r2, r3
 11137 465a 0CD0     		beq	.L450
 11138              		.loc 1 2309 0 discriminator 7
 11139 465c 7A68     		ldr	r2, [r7, #4]
 11140 465e 0F4B     		ldr	r3, .L451+24
 11141 4660 9A42     		cmp	r2, r3
 11142 4662 08D0     		beq	.L450
 11143              		.loc 1 2309 0 discriminator 8
 11144 4664 7A68     		ldr	r2, [r7, #4]
 11145 4666 0E4B     		ldr	r3, .L451+28
 11146 4668 9A42     		cmp	r2, r3
 11147 466a 04D0     		beq	.L450
 11148              		.loc 1 2309 0 discriminator 9
 11149 466c 0D48     		ldr	r0, .L451+32
 11150 466e 40F60511 		movw	r1, #2309
 11151 4672 FFF7FEFF 		bl	assert_failed
 11152              	.L450:
2310:../SPL/src/stm32f10x_tim.c ****   /* Set the Capture Compare2 Register value */
2311:../SPL/src/stm32f10x_tim.c ****   TIMx->CCR2 = Compare2;
 11153              		.loc 1 2311 0 is_stmt 1
 11154 4676 7B68     		ldr	r3, [r7, #4]
 11155 4678 7A88     		ldrh	r2, [r7, #2]	@ movhi
 11156 467a 1A87     		strh	r2, [r3, #56]	@ movhi
2312:../SPL/src/stm32f10x_tim.c **** }
 11157              		.loc 1 2312 0
 11158 467c 07F10807 		add	r7, r7, #8
 11159 4680 BD46     		mov	sp, r7
 11160 4682 80BD     		pop	{r7, pc}
 11161              	.L452:
 11162              		.align	2
 11163              	.L451:
 11164 4684 002C0140 		.word	1073818624
 11165 4688 00040040 		.word	1073742848
 11166 468c 00080040 		.word	1073743872
 11167 4690 000C0040 		.word	1073744896
 11168 4694 00340140 		.word	1073820672
 11169 4698 004C0140 		.word	1073826816
 11170 469c 00180040 		.word	1073747968
 11171 46a0 00400140 		.word	1073823744
 11172 46a4 00000000 		.word	.LC0
 11173              		.cfi_endproc
 11174              	.LFE98:
 11176              		.align	2
 11177              		.global	TIM_SetCompare3
 11178              		.thumb
 11179              		.thumb_func
 11181              	TIM_SetCompare3:
 11182              	.LFB99:
2313:../SPL/src/stm32f10x_tim.c **** 
2314:../SPL/src/stm32f10x_tim.c **** /**
2315:../SPL/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
2316:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2317:../SPL/src/stm32f10x_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
2318:../SPL/src/stm32f10x_tim.c ****   * @retval None
2319:../SPL/src/stm32f10x_tim.c ****   */
2320:../SPL/src/stm32f10x_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint16_t Compare3)
2321:../SPL/src/stm32f10x_tim.c **** {
 11183              		.loc 1 2321 0
 11184              		.cfi_startproc
 11185              		@ args = 0, pretend = 0, frame = 8
 11186              		@ frame_needed = 1, uses_anonymous_args = 0
 11187 46a8 80B5     		push	{r7, lr}
 11188              	.LCFI210:
 11189              		.cfi_def_cfa_offset 8
 11190              		.cfi_offset 7, -8
 11191              		.cfi_offset 14, -4
 11192 46aa 82B0     		sub	sp, sp, #8
 11193              	.LCFI211:
 11194              		.cfi_def_cfa_offset 16
 11195 46ac 00AF     		add	r7, sp, #0
 11196              	.LCFI212:
 11197              		.cfi_def_cfa_register 7
 11198 46ae 7860     		str	r0, [r7, #4]
 11199 46b0 0B46     		mov	r3, r1
 11200 46b2 7B80     		strh	r3, [r7, #2]	@ movhi
2322:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2323:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 11201              		.loc 1 2323 0
 11202 46b4 7A68     		ldr	r2, [r7, #4]
 11203 46b6 114B     		ldr	r3, .L455
 11204 46b8 9A42     		cmp	r2, r3
 11205 46ba 18D0     		beq	.L454
 11206              		.loc 1 2323 0 is_stmt 0 discriminator 1
 11207 46bc 7B68     		ldr	r3, [r7, #4]
 11208 46be B3F1804F 		cmp	r3, #1073741824
 11209 46c2 14D0     		beq	.L454
 11210              		.loc 1 2323 0 discriminator 2
 11211 46c4 7A68     		ldr	r2, [r7, #4]
 11212 46c6 0E4B     		ldr	r3, .L455+4
 11213 46c8 9A42     		cmp	r2, r3
 11214 46ca 10D0     		beq	.L454
 11215              		.loc 1 2323 0 discriminator 3
 11216 46cc 7A68     		ldr	r2, [r7, #4]
 11217 46ce 0D4B     		ldr	r3, .L455+8
 11218 46d0 9A42     		cmp	r2, r3
 11219 46d2 0CD0     		beq	.L454
 11220              		.loc 1 2323 0 discriminator 4
 11221 46d4 7A68     		ldr	r2, [r7, #4]
 11222 46d6 0C4B     		ldr	r3, .L455+12
 11223 46d8 9A42     		cmp	r2, r3
 11224 46da 08D0     		beq	.L454
 11225              		.loc 1 2323 0 discriminator 5
 11226 46dc 7A68     		ldr	r2, [r7, #4]
 11227 46de 0B4B     		ldr	r3, .L455+16
 11228 46e0 9A42     		cmp	r2, r3
 11229 46e2 04D0     		beq	.L454
 11230              		.loc 1 2323 0 discriminator 6
 11231 46e4 0A48     		ldr	r0, .L455+20
 11232 46e6 40F61311 		movw	r1, #2323
 11233 46ea FFF7FEFF 		bl	assert_failed
 11234              	.L454:
2324:../SPL/src/stm32f10x_tim.c ****   /* Set the Capture Compare3 Register value */
2325:../SPL/src/stm32f10x_tim.c ****   TIMx->CCR3 = Compare3;
 11235              		.loc 1 2325 0 is_stmt 1
 11236 46ee 7B68     		ldr	r3, [r7, #4]
 11237 46f0 7A88     		ldrh	r2, [r7, #2]	@ movhi
 11238 46f2 9A87     		strh	r2, [r3, #60]	@ movhi
2326:../SPL/src/stm32f10x_tim.c **** }
 11239              		.loc 1 2326 0
 11240 46f4 07F10807 		add	r7, r7, #8
 11241 46f8 BD46     		mov	sp, r7
 11242 46fa 80BD     		pop	{r7, pc}
 11243              	.L456:
 11244              		.align	2
 11245              	.L455:
 11246 46fc 002C0140 		.word	1073818624
 11247 4700 00040040 		.word	1073742848
 11248 4704 00080040 		.word	1073743872
 11249 4708 000C0040 		.word	1073744896
 11250 470c 00340140 		.word	1073820672
 11251 4710 00000000 		.word	.LC0
 11252              		.cfi_endproc
 11253              	.LFE99:
 11255              		.align	2
 11256              		.global	TIM_SetCompare4
 11257              		.thumb
 11258              		.thumb_func
 11260              	TIM_SetCompare4:
 11261              	.LFB100:
2327:../SPL/src/stm32f10x_tim.c **** 
2328:../SPL/src/stm32f10x_tim.c **** /**
2329:../SPL/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
2330:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2331:../SPL/src/stm32f10x_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
2332:../SPL/src/stm32f10x_tim.c ****   * @retval None
2333:../SPL/src/stm32f10x_tim.c ****   */
2334:../SPL/src/stm32f10x_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint16_t Compare4)
2335:../SPL/src/stm32f10x_tim.c **** {
 11262              		.loc 1 2335 0
 11263              		.cfi_startproc
 11264              		@ args = 0, pretend = 0, frame = 8
 11265              		@ frame_needed = 1, uses_anonymous_args = 0
 11266 4714 80B5     		push	{r7, lr}
 11267              	.LCFI213:
 11268              		.cfi_def_cfa_offset 8
 11269              		.cfi_offset 7, -8
 11270              		.cfi_offset 14, -4
 11271 4716 82B0     		sub	sp, sp, #8
 11272              	.LCFI214:
 11273              		.cfi_def_cfa_offset 16
 11274 4718 00AF     		add	r7, sp, #0
 11275              	.LCFI215:
 11276              		.cfi_def_cfa_register 7
 11277 471a 7860     		str	r0, [r7, #4]
 11278 471c 0B46     		mov	r3, r1
 11279 471e 7B80     		strh	r3, [r7, #2]	@ movhi
2336:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2337:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 11280              		.loc 1 2337 0
 11281 4720 7A68     		ldr	r2, [r7, #4]
 11282 4722 124B     		ldr	r3, .L459
 11283 4724 9A42     		cmp	r2, r3
 11284 4726 18D0     		beq	.L458
 11285              		.loc 1 2337 0 is_stmt 0 discriminator 1
 11286 4728 7B68     		ldr	r3, [r7, #4]
 11287 472a B3F1804F 		cmp	r3, #1073741824
 11288 472e 14D0     		beq	.L458
 11289              		.loc 1 2337 0 discriminator 2
 11290 4730 7A68     		ldr	r2, [r7, #4]
 11291 4732 0F4B     		ldr	r3, .L459+4
 11292 4734 9A42     		cmp	r2, r3
 11293 4736 10D0     		beq	.L458
 11294              		.loc 1 2337 0 discriminator 3
 11295 4738 7A68     		ldr	r2, [r7, #4]
 11296 473a 0E4B     		ldr	r3, .L459+8
 11297 473c 9A42     		cmp	r2, r3
 11298 473e 0CD0     		beq	.L458
 11299              		.loc 1 2337 0 discriminator 4
 11300 4740 7A68     		ldr	r2, [r7, #4]
 11301 4742 0D4B     		ldr	r3, .L459+12
 11302 4744 9A42     		cmp	r2, r3
 11303 4746 08D0     		beq	.L458
 11304              		.loc 1 2337 0 discriminator 5
 11305 4748 7A68     		ldr	r2, [r7, #4]
 11306 474a 0C4B     		ldr	r3, .L459+16
 11307 474c 9A42     		cmp	r2, r3
 11308 474e 04D0     		beq	.L458
 11309              		.loc 1 2337 0 discriminator 6
 11310 4750 0B48     		ldr	r0, .L459+20
 11311 4752 40F62111 		movw	r1, #2337
 11312 4756 FFF7FEFF 		bl	assert_failed
 11313              	.L458:
2338:../SPL/src/stm32f10x_tim.c ****   /* Set the Capture Compare4 Register value */
2339:../SPL/src/stm32f10x_tim.c ****   TIMx->CCR4 = Compare4;
 11314              		.loc 1 2339 0 is_stmt 1
 11315 475a 7B68     		ldr	r3, [r7, #4]
 11316 475c 7A88     		ldrh	r2, [r7, #2]	@ movhi
 11317 475e A3F84020 		strh	r2, [r3, #64]	@ movhi
2340:../SPL/src/stm32f10x_tim.c **** }
 11318              		.loc 1 2340 0
 11319 4762 07F10807 		add	r7, r7, #8
 11320 4766 BD46     		mov	sp, r7
 11321 4768 80BD     		pop	{r7, pc}
 11322              	.L460:
 11323 476a 00BF     		.align	2
 11324              	.L459:
 11325 476c 002C0140 		.word	1073818624
 11326 4770 00040040 		.word	1073742848
 11327 4774 00080040 		.word	1073743872
 11328 4778 000C0040 		.word	1073744896
 11329 477c 00340140 		.word	1073820672
 11330 4780 00000000 		.word	.LC0
 11331              		.cfi_endproc
 11332              	.LFE100:
 11334              		.align	2
 11335              		.global	TIM_SetIC1Prescaler
 11336              		.thumb
 11337              		.thumb_func
 11339              	TIM_SetIC1Prescaler:
 11340              	.LFB101:
2341:../SPL/src/stm32f10x_tim.c **** 
2342:../SPL/src/stm32f10x_tim.c **** /**
2343:../SPL/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2344:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2345:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2346:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2347:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2348:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2349:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2350:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2351:../SPL/src/stm32f10x_tim.c ****   * @retval None
2352:../SPL/src/stm32f10x_tim.c ****   */
2353:../SPL/src/stm32f10x_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2354:../SPL/src/stm32f10x_tim.c **** {
 11341              		.loc 1 2354 0
 11342              		.cfi_startproc
 11343              		@ args = 0, pretend = 0, frame = 8
 11344              		@ frame_needed = 1, uses_anonymous_args = 0
 11345 4784 80B5     		push	{r7, lr}
 11346              	.LCFI216:
 11347              		.cfi_def_cfa_offset 8
 11348              		.cfi_offset 7, -8
 11349              		.cfi_offset 14, -4
 11350 4786 82B0     		sub	sp, sp, #8
 11351              	.LCFI217:
 11352              		.cfi_def_cfa_offset 16
 11353 4788 00AF     		add	r7, sp, #0
 11354              	.LCFI218:
 11355              		.cfi_def_cfa_register 7
 11356 478a 7860     		str	r0, [r7, #4]
 11357 478c 0B46     		mov	r3, r1
 11358 478e 7B80     		strh	r3, [r7, #2]	@ movhi
2355:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2356:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 11359              		.loc 1 2356 0
 11360 4790 7A68     		ldr	r2, [r7, #4]
 11361 4792 324B     		ldr	r3, .L464
 11362 4794 9A42     		cmp	r2, r3
 11363 4796 3CD0     		beq	.L462
 11364              		.loc 1 2356 0 is_stmt 0 discriminator 1
 11365 4798 7B68     		ldr	r3, [r7, #4]
 11366 479a B3F1804F 		cmp	r3, #1073741824
 11367 479e 38D0     		beq	.L462
 11368              		.loc 1 2356 0 discriminator 2
 11369 47a0 7A68     		ldr	r2, [r7, #4]
 11370 47a2 2F4B     		ldr	r3, .L464+4
 11371 47a4 9A42     		cmp	r2, r3
 11372 47a6 34D0     		beq	.L462
 11373              		.loc 1 2356 0 discriminator 3
 11374 47a8 7A68     		ldr	r2, [r7, #4]
 11375 47aa 2E4B     		ldr	r3, .L464+8
 11376 47ac 9A42     		cmp	r2, r3
 11377 47ae 30D0     		beq	.L462
 11378              		.loc 1 2356 0 discriminator 4
 11379 47b0 7A68     		ldr	r2, [r7, #4]
 11380 47b2 2D4B     		ldr	r3, .L464+12
 11381 47b4 9A42     		cmp	r2, r3
 11382 47b6 2CD0     		beq	.L462
 11383              		.loc 1 2356 0 discriminator 5
 11384 47b8 7A68     		ldr	r2, [r7, #4]
 11385 47ba 2C4B     		ldr	r3, .L464+16
 11386 47bc 9A42     		cmp	r2, r3
 11387 47be 28D0     		beq	.L462
 11388              		.loc 1 2356 0 discriminator 6
 11389 47c0 7A68     		ldr	r2, [r7, #4]
 11390 47c2 2B4B     		ldr	r3, .L464+20
 11391 47c4 9A42     		cmp	r2, r3
 11392 47c6 24D0     		beq	.L462
 11393              		.loc 1 2356 0 discriminator 7
 11394 47c8 7A68     		ldr	r2, [r7, #4]
 11395 47ca 2A4B     		ldr	r3, .L464+24
 11396 47cc 9A42     		cmp	r2, r3
 11397 47ce 20D0     		beq	.L462
 11398              		.loc 1 2356 0 discriminator 8
 11399 47d0 7A68     		ldr	r2, [r7, #4]
 11400 47d2 294B     		ldr	r3, .L464+28
 11401 47d4 9A42     		cmp	r2, r3
 11402 47d6 1CD0     		beq	.L462
 11403              		.loc 1 2356 0 discriminator 9
 11404 47d8 7A68     		ldr	r2, [r7, #4]
 11405 47da 284B     		ldr	r3, .L464+32
 11406 47dc 9A42     		cmp	r2, r3
 11407 47de 18D0     		beq	.L462
 11408              		.loc 1 2356 0 discriminator 10
 11409 47e0 7A68     		ldr	r2, [r7, #4]
 11410 47e2 274B     		ldr	r3, .L464+36
 11411 47e4 9A42     		cmp	r2, r3
 11412 47e6 14D0     		beq	.L462
 11413              		.loc 1 2356 0 discriminator 11
 11414 47e8 7A68     		ldr	r2, [r7, #4]
 11415 47ea 264B     		ldr	r3, .L464+40
 11416 47ec 9A42     		cmp	r2, r3
 11417 47ee 10D0     		beq	.L462
 11418              		.loc 1 2356 0 discriminator 12
 11419 47f0 7A68     		ldr	r2, [r7, #4]
 11420 47f2 254B     		ldr	r3, .L464+44
 11421 47f4 9A42     		cmp	r2, r3
 11422 47f6 0CD0     		beq	.L462
 11423              		.loc 1 2356 0 discriminator 13
 11424 47f8 7A68     		ldr	r2, [r7, #4]
 11425 47fa 244B     		ldr	r3, .L464+48
 11426 47fc 9A42     		cmp	r2, r3
 11427 47fe 08D0     		beq	.L462
 11428              		.loc 1 2356 0 discriminator 14
 11429 4800 7A68     		ldr	r2, [r7, #4]
 11430 4802 234B     		ldr	r3, .L464+52
 11431 4804 9A42     		cmp	r2, r3
 11432 4806 04D0     		beq	.L462
 11433              		.loc 1 2356 0 discriminator 15
 11434 4808 2248     		ldr	r0, .L464+56
 11435 480a 40F63411 		movw	r1, #2356
 11436 480e FFF7FEFF 		bl	assert_failed
 11437              	.L462:
2357:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
 11438              		.loc 1 2357 0 is_stmt 1
 11439 4812 7B88     		ldrh	r3, [r7, #2]
 11440 4814 002B     		cmp	r3, #0
 11441 4816 0DD0     		beq	.L463
 11442              		.loc 1 2357 0 is_stmt 0 discriminator 1
 11443 4818 7B88     		ldrh	r3, [r7, #2]
 11444 481a 042B     		cmp	r3, #4
 11445 481c 0AD0     		beq	.L463
 11446              		.loc 1 2357 0 discriminator 2
 11447 481e 7B88     		ldrh	r3, [r7, #2]
 11448 4820 082B     		cmp	r3, #8
 11449 4822 07D0     		beq	.L463
 11450              		.loc 1 2357 0 discriminator 3
 11451 4824 7B88     		ldrh	r3, [r7, #2]
 11452 4826 0C2B     		cmp	r3, #12
 11453 4828 04D0     		beq	.L463
 11454              		.loc 1 2357 0 discriminator 4
 11455 482a 1A48     		ldr	r0, .L464+56
 11456 482c 40F63511 		movw	r1, #2357
 11457 4830 FFF7FEFF 		bl	assert_failed
 11458              	.L463:
2358:../SPL/src/stm32f10x_tim.c ****   /* Reset the IC1PSC Bits */
2359:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR1 &= (uint16_t)~((uint16_t)TIM_CCMR1_IC1PSC);
 11459              		.loc 1 2359 0 is_stmt 1
 11460 4834 7B68     		ldr	r3, [r7, #4]
 11461 4836 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 11462 4838 9BB2     		uxth	r3, r3
 11463 483a 23F00C03 		bic	r3, r3, #12
 11464 483e 9AB2     		uxth	r2, r3
 11465 4840 7B68     		ldr	r3, [r7, #4]
 11466 4842 1A83     		strh	r2, [r3, #24]	@ movhi
2360:../SPL/src/stm32f10x_tim.c ****   /* Set the IC1PSC value */
2361:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
 11467              		.loc 1 2361 0
 11468 4844 7B68     		ldr	r3, [r7, #4]
 11469 4846 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 11470 4848 9AB2     		uxth	r2, r3
 11471 484a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 11472 484c 1343     		orrs	r3, r3, r2
 11473 484e 9AB2     		uxth	r2, r3
 11474 4850 7B68     		ldr	r3, [r7, #4]
 11475 4852 1A83     		strh	r2, [r3, #24]	@ movhi
2362:../SPL/src/stm32f10x_tim.c **** }
 11476              		.loc 1 2362 0
 11477 4854 07F10807 		add	r7, r7, #8
 11478 4858 BD46     		mov	sp, r7
 11479 485a 80BD     		pop	{r7, pc}
 11480              	.L465:
 11481              		.align	2
 11482              	.L464:
 11483 485c 002C0140 		.word	1073818624
 11484 4860 00040040 		.word	1073742848
 11485 4864 00080040 		.word	1073743872
 11486 4868 000C0040 		.word	1073744896
 11487 486c 00340140 		.word	1073820672
 11488 4870 004C0140 		.word	1073826816
 11489 4874 00500140 		.word	1073827840
 11490 4878 00540140 		.word	1073828864
 11491 487c 00180040 		.word	1073747968
 11492 4880 001C0040 		.word	1073748992
 11493 4884 00200040 		.word	1073750016
 11494 4888 00400140 		.word	1073823744
 11495 488c 00440140 		.word	1073824768
 11496 4890 00480140 		.word	1073825792
 11497 4894 00000000 		.word	.LC0
 11498              		.cfi_endproc
 11499              	.LFE101:
 11501              		.align	2
 11502              		.global	TIM_SetIC2Prescaler
 11503              		.thumb
 11504              		.thumb_func
 11506              	TIM_SetIC2Prescaler:
 11507              	.LFB102:
2363:../SPL/src/stm32f10x_tim.c **** 
2364:../SPL/src/stm32f10x_tim.c **** /**
2365:../SPL/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2366:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2367:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2368:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2369:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2370:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2371:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2372:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2373:../SPL/src/stm32f10x_tim.c ****   * @retval None
2374:../SPL/src/stm32f10x_tim.c ****   */
2375:../SPL/src/stm32f10x_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2376:../SPL/src/stm32f10x_tim.c **** {
 11508              		.loc 1 2376 0
 11509              		.cfi_startproc
 11510              		@ args = 0, pretend = 0, frame = 8
 11511              		@ frame_needed = 1, uses_anonymous_args = 0
 11512 4898 80B5     		push	{r7, lr}
 11513              	.LCFI219:
 11514              		.cfi_def_cfa_offset 8
 11515              		.cfi_offset 7, -8
 11516              		.cfi_offset 14, -4
 11517 489a 82B0     		sub	sp, sp, #8
 11518              	.LCFI220:
 11519              		.cfi_def_cfa_offset 16
 11520 489c 00AF     		add	r7, sp, #0
 11521              	.LCFI221:
 11522              		.cfi_def_cfa_register 7
 11523 489e 7860     		str	r0, [r7, #4]
 11524 48a0 0B46     		mov	r3, r1
 11525 48a2 7B80     		strh	r3, [r7, #2]	@ movhi
2377:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2378:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 11526              		.loc 1 2378 0
 11527 48a4 7A68     		ldr	r2, [r7, #4]
 11528 48a6 284B     		ldr	r3, .L469
 11529 48a8 9A42     		cmp	r2, r3
 11530 48aa 24D0     		beq	.L467
 11531              		.loc 1 2378 0 is_stmt 0 discriminator 1
 11532 48ac 7B68     		ldr	r3, [r7, #4]
 11533 48ae B3F1804F 		cmp	r3, #1073741824
 11534 48b2 20D0     		beq	.L467
 11535              		.loc 1 2378 0 discriminator 2
 11536 48b4 7A68     		ldr	r2, [r7, #4]
 11537 48b6 254B     		ldr	r3, .L469+4
 11538 48b8 9A42     		cmp	r2, r3
 11539 48ba 1CD0     		beq	.L467
 11540              		.loc 1 2378 0 discriminator 3
 11541 48bc 7A68     		ldr	r2, [r7, #4]
 11542 48be 244B     		ldr	r3, .L469+8
 11543 48c0 9A42     		cmp	r2, r3
 11544 48c2 18D0     		beq	.L467
 11545              		.loc 1 2378 0 discriminator 4
 11546 48c4 7A68     		ldr	r2, [r7, #4]
 11547 48c6 234B     		ldr	r3, .L469+12
 11548 48c8 9A42     		cmp	r2, r3
 11549 48ca 14D0     		beq	.L467
 11550              		.loc 1 2378 0 discriminator 5
 11551 48cc 7A68     		ldr	r2, [r7, #4]
 11552 48ce 224B     		ldr	r3, .L469+16
 11553 48d0 9A42     		cmp	r2, r3
 11554 48d2 10D0     		beq	.L467
 11555              		.loc 1 2378 0 discriminator 6
 11556 48d4 7A68     		ldr	r2, [r7, #4]
 11557 48d6 214B     		ldr	r3, .L469+20
 11558 48d8 9A42     		cmp	r2, r3
 11559 48da 0CD0     		beq	.L467
 11560              		.loc 1 2378 0 discriminator 7
 11561 48dc 7A68     		ldr	r2, [r7, #4]
 11562 48de 204B     		ldr	r3, .L469+24
 11563 48e0 9A42     		cmp	r2, r3
 11564 48e2 08D0     		beq	.L467
 11565              		.loc 1 2378 0 discriminator 8
 11566 48e4 7A68     		ldr	r2, [r7, #4]
 11567 48e6 1F4B     		ldr	r3, .L469+28
 11568 48e8 9A42     		cmp	r2, r3
 11569 48ea 04D0     		beq	.L467
 11570              		.loc 1 2378 0 discriminator 9
 11571 48ec 1E48     		ldr	r0, .L469+32
 11572 48ee 40F64A11 		movw	r1, #2378
 11573 48f2 FFF7FEFF 		bl	assert_failed
 11574              	.L467:
2379:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
 11575              		.loc 1 2379 0 is_stmt 1
 11576 48f6 7B88     		ldrh	r3, [r7, #2]
 11577 48f8 002B     		cmp	r3, #0
 11578 48fa 0DD0     		beq	.L468
 11579              		.loc 1 2379 0 is_stmt 0 discriminator 1
 11580 48fc 7B88     		ldrh	r3, [r7, #2]
 11581 48fe 042B     		cmp	r3, #4
 11582 4900 0AD0     		beq	.L468
 11583              		.loc 1 2379 0 discriminator 2
 11584 4902 7B88     		ldrh	r3, [r7, #2]
 11585 4904 082B     		cmp	r3, #8
 11586 4906 07D0     		beq	.L468
 11587              		.loc 1 2379 0 discriminator 3
 11588 4908 7B88     		ldrh	r3, [r7, #2]
 11589 490a 0C2B     		cmp	r3, #12
 11590 490c 04D0     		beq	.L468
 11591              		.loc 1 2379 0 discriminator 4
 11592 490e 1648     		ldr	r0, .L469+32
 11593 4910 40F64B11 		movw	r1, #2379
 11594 4914 FFF7FEFF 		bl	assert_failed
 11595              	.L468:
2380:../SPL/src/stm32f10x_tim.c ****   /* Reset the IC2PSC Bits */
2381:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR1 &= (uint16_t)~((uint16_t)TIM_CCMR1_IC2PSC);
 11596              		.loc 1 2381 0 is_stmt 1
 11597 4918 7B68     		ldr	r3, [r7, #4]
 11598 491a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 11599 491c 9BB2     		uxth	r3, r3
 11600 491e 23F44063 		bic	r3, r3, #3072
 11601 4922 9AB2     		uxth	r2, r3
 11602 4924 7B68     		ldr	r3, [r7, #4]
 11603 4926 1A83     		strh	r2, [r3, #24]	@ movhi
2382:../SPL/src/stm32f10x_tim.c ****   /* Set the IC2PSC value */
2383:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
 11604              		.loc 1 2383 0
 11605 4928 7B68     		ldr	r3, [r7, #4]
 11606 492a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 11607 492c 9AB2     		uxth	r2, r3
 11608 492e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 11609 4930 4FEA0323 		lsl	r3, r3, #8
 11610 4934 9BB2     		uxth	r3, r3
 11611 4936 1343     		orrs	r3, r3, r2
 11612 4938 9AB2     		uxth	r2, r3
 11613 493a 7B68     		ldr	r3, [r7, #4]
 11614 493c 1A83     		strh	r2, [r3, #24]	@ movhi
2384:../SPL/src/stm32f10x_tim.c **** }
 11615              		.loc 1 2384 0
 11616 493e 07F10807 		add	r7, r7, #8
 11617 4942 BD46     		mov	sp, r7
 11618 4944 80BD     		pop	{r7, pc}
 11619              	.L470:
 11620 4946 00BF     		.align	2
 11621              	.L469:
 11622 4948 002C0140 		.word	1073818624
 11623 494c 00040040 		.word	1073742848
 11624 4950 00080040 		.word	1073743872
 11625 4954 000C0040 		.word	1073744896
 11626 4958 00340140 		.word	1073820672
 11627 495c 004C0140 		.word	1073826816
 11628 4960 00180040 		.word	1073747968
 11629 4964 00400140 		.word	1073823744
 11630 4968 00000000 		.word	.LC0
 11631              		.cfi_endproc
 11632              	.LFE102:
 11634              		.align	2
 11635              		.global	TIM_SetIC3Prescaler
 11636              		.thumb
 11637              		.thumb_func
 11639              	TIM_SetIC3Prescaler:
 11640              	.LFB103:
2385:../SPL/src/stm32f10x_tim.c **** 
2386:../SPL/src/stm32f10x_tim.c **** /**
2387:../SPL/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2388:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2389:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2390:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2391:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2392:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2393:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2394:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2395:../SPL/src/stm32f10x_tim.c ****   * @retval None
2396:../SPL/src/stm32f10x_tim.c ****   */
2397:../SPL/src/stm32f10x_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2398:../SPL/src/stm32f10x_tim.c **** {
 11641              		.loc 1 2398 0
 11642              		.cfi_startproc
 11643              		@ args = 0, pretend = 0, frame = 8
 11644              		@ frame_needed = 1, uses_anonymous_args = 0
 11645 496c 80B5     		push	{r7, lr}
 11646              	.LCFI222:
 11647              		.cfi_def_cfa_offset 8
 11648              		.cfi_offset 7, -8
 11649              		.cfi_offset 14, -4
 11650 496e 82B0     		sub	sp, sp, #8
 11651              	.LCFI223:
 11652              		.cfi_def_cfa_offset 16
 11653 4970 00AF     		add	r7, sp, #0
 11654              	.LCFI224:
 11655              		.cfi_def_cfa_register 7
 11656 4972 7860     		str	r0, [r7, #4]
 11657 4974 0B46     		mov	r3, r1
 11658 4976 7B80     		strh	r3, [r7, #2]	@ movhi
2399:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2400:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 11659              		.loc 1 2400 0
 11660 4978 7A68     		ldr	r2, [r7, #4]
 11661 497a 204B     		ldr	r3, .L474
 11662 497c 9A42     		cmp	r2, r3
 11663 497e 18D0     		beq	.L472
 11664              		.loc 1 2400 0 is_stmt 0 discriminator 1
 11665 4980 7B68     		ldr	r3, [r7, #4]
 11666 4982 B3F1804F 		cmp	r3, #1073741824
 11667 4986 14D0     		beq	.L472
 11668              		.loc 1 2400 0 discriminator 2
 11669 4988 7A68     		ldr	r2, [r7, #4]
 11670 498a 1D4B     		ldr	r3, .L474+4
 11671 498c 9A42     		cmp	r2, r3
 11672 498e 10D0     		beq	.L472
 11673              		.loc 1 2400 0 discriminator 3
 11674 4990 7A68     		ldr	r2, [r7, #4]
 11675 4992 1C4B     		ldr	r3, .L474+8
 11676 4994 9A42     		cmp	r2, r3
 11677 4996 0CD0     		beq	.L472
 11678              		.loc 1 2400 0 discriminator 4
 11679 4998 7A68     		ldr	r2, [r7, #4]
 11680 499a 1B4B     		ldr	r3, .L474+12
 11681 499c 9A42     		cmp	r2, r3
 11682 499e 08D0     		beq	.L472
 11683              		.loc 1 2400 0 discriminator 5
 11684 49a0 7A68     		ldr	r2, [r7, #4]
 11685 49a2 1A4B     		ldr	r3, .L474+16
 11686 49a4 9A42     		cmp	r2, r3
 11687 49a6 04D0     		beq	.L472
 11688              		.loc 1 2400 0 discriminator 6
 11689 49a8 1948     		ldr	r0, .L474+20
 11690 49aa 4FF41661 		mov	r1, #2400
 11691 49ae FFF7FEFF 		bl	assert_failed
 11692              	.L472:
2401:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
 11693              		.loc 1 2401 0 is_stmt 1
 11694 49b2 7B88     		ldrh	r3, [r7, #2]
 11695 49b4 002B     		cmp	r3, #0
 11696 49b6 0DD0     		beq	.L473
 11697              		.loc 1 2401 0 is_stmt 0 discriminator 1
 11698 49b8 7B88     		ldrh	r3, [r7, #2]
 11699 49ba 042B     		cmp	r3, #4
 11700 49bc 0AD0     		beq	.L473
 11701              		.loc 1 2401 0 discriminator 2
 11702 49be 7B88     		ldrh	r3, [r7, #2]
 11703 49c0 082B     		cmp	r3, #8
 11704 49c2 07D0     		beq	.L473
 11705              		.loc 1 2401 0 discriminator 3
 11706 49c4 7B88     		ldrh	r3, [r7, #2]
 11707 49c6 0C2B     		cmp	r3, #12
 11708 49c8 04D0     		beq	.L473
 11709              		.loc 1 2401 0 discriminator 4
 11710 49ca 1148     		ldr	r0, .L474+20
 11711 49cc 40F66111 		movw	r1, #2401
 11712 49d0 FFF7FEFF 		bl	assert_failed
 11713              	.L473:
2402:../SPL/src/stm32f10x_tim.c ****   /* Reset the IC3PSC Bits */
2403:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR2 &= (uint16_t)~((uint16_t)TIM_CCMR2_IC3PSC);
 11714              		.loc 1 2403 0 is_stmt 1
 11715 49d4 7B68     		ldr	r3, [r7, #4]
 11716 49d6 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 11717 49d8 9BB2     		uxth	r3, r3
 11718 49da 23F00C03 		bic	r3, r3, #12
 11719 49de 9AB2     		uxth	r2, r3
 11720 49e0 7B68     		ldr	r3, [r7, #4]
 11721 49e2 9A83     		strh	r2, [r3, #28]	@ movhi
2404:../SPL/src/stm32f10x_tim.c ****   /* Set the IC3PSC value */
2405:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
 11722              		.loc 1 2405 0
 11723 49e4 7B68     		ldr	r3, [r7, #4]
 11724 49e6 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 11725 49e8 9AB2     		uxth	r2, r3
 11726 49ea 7B88     		ldrh	r3, [r7, #2]	@ movhi
 11727 49ec 1343     		orrs	r3, r3, r2
 11728 49ee 9AB2     		uxth	r2, r3
 11729 49f0 7B68     		ldr	r3, [r7, #4]
 11730 49f2 9A83     		strh	r2, [r3, #28]	@ movhi
2406:../SPL/src/stm32f10x_tim.c **** }
 11731              		.loc 1 2406 0
 11732 49f4 07F10807 		add	r7, r7, #8
 11733 49f8 BD46     		mov	sp, r7
 11734 49fa 80BD     		pop	{r7, pc}
 11735              	.L475:
 11736              		.align	2
 11737              	.L474:
 11738 49fc 002C0140 		.word	1073818624
 11739 4a00 00040040 		.word	1073742848
 11740 4a04 00080040 		.word	1073743872
 11741 4a08 000C0040 		.word	1073744896
 11742 4a0c 00340140 		.word	1073820672
 11743 4a10 00000000 		.word	.LC0
 11744              		.cfi_endproc
 11745              	.LFE103:
 11747              		.align	2
 11748              		.global	TIM_SetIC4Prescaler
 11749              		.thumb
 11750              		.thumb_func
 11752              	TIM_SetIC4Prescaler:
 11753              	.LFB104:
2407:../SPL/src/stm32f10x_tim.c **** 
2408:../SPL/src/stm32f10x_tim.c **** /**
2409:../SPL/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2410:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2411:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2412:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2413:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2414:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2415:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2416:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2417:../SPL/src/stm32f10x_tim.c ****   * @retval None
2418:../SPL/src/stm32f10x_tim.c ****   */
2419:../SPL/src/stm32f10x_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2420:../SPL/src/stm32f10x_tim.c **** {  
 11754              		.loc 1 2420 0
 11755              		.cfi_startproc
 11756              		@ args = 0, pretend = 0, frame = 8
 11757              		@ frame_needed = 1, uses_anonymous_args = 0
 11758 4a14 80B5     		push	{r7, lr}
 11759              	.LCFI225:
 11760              		.cfi_def_cfa_offset 8
 11761              		.cfi_offset 7, -8
 11762              		.cfi_offset 14, -4
 11763 4a16 82B0     		sub	sp, sp, #8
 11764              	.LCFI226:
 11765              		.cfi_def_cfa_offset 16
 11766 4a18 00AF     		add	r7, sp, #0
 11767              	.LCFI227:
 11768              		.cfi_def_cfa_register 7
 11769 4a1a 7860     		str	r0, [r7, #4]
 11770 4a1c 0B46     		mov	r3, r1
 11771 4a1e 7B80     		strh	r3, [r7, #2]	@ movhi
2421:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2422:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 11772              		.loc 1 2422 0
 11773 4a20 7A68     		ldr	r2, [r7, #4]
 11774 4a22 224B     		ldr	r3, .L479
 11775 4a24 9A42     		cmp	r2, r3
 11776 4a26 18D0     		beq	.L477
 11777              		.loc 1 2422 0 is_stmt 0 discriminator 1
 11778 4a28 7B68     		ldr	r3, [r7, #4]
 11779 4a2a B3F1804F 		cmp	r3, #1073741824
 11780 4a2e 14D0     		beq	.L477
 11781              		.loc 1 2422 0 discriminator 2
 11782 4a30 7A68     		ldr	r2, [r7, #4]
 11783 4a32 1F4B     		ldr	r3, .L479+4
 11784 4a34 9A42     		cmp	r2, r3
 11785 4a36 10D0     		beq	.L477
 11786              		.loc 1 2422 0 discriminator 3
 11787 4a38 7A68     		ldr	r2, [r7, #4]
 11788 4a3a 1E4B     		ldr	r3, .L479+8
 11789 4a3c 9A42     		cmp	r2, r3
 11790 4a3e 0CD0     		beq	.L477
 11791              		.loc 1 2422 0 discriminator 4
 11792 4a40 7A68     		ldr	r2, [r7, #4]
 11793 4a42 1D4B     		ldr	r3, .L479+12
 11794 4a44 9A42     		cmp	r2, r3
 11795 4a46 08D0     		beq	.L477
 11796              		.loc 1 2422 0 discriminator 5
 11797 4a48 7A68     		ldr	r2, [r7, #4]
 11798 4a4a 1C4B     		ldr	r3, .L479+16
 11799 4a4c 9A42     		cmp	r2, r3
 11800 4a4e 04D0     		beq	.L477
 11801              		.loc 1 2422 0 discriminator 6
 11802 4a50 1B48     		ldr	r0, .L479+20
 11803 4a52 40F67611 		movw	r1, #2422
 11804 4a56 FFF7FEFF 		bl	assert_failed
 11805              	.L477:
2423:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
 11806              		.loc 1 2423 0 is_stmt 1
 11807 4a5a 7B88     		ldrh	r3, [r7, #2]
 11808 4a5c 002B     		cmp	r3, #0
 11809 4a5e 0DD0     		beq	.L478
 11810              		.loc 1 2423 0 is_stmt 0 discriminator 1
 11811 4a60 7B88     		ldrh	r3, [r7, #2]
 11812 4a62 042B     		cmp	r3, #4
 11813 4a64 0AD0     		beq	.L478
 11814              		.loc 1 2423 0 discriminator 2
 11815 4a66 7B88     		ldrh	r3, [r7, #2]
 11816 4a68 082B     		cmp	r3, #8
 11817 4a6a 07D0     		beq	.L478
 11818              		.loc 1 2423 0 discriminator 3
 11819 4a6c 7B88     		ldrh	r3, [r7, #2]
 11820 4a6e 0C2B     		cmp	r3, #12
 11821 4a70 04D0     		beq	.L478
 11822              		.loc 1 2423 0 discriminator 4
 11823 4a72 1348     		ldr	r0, .L479+20
 11824 4a74 40F67711 		movw	r1, #2423
 11825 4a78 FFF7FEFF 		bl	assert_failed
 11826              	.L478:
2424:../SPL/src/stm32f10x_tim.c ****   /* Reset the IC4PSC Bits */
2425:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR2 &= (uint16_t)~((uint16_t)TIM_CCMR2_IC4PSC);
 11827              		.loc 1 2425 0 is_stmt 1
 11828 4a7c 7B68     		ldr	r3, [r7, #4]
 11829 4a7e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 11830 4a80 9BB2     		uxth	r3, r3
 11831 4a82 23F44063 		bic	r3, r3, #3072
 11832 4a86 9AB2     		uxth	r2, r3
 11833 4a88 7B68     		ldr	r3, [r7, #4]
 11834 4a8a 9A83     		strh	r2, [r3, #28]	@ movhi
2426:../SPL/src/stm32f10x_tim.c ****   /* Set the IC4PSC value */
2427:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
 11835              		.loc 1 2427 0
 11836 4a8c 7B68     		ldr	r3, [r7, #4]
 11837 4a8e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 11838 4a90 9AB2     		uxth	r2, r3
 11839 4a92 7B88     		ldrh	r3, [r7, #2]	@ movhi
 11840 4a94 4FEA0323 		lsl	r3, r3, #8
 11841 4a98 9BB2     		uxth	r3, r3
 11842 4a9a 1343     		orrs	r3, r3, r2
 11843 4a9c 9AB2     		uxth	r2, r3
 11844 4a9e 7B68     		ldr	r3, [r7, #4]
 11845 4aa0 9A83     		strh	r2, [r3, #28]	@ movhi
2428:../SPL/src/stm32f10x_tim.c **** }
 11846              		.loc 1 2428 0
 11847 4aa2 07F10807 		add	r7, r7, #8
 11848 4aa6 BD46     		mov	sp, r7
 11849 4aa8 80BD     		pop	{r7, pc}
 11850              	.L480:
 11851 4aaa 00BF     		.align	2
 11852              	.L479:
 11853 4aac 002C0140 		.word	1073818624
 11854 4ab0 00040040 		.word	1073742848
 11855 4ab4 00080040 		.word	1073743872
 11856 4ab8 000C0040 		.word	1073744896
 11857 4abc 00340140 		.word	1073820672
 11858 4ac0 00000000 		.word	.LC0
 11859              		.cfi_endproc
 11860              	.LFE104:
 11862              		.align	2
 11863              		.global	TIM_SetClockDivision
 11864              		.thumb
 11865              		.thumb_func
 11867              	TIM_SetClockDivision:
 11868              	.LFB105:
2429:../SPL/src/stm32f10x_tim.c **** 
2430:../SPL/src/stm32f10x_tim.c **** /**
2431:../SPL/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Clock Division value.
2432:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select 
2433:../SPL/src/stm32f10x_tim.c ****   *   the TIM peripheral.
2434:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
2435:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following value:
2436:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_CKD_DIV1: TDTS = Tck_tim
2437:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
2438:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
2439:../SPL/src/stm32f10x_tim.c ****   * @retval None
2440:../SPL/src/stm32f10x_tim.c ****   */
2441:../SPL/src/stm32f10x_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
2442:../SPL/src/stm32f10x_tim.c **** {
 11869              		.loc 1 2442 0
 11870              		.cfi_startproc
 11871              		@ args = 0, pretend = 0, frame = 8
 11872              		@ frame_needed = 1, uses_anonymous_args = 0
 11873 4ac4 80B5     		push	{r7, lr}
 11874              	.LCFI228:
 11875              		.cfi_def_cfa_offset 8
 11876              		.cfi_offset 7, -8
 11877              		.cfi_offset 14, -4
 11878 4ac6 82B0     		sub	sp, sp, #8
 11879              	.LCFI229:
 11880              		.cfi_def_cfa_offset 16
 11881 4ac8 00AF     		add	r7, sp, #0
 11882              	.LCFI230:
 11883              		.cfi_def_cfa_register 7
 11884 4aca 7860     		str	r0, [r7, #4]
 11885 4acc 0B46     		mov	r3, r1
 11886 4ace 7B80     		strh	r3, [r7, #2]	@ movhi
2443:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2444:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 11887              		.loc 1 2444 0
 11888 4ad0 7A68     		ldr	r2, [r7, #4]
 11889 4ad2 324B     		ldr	r3, .L484
 11890 4ad4 9A42     		cmp	r2, r3
 11891 4ad6 3CD0     		beq	.L482
 11892              		.loc 1 2444 0 is_stmt 0 discriminator 1
 11893 4ad8 7B68     		ldr	r3, [r7, #4]
 11894 4ada B3F1804F 		cmp	r3, #1073741824
 11895 4ade 38D0     		beq	.L482
 11896              		.loc 1 2444 0 discriminator 2
 11897 4ae0 7A68     		ldr	r2, [r7, #4]
 11898 4ae2 2F4B     		ldr	r3, .L484+4
 11899 4ae4 9A42     		cmp	r2, r3
 11900 4ae6 34D0     		beq	.L482
 11901              		.loc 1 2444 0 discriminator 3
 11902 4ae8 7A68     		ldr	r2, [r7, #4]
 11903 4aea 2E4B     		ldr	r3, .L484+8
 11904 4aec 9A42     		cmp	r2, r3
 11905 4aee 30D0     		beq	.L482
 11906              		.loc 1 2444 0 discriminator 4
 11907 4af0 7A68     		ldr	r2, [r7, #4]
 11908 4af2 2D4B     		ldr	r3, .L484+12
 11909 4af4 9A42     		cmp	r2, r3
 11910 4af6 2CD0     		beq	.L482
 11911              		.loc 1 2444 0 discriminator 5
 11912 4af8 7A68     		ldr	r2, [r7, #4]
 11913 4afa 2C4B     		ldr	r3, .L484+16
 11914 4afc 9A42     		cmp	r2, r3
 11915 4afe 28D0     		beq	.L482
 11916              		.loc 1 2444 0 discriminator 6
 11917 4b00 7A68     		ldr	r2, [r7, #4]
 11918 4b02 2B4B     		ldr	r3, .L484+20
 11919 4b04 9A42     		cmp	r2, r3
 11920 4b06 24D0     		beq	.L482
 11921              		.loc 1 2444 0 discriminator 7
 11922 4b08 7A68     		ldr	r2, [r7, #4]
 11923 4b0a 2A4B     		ldr	r3, .L484+24
 11924 4b0c 9A42     		cmp	r2, r3
 11925 4b0e 20D0     		beq	.L482
 11926              		.loc 1 2444 0 discriminator 8
 11927 4b10 7A68     		ldr	r2, [r7, #4]
 11928 4b12 294B     		ldr	r3, .L484+28
 11929 4b14 9A42     		cmp	r2, r3
 11930 4b16 1CD0     		beq	.L482
 11931              		.loc 1 2444 0 discriminator 9
 11932 4b18 7A68     		ldr	r2, [r7, #4]
 11933 4b1a 284B     		ldr	r3, .L484+32
 11934 4b1c 9A42     		cmp	r2, r3
 11935 4b1e 18D0     		beq	.L482
 11936              		.loc 1 2444 0 discriminator 10
 11937 4b20 7A68     		ldr	r2, [r7, #4]
 11938 4b22 274B     		ldr	r3, .L484+36
 11939 4b24 9A42     		cmp	r2, r3
 11940 4b26 14D0     		beq	.L482
 11941              		.loc 1 2444 0 discriminator 11
 11942 4b28 7A68     		ldr	r2, [r7, #4]
 11943 4b2a 264B     		ldr	r3, .L484+40
 11944 4b2c 9A42     		cmp	r2, r3
 11945 4b2e 10D0     		beq	.L482
 11946              		.loc 1 2444 0 discriminator 12
 11947 4b30 7A68     		ldr	r2, [r7, #4]
 11948 4b32 254B     		ldr	r3, .L484+44
 11949 4b34 9A42     		cmp	r2, r3
 11950 4b36 0CD0     		beq	.L482
 11951              		.loc 1 2444 0 discriminator 13
 11952 4b38 7A68     		ldr	r2, [r7, #4]
 11953 4b3a 244B     		ldr	r3, .L484+48
 11954 4b3c 9A42     		cmp	r2, r3
 11955 4b3e 08D0     		beq	.L482
 11956              		.loc 1 2444 0 discriminator 14
 11957 4b40 7A68     		ldr	r2, [r7, #4]
 11958 4b42 234B     		ldr	r3, .L484+52
 11959 4b44 9A42     		cmp	r2, r3
 11960 4b46 04D0     		beq	.L482
 11961              		.loc 1 2444 0 discriminator 15
 11962 4b48 2248     		ldr	r0, .L484+56
 11963 4b4a 40F68C11 		movw	r1, #2444
 11964 4b4e FFF7FEFF 		bl	assert_failed
 11965              	.L482:
2445:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
 11966              		.loc 1 2445 0 is_stmt 1
 11967 4b52 7B88     		ldrh	r3, [r7, #2]
 11968 4b54 002B     		cmp	r3, #0
 11969 4b56 0CD0     		beq	.L483
 11970              		.loc 1 2445 0 is_stmt 0 discriminator 1
 11971 4b58 7B88     		ldrh	r3, [r7, #2]
 11972 4b5a B3F5807F 		cmp	r3, #256
 11973 4b5e 08D0     		beq	.L483
 11974              		.loc 1 2445 0 discriminator 2
 11975 4b60 7B88     		ldrh	r3, [r7, #2]
 11976 4b62 B3F5007F 		cmp	r3, #512
 11977 4b66 04D0     		beq	.L483
 11978              		.loc 1 2445 0 discriminator 3
 11979 4b68 1A48     		ldr	r0, .L484+56
 11980 4b6a 40F68D11 		movw	r1, #2445
 11981 4b6e FFF7FEFF 		bl	assert_failed
 11982              	.L483:
2446:../SPL/src/stm32f10x_tim.c ****   /* Reset the CKD Bits */
2447:../SPL/src/stm32f10x_tim.c ****   TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_CKD);
 11983              		.loc 1 2447 0 is_stmt 1
 11984 4b72 7B68     		ldr	r3, [r7, #4]
 11985 4b74 1B88     		ldrh	r3, [r3, #0]	@ movhi
 11986 4b76 9BB2     		uxth	r3, r3
 11987 4b78 23F44073 		bic	r3, r3, #768
 11988 4b7c 9AB2     		uxth	r2, r3
 11989 4b7e 7B68     		ldr	r3, [r7, #4]
 11990 4b80 1A80     		strh	r2, [r3, #0]	@ movhi
2448:../SPL/src/stm32f10x_tim.c ****   /* Set the CKD value */
2449:../SPL/src/stm32f10x_tim.c ****   TIMx->CR1 |= TIM_CKD;
 11991              		.loc 1 2449 0
 11992 4b82 7B68     		ldr	r3, [r7, #4]
 11993 4b84 1B88     		ldrh	r3, [r3, #0]	@ movhi
 11994 4b86 9AB2     		uxth	r2, r3
 11995 4b88 7B88     		ldrh	r3, [r7, #2]	@ movhi
 11996 4b8a 1343     		orrs	r3, r3, r2
 11997 4b8c 9AB2     		uxth	r2, r3
 11998 4b8e 7B68     		ldr	r3, [r7, #4]
 11999 4b90 1A80     		strh	r2, [r3, #0]	@ movhi
2450:../SPL/src/stm32f10x_tim.c **** }
 12000              		.loc 1 2450 0
 12001 4b92 07F10807 		add	r7, r7, #8
 12002 4b96 BD46     		mov	sp, r7
 12003 4b98 80BD     		pop	{r7, pc}
 12004              	.L485:
 12005 4b9a 00BF     		.align	2
 12006              	.L484:
 12007 4b9c 002C0140 		.word	1073818624
 12008 4ba0 00040040 		.word	1073742848
 12009 4ba4 00080040 		.word	1073743872
 12010 4ba8 000C0040 		.word	1073744896
 12011 4bac 00340140 		.word	1073820672
 12012 4bb0 004C0140 		.word	1073826816
 12013 4bb4 00500140 		.word	1073827840
 12014 4bb8 00540140 		.word	1073828864
 12015 4bbc 00180040 		.word	1073747968
 12016 4bc0 001C0040 		.word	1073748992
 12017 4bc4 00200040 		.word	1073750016
 12018 4bc8 00400140 		.word	1073823744
 12019 4bcc 00440140 		.word	1073824768
 12020 4bd0 00480140 		.word	1073825792
 12021 4bd4 00000000 		.word	.LC0
 12022              		.cfi_endproc
 12023              	.LFE105:
 12025              		.align	2
 12026              		.global	TIM_GetCapture1
 12027              		.thumb
 12028              		.thumb_func
 12030              	TIM_GetCapture1:
 12031              	.LFB106:
2451:../SPL/src/stm32f10x_tim.c **** 
2452:../SPL/src/stm32f10x_tim.c **** /**
2453:../SPL/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2454:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2455:../SPL/src/stm32f10x_tim.c ****   * @retval Capture Compare 1 Register value.
2456:../SPL/src/stm32f10x_tim.c ****   */
2457:../SPL/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2458:../SPL/src/stm32f10x_tim.c **** {
 12032              		.loc 1 2458 0
 12033              		.cfi_startproc
 12034              		@ args = 0, pretend = 0, frame = 8
 12035              		@ frame_needed = 1, uses_anonymous_args = 0
 12036 4bd8 80B5     		push	{r7, lr}
 12037              	.LCFI231:
 12038              		.cfi_def_cfa_offset 8
 12039              		.cfi_offset 7, -8
 12040              		.cfi_offset 14, -4
 12041 4bda 82B0     		sub	sp, sp, #8
 12042              	.LCFI232:
 12043              		.cfi_def_cfa_offset 16
 12044 4bdc 00AF     		add	r7, sp, #0
 12045              	.LCFI233:
 12046              		.cfi_def_cfa_register 7
 12047 4bde 7860     		str	r0, [r7, #4]
2459:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2460:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 12048              		.loc 1 2460 0
 12049 4be0 7A68     		ldr	r2, [r7, #4]
 12050 4be2 244B     		ldr	r3, .L489
 12051 4be4 9A42     		cmp	r2, r3
 12052 4be6 3CD0     		beq	.L487
 12053              		.loc 1 2460 0 is_stmt 0 discriminator 1
 12054 4be8 7B68     		ldr	r3, [r7, #4]
 12055 4bea B3F1804F 		cmp	r3, #1073741824
 12056 4bee 38D0     		beq	.L487
 12057              		.loc 1 2460 0 discriminator 2
 12058 4bf0 7A68     		ldr	r2, [r7, #4]
 12059 4bf2 214B     		ldr	r3, .L489+4
 12060 4bf4 9A42     		cmp	r2, r3
 12061 4bf6 34D0     		beq	.L487
 12062              		.loc 1 2460 0 discriminator 3
 12063 4bf8 7A68     		ldr	r2, [r7, #4]
 12064 4bfa 204B     		ldr	r3, .L489+8
 12065 4bfc 9A42     		cmp	r2, r3
 12066 4bfe 30D0     		beq	.L487
 12067              		.loc 1 2460 0 discriminator 4
 12068 4c00 7A68     		ldr	r2, [r7, #4]
 12069 4c02 1F4B     		ldr	r3, .L489+12
 12070 4c04 9A42     		cmp	r2, r3
 12071 4c06 2CD0     		beq	.L487
 12072              		.loc 1 2460 0 discriminator 5
 12073 4c08 7A68     		ldr	r2, [r7, #4]
 12074 4c0a 1E4B     		ldr	r3, .L489+16
 12075 4c0c 9A42     		cmp	r2, r3
 12076 4c0e 28D0     		beq	.L487
 12077              		.loc 1 2460 0 discriminator 6
 12078 4c10 7A68     		ldr	r2, [r7, #4]
 12079 4c12 1D4B     		ldr	r3, .L489+20
 12080 4c14 9A42     		cmp	r2, r3
 12081 4c16 24D0     		beq	.L487
 12082              		.loc 1 2460 0 discriminator 7
 12083 4c18 7A68     		ldr	r2, [r7, #4]
 12084 4c1a 1C4B     		ldr	r3, .L489+24
 12085 4c1c 9A42     		cmp	r2, r3
 12086 4c1e 20D0     		beq	.L487
 12087              		.loc 1 2460 0 discriminator 8
 12088 4c20 7A68     		ldr	r2, [r7, #4]
 12089 4c22 1B4B     		ldr	r3, .L489+28
 12090 4c24 9A42     		cmp	r2, r3
 12091 4c26 1CD0     		beq	.L487
 12092              		.loc 1 2460 0 discriminator 9
 12093 4c28 7A68     		ldr	r2, [r7, #4]
 12094 4c2a 1A4B     		ldr	r3, .L489+32
 12095 4c2c 9A42     		cmp	r2, r3
 12096 4c2e 18D0     		beq	.L487
 12097              		.loc 1 2460 0 discriminator 10
 12098 4c30 7A68     		ldr	r2, [r7, #4]
 12099 4c32 194B     		ldr	r3, .L489+36
 12100 4c34 9A42     		cmp	r2, r3
 12101 4c36 14D0     		beq	.L487
 12102              		.loc 1 2460 0 discriminator 11
 12103 4c38 7A68     		ldr	r2, [r7, #4]
 12104 4c3a 184B     		ldr	r3, .L489+40
 12105 4c3c 9A42     		cmp	r2, r3
 12106 4c3e 10D0     		beq	.L487
 12107              		.loc 1 2460 0 discriminator 12
 12108 4c40 7A68     		ldr	r2, [r7, #4]
 12109 4c42 174B     		ldr	r3, .L489+44
 12110 4c44 9A42     		cmp	r2, r3
 12111 4c46 0CD0     		beq	.L487
 12112              		.loc 1 2460 0 discriminator 13
 12113 4c48 7A68     		ldr	r2, [r7, #4]
 12114 4c4a 164B     		ldr	r3, .L489+48
 12115 4c4c 9A42     		cmp	r2, r3
 12116 4c4e 08D0     		beq	.L487
 12117              		.loc 1 2460 0 discriminator 14
 12118 4c50 7A68     		ldr	r2, [r7, #4]
 12119 4c52 154B     		ldr	r3, .L489+52
 12120 4c54 9A42     		cmp	r2, r3
 12121 4c56 04D0     		beq	.L487
 12122              		.loc 1 2460 0 discriminator 15
 12123 4c58 1448     		ldr	r0, .L489+56
 12124 4c5a 40F69C11 		movw	r1, #2460
 12125 4c5e FFF7FEFF 		bl	assert_failed
 12126              	.L487:
2461:../SPL/src/stm32f10x_tim.c ****   /* Get the Capture 1 Register value */
2462:../SPL/src/stm32f10x_tim.c ****   return TIMx->CCR1;
 12127              		.loc 1 2462 0 is_stmt 1
 12128 4c62 7B68     		ldr	r3, [r7, #4]
 12129 4c64 9B8E     		ldrh	r3, [r3, #52]	@ movhi
 12130 4c66 9BB2     		uxth	r3, r3
2463:../SPL/src/stm32f10x_tim.c **** }
 12131              		.loc 1 2463 0
 12132 4c68 1846     		mov	r0, r3
 12133 4c6a 07F10807 		add	r7, r7, #8
 12134 4c6e BD46     		mov	sp, r7
 12135 4c70 80BD     		pop	{r7, pc}
 12136              	.L490:
 12137 4c72 00BF     		.align	2
 12138              	.L489:
 12139 4c74 002C0140 		.word	1073818624
 12140 4c78 00040040 		.word	1073742848
 12141 4c7c 00080040 		.word	1073743872
 12142 4c80 000C0040 		.word	1073744896
 12143 4c84 00340140 		.word	1073820672
 12144 4c88 004C0140 		.word	1073826816
 12145 4c8c 00500140 		.word	1073827840
 12146 4c90 00540140 		.word	1073828864
 12147 4c94 00180040 		.word	1073747968
 12148 4c98 001C0040 		.word	1073748992
 12149 4c9c 00200040 		.word	1073750016
 12150 4ca0 00400140 		.word	1073823744
 12151 4ca4 00440140 		.word	1073824768
 12152 4ca8 00480140 		.word	1073825792
 12153 4cac 00000000 		.word	.LC0
 12154              		.cfi_endproc
 12155              	.LFE106:
 12157              		.align	2
 12158              		.global	TIM_GetCapture2
 12159              		.thumb
 12160              		.thumb_func
 12162              	TIM_GetCapture2:
 12163              	.LFB107:
2464:../SPL/src/stm32f10x_tim.c **** 
2465:../SPL/src/stm32f10x_tim.c **** /**
2466:../SPL/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2467:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2468:../SPL/src/stm32f10x_tim.c ****   * @retval Capture Compare 2 Register value.
2469:../SPL/src/stm32f10x_tim.c ****   */
2470:../SPL/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2471:../SPL/src/stm32f10x_tim.c **** {
 12164              		.loc 1 2471 0
 12165              		.cfi_startproc
 12166              		@ args = 0, pretend = 0, frame = 8
 12167              		@ frame_needed = 1, uses_anonymous_args = 0
 12168 4cb0 80B5     		push	{r7, lr}
 12169              	.LCFI234:
 12170              		.cfi_def_cfa_offset 8
 12171              		.cfi_offset 7, -8
 12172              		.cfi_offset 14, -4
 12173 4cb2 82B0     		sub	sp, sp, #8
 12174              	.LCFI235:
 12175              		.cfi_def_cfa_offset 16
 12176 4cb4 00AF     		add	r7, sp, #0
 12177              	.LCFI236:
 12178              		.cfi_def_cfa_register 7
 12179 4cb6 7860     		str	r0, [r7, #4]
2472:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2473:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 12180              		.loc 1 2473 0
 12181 4cb8 7A68     		ldr	r2, [r7, #4]
 12182 4cba 184B     		ldr	r3, .L494
 12183 4cbc 9A42     		cmp	r2, r3
 12184 4cbe 24D0     		beq	.L492
 12185              		.loc 1 2473 0 is_stmt 0 discriminator 1
 12186 4cc0 7B68     		ldr	r3, [r7, #4]
 12187 4cc2 B3F1804F 		cmp	r3, #1073741824
 12188 4cc6 20D0     		beq	.L492
 12189              		.loc 1 2473 0 discriminator 2
 12190 4cc8 7A68     		ldr	r2, [r7, #4]
 12191 4cca 154B     		ldr	r3, .L494+4
 12192 4ccc 9A42     		cmp	r2, r3
 12193 4cce 1CD0     		beq	.L492
 12194              		.loc 1 2473 0 discriminator 3
 12195 4cd0 7A68     		ldr	r2, [r7, #4]
 12196 4cd2 144B     		ldr	r3, .L494+8
 12197 4cd4 9A42     		cmp	r2, r3
 12198 4cd6 18D0     		beq	.L492
 12199              		.loc 1 2473 0 discriminator 4
 12200 4cd8 7A68     		ldr	r2, [r7, #4]
 12201 4cda 134B     		ldr	r3, .L494+12
 12202 4cdc 9A42     		cmp	r2, r3
 12203 4cde 14D0     		beq	.L492
 12204              		.loc 1 2473 0 discriminator 5
 12205 4ce0 7A68     		ldr	r2, [r7, #4]
 12206 4ce2 124B     		ldr	r3, .L494+16
 12207 4ce4 9A42     		cmp	r2, r3
 12208 4ce6 10D0     		beq	.L492
 12209              		.loc 1 2473 0 discriminator 6
 12210 4ce8 7A68     		ldr	r2, [r7, #4]
 12211 4cea 114B     		ldr	r3, .L494+20
 12212 4cec 9A42     		cmp	r2, r3
 12213 4cee 0CD0     		beq	.L492
 12214              		.loc 1 2473 0 discriminator 7
 12215 4cf0 7A68     		ldr	r2, [r7, #4]
 12216 4cf2 104B     		ldr	r3, .L494+24
 12217 4cf4 9A42     		cmp	r2, r3
 12218 4cf6 08D0     		beq	.L492
 12219              		.loc 1 2473 0 discriminator 8
 12220 4cf8 7A68     		ldr	r2, [r7, #4]
 12221 4cfa 0F4B     		ldr	r3, .L494+28
 12222 4cfc 9A42     		cmp	r2, r3
 12223 4cfe 04D0     		beq	.L492
 12224              		.loc 1 2473 0 discriminator 9
 12225 4d00 0E48     		ldr	r0, .L494+32
 12226 4d02 40F6A911 		movw	r1, #2473
 12227 4d06 FFF7FEFF 		bl	assert_failed
 12228              	.L492:
2474:../SPL/src/stm32f10x_tim.c ****   /* Get the Capture 2 Register value */
2475:../SPL/src/stm32f10x_tim.c ****   return TIMx->CCR2;
 12229              		.loc 1 2475 0 is_stmt 1
 12230 4d0a 7B68     		ldr	r3, [r7, #4]
 12231 4d0c 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 12232 4d0e 9BB2     		uxth	r3, r3
2476:../SPL/src/stm32f10x_tim.c **** }
 12233              		.loc 1 2476 0
 12234 4d10 1846     		mov	r0, r3
 12235 4d12 07F10807 		add	r7, r7, #8
 12236 4d16 BD46     		mov	sp, r7
 12237 4d18 80BD     		pop	{r7, pc}
 12238              	.L495:
 12239 4d1a 00BF     		.align	2
 12240              	.L494:
 12241 4d1c 002C0140 		.word	1073818624
 12242 4d20 00040040 		.word	1073742848
 12243 4d24 00080040 		.word	1073743872
 12244 4d28 000C0040 		.word	1073744896
 12245 4d2c 00340140 		.word	1073820672
 12246 4d30 004C0140 		.word	1073826816
 12247 4d34 00180040 		.word	1073747968
 12248 4d38 00400140 		.word	1073823744
 12249 4d3c 00000000 		.word	.LC0
 12250              		.cfi_endproc
 12251              	.LFE107:
 12253              		.align	2
 12254              		.global	TIM_GetCapture3
 12255              		.thumb
 12256              		.thumb_func
 12258              	TIM_GetCapture3:
 12259              	.LFB108:
2477:../SPL/src/stm32f10x_tim.c **** 
2478:../SPL/src/stm32f10x_tim.c **** /**
2479:../SPL/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2480:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2481:../SPL/src/stm32f10x_tim.c ****   * @retval Capture Compare 3 Register value.
2482:../SPL/src/stm32f10x_tim.c ****   */
2483:../SPL/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2484:../SPL/src/stm32f10x_tim.c **** {
 12260              		.loc 1 2484 0
 12261              		.cfi_startproc
 12262              		@ args = 0, pretend = 0, frame = 8
 12263              		@ frame_needed = 1, uses_anonymous_args = 0
 12264 4d40 80B5     		push	{r7, lr}
 12265              	.LCFI237:
 12266              		.cfi_def_cfa_offset 8
 12267              		.cfi_offset 7, -8
 12268              		.cfi_offset 14, -4
 12269 4d42 82B0     		sub	sp, sp, #8
 12270              	.LCFI238:
 12271              		.cfi_def_cfa_offset 16
 12272 4d44 00AF     		add	r7, sp, #0
 12273              	.LCFI239:
 12274              		.cfi_def_cfa_register 7
 12275 4d46 7860     		str	r0, [r7, #4]
2485:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2486:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 12276              		.loc 1 2486 0
 12277 4d48 7A68     		ldr	r2, [r7, #4]
 12278 4d4a 124B     		ldr	r3, .L499
 12279 4d4c 9A42     		cmp	r2, r3
 12280 4d4e 18D0     		beq	.L497
 12281              		.loc 1 2486 0 is_stmt 0 discriminator 1
 12282 4d50 7B68     		ldr	r3, [r7, #4]
 12283 4d52 B3F1804F 		cmp	r3, #1073741824
 12284 4d56 14D0     		beq	.L497
 12285              		.loc 1 2486 0 discriminator 2
 12286 4d58 7A68     		ldr	r2, [r7, #4]
 12287 4d5a 0F4B     		ldr	r3, .L499+4
 12288 4d5c 9A42     		cmp	r2, r3
 12289 4d5e 10D0     		beq	.L497
 12290              		.loc 1 2486 0 discriminator 3
 12291 4d60 7A68     		ldr	r2, [r7, #4]
 12292 4d62 0E4B     		ldr	r3, .L499+8
 12293 4d64 9A42     		cmp	r2, r3
 12294 4d66 0CD0     		beq	.L497
 12295              		.loc 1 2486 0 discriminator 4
 12296 4d68 7A68     		ldr	r2, [r7, #4]
 12297 4d6a 0D4B     		ldr	r3, .L499+12
 12298 4d6c 9A42     		cmp	r2, r3
 12299 4d6e 08D0     		beq	.L497
 12300              		.loc 1 2486 0 discriminator 5
 12301 4d70 7A68     		ldr	r2, [r7, #4]
 12302 4d72 0C4B     		ldr	r3, .L499+16
 12303 4d74 9A42     		cmp	r2, r3
 12304 4d76 04D0     		beq	.L497
 12305              		.loc 1 2486 0 discriminator 6
 12306 4d78 0B48     		ldr	r0, .L499+20
 12307 4d7a 40F6B611 		movw	r1, #2486
 12308 4d7e FFF7FEFF 		bl	assert_failed
 12309              	.L497:
2487:../SPL/src/stm32f10x_tim.c ****   /* Get the Capture 3 Register value */
2488:../SPL/src/stm32f10x_tim.c ****   return TIMx->CCR3;
 12310              		.loc 1 2488 0 is_stmt 1
 12311 4d82 7B68     		ldr	r3, [r7, #4]
 12312 4d84 9B8F     		ldrh	r3, [r3, #60]	@ movhi
 12313 4d86 9BB2     		uxth	r3, r3
2489:../SPL/src/stm32f10x_tim.c **** }
 12314              		.loc 1 2489 0
 12315 4d88 1846     		mov	r0, r3
 12316 4d8a 07F10807 		add	r7, r7, #8
 12317 4d8e BD46     		mov	sp, r7
 12318 4d90 80BD     		pop	{r7, pc}
 12319              	.L500:
 12320 4d92 00BF     		.align	2
 12321              	.L499:
 12322 4d94 002C0140 		.word	1073818624
 12323 4d98 00040040 		.word	1073742848
 12324 4d9c 00080040 		.word	1073743872
 12325 4da0 000C0040 		.word	1073744896
 12326 4da4 00340140 		.word	1073820672
 12327 4da8 00000000 		.word	.LC0
 12328              		.cfi_endproc
 12329              	.LFE108:
 12331              		.align	2
 12332              		.global	TIM_GetCapture4
 12333              		.thumb
 12334              		.thumb_func
 12336              	TIM_GetCapture4:
 12337              	.LFB109:
2490:../SPL/src/stm32f10x_tim.c **** 
2491:../SPL/src/stm32f10x_tim.c **** /**
2492:../SPL/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2493:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2494:../SPL/src/stm32f10x_tim.c ****   * @retval Capture Compare 4 Register value.
2495:../SPL/src/stm32f10x_tim.c ****   */
2496:../SPL/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2497:../SPL/src/stm32f10x_tim.c **** {
 12338              		.loc 1 2497 0
 12339              		.cfi_startproc
 12340              		@ args = 0, pretend = 0, frame = 8
 12341              		@ frame_needed = 1, uses_anonymous_args = 0
 12342 4dac 80B5     		push	{r7, lr}
 12343              	.LCFI240:
 12344              		.cfi_def_cfa_offset 8
 12345              		.cfi_offset 7, -8
 12346              		.cfi_offset 14, -4
 12347 4dae 82B0     		sub	sp, sp, #8
 12348              	.LCFI241:
 12349              		.cfi_def_cfa_offset 16
 12350 4db0 00AF     		add	r7, sp, #0
 12351              	.LCFI242:
 12352              		.cfi_def_cfa_register 7
 12353 4db2 7860     		str	r0, [r7, #4]
2498:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2499:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 12354              		.loc 1 2499 0
 12355 4db4 7A68     		ldr	r2, [r7, #4]
 12356 4db6 124B     		ldr	r3, .L504
 12357 4db8 9A42     		cmp	r2, r3
 12358 4dba 18D0     		beq	.L502
 12359              		.loc 1 2499 0 is_stmt 0 discriminator 1
 12360 4dbc 7B68     		ldr	r3, [r7, #4]
 12361 4dbe B3F1804F 		cmp	r3, #1073741824
 12362 4dc2 14D0     		beq	.L502
 12363              		.loc 1 2499 0 discriminator 2
 12364 4dc4 7A68     		ldr	r2, [r7, #4]
 12365 4dc6 0F4B     		ldr	r3, .L504+4
 12366 4dc8 9A42     		cmp	r2, r3
 12367 4dca 10D0     		beq	.L502
 12368              		.loc 1 2499 0 discriminator 3
 12369 4dcc 7A68     		ldr	r2, [r7, #4]
 12370 4dce 0E4B     		ldr	r3, .L504+8
 12371 4dd0 9A42     		cmp	r2, r3
 12372 4dd2 0CD0     		beq	.L502
 12373              		.loc 1 2499 0 discriminator 4
 12374 4dd4 7A68     		ldr	r2, [r7, #4]
 12375 4dd6 0D4B     		ldr	r3, .L504+12
 12376 4dd8 9A42     		cmp	r2, r3
 12377 4dda 08D0     		beq	.L502
 12378              		.loc 1 2499 0 discriminator 5
 12379 4ddc 7A68     		ldr	r2, [r7, #4]
 12380 4dde 0C4B     		ldr	r3, .L504+16
 12381 4de0 9A42     		cmp	r2, r3
 12382 4de2 04D0     		beq	.L502
 12383              		.loc 1 2499 0 discriminator 6
 12384 4de4 0B48     		ldr	r0, .L504+20
 12385 4de6 40F6C311 		movw	r1, #2499
 12386 4dea FFF7FEFF 		bl	assert_failed
 12387              	.L502:
2500:../SPL/src/stm32f10x_tim.c ****   /* Get the Capture 4 Register value */
2501:../SPL/src/stm32f10x_tim.c ****   return TIMx->CCR4;
 12388              		.loc 1 2501 0 is_stmt 1
 12389 4dee 7B68     		ldr	r3, [r7, #4]
 12390 4df0 B3F84030 		ldrh	r3, [r3, #64]	@ movhi
 12391 4df4 9BB2     		uxth	r3, r3
2502:../SPL/src/stm32f10x_tim.c **** }
 12392              		.loc 1 2502 0
 12393 4df6 1846     		mov	r0, r3
 12394 4df8 07F10807 		add	r7, r7, #8
 12395 4dfc BD46     		mov	sp, r7
 12396 4dfe 80BD     		pop	{r7, pc}
 12397              	.L505:
 12398              		.align	2
 12399              	.L504:
 12400 4e00 002C0140 		.word	1073818624
 12401 4e04 00040040 		.word	1073742848
 12402 4e08 00080040 		.word	1073743872
 12403 4e0c 000C0040 		.word	1073744896
 12404 4e10 00340140 		.word	1073820672
 12405 4e14 00000000 		.word	.LC0
 12406              		.cfi_endproc
 12407              	.LFE109:
 12409              		.align	2
 12410              		.global	TIM_GetCounter
 12411              		.thumb
 12412              		.thumb_func
 12414              	TIM_GetCounter:
 12415              	.LFB110:
2503:../SPL/src/stm32f10x_tim.c **** 
2504:../SPL/src/stm32f10x_tim.c **** /**
2505:../SPL/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Counter value.
2506:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2507:../SPL/src/stm32f10x_tim.c ****   * @retval Counter Register value.
2508:../SPL/src/stm32f10x_tim.c ****   */
2509:../SPL/src/stm32f10x_tim.c **** uint16_t TIM_GetCounter(TIM_TypeDef* TIMx)
2510:../SPL/src/stm32f10x_tim.c **** {
 12416              		.loc 1 2510 0
 12417              		.cfi_startproc
 12418              		@ args = 0, pretend = 0, frame = 8
 12419              		@ frame_needed = 1, uses_anonymous_args = 0
 12420 4e18 80B5     		push	{r7, lr}
 12421              	.LCFI243:
 12422              		.cfi_def_cfa_offset 8
 12423              		.cfi_offset 7, -8
 12424              		.cfi_offset 14, -4
 12425 4e1a 82B0     		sub	sp, sp, #8
 12426              	.LCFI244:
 12427              		.cfi_def_cfa_offset 16
 12428 4e1c 00AF     		add	r7, sp, #0
 12429              	.LCFI245:
 12430              		.cfi_def_cfa_register 7
 12431 4e1e 7860     		str	r0, [r7, #4]
2511:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2512:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 12432              		.loc 1 2512 0
 12433 4e20 7A68     		ldr	r2, [r7, #4]
 12434 4e22 284B     		ldr	r3, .L509
 12435 4e24 9A42     		cmp	r2, r3
 12436 4e26 44D0     		beq	.L507
 12437              		.loc 1 2512 0 is_stmt 0 discriminator 1
 12438 4e28 7B68     		ldr	r3, [r7, #4]
 12439 4e2a B3F1804F 		cmp	r3, #1073741824
 12440 4e2e 40D0     		beq	.L507
 12441              		.loc 1 2512 0 discriminator 2
 12442 4e30 7A68     		ldr	r2, [r7, #4]
 12443 4e32 254B     		ldr	r3, .L509+4
 12444 4e34 9A42     		cmp	r2, r3
 12445 4e36 3CD0     		beq	.L507
 12446              		.loc 1 2512 0 discriminator 3
 12447 4e38 7A68     		ldr	r2, [r7, #4]
 12448 4e3a 244B     		ldr	r3, .L509+8
 12449 4e3c 9A42     		cmp	r2, r3
 12450 4e3e 38D0     		beq	.L507
 12451              		.loc 1 2512 0 discriminator 4
 12452 4e40 7A68     		ldr	r2, [r7, #4]
 12453 4e42 234B     		ldr	r3, .L509+12
 12454 4e44 9A42     		cmp	r2, r3
 12455 4e46 34D0     		beq	.L507
 12456              		.loc 1 2512 0 discriminator 5
 12457 4e48 7A68     		ldr	r2, [r7, #4]
 12458 4e4a 224B     		ldr	r3, .L509+16
 12459 4e4c 9A42     		cmp	r2, r3
 12460 4e4e 30D0     		beq	.L507
 12461              		.loc 1 2512 0 discriminator 6
 12462 4e50 7A68     		ldr	r2, [r7, #4]
 12463 4e52 214B     		ldr	r3, .L509+20
 12464 4e54 9A42     		cmp	r2, r3
 12465 4e56 2CD0     		beq	.L507
 12466              		.loc 1 2512 0 discriminator 7
 12467 4e58 7A68     		ldr	r2, [r7, #4]
 12468 4e5a 204B     		ldr	r3, .L509+24
 12469 4e5c 9A42     		cmp	r2, r3
 12470 4e5e 28D0     		beq	.L507
 12471              		.loc 1 2512 0 discriminator 8
 12472 4e60 7A68     		ldr	r2, [r7, #4]
 12473 4e62 1F4B     		ldr	r3, .L509+28
 12474 4e64 9A42     		cmp	r2, r3
 12475 4e66 24D0     		beq	.L507
 12476              		.loc 1 2512 0 discriminator 9
 12477 4e68 7A68     		ldr	r2, [r7, #4]
 12478 4e6a 1E4B     		ldr	r3, .L509+32
 12479 4e6c 9A42     		cmp	r2, r3
 12480 4e6e 20D0     		beq	.L507
 12481              		.loc 1 2512 0 discriminator 10
 12482 4e70 7A68     		ldr	r2, [r7, #4]
 12483 4e72 1D4B     		ldr	r3, .L509+36
 12484 4e74 9A42     		cmp	r2, r3
 12485 4e76 1CD0     		beq	.L507
 12486              		.loc 1 2512 0 discriminator 11
 12487 4e78 7A68     		ldr	r2, [r7, #4]
 12488 4e7a 1C4B     		ldr	r3, .L509+40
 12489 4e7c 9A42     		cmp	r2, r3
 12490 4e7e 18D0     		beq	.L507
 12491              		.loc 1 2512 0 discriminator 12
 12492 4e80 7A68     		ldr	r2, [r7, #4]
 12493 4e82 1B4B     		ldr	r3, .L509+44
 12494 4e84 9A42     		cmp	r2, r3
 12495 4e86 14D0     		beq	.L507
 12496              		.loc 1 2512 0 discriminator 13
 12497 4e88 7A68     		ldr	r2, [r7, #4]
 12498 4e8a 1A4B     		ldr	r3, .L509+48
 12499 4e8c 9A42     		cmp	r2, r3
 12500 4e8e 10D0     		beq	.L507
 12501              		.loc 1 2512 0 discriminator 14
 12502 4e90 7A68     		ldr	r2, [r7, #4]
 12503 4e92 194B     		ldr	r3, .L509+52
 12504 4e94 9A42     		cmp	r2, r3
 12505 4e96 0CD0     		beq	.L507
 12506              		.loc 1 2512 0 discriminator 15
 12507 4e98 7A68     		ldr	r2, [r7, #4]
 12508 4e9a 184B     		ldr	r3, .L509+56
 12509 4e9c 9A42     		cmp	r2, r3
 12510 4e9e 08D0     		beq	.L507
 12511              		.loc 1 2512 0 discriminator 16
 12512 4ea0 7A68     		ldr	r2, [r7, #4]
 12513 4ea2 174B     		ldr	r3, .L509+60
 12514 4ea4 9A42     		cmp	r2, r3
 12515 4ea6 04D0     		beq	.L507
 12516              		.loc 1 2512 0 discriminator 17
 12517 4ea8 1648     		ldr	r0, .L509+64
 12518 4eaa 4FF41D61 		mov	r1, #2512
 12519 4eae FFF7FEFF 		bl	assert_failed
 12520              	.L507:
2513:../SPL/src/stm32f10x_tim.c ****   /* Get the Counter Register value */
2514:../SPL/src/stm32f10x_tim.c ****   return TIMx->CNT;
 12521              		.loc 1 2514 0 is_stmt 1
 12522 4eb2 7B68     		ldr	r3, [r7, #4]
 12523 4eb4 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 12524 4eb6 9BB2     		uxth	r3, r3
2515:../SPL/src/stm32f10x_tim.c **** }
 12525              		.loc 1 2515 0
 12526 4eb8 1846     		mov	r0, r3
 12527 4eba 07F10807 		add	r7, r7, #8
 12528 4ebe BD46     		mov	sp, r7
 12529 4ec0 80BD     		pop	{r7, pc}
 12530              	.L510:
 12531 4ec2 00BF     		.align	2
 12532              	.L509:
 12533 4ec4 002C0140 		.word	1073818624
 12534 4ec8 00040040 		.word	1073742848
 12535 4ecc 00080040 		.word	1073743872
 12536 4ed0 000C0040 		.word	1073744896
 12537 4ed4 00100040 		.word	1073745920
 12538 4ed8 00140040 		.word	1073746944
 12539 4edc 00340140 		.word	1073820672
 12540 4ee0 004C0140 		.word	1073826816
 12541 4ee4 00500140 		.word	1073827840
 12542 4ee8 00540140 		.word	1073828864
 12543 4eec 00180040 		.word	1073747968
 12544 4ef0 001C0040 		.word	1073748992
 12545 4ef4 00200040 		.word	1073750016
 12546 4ef8 00400140 		.word	1073823744
 12547 4efc 00440140 		.word	1073824768
 12548 4f00 00480140 		.word	1073825792
 12549 4f04 00000000 		.word	.LC0
 12550              		.cfi_endproc
 12551              	.LFE110:
 12553              		.align	2
 12554              		.global	TIM_GetPrescaler
 12555              		.thumb
 12556              		.thumb_func
 12558              	TIM_GetPrescaler:
 12559              	.LFB111:
2516:../SPL/src/stm32f10x_tim.c **** 
2517:../SPL/src/stm32f10x_tim.c **** /**
2518:../SPL/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Prescaler value.
2519:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2520:../SPL/src/stm32f10x_tim.c ****   * @retval Prescaler Register value.
2521:../SPL/src/stm32f10x_tim.c ****   */
2522:../SPL/src/stm32f10x_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
2523:../SPL/src/stm32f10x_tim.c **** {
 12560              		.loc 1 2523 0
 12561              		.cfi_startproc
 12562              		@ args = 0, pretend = 0, frame = 8
 12563              		@ frame_needed = 1, uses_anonymous_args = 0
 12564 4f08 80B5     		push	{r7, lr}
 12565              	.LCFI246:
 12566              		.cfi_def_cfa_offset 8
 12567              		.cfi_offset 7, -8
 12568              		.cfi_offset 14, -4
 12569 4f0a 82B0     		sub	sp, sp, #8
 12570              	.LCFI247:
 12571              		.cfi_def_cfa_offset 16
 12572 4f0c 00AF     		add	r7, sp, #0
 12573              	.LCFI248:
 12574              		.cfi_def_cfa_register 7
 12575 4f0e 7860     		str	r0, [r7, #4]
2524:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2525:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 12576              		.loc 1 2525 0
 12577 4f10 7A68     		ldr	r2, [r7, #4]
 12578 4f12 284B     		ldr	r3, .L514
 12579 4f14 9A42     		cmp	r2, r3
 12580 4f16 44D0     		beq	.L512
 12581              		.loc 1 2525 0 is_stmt 0 discriminator 1
 12582 4f18 7B68     		ldr	r3, [r7, #4]
 12583 4f1a B3F1804F 		cmp	r3, #1073741824
 12584 4f1e 40D0     		beq	.L512
 12585              		.loc 1 2525 0 discriminator 2
 12586 4f20 7A68     		ldr	r2, [r7, #4]
 12587 4f22 254B     		ldr	r3, .L514+4
 12588 4f24 9A42     		cmp	r2, r3
 12589 4f26 3CD0     		beq	.L512
 12590              		.loc 1 2525 0 discriminator 3
 12591 4f28 7A68     		ldr	r2, [r7, #4]
 12592 4f2a 244B     		ldr	r3, .L514+8
 12593 4f2c 9A42     		cmp	r2, r3
 12594 4f2e 38D0     		beq	.L512
 12595              		.loc 1 2525 0 discriminator 4
 12596 4f30 7A68     		ldr	r2, [r7, #4]
 12597 4f32 234B     		ldr	r3, .L514+12
 12598 4f34 9A42     		cmp	r2, r3
 12599 4f36 34D0     		beq	.L512
 12600              		.loc 1 2525 0 discriminator 5
 12601 4f38 7A68     		ldr	r2, [r7, #4]
 12602 4f3a 224B     		ldr	r3, .L514+16
 12603 4f3c 9A42     		cmp	r2, r3
 12604 4f3e 30D0     		beq	.L512
 12605              		.loc 1 2525 0 discriminator 6
 12606 4f40 7A68     		ldr	r2, [r7, #4]
 12607 4f42 214B     		ldr	r3, .L514+20
 12608 4f44 9A42     		cmp	r2, r3
 12609 4f46 2CD0     		beq	.L512
 12610              		.loc 1 2525 0 discriminator 7
 12611 4f48 7A68     		ldr	r2, [r7, #4]
 12612 4f4a 204B     		ldr	r3, .L514+24
 12613 4f4c 9A42     		cmp	r2, r3
 12614 4f4e 28D0     		beq	.L512
 12615              		.loc 1 2525 0 discriminator 8
 12616 4f50 7A68     		ldr	r2, [r7, #4]
 12617 4f52 1F4B     		ldr	r3, .L514+28
 12618 4f54 9A42     		cmp	r2, r3
 12619 4f56 24D0     		beq	.L512
 12620              		.loc 1 2525 0 discriminator 9
 12621 4f58 7A68     		ldr	r2, [r7, #4]
 12622 4f5a 1E4B     		ldr	r3, .L514+32
 12623 4f5c 9A42     		cmp	r2, r3
 12624 4f5e 20D0     		beq	.L512
 12625              		.loc 1 2525 0 discriminator 10
 12626 4f60 7A68     		ldr	r2, [r7, #4]
 12627 4f62 1D4B     		ldr	r3, .L514+36
 12628 4f64 9A42     		cmp	r2, r3
 12629 4f66 1CD0     		beq	.L512
 12630              		.loc 1 2525 0 discriminator 11
 12631 4f68 7A68     		ldr	r2, [r7, #4]
 12632 4f6a 1C4B     		ldr	r3, .L514+40
 12633 4f6c 9A42     		cmp	r2, r3
 12634 4f6e 18D0     		beq	.L512
 12635              		.loc 1 2525 0 discriminator 12
 12636 4f70 7A68     		ldr	r2, [r7, #4]
 12637 4f72 1B4B     		ldr	r3, .L514+44
 12638 4f74 9A42     		cmp	r2, r3
 12639 4f76 14D0     		beq	.L512
 12640              		.loc 1 2525 0 discriminator 13
 12641 4f78 7A68     		ldr	r2, [r7, #4]
 12642 4f7a 1A4B     		ldr	r3, .L514+48
 12643 4f7c 9A42     		cmp	r2, r3
 12644 4f7e 10D0     		beq	.L512
 12645              		.loc 1 2525 0 discriminator 14
 12646 4f80 7A68     		ldr	r2, [r7, #4]
 12647 4f82 194B     		ldr	r3, .L514+52
 12648 4f84 9A42     		cmp	r2, r3
 12649 4f86 0CD0     		beq	.L512
 12650              		.loc 1 2525 0 discriminator 15
 12651 4f88 7A68     		ldr	r2, [r7, #4]
 12652 4f8a 184B     		ldr	r3, .L514+56
 12653 4f8c 9A42     		cmp	r2, r3
 12654 4f8e 08D0     		beq	.L512
 12655              		.loc 1 2525 0 discriminator 16
 12656 4f90 7A68     		ldr	r2, [r7, #4]
 12657 4f92 174B     		ldr	r3, .L514+60
 12658 4f94 9A42     		cmp	r2, r3
 12659 4f96 04D0     		beq	.L512
 12660              		.loc 1 2525 0 discriminator 17
 12661 4f98 1648     		ldr	r0, .L514+64
 12662 4f9a 40F6DD11 		movw	r1, #2525
 12663 4f9e FFF7FEFF 		bl	assert_failed
 12664              	.L512:
2526:../SPL/src/stm32f10x_tim.c ****   /* Get the Prescaler Register value */
2527:../SPL/src/stm32f10x_tim.c ****   return TIMx->PSC;
 12665              		.loc 1 2527 0 is_stmt 1
 12666 4fa2 7B68     		ldr	r3, [r7, #4]
 12667 4fa4 1B8D     		ldrh	r3, [r3, #40]	@ movhi
 12668 4fa6 9BB2     		uxth	r3, r3
2528:../SPL/src/stm32f10x_tim.c **** }
 12669              		.loc 1 2528 0
 12670 4fa8 1846     		mov	r0, r3
 12671 4faa 07F10807 		add	r7, r7, #8
 12672 4fae BD46     		mov	sp, r7
 12673 4fb0 80BD     		pop	{r7, pc}
 12674              	.L515:
 12675 4fb2 00BF     		.align	2
 12676              	.L514:
 12677 4fb4 002C0140 		.word	1073818624
 12678 4fb8 00040040 		.word	1073742848
 12679 4fbc 00080040 		.word	1073743872
 12680 4fc0 000C0040 		.word	1073744896
 12681 4fc4 00100040 		.word	1073745920
 12682 4fc8 00140040 		.word	1073746944
 12683 4fcc 00340140 		.word	1073820672
 12684 4fd0 004C0140 		.word	1073826816
 12685 4fd4 00500140 		.word	1073827840
 12686 4fd8 00540140 		.word	1073828864
 12687 4fdc 00180040 		.word	1073747968
 12688 4fe0 001C0040 		.word	1073748992
 12689 4fe4 00200040 		.word	1073750016
 12690 4fe8 00400140 		.word	1073823744
 12691 4fec 00440140 		.word	1073824768
 12692 4ff0 00480140 		.word	1073825792
 12693 4ff4 00000000 		.word	.LC0
 12694              		.cfi_endproc
 12695              	.LFE111:
 12697              		.align	2
 12698              		.global	TIM_GetFlagStatus
 12699              		.thumb
 12700              		.thumb_func
 12702              	TIM_GetFlagStatus:
 12703              	.LFB112:
2529:../SPL/src/stm32f10x_tim.c **** 
2530:../SPL/src/stm32f10x_tim.c **** /**
2531:../SPL/src/stm32f10x_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2532:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2533:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2534:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2535:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Update: TIM update Flag
2536:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2537:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2538:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2539:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2540:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_COM: TIM Commutation Flag
2541:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Trigger: TIM Trigger Flag
2542:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Break: TIM Break Flag
2543:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 overcapture Flag
2544:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 overcapture Flag
2545:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 overcapture Flag
2546:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 overcapture Flag
2547:../SPL/src/stm32f10x_tim.c ****   * @note
2548:../SPL/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can have only one update flag. 
2549:../SPL/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_FLAG_Update, TIM_FLAG_CC1,
2550:../SPL/src/stm32f10x_tim.c ****   *      TIM_FLAG_CC2 or TIM_FLAG_Trigger. 
2551:../SPL/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_FLAG_Update or TIM_FLAG_CC1.   
2552:../SPL/src/stm32f10x_tim.c ****   *   - TIM_FLAG_Break is used only with TIM1, TIM8 and TIM15. 
2553:../SPL/src/stm32f10x_tim.c ****   *   - TIM_FLAG_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
2554:../SPL/src/stm32f10x_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2555:../SPL/src/stm32f10x_tim.c ****   */
2556:../SPL/src/stm32f10x_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2557:../SPL/src/stm32f10x_tim.c **** { 
 12704              		.loc 1 2557 0
 12705              		.cfi_startproc
 12706              		@ args = 0, pretend = 0, frame = 16
 12707              		@ frame_needed = 1, uses_anonymous_args = 0
 12708 4ff8 80B5     		push	{r7, lr}
 12709              	.LCFI249:
 12710              		.cfi_def_cfa_offset 8
 12711              		.cfi_offset 7, -8
 12712              		.cfi_offset 14, -4
 12713 4ffa 84B0     		sub	sp, sp, #16
 12714              	.LCFI250:
 12715              		.cfi_def_cfa_offset 24
 12716 4ffc 00AF     		add	r7, sp, #0
 12717              	.LCFI251:
 12718              		.cfi_def_cfa_register 7
 12719 4ffe 7860     		str	r0, [r7, #4]
 12720 5000 0B46     		mov	r3, r1
 12721 5002 7B80     		strh	r3, [r7, #2]	@ movhi
2558:../SPL/src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
 12722              		.loc 1 2558 0
 12723 5004 4FF00003 		mov	r3, #0
 12724 5008 FB73     		strb	r3, [r7, #15]
2559:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2560:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 12725              		.loc 1 2560 0
 12726 500a 7A68     		ldr	r2, [r7, #4]
 12727 500c 444B     		ldr	r3, .L522
 12728 500e 9A42     		cmp	r2, r3
 12729 5010 44D0     		beq	.L517
 12730              		.loc 1 2560 0 is_stmt 0 discriminator 1
 12731 5012 7B68     		ldr	r3, [r7, #4]
 12732 5014 B3F1804F 		cmp	r3, #1073741824
 12733 5018 40D0     		beq	.L517
 12734              		.loc 1 2560 0 discriminator 2
 12735 501a 7A68     		ldr	r2, [r7, #4]
 12736 501c 414B     		ldr	r3, .L522+4
 12737 501e 9A42     		cmp	r2, r3
 12738 5020 3CD0     		beq	.L517
 12739              		.loc 1 2560 0 discriminator 3
 12740 5022 7A68     		ldr	r2, [r7, #4]
 12741 5024 404B     		ldr	r3, .L522+8
 12742 5026 9A42     		cmp	r2, r3
 12743 5028 38D0     		beq	.L517
 12744              		.loc 1 2560 0 discriminator 4
 12745 502a 7A68     		ldr	r2, [r7, #4]
 12746 502c 3F4B     		ldr	r3, .L522+12
 12747 502e 9A42     		cmp	r2, r3
 12748 5030 34D0     		beq	.L517
 12749              		.loc 1 2560 0 discriminator 5
 12750 5032 7A68     		ldr	r2, [r7, #4]
 12751 5034 3E4B     		ldr	r3, .L522+16
 12752 5036 9A42     		cmp	r2, r3
 12753 5038 30D0     		beq	.L517
 12754              		.loc 1 2560 0 discriminator 6
 12755 503a 7A68     		ldr	r2, [r7, #4]
 12756 503c 3D4B     		ldr	r3, .L522+20
 12757 503e 9A42     		cmp	r2, r3
 12758 5040 2CD0     		beq	.L517
 12759              		.loc 1 2560 0 discriminator 7
 12760 5042 7A68     		ldr	r2, [r7, #4]
 12761 5044 3C4B     		ldr	r3, .L522+24
 12762 5046 9A42     		cmp	r2, r3
 12763 5048 28D0     		beq	.L517
 12764              		.loc 1 2560 0 discriminator 8
 12765 504a 7A68     		ldr	r2, [r7, #4]
 12766 504c 3B4B     		ldr	r3, .L522+28
 12767 504e 9A42     		cmp	r2, r3
 12768 5050 24D0     		beq	.L517
 12769              		.loc 1 2560 0 discriminator 9
 12770 5052 7A68     		ldr	r2, [r7, #4]
 12771 5054 3A4B     		ldr	r3, .L522+32
 12772 5056 9A42     		cmp	r2, r3
 12773 5058 20D0     		beq	.L517
 12774              		.loc 1 2560 0 discriminator 10
 12775 505a 7A68     		ldr	r2, [r7, #4]
 12776 505c 394B     		ldr	r3, .L522+36
 12777 505e 9A42     		cmp	r2, r3
 12778 5060 1CD0     		beq	.L517
 12779              		.loc 1 2560 0 discriminator 11
 12780 5062 7A68     		ldr	r2, [r7, #4]
 12781 5064 384B     		ldr	r3, .L522+40
 12782 5066 9A42     		cmp	r2, r3
 12783 5068 18D0     		beq	.L517
 12784              		.loc 1 2560 0 discriminator 12
 12785 506a 7A68     		ldr	r2, [r7, #4]
 12786 506c 374B     		ldr	r3, .L522+44
 12787 506e 9A42     		cmp	r2, r3
 12788 5070 14D0     		beq	.L517
 12789              		.loc 1 2560 0 discriminator 13
 12790 5072 7A68     		ldr	r2, [r7, #4]
 12791 5074 364B     		ldr	r3, .L522+48
 12792 5076 9A42     		cmp	r2, r3
 12793 5078 10D0     		beq	.L517
 12794              		.loc 1 2560 0 discriminator 14
 12795 507a 7A68     		ldr	r2, [r7, #4]
 12796 507c 354B     		ldr	r3, .L522+52
 12797 507e 9A42     		cmp	r2, r3
 12798 5080 0CD0     		beq	.L517
 12799              		.loc 1 2560 0 discriminator 15
 12800 5082 7A68     		ldr	r2, [r7, #4]
 12801 5084 344B     		ldr	r3, .L522+56
 12802 5086 9A42     		cmp	r2, r3
 12803 5088 08D0     		beq	.L517
 12804              		.loc 1 2560 0 discriminator 16
 12805 508a 7A68     		ldr	r2, [r7, #4]
 12806 508c 334B     		ldr	r3, .L522+60
 12807 508e 9A42     		cmp	r2, r3
 12808 5090 04D0     		beq	.L517
 12809              		.loc 1 2560 0 discriminator 17
 12810 5092 3348     		ldr	r0, .L522+64
 12811 5094 4FF42061 		mov	r1, #2560
 12812 5098 FFF7FEFF 		bl	assert_failed
 12813              	.L517:
2561:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
 12814              		.loc 1 2561 0 is_stmt 1
 12815 509c 7B88     		ldrh	r3, [r7, #2]
 12816 509e 012B     		cmp	r3, #1
 12817 50a0 29D0     		beq	.L518
 12818              		.loc 1 2561 0 is_stmt 0 discriminator 1
 12819 50a2 7B88     		ldrh	r3, [r7, #2]
 12820 50a4 022B     		cmp	r3, #2
 12821 50a6 26D0     		beq	.L518
 12822              		.loc 1 2561 0 discriminator 2
 12823 50a8 7B88     		ldrh	r3, [r7, #2]
 12824 50aa 042B     		cmp	r3, #4
 12825 50ac 23D0     		beq	.L518
 12826              		.loc 1 2561 0 discriminator 3
 12827 50ae 7B88     		ldrh	r3, [r7, #2]
 12828 50b0 082B     		cmp	r3, #8
 12829 50b2 20D0     		beq	.L518
 12830              		.loc 1 2561 0 discriminator 4
 12831 50b4 7B88     		ldrh	r3, [r7, #2]
 12832 50b6 102B     		cmp	r3, #16
 12833 50b8 1DD0     		beq	.L518
 12834              		.loc 1 2561 0 discriminator 5
 12835 50ba 7B88     		ldrh	r3, [r7, #2]
 12836 50bc 202B     		cmp	r3, #32
 12837 50be 1AD0     		beq	.L518
 12838              		.loc 1 2561 0 discriminator 6
 12839 50c0 7B88     		ldrh	r3, [r7, #2]
 12840 50c2 402B     		cmp	r3, #64
 12841 50c4 17D0     		beq	.L518
 12842              		.loc 1 2561 0 discriminator 7
 12843 50c6 7B88     		ldrh	r3, [r7, #2]
 12844 50c8 802B     		cmp	r3, #128
 12845 50ca 14D0     		beq	.L518
 12846              		.loc 1 2561 0 discriminator 8
 12847 50cc 7B88     		ldrh	r3, [r7, #2]
 12848 50ce B3F5007F 		cmp	r3, #512
 12849 50d2 10D0     		beq	.L518
 12850              		.loc 1 2561 0 discriminator 9
 12851 50d4 7B88     		ldrh	r3, [r7, #2]
 12852 50d6 B3F5806F 		cmp	r3, #1024
 12853 50da 0CD0     		beq	.L518
 12854              		.loc 1 2561 0 discriminator 10
 12855 50dc 7B88     		ldrh	r3, [r7, #2]
 12856 50de B3F5006F 		cmp	r3, #2048
 12857 50e2 08D0     		beq	.L518
 12858              		.loc 1 2561 0 discriminator 11
 12859 50e4 7B88     		ldrh	r3, [r7, #2]
 12860 50e6 B3F5805F 		cmp	r3, #4096
 12861 50ea 04D0     		beq	.L518
 12862              		.loc 1 2561 0 discriminator 12
 12863 50ec 1C48     		ldr	r0, .L522+64
 12864 50ee 40F60121 		movw	r1, #2561
 12865 50f2 FFF7FEFF 		bl	assert_failed
 12866              	.L518:
2562:../SPL/src/stm32f10x_tim.c ****   
2563:../SPL/src/stm32f10x_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
 12867              		.loc 1 2563 0 is_stmt 1
 12868 50f6 7B68     		ldr	r3, [r7, #4]
 12869 50f8 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 12870 50fa 9AB2     		uxth	r2, r3
 12871 50fc 7B88     		ldrh	r3, [r7, #2]	@ movhi
 12872 50fe 1340     		ands	r3, r3, r2
 12873 5100 9BB2     		uxth	r3, r3
 12874 5102 002B     		cmp	r3, #0
 12875 5104 03D0     		beq	.L519
2564:../SPL/src/stm32f10x_tim.c ****   {
2565:../SPL/src/stm32f10x_tim.c ****     bitstatus = SET;
 12876              		.loc 1 2565 0
 12877 5106 4FF00103 		mov	r3, #1
 12878 510a FB73     		strb	r3, [r7, #15]
 12879 510c 02E0     		b	.L520
 12880              	.L519:
2566:../SPL/src/stm32f10x_tim.c ****   }
2567:../SPL/src/stm32f10x_tim.c ****   else
2568:../SPL/src/stm32f10x_tim.c ****   {
2569:../SPL/src/stm32f10x_tim.c ****     bitstatus = RESET;
 12881              		.loc 1 2569 0
 12882 510e 4FF00003 		mov	r3, #0
 12883 5112 FB73     		strb	r3, [r7, #15]
 12884              	.L520:
2570:../SPL/src/stm32f10x_tim.c ****   }
2571:../SPL/src/stm32f10x_tim.c ****   return bitstatus;
 12885              		.loc 1 2571 0
 12886 5114 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2572:../SPL/src/stm32f10x_tim.c **** }
 12887              		.loc 1 2572 0
 12888 5116 1846     		mov	r0, r3
 12889 5118 07F11007 		add	r7, r7, #16
 12890 511c BD46     		mov	sp, r7
 12891 511e 80BD     		pop	{r7, pc}
 12892              	.L523:
 12893              		.align	2
 12894              	.L522:
 12895 5120 002C0140 		.word	1073818624
 12896 5124 00040040 		.word	1073742848
 12897 5128 00080040 		.word	1073743872
 12898 512c 000C0040 		.word	1073744896
 12899 5130 00100040 		.word	1073745920
 12900 5134 00140040 		.word	1073746944
 12901 5138 00340140 		.word	1073820672
 12902 513c 004C0140 		.word	1073826816
 12903 5140 00500140 		.word	1073827840
 12904 5144 00540140 		.word	1073828864
 12905 5148 00180040 		.word	1073747968
 12906 514c 001C0040 		.word	1073748992
 12907 5150 00200040 		.word	1073750016
 12908 5154 00400140 		.word	1073823744
 12909 5158 00440140 		.word	1073824768
 12910 515c 00480140 		.word	1073825792
 12911 5160 00000000 		.word	.LC0
 12912              		.cfi_endproc
 12913              	.LFE112:
 12915              		.align	2
 12916              		.global	TIM_ClearFlag
 12917              		.thumb
 12918              		.thumb_func
 12920              	TIM_ClearFlag:
 12921              	.LFB113:
2573:../SPL/src/stm32f10x_tim.c **** 
2574:../SPL/src/stm32f10x_tim.c **** /**
2575:../SPL/src/stm32f10x_tim.c ****   * @brief  Clears the TIMx's pending flags.
2576:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2577:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2578:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
2579:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Update: TIM update Flag
2580:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2581:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2582:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2583:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2584:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_COM: TIM Commutation Flag
2585:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Trigger: TIM Trigger Flag
2586:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Break: TIM Break Flag
2587:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 overcapture Flag
2588:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 overcapture Flag
2589:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 overcapture Flag
2590:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 overcapture Flag
2591:../SPL/src/stm32f10x_tim.c ****   * @note
2592:../SPL/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can have only one update flag. 
2593:../SPL/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_FLAG_Update, TIM_FLAG_CC1,
2594:../SPL/src/stm32f10x_tim.c ****   *      TIM_FLAG_CC2 or TIM_FLAG_Trigger. 
2595:../SPL/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_FLAG_Update or TIM_FLAG_CC1.   
2596:../SPL/src/stm32f10x_tim.c ****   *   - TIM_FLAG_Break is used only with TIM1, TIM8 and TIM15. 
2597:../SPL/src/stm32f10x_tim.c ****   *   - TIM_FLAG_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.   
2598:../SPL/src/stm32f10x_tim.c ****   * @retval None
2599:../SPL/src/stm32f10x_tim.c ****   */
2600:../SPL/src/stm32f10x_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2601:../SPL/src/stm32f10x_tim.c **** {  
 12922              		.loc 1 2601 0
 12923              		.cfi_startproc
 12924              		@ args = 0, pretend = 0, frame = 8
 12925              		@ frame_needed = 1, uses_anonymous_args = 0
 12926 5164 80B5     		push	{r7, lr}
 12927              	.LCFI252:
 12928              		.cfi_def_cfa_offset 8
 12929              		.cfi_offset 7, -8
 12930              		.cfi_offset 14, -4
 12931 5166 82B0     		sub	sp, sp, #8
 12932              	.LCFI253:
 12933              		.cfi_def_cfa_offset 16
 12934 5168 00AF     		add	r7, sp, #0
 12935              	.LCFI254:
 12936              		.cfi_def_cfa_register 7
 12937 516a 7860     		str	r0, [r7, #4]
 12938 516c 0B46     		mov	r3, r1
 12939 516e 7B80     		strh	r3, [r7, #2]	@ movhi
2602:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2603:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 12940              		.loc 1 2603 0
 12941 5170 7A68     		ldr	r2, [r7, #4]
 12942 5172 2F4B     		ldr	r3, .L528
 12943 5174 9A42     		cmp	r2, r3
 12944 5176 44D0     		beq	.L525
 12945              		.loc 1 2603 0 is_stmt 0 discriminator 1
 12946 5178 7B68     		ldr	r3, [r7, #4]
 12947 517a B3F1804F 		cmp	r3, #1073741824
 12948 517e 40D0     		beq	.L525
 12949              		.loc 1 2603 0 discriminator 2
 12950 5180 7A68     		ldr	r2, [r7, #4]
 12951 5182 2C4B     		ldr	r3, .L528+4
 12952 5184 9A42     		cmp	r2, r3
 12953 5186 3CD0     		beq	.L525
 12954              		.loc 1 2603 0 discriminator 3
 12955 5188 7A68     		ldr	r2, [r7, #4]
 12956 518a 2B4B     		ldr	r3, .L528+8
 12957 518c 9A42     		cmp	r2, r3
 12958 518e 38D0     		beq	.L525
 12959              		.loc 1 2603 0 discriminator 4
 12960 5190 7A68     		ldr	r2, [r7, #4]
 12961 5192 2A4B     		ldr	r3, .L528+12
 12962 5194 9A42     		cmp	r2, r3
 12963 5196 34D0     		beq	.L525
 12964              		.loc 1 2603 0 discriminator 5
 12965 5198 7A68     		ldr	r2, [r7, #4]
 12966 519a 294B     		ldr	r3, .L528+16
 12967 519c 9A42     		cmp	r2, r3
 12968 519e 30D0     		beq	.L525
 12969              		.loc 1 2603 0 discriminator 6
 12970 51a0 7A68     		ldr	r2, [r7, #4]
 12971 51a2 284B     		ldr	r3, .L528+20
 12972 51a4 9A42     		cmp	r2, r3
 12973 51a6 2CD0     		beq	.L525
 12974              		.loc 1 2603 0 discriminator 7
 12975 51a8 7A68     		ldr	r2, [r7, #4]
 12976 51aa 274B     		ldr	r3, .L528+24
 12977 51ac 9A42     		cmp	r2, r3
 12978 51ae 28D0     		beq	.L525
 12979              		.loc 1 2603 0 discriminator 8
 12980 51b0 7A68     		ldr	r2, [r7, #4]
 12981 51b2 264B     		ldr	r3, .L528+28
 12982 51b4 9A42     		cmp	r2, r3
 12983 51b6 24D0     		beq	.L525
 12984              		.loc 1 2603 0 discriminator 9
 12985 51b8 7A68     		ldr	r2, [r7, #4]
 12986 51ba 254B     		ldr	r3, .L528+32
 12987 51bc 9A42     		cmp	r2, r3
 12988 51be 20D0     		beq	.L525
 12989              		.loc 1 2603 0 discriminator 10
 12990 51c0 7A68     		ldr	r2, [r7, #4]
 12991 51c2 244B     		ldr	r3, .L528+36
 12992 51c4 9A42     		cmp	r2, r3
 12993 51c6 1CD0     		beq	.L525
 12994              		.loc 1 2603 0 discriminator 11
 12995 51c8 7A68     		ldr	r2, [r7, #4]
 12996 51ca 234B     		ldr	r3, .L528+40
 12997 51cc 9A42     		cmp	r2, r3
 12998 51ce 18D0     		beq	.L525
 12999              		.loc 1 2603 0 discriminator 12
 13000 51d0 7A68     		ldr	r2, [r7, #4]
 13001 51d2 224B     		ldr	r3, .L528+44
 13002 51d4 9A42     		cmp	r2, r3
 13003 51d6 14D0     		beq	.L525
 13004              		.loc 1 2603 0 discriminator 13
 13005 51d8 7A68     		ldr	r2, [r7, #4]
 13006 51da 214B     		ldr	r3, .L528+48
 13007 51dc 9A42     		cmp	r2, r3
 13008 51de 10D0     		beq	.L525
 13009              		.loc 1 2603 0 discriminator 14
 13010 51e0 7A68     		ldr	r2, [r7, #4]
 13011 51e2 204B     		ldr	r3, .L528+52
 13012 51e4 9A42     		cmp	r2, r3
 13013 51e6 0CD0     		beq	.L525
 13014              		.loc 1 2603 0 discriminator 15
 13015 51e8 7A68     		ldr	r2, [r7, #4]
 13016 51ea 1F4B     		ldr	r3, .L528+56
 13017 51ec 9A42     		cmp	r2, r3
 13018 51ee 08D0     		beq	.L525
 13019              		.loc 1 2603 0 discriminator 16
 13020 51f0 7A68     		ldr	r2, [r7, #4]
 13021 51f2 1E4B     		ldr	r3, .L528+60
 13022 51f4 9A42     		cmp	r2, r3
 13023 51f6 04D0     		beq	.L525
 13024              		.loc 1 2603 0 discriminator 17
 13025 51f8 1D48     		ldr	r0, .L528+64
 13026 51fa 40F62B21 		movw	r1, #2603
 13027 51fe FFF7FEFF 		bl	assert_failed
 13028              	.L525:
2604:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CLEAR_FLAG(TIM_FLAG));
 13029              		.loc 1 2604 0 is_stmt 1
 13030 5202 7B88     		ldrh	r3, [r7, #2]
 13031 5204 03F46143 		and	r3, r3, #57600
 13032 5208 002B     		cmp	r3, #0
 13033 520a 02D1     		bne	.L526
 13034              		.loc 1 2604 0 is_stmt 0 discriminator 2
 13035 520c 7B88     		ldrh	r3, [r7, #2]
 13036 520e 002B     		cmp	r3, #0
 13037 5210 04D1     		bne	.L527
 13038              	.L526:
 13039              		.loc 1 2604 0 discriminator 1
 13040 5212 1748     		ldr	r0, .L528+64
 13041 5214 40F62C21 		movw	r1, #2604
 13042 5218 FFF7FEFF 		bl	assert_failed
 13043              	.L527:
2605:../SPL/src/stm32f10x_tim.c ****    
2606:../SPL/src/stm32f10x_tim.c ****   /* Clear the flags */
2607:../SPL/src/stm32f10x_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
 13044              		.loc 1 2607 0 is_stmt 1
 13045 521c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 13046 521e 6FEA0303 		mvn	r3, r3
 13047 5222 9AB2     		uxth	r2, r3
 13048 5224 7B68     		ldr	r3, [r7, #4]
 13049 5226 1A82     		strh	r2, [r3, #16]	@ movhi
2608:../SPL/src/stm32f10x_tim.c **** }
 13050              		.loc 1 2608 0
 13051 5228 07F10807 		add	r7, r7, #8
 13052 522c BD46     		mov	sp, r7
 13053 522e 80BD     		pop	{r7, pc}
 13054              	.L529:
 13055              		.align	2
 13056              	.L528:
 13057 5230 002C0140 		.word	1073818624
 13058 5234 00040040 		.word	1073742848
 13059 5238 00080040 		.word	1073743872
 13060 523c 000C0040 		.word	1073744896
 13061 5240 00100040 		.word	1073745920
 13062 5244 00140040 		.word	1073746944
 13063 5248 00340140 		.word	1073820672
 13064 524c 004C0140 		.word	1073826816
 13065 5250 00500140 		.word	1073827840
 13066 5254 00540140 		.word	1073828864
 13067 5258 00180040 		.word	1073747968
 13068 525c 001C0040 		.word	1073748992
 13069 5260 00200040 		.word	1073750016
 13070 5264 00400140 		.word	1073823744
 13071 5268 00440140 		.word	1073824768
 13072 526c 00480140 		.word	1073825792
 13073 5270 00000000 		.word	.LC0
 13074              		.cfi_endproc
 13075              	.LFE113:
 13077              		.align	2
 13078              		.global	TIM_GetITStatus
 13079              		.thumb
 13080              		.thumb_func
 13082              	TIM_GetITStatus:
 13083              	.LFB114:
2609:../SPL/src/stm32f10x_tim.c **** 
2610:../SPL/src/stm32f10x_tim.c **** /**
2611:../SPL/src/stm32f10x_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2612:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2613:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2614:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2615:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Update: TIM update Interrupt source
2616:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2617:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2618:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2619:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2620:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
2621:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2622:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
2623:../SPL/src/stm32f10x_tim.c ****   * @note
2624:../SPL/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can generate only an update interrupt.
2625:../SPL/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
2626:../SPL/src/stm32f10x_tim.c ****   *      TIM_IT_CC2 or TIM_IT_Trigger. 
2627:../SPL/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
2628:../SPL/src/stm32f10x_tim.c ****   *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
2629:../SPL/src/stm32f10x_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.  
2630:../SPL/src/stm32f10x_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2631:../SPL/src/stm32f10x_tim.c ****   */
2632:../SPL/src/stm32f10x_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2633:../SPL/src/stm32f10x_tim.c **** {
 13084              		.loc 1 2633 0
 13085              		.cfi_startproc
 13086              		@ args = 0, pretend = 0, frame = 16
 13087              		@ frame_needed = 1, uses_anonymous_args = 0
 13088 5274 80B5     		push	{r7, lr}
 13089              	.LCFI255:
 13090              		.cfi_def_cfa_offset 8
 13091              		.cfi_offset 7, -8
 13092              		.cfi_offset 14, -4
 13093 5276 84B0     		sub	sp, sp, #16
 13094              	.LCFI256:
 13095              		.cfi_def_cfa_offset 24
 13096 5278 00AF     		add	r7, sp, #0
 13097              	.LCFI257:
 13098              		.cfi_def_cfa_register 7
 13099 527a 7860     		str	r0, [r7, #4]
 13100 527c 0B46     		mov	r3, r1
 13101 527e 7B80     		strh	r3, [r7, #2]	@ movhi
2634:../SPL/src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
 13102              		.loc 1 2634 0
 13103 5280 4FF00003 		mov	r3, #0
 13104 5284 FB73     		strb	r3, [r7, #15]
2635:../SPL/src/stm32f10x_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
 13105              		.loc 1 2635 0
 13106 5286 4FF00003 		mov	r3, #0
 13107 528a BB81     		strh	r3, [r7, #12]	@ movhi
 13108 528c 4FF00003 		mov	r3, #0
 13109 5290 7B81     		strh	r3, [r7, #10]	@ movhi
2636:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2637:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 13110              		.loc 1 2637 0
 13111 5292 7A68     		ldr	r2, [r7, #4]
 13112 5294 414B     		ldr	r3, .L536
 13113 5296 9A42     		cmp	r2, r3
 13114 5298 44D0     		beq	.L531
 13115              		.loc 1 2637 0 is_stmt 0 discriminator 1
 13116 529a 7B68     		ldr	r3, [r7, #4]
 13117 529c B3F1804F 		cmp	r3, #1073741824
 13118 52a0 40D0     		beq	.L531
 13119              		.loc 1 2637 0 discriminator 2
 13120 52a2 7A68     		ldr	r2, [r7, #4]
 13121 52a4 3E4B     		ldr	r3, .L536+4
 13122 52a6 9A42     		cmp	r2, r3
 13123 52a8 3CD0     		beq	.L531
 13124              		.loc 1 2637 0 discriminator 3
 13125 52aa 7A68     		ldr	r2, [r7, #4]
 13126 52ac 3D4B     		ldr	r3, .L536+8
 13127 52ae 9A42     		cmp	r2, r3
 13128 52b0 38D0     		beq	.L531
 13129              		.loc 1 2637 0 discriminator 4
 13130 52b2 7A68     		ldr	r2, [r7, #4]
 13131 52b4 3C4B     		ldr	r3, .L536+12
 13132 52b6 9A42     		cmp	r2, r3
 13133 52b8 34D0     		beq	.L531
 13134              		.loc 1 2637 0 discriminator 5
 13135 52ba 7A68     		ldr	r2, [r7, #4]
 13136 52bc 3B4B     		ldr	r3, .L536+16
 13137 52be 9A42     		cmp	r2, r3
 13138 52c0 30D0     		beq	.L531
 13139              		.loc 1 2637 0 discriminator 6
 13140 52c2 7A68     		ldr	r2, [r7, #4]
 13141 52c4 3A4B     		ldr	r3, .L536+20
 13142 52c6 9A42     		cmp	r2, r3
 13143 52c8 2CD0     		beq	.L531
 13144              		.loc 1 2637 0 discriminator 7
 13145 52ca 7A68     		ldr	r2, [r7, #4]
 13146 52cc 394B     		ldr	r3, .L536+24
 13147 52ce 9A42     		cmp	r2, r3
 13148 52d0 28D0     		beq	.L531
 13149              		.loc 1 2637 0 discriminator 8
 13150 52d2 7A68     		ldr	r2, [r7, #4]
 13151 52d4 384B     		ldr	r3, .L536+28
 13152 52d6 9A42     		cmp	r2, r3
 13153 52d8 24D0     		beq	.L531
 13154              		.loc 1 2637 0 discriminator 9
 13155 52da 7A68     		ldr	r2, [r7, #4]
 13156 52dc 374B     		ldr	r3, .L536+32
 13157 52de 9A42     		cmp	r2, r3
 13158 52e0 20D0     		beq	.L531
 13159              		.loc 1 2637 0 discriminator 10
 13160 52e2 7A68     		ldr	r2, [r7, #4]
 13161 52e4 364B     		ldr	r3, .L536+36
 13162 52e6 9A42     		cmp	r2, r3
 13163 52e8 1CD0     		beq	.L531
 13164              		.loc 1 2637 0 discriminator 11
 13165 52ea 7A68     		ldr	r2, [r7, #4]
 13166 52ec 354B     		ldr	r3, .L536+40
 13167 52ee 9A42     		cmp	r2, r3
 13168 52f0 18D0     		beq	.L531
 13169              		.loc 1 2637 0 discriminator 12
 13170 52f2 7A68     		ldr	r2, [r7, #4]
 13171 52f4 344B     		ldr	r3, .L536+44
 13172 52f6 9A42     		cmp	r2, r3
 13173 52f8 14D0     		beq	.L531
 13174              		.loc 1 2637 0 discriminator 13
 13175 52fa 7A68     		ldr	r2, [r7, #4]
 13176 52fc 334B     		ldr	r3, .L536+48
 13177 52fe 9A42     		cmp	r2, r3
 13178 5300 10D0     		beq	.L531
 13179              		.loc 1 2637 0 discriminator 14
 13180 5302 7A68     		ldr	r2, [r7, #4]
 13181 5304 324B     		ldr	r3, .L536+52
 13182 5306 9A42     		cmp	r2, r3
 13183 5308 0CD0     		beq	.L531
 13184              		.loc 1 2637 0 discriminator 15
 13185 530a 7A68     		ldr	r2, [r7, #4]
 13186 530c 314B     		ldr	r3, .L536+56
 13187 530e 9A42     		cmp	r2, r3
 13188 5310 08D0     		beq	.L531
 13189              		.loc 1 2637 0 discriminator 16
 13190 5312 7A68     		ldr	r2, [r7, #4]
 13191 5314 304B     		ldr	r3, .L536+60
 13192 5316 9A42     		cmp	r2, r3
 13193 5318 04D0     		beq	.L531
 13194              		.loc 1 2637 0 discriminator 17
 13195 531a 3048     		ldr	r0, .L536+64
 13196 531c 40F64D21 		movw	r1, #2637
 13197 5320 FFF7FEFF 		bl	assert_failed
 13198              	.L531:
2638:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
 13199              		.loc 1 2638 0 is_stmt 1
 13200 5324 7B88     		ldrh	r3, [r7, #2]
 13201 5326 012B     		cmp	r3, #1
 13202 5328 19D0     		beq	.L532
 13203              		.loc 1 2638 0 is_stmt 0 discriminator 1
 13204 532a 7B88     		ldrh	r3, [r7, #2]
 13205 532c 022B     		cmp	r3, #2
 13206 532e 16D0     		beq	.L532
 13207              		.loc 1 2638 0 discriminator 2
 13208 5330 7B88     		ldrh	r3, [r7, #2]
 13209 5332 042B     		cmp	r3, #4
 13210 5334 13D0     		beq	.L532
 13211              		.loc 1 2638 0 discriminator 3
 13212 5336 7B88     		ldrh	r3, [r7, #2]
 13213 5338 082B     		cmp	r3, #8
 13214 533a 10D0     		beq	.L532
 13215              		.loc 1 2638 0 discriminator 4
 13216 533c 7B88     		ldrh	r3, [r7, #2]
 13217 533e 102B     		cmp	r3, #16
 13218 5340 0DD0     		beq	.L532
 13219              		.loc 1 2638 0 discriminator 5
 13220 5342 7B88     		ldrh	r3, [r7, #2]
 13221 5344 202B     		cmp	r3, #32
 13222 5346 0AD0     		beq	.L532
 13223              		.loc 1 2638 0 discriminator 6
 13224 5348 7B88     		ldrh	r3, [r7, #2]
 13225 534a 402B     		cmp	r3, #64
 13226 534c 07D0     		beq	.L532
 13227              		.loc 1 2638 0 discriminator 7
 13228 534e 7B88     		ldrh	r3, [r7, #2]
 13229 5350 802B     		cmp	r3, #128
 13230 5352 04D0     		beq	.L532
 13231              		.loc 1 2638 0 discriminator 8
 13232 5354 2148     		ldr	r0, .L536+64
 13233 5356 40F64E21 		movw	r1, #2638
 13234 535a FFF7FEFF 		bl	assert_failed
 13235              	.L532:
2639:../SPL/src/stm32f10x_tim.c ****    
2640:../SPL/src/stm32f10x_tim.c ****   itstatus = TIMx->SR & TIM_IT;
 13236              		.loc 1 2640 0 is_stmt 1
 13237 535e 7B68     		ldr	r3, [r7, #4]
 13238 5360 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 13239 5362 9AB2     		uxth	r2, r3
 13240 5364 7B88     		ldrh	r3, [r7, #2]	@ movhi
 13241 5366 1340     		ands	r3, r3, r2
 13242 5368 BB81     		strh	r3, [r7, #12]	@ movhi
2641:../SPL/src/stm32f10x_tim.c ****   
2642:../SPL/src/stm32f10x_tim.c ****   itenable = TIMx->DIER & TIM_IT;
 13243              		.loc 1 2642 0
 13244 536a 7B68     		ldr	r3, [r7, #4]
 13245 536c 9B89     		ldrh	r3, [r3, #12]	@ movhi
 13246 536e 9AB2     		uxth	r2, r3
 13247 5370 7B88     		ldrh	r3, [r7, #2]	@ movhi
 13248 5372 1340     		ands	r3, r3, r2
 13249 5374 7B81     		strh	r3, [r7, #10]	@ movhi
2643:../SPL/src/stm32f10x_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 13250              		.loc 1 2643 0
 13251 5376 BB89     		ldrh	r3, [r7, #12]
 13252 5378 002B     		cmp	r3, #0
 13253 537a 06D0     		beq	.L533
 13254              		.loc 1 2643 0 is_stmt 0 discriminator 1
 13255 537c 7B89     		ldrh	r3, [r7, #10]
 13256 537e 002B     		cmp	r3, #0
 13257 5380 03D0     		beq	.L533
2644:../SPL/src/stm32f10x_tim.c ****   {
2645:../SPL/src/stm32f10x_tim.c ****     bitstatus = SET;
 13258              		.loc 1 2645 0 is_stmt 1
 13259 5382 4FF00103 		mov	r3, #1
 13260 5386 FB73     		strb	r3, [r7, #15]
 13261 5388 02E0     		b	.L534
 13262              	.L533:
2646:../SPL/src/stm32f10x_tim.c ****   }
2647:../SPL/src/stm32f10x_tim.c ****   else
2648:../SPL/src/stm32f10x_tim.c ****   {
2649:../SPL/src/stm32f10x_tim.c ****     bitstatus = RESET;
 13263              		.loc 1 2649 0
 13264 538a 4FF00003 		mov	r3, #0
 13265 538e FB73     		strb	r3, [r7, #15]
 13266              	.L534:
2650:../SPL/src/stm32f10x_tim.c ****   }
2651:../SPL/src/stm32f10x_tim.c ****   return bitstatus;
 13267              		.loc 1 2651 0
 13268 5390 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2652:../SPL/src/stm32f10x_tim.c **** }
 13269              		.loc 1 2652 0
 13270 5392 1846     		mov	r0, r3
 13271 5394 07F11007 		add	r7, r7, #16
 13272 5398 BD46     		mov	sp, r7
 13273 539a 80BD     		pop	{r7, pc}
 13274              	.L537:
 13275              		.align	2
 13276              	.L536:
 13277 539c 002C0140 		.word	1073818624
 13278 53a0 00040040 		.word	1073742848
 13279 53a4 00080040 		.word	1073743872
 13280 53a8 000C0040 		.word	1073744896
 13281 53ac 00100040 		.word	1073745920
 13282 53b0 00140040 		.word	1073746944
 13283 53b4 00340140 		.word	1073820672
 13284 53b8 004C0140 		.word	1073826816
 13285 53bc 00500140 		.word	1073827840
 13286 53c0 00540140 		.word	1073828864
 13287 53c4 00180040 		.word	1073747968
 13288 53c8 001C0040 		.word	1073748992
 13289 53cc 00200040 		.word	1073750016
 13290 53d0 00400140 		.word	1073823744
 13291 53d4 00440140 		.word	1073824768
 13292 53d8 00480140 		.word	1073825792
 13293 53dc 00000000 		.word	.LC0
 13294              		.cfi_endproc
 13295              	.LFE114:
 13297              		.align	2
 13298              		.global	TIM_ClearITPendingBit
 13299              		.thumb
 13300              		.thumb_func
 13302              	TIM_ClearITPendingBit:
 13303              	.LFB115:
2653:../SPL/src/stm32f10x_tim.c **** 
2654:../SPL/src/stm32f10x_tim.c **** /**
2655:../SPL/src/stm32f10x_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2656:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2657:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2658:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
2659:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Update: TIM1 update Interrupt source
2660:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2661:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2662:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2663:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2664:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
2665:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2666:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
2667:../SPL/src/stm32f10x_tim.c ****   * @note
2668:../SPL/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can generate only an update interrupt.
2669:../SPL/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
2670:../SPL/src/stm32f10x_tim.c ****   *      TIM_IT_CC2 or TIM_IT_Trigger. 
2671:../SPL/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
2672:../SPL/src/stm32f10x_tim.c ****   *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
2673:../SPL/src/stm32f10x_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
2674:../SPL/src/stm32f10x_tim.c ****   * @retval None
2675:../SPL/src/stm32f10x_tim.c ****   */
2676:../SPL/src/stm32f10x_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2677:../SPL/src/stm32f10x_tim.c **** {
 13304              		.loc 1 2677 0
 13305              		.cfi_startproc
 13306              		@ args = 0, pretend = 0, frame = 8
 13307              		@ frame_needed = 1, uses_anonymous_args = 0
 13308 53e0 80B5     		push	{r7, lr}
 13309              	.LCFI258:
 13310              		.cfi_def_cfa_offset 8
 13311              		.cfi_offset 7, -8
 13312              		.cfi_offset 14, -4
 13313 53e2 82B0     		sub	sp, sp, #8
 13314              	.LCFI259:
 13315              		.cfi_def_cfa_offset 16
 13316 53e4 00AF     		add	r7, sp, #0
 13317              	.LCFI260:
 13318              		.cfi_def_cfa_register 7
 13319 53e6 7860     		str	r0, [r7, #4]
 13320 53e8 0B46     		mov	r3, r1
 13321 53ea 7B80     		strh	r3, [r7, #2]	@ movhi
2678:../SPL/src/stm32f10x_tim.c ****   /* Check the parameters */
2679:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 13322              		.loc 1 2679 0
 13323 53ec 7A68     		ldr	r2, [r7, #4]
 13324 53ee 2F4B     		ldr	r3, .L542
 13325 53f0 9A42     		cmp	r2, r3
 13326 53f2 44D0     		beq	.L539
 13327              		.loc 1 2679 0 is_stmt 0 discriminator 1
 13328 53f4 7B68     		ldr	r3, [r7, #4]
 13329 53f6 B3F1804F 		cmp	r3, #1073741824
 13330 53fa 40D0     		beq	.L539
 13331              		.loc 1 2679 0 discriminator 2
 13332 53fc 7A68     		ldr	r2, [r7, #4]
 13333 53fe 2C4B     		ldr	r3, .L542+4
 13334 5400 9A42     		cmp	r2, r3
 13335 5402 3CD0     		beq	.L539
 13336              		.loc 1 2679 0 discriminator 3
 13337 5404 7A68     		ldr	r2, [r7, #4]
 13338 5406 2B4B     		ldr	r3, .L542+8
 13339 5408 9A42     		cmp	r2, r3
 13340 540a 38D0     		beq	.L539
 13341              		.loc 1 2679 0 discriminator 4
 13342 540c 7A68     		ldr	r2, [r7, #4]
 13343 540e 2A4B     		ldr	r3, .L542+12
 13344 5410 9A42     		cmp	r2, r3
 13345 5412 34D0     		beq	.L539
 13346              		.loc 1 2679 0 discriminator 5
 13347 5414 7A68     		ldr	r2, [r7, #4]
 13348 5416 294B     		ldr	r3, .L542+16
 13349 5418 9A42     		cmp	r2, r3
 13350 541a 30D0     		beq	.L539
 13351              		.loc 1 2679 0 discriminator 6
 13352 541c 7A68     		ldr	r2, [r7, #4]
 13353 541e 284B     		ldr	r3, .L542+20
 13354 5420 9A42     		cmp	r2, r3
 13355 5422 2CD0     		beq	.L539
 13356              		.loc 1 2679 0 discriminator 7
 13357 5424 7A68     		ldr	r2, [r7, #4]
 13358 5426 274B     		ldr	r3, .L542+24
 13359 5428 9A42     		cmp	r2, r3
 13360 542a 28D0     		beq	.L539
 13361              		.loc 1 2679 0 discriminator 8
 13362 542c 7A68     		ldr	r2, [r7, #4]
 13363 542e 264B     		ldr	r3, .L542+28
 13364 5430 9A42     		cmp	r2, r3
 13365 5432 24D0     		beq	.L539
 13366              		.loc 1 2679 0 discriminator 9
 13367 5434 7A68     		ldr	r2, [r7, #4]
 13368 5436 254B     		ldr	r3, .L542+32
 13369 5438 9A42     		cmp	r2, r3
 13370 543a 20D0     		beq	.L539
 13371              		.loc 1 2679 0 discriminator 10
 13372 543c 7A68     		ldr	r2, [r7, #4]
 13373 543e 244B     		ldr	r3, .L542+36
 13374 5440 9A42     		cmp	r2, r3
 13375 5442 1CD0     		beq	.L539
 13376              		.loc 1 2679 0 discriminator 11
 13377 5444 7A68     		ldr	r2, [r7, #4]
 13378 5446 234B     		ldr	r3, .L542+40
 13379 5448 9A42     		cmp	r2, r3
 13380 544a 18D0     		beq	.L539
 13381              		.loc 1 2679 0 discriminator 12
 13382 544c 7A68     		ldr	r2, [r7, #4]
 13383 544e 224B     		ldr	r3, .L542+44
 13384 5450 9A42     		cmp	r2, r3
 13385 5452 14D0     		beq	.L539
 13386              		.loc 1 2679 0 discriminator 13
 13387 5454 7A68     		ldr	r2, [r7, #4]
 13388 5456 214B     		ldr	r3, .L542+48
 13389 5458 9A42     		cmp	r2, r3
 13390 545a 10D0     		beq	.L539
 13391              		.loc 1 2679 0 discriminator 14
 13392 545c 7A68     		ldr	r2, [r7, #4]
 13393 545e 204B     		ldr	r3, .L542+52
 13394 5460 9A42     		cmp	r2, r3
 13395 5462 0CD0     		beq	.L539
 13396              		.loc 1 2679 0 discriminator 15
 13397 5464 7A68     		ldr	r2, [r7, #4]
 13398 5466 1F4B     		ldr	r3, .L542+56
 13399 5468 9A42     		cmp	r2, r3
 13400 546a 08D0     		beq	.L539
 13401              		.loc 1 2679 0 discriminator 16
 13402 546c 7A68     		ldr	r2, [r7, #4]
 13403 546e 1E4B     		ldr	r3, .L542+60
 13404 5470 9A42     		cmp	r2, r3
 13405 5472 04D0     		beq	.L539
 13406              		.loc 1 2679 0 discriminator 17
 13407 5474 1D48     		ldr	r0, .L542+64
 13408 5476 40F67721 		movw	r1, #2679
 13409 547a FFF7FEFF 		bl	assert_failed
 13410              	.L539:
2680:../SPL/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
 13411              		.loc 1 2680 0 is_stmt 1
 13412 547e 7B88     		ldrh	r3, [r7, #2]
 13413 5480 03F47F43 		and	r3, r3, #65280
 13414 5484 002B     		cmp	r3, #0
 13415 5486 02D1     		bne	.L540
 13416              		.loc 1 2680 0 is_stmt 0 discriminator 2
 13417 5488 7B88     		ldrh	r3, [r7, #2]
 13418 548a 002B     		cmp	r3, #0
 13419 548c 04D1     		bne	.L541
 13420              	.L540:
 13421              		.loc 1 2680 0 discriminator 1
 13422 548e 1748     		ldr	r0, .L542+64
 13423 5490 40F67821 		movw	r1, #2680
 13424 5494 FFF7FEFF 		bl	assert_failed
 13425              	.L541:
2681:../SPL/src/stm32f10x_tim.c ****   /* Clear the IT pending Bit */
2682:../SPL/src/stm32f10x_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
 13426              		.loc 1 2682 0 is_stmt 1
 13427 5498 7B88     		ldrh	r3, [r7, #2]	@ movhi
 13428 549a 6FEA0303 		mvn	r3, r3
 13429 549e 9AB2     		uxth	r2, r3
 13430 54a0 7B68     		ldr	r3, [r7, #4]
 13431 54a2 1A82     		strh	r2, [r3, #16]	@ movhi
2683:../SPL/src/stm32f10x_tim.c **** }
 13432              		.loc 1 2683 0
 13433 54a4 07F10807 		add	r7, r7, #8
 13434 54a8 BD46     		mov	sp, r7
 13435 54aa 80BD     		pop	{r7, pc}
 13436              	.L543:
 13437              		.align	2
 13438              	.L542:
 13439 54ac 002C0140 		.word	1073818624
 13440 54b0 00040040 		.word	1073742848
 13441 54b4 00080040 		.word	1073743872
 13442 54b8 000C0040 		.word	1073744896
 13443 54bc 00100040 		.word	1073745920
 13444 54c0 00140040 		.word	1073746944
 13445 54c4 00340140 		.word	1073820672
 13446 54c8 004C0140 		.word	1073826816
 13447 54cc 00500140 		.word	1073827840
 13448 54d0 00540140 		.word	1073828864
 13449 54d4 00180040 		.word	1073747968
 13450 54d8 001C0040 		.word	1073748992
 13451 54dc 00200040 		.word	1073750016
 13452 54e0 00400140 		.word	1073823744
 13453 54e4 00440140 		.word	1073824768
 13454 54e8 00480140 		.word	1073825792
 13455 54ec 00000000 		.word	.LC0
 13456              		.cfi_endproc
 13457              	.LFE115:
 13459              		.align	2
 13460              		.thumb
 13461              		.thumb_func
 13463              	TI1_Config:
 13464              	.LFB116:
2684:../SPL/src/stm32f10x_tim.c **** 
2685:../SPL/src/stm32f10x_tim.c **** /**
2686:../SPL/src/stm32f10x_tim.c ****   * @brief  Configure the TI1 as Input.
2687:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2688:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2689:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2690:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2691:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2692:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2693:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2694:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
2695:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
2696:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
2697:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2698:../SPL/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2699:../SPL/src/stm32f10x_tim.c ****   * @retval None
2700:../SPL/src/stm32f10x_tim.c ****   */
2701:../SPL/src/stm32f10x_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2702:../SPL/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2703:../SPL/src/stm32f10x_tim.c **** {
 13465              		.loc 1 2703 0
 13466              		.cfi_startproc
 13467              		@ args = 0, pretend = 0, frame = 24
 13468              		@ frame_needed = 1, uses_anonymous_args = 0
 13469              		@ link register save eliminated.
 13470 54f0 80B4     		push	{r7}
 13471              	.LCFI261:
 13472              		.cfi_def_cfa_offset 4
 13473              		.cfi_offset 7, -4
 13474 54f2 87B0     		sub	sp, sp, #28
 13475              	.LCFI262:
 13476              		.cfi_def_cfa_offset 32
 13477 54f4 00AF     		add	r7, sp, #0
 13478              	.LCFI263:
 13479              		.cfi_def_cfa_register 7
 13480 54f6 F860     		str	r0, [r7, #12]
 13481 54f8 7981     		strh	r1, [r7, #10]	@ movhi
 13482 54fa 3A81     		strh	r2, [r7, #8]	@ movhi
 13483 54fc FB80     		strh	r3, [r7, #6]	@ movhi
2704:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
 13484              		.loc 1 2704 0
 13485 54fe 4FF00003 		mov	r3, #0
 13486 5502 BB82     		strh	r3, [r7, #20]	@ movhi
 13487 5504 4FF00003 		mov	r3, #0
 13488 5508 FB82     		strh	r3, [r7, #22]	@ movhi
2705:../SPL/src/stm32f10x_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
2706:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC1E);
 13489              		.loc 1 2706 0
 13490 550a FB68     		ldr	r3, [r7, #12]
 13491 550c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 13492 550e 9BB2     		uxth	r3, r3
 13493 5510 23F00103 		bic	r3, r3, #1
 13494 5514 9AB2     		uxth	r2, r3
 13495 5516 FB68     		ldr	r3, [r7, #12]
 13496 5518 1A84     		strh	r2, [r3, #32]	@ movhi
2707:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 13497              		.loc 1 2707 0
 13498 551a FB68     		ldr	r3, [r7, #12]
 13499 551c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 13500 551e BB82     		strh	r3, [r7, #20]	@ movhi
2708:../SPL/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 13501              		.loc 1 2708 0
 13502 5520 FB68     		ldr	r3, [r7, #12]
 13503 5522 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 13504 5524 FB82     		strh	r3, [r7, #22]	@ movhi
2709:../SPL/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2710:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC1S)) & ((uint16_t)~((uint16_t)TIM_CCMR1
 13505              		.loc 1 2710 0
 13506 5526 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 13507 5528 23F0F303 		bic	r3, r3, #243
 13508 552c BB82     		strh	r3, [r7, #20]	@ movhi
2711:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 13509              		.loc 1 2711 0
 13510 552e FB88     		ldrh	r3, [r7, #6]	@ movhi
 13511 5530 4FEA0313 		lsl	r3, r3, #4
 13512 5534 9AB2     		uxth	r2, r3
 13513 5536 3B89     		ldrh	r3, [r7, #8]	@ movhi
 13514 5538 1343     		orrs	r3, r3, r2
 13515 553a 9AB2     		uxth	r2, r3
 13516 553c BB8A     		ldrh	r3, [r7, #20]	@ movhi
 13517 553e 1343     		orrs	r3, r3, r2
 13518 5540 BB82     		strh	r3, [r7, #20]	@ movhi
2712:../SPL/src/stm32f10x_tim.c ****   
2713:../SPL/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 13519              		.loc 1 2713 0
 13520 5542 FA68     		ldr	r2, [r7, #12]
 13521 5544 1C4B     		ldr	r3, .L548
 13522 5546 9A42     		cmp	r2, r3
 13523 5548 13D0     		beq	.L545
 13524              		.loc 1 2713 0 is_stmt 0 discriminator 1
 13525 554a FA68     		ldr	r2, [r7, #12]
 13526 554c 1B4B     		ldr	r3, .L548+4
 13527 554e 9A42     		cmp	r2, r3
 13528 5550 0FD0     		beq	.L545
 13529 5552 FB68     		ldr	r3, [r7, #12]
 13530 5554 B3F1804F 		cmp	r3, #1073741824
 13531 5558 0BD0     		beq	.L545
 13532 555a FA68     		ldr	r2, [r7, #12]
 13533 555c 184B     		ldr	r3, .L548+8
 13534 555e 9A42     		cmp	r2, r3
 13535 5560 07D0     		beq	.L545
 13536 5562 FA68     		ldr	r2, [r7, #12]
 13537 5564 174B     		ldr	r3, .L548+12
 13538 5566 9A42     		cmp	r2, r3
 13539 5568 03D0     		beq	.L545
2714:../SPL/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 13540              		.loc 1 2714 0 is_stmt 1
 13541 556a FA68     		ldr	r2, [r7, #12]
 13542 556c 164B     		ldr	r3, .L548+16
 13543 556e 9A42     		cmp	r2, r3
 13544 5570 0BD1     		bne	.L546
 13545              	.L545:
2715:../SPL/src/stm32f10x_tim.c ****   {
2716:../SPL/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC1E Bit */
2717:../SPL/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC1P));
 13546              		.loc 1 2717 0
 13547 5572 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 13548 5574 23F00203 		bic	r3, r3, #2
 13549 5578 FB82     		strh	r3, [r7, #22]	@ movhi
2718:../SPL/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
 13550              		.loc 1 2718 0
 13551 557a 7A89     		ldrh	r2, [r7, #10]	@ movhi
 13552 557c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 13553 557e 1343     		orrs	r3, r3, r2
 13554 5580 9BB2     		uxth	r3, r3
 13555 5582 43F00103 		orr	r3, r3, #1
 13556 5586 FB82     		strh	r3, [r7, #22]	@ movhi
 13557 5588 0AE0     		b	.L547
 13558              	.L546:
2719:../SPL/src/stm32f10x_tim.c ****   }
2720:../SPL/src/stm32f10x_tim.c ****   else
2721:../SPL/src/stm32f10x_tim.c ****   {
2722:../SPL/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC1E Bit */
2723:../SPL/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC1P | TIM_CCER_CC1NP));
 13559              		.loc 1 2723 0
 13560 558a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 13561 558c 23F00A03 		bic	r3, r3, #10
 13562 5590 FB82     		strh	r3, [r7, #22]	@ movhi
2724:../SPL/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
 13563              		.loc 1 2724 0
 13564 5592 7A89     		ldrh	r2, [r7, #10]	@ movhi
 13565 5594 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 13566 5596 1343     		orrs	r3, r3, r2
 13567 5598 9BB2     		uxth	r3, r3
 13568 559a 43F00103 		orr	r3, r3, #1
 13569 559e FB82     		strh	r3, [r7, #22]	@ movhi
 13570              	.L547:
2725:../SPL/src/stm32f10x_tim.c ****   }
2726:../SPL/src/stm32f10x_tim.c **** 
2727:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
2728:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 13571              		.loc 1 2728 0
 13572 55a0 FB68     		ldr	r3, [r7, #12]
 13573 55a2 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 13574 55a4 1A83     		strh	r2, [r3, #24]	@ movhi
2729:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 13575              		.loc 1 2729 0
 13576 55a6 FB68     		ldr	r3, [r7, #12]
 13577 55a8 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 13578 55aa 1A84     		strh	r2, [r3, #32]	@ movhi
2730:../SPL/src/stm32f10x_tim.c **** }
 13579              		.loc 1 2730 0
 13580 55ac 07F11C07 		add	r7, r7, #28
 13581 55b0 BD46     		mov	sp, r7
 13582 55b2 80BC     		pop	{r7}
 13583 55b4 7047     		bx	lr
 13584              	.L549:
 13585 55b6 00BF     		.align	2
 13586              	.L548:
 13587 55b8 002C0140 		.word	1073818624
 13588 55bc 00340140 		.word	1073820672
 13589 55c0 00040040 		.word	1073742848
 13590 55c4 00080040 		.word	1073743872
 13591 55c8 000C0040 		.word	1073744896
 13592              		.cfi_endproc
 13593              	.LFE116:
 13595              		.align	2
 13596              		.thumb
 13597              		.thumb_func
 13599              	TI2_Config:
 13600              	.LFB117:
2731:../SPL/src/stm32f10x_tim.c **** 
2732:../SPL/src/stm32f10x_tim.c **** /**
2733:../SPL/src/stm32f10x_tim.c ****   * @brief  Configure the TI2 as Input.
2734:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2735:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2736:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2737:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2738:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2739:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2740:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2741:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
2742:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
2743:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
2744:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2745:../SPL/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2746:../SPL/src/stm32f10x_tim.c ****   * @retval None
2747:../SPL/src/stm32f10x_tim.c ****   */
2748:../SPL/src/stm32f10x_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2749:../SPL/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2750:../SPL/src/stm32f10x_tim.c **** {
 13601              		.loc 1 2750 0
 13602              		.cfi_startproc
 13603              		@ args = 0, pretend = 0, frame = 24
 13604              		@ frame_needed = 1, uses_anonymous_args = 0
 13605              		@ link register save eliminated.
 13606 55cc 80B4     		push	{r7}
 13607              	.LCFI264:
 13608              		.cfi_def_cfa_offset 4
 13609              		.cfi_offset 7, -4
 13610 55ce 87B0     		sub	sp, sp, #28
 13611              	.LCFI265:
 13612              		.cfi_def_cfa_offset 32
 13613 55d0 00AF     		add	r7, sp, #0
 13614              	.LCFI266:
 13615              		.cfi_def_cfa_register 7
 13616 55d2 F860     		str	r0, [r7, #12]
 13617 55d4 7981     		strh	r1, [r7, #10]	@ movhi
 13618 55d6 3A81     		strh	r2, [r7, #8]	@ movhi
 13619 55d8 FB80     		strh	r3, [r7, #6]	@ movhi
2751:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
 13620              		.loc 1 2751 0
 13621 55da 4FF00003 		mov	r3, #0
 13622 55de BB82     		strh	r3, [r7, #20]	@ movhi
 13623 55e0 4FF00003 		mov	r3, #0
 13624 55e4 FB82     		strh	r3, [r7, #22]	@ movhi
 13625 55e6 4FF00003 		mov	r3, #0
 13626 55ea 7B82     		strh	r3, [r7, #18]	@ movhi
2752:../SPL/src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
2753:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC2E);
 13627              		.loc 1 2753 0
 13628 55ec FB68     		ldr	r3, [r7, #12]
 13629 55ee 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 13630 55f0 9BB2     		uxth	r3, r3
 13631 55f2 23F01003 		bic	r3, r3, #16
 13632 55f6 9AB2     		uxth	r2, r3
 13633 55f8 FB68     		ldr	r3, [r7, #12]
 13634 55fa 1A84     		strh	r2, [r3, #32]	@ movhi
2754:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 13635              		.loc 1 2754 0
 13636 55fc FB68     		ldr	r3, [r7, #12]
 13637 55fe 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 13638 5600 BB82     		strh	r3, [r7, #20]	@ movhi
2755:../SPL/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 13639              		.loc 1 2755 0
 13640 5602 FB68     		ldr	r3, [r7, #12]
 13641 5604 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 13642 5606 FB82     		strh	r3, [r7, #22]	@ movhi
2756:../SPL/src/stm32f10x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 13643              		.loc 1 2756 0
 13644 5608 7B89     		ldrh	r3, [r7, #10]	@ movhi
 13645 560a 4FEA0313 		lsl	r3, r3, #4
 13646 560e 7B82     		strh	r3, [r7, #18]	@ movhi
2757:../SPL/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2758:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC2S)) & ((uint16_t)~((uint16_t)TIM_CCMR1
 13647              		.loc 1 2758 0
 13648 5610 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 13649 5612 23F44073 		bic	r3, r3, #768
 13650 5616 4FEA0353 		lsl	r3, r3, #20
 13651 561a 4FEA1353 		lsr	r3, r3, #20
 13652 561e BB82     		strh	r3, [r7, #20]	@ movhi
2759:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 13653              		.loc 1 2759 0
 13654 5620 FB88     		ldrh	r3, [r7, #6]	@ movhi
 13655 5622 4FEA0333 		lsl	r3, r3, #12
 13656 5626 9AB2     		uxth	r2, r3
 13657 5628 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 13658 562a 1343     		orrs	r3, r3, r2
 13659 562c BB82     		strh	r3, [r7, #20]	@ movhi
2760:../SPL/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 13660              		.loc 1 2760 0
 13661 562e 3B89     		ldrh	r3, [r7, #8]	@ movhi
 13662 5630 4FEA0323 		lsl	r3, r3, #8
 13663 5634 9AB2     		uxth	r2, r3
 13664 5636 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 13665 5638 1343     		orrs	r3, r3, r2
 13666 563a BB82     		strh	r3, [r7, #20]	@ movhi
2761:../SPL/src/stm32f10x_tim.c ****   
2762:../SPL/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 13667              		.loc 1 2762 0
 13668 563c FA68     		ldr	r2, [r7, #12]
 13669 563e 1C4B     		ldr	r3, .L554
 13670 5640 9A42     		cmp	r2, r3
 13671 5642 13D0     		beq	.L551
 13672              		.loc 1 2762 0 is_stmt 0 discriminator 1
 13673 5644 FA68     		ldr	r2, [r7, #12]
 13674 5646 1B4B     		ldr	r3, .L554+4
 13675 5648 9A42     		cmp	r2, r3
 13676 564a 0FD0     		beq	.L551
 13677 564c FB68     		ldr	r3, [r7, #12]
 13678 564e B3F1804F 		cmp	r3, #1073741824
 13679 5652 0BD0     		beq	.L551
 13680 5654 FA68     		ldr	r2, [r7, #12]
 13681 5656 184B     		ldr	r3, .L554+8
 13682 5658 9A42     		cmp	r2, r3
 13683 565a 07D0     		beq	.L551
 13684 565c FA68     		ldr	r2, [r7, #12]
 13685 565e 174B     		ldr	r3, .L554+12
 13686 5660 9A42     		cmp	r2, r3
 13687 5662 03D0     		beq	.L551
2763:../SPL/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 13688              		.loc 1 2763 0 is_stmt 1
 13689 5664 FA68     		ldr	r2, [r7, #12]
 13690 5666 164B     		ldr	r3, .L554+16
 13691 5668 9A42     		cmp	r2, r3
 13692 566a 0BD1     		bne	.L552
 13693              	.L551:
2764:../SPL/src/stm32f10x_tim.c ****   {
2765:../SPL/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC2E Bit */
2766:../SPL/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC2P));
 13694              		.loc 1 2766 0
 13695 566c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 13696 566e 23F02003 		bic	r3, r3, #32
 13697 5672 FB82     		strh	r3, [r7, #22]	@ movhi
2767:../SPL/src/stm32f10x_tim.c ****     tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 13698              		.loc 1 2767 0
 13699 5674 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 13700 5676 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 13701 5678 1343     		orrs	r3, r3, r2
 13702 567a 9BB2     		uxth	r3, r3
 13703 567c 43F01003 		orr	r3, r3, #16
 13704 5680 FB82     		strh	r3, [r7, #22]	@ movhi
 13705 5682 0AE0     		b	.L553
 13706              	.L552:
2768:../SPL/src/stm32f10x_tim.c ****   }
2769:../SPL/src/stm32f10x_tim.c ****   else
2770:../SPL/src/stm32f10x_tim.c ****   {
2771:../SPL/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC2E Bit */
2772:../SPL/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC2P | TIM_CCER_CC2NP));
 13707              		.loc 1 2772 0
 13708 5684 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 13709 5686 23F0A003 		bic	r3, r3, #160
 13710 568a FB82     		strh	r3, [r7, #22]	@ movhi
2773:../SPL/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC2E);
 13711              		.loc 1 2773 0
 13712 568c 7A89     		ldrh	r2, [r7, #10]	@ movhi
 13713 568e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 13714 5690 1343     		orrs	r3, r3, r2
 13715 5692 9BB2     		uxth	r3, r3
 13716 5694 43F01003 		orr	r3, r3, #16
 13717 5698 FB82     		strh	r3, [r7, #22]	@ movhi
 13718              	.L553:
2774:../SPL/src/stm32f10x_tim.c ****   }
2775:../SPL/src/stm32f10x_tim.c ****   
2776:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
2777:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 13719              		.loc 1 2777 0
 13720 569a FB68     		ldr	r3, [r7, #12]
 13721 569c BA8A     		ldrh	r2, [r7, #20]	@ movhi
 13722 569e 1A83     		strh	r2, [r3, #24]	@ movhi
2778:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 13723              		.loc 1 2778 0
 13724 56a0 FB68     		ldr	r3, [r7, #12]
 13725 56a2 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 13726 56a4 1A84     		strh	r2, [r3, #32]	@ movhi
2779:../SPL/src/stm32f10x_tim.c **** }
 13727              		.loc 1 2779 0
 13728 56a6 07F11C07 		add	r7, r7, #28
 13729 56aa BD46     		mov	sp, r7
 13730 56ac 80BC     		pop	{r7}
 13731 56ae 7047     		bx	lr
 13732              	.L555:
 13733              		.align	2
 13734              	.L554:
 13735 56b0 002C0140 		.word	1073818624
 13736 56b4 00340140 		.word	1073820672
 13737 56b8 00040040 		.word	1073742848
 13738 56bc 00080040 		.word	1073743872
 13739 56c0 000C0040 		.word	1073744896
 13740              		.cfi_endproc
 13741              	.LFE117:
 13743              		.align	2
 13744              		.thumb
 13745              		.thumb_func
 13747              	TI3_Config:
 13748              	.LFB118:
2780:../SPL/src/stm32f10x_tim.c **** 
2781:../SPL/src/stm32f10x_tim.c **** /**
2782:../SPL/src/stm32f10x_tim.c ****   * @brief  Configure the TI3 as Input.
2783:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2784:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2785:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2786:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2787:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2788:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2789:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2790:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
2791:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
2792:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
2793:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2794:../SPL/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2795:../SPL/src/stm32f10x_tim.c ****   * @retval None
2796:../SPL/src/stm32f10x_tim.c ****   */
2797:../SPL/src/stm32f10x_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2798:../SPL/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2799:../SPL/src/stm32f10x_tim.c **** {
 13749              		.loc 1 2799 0
 13750              		.cfi_startproc
 13751              		@ args = 0, pretend = 0, frame = 24
 13752              		@ frame_needed = 1, uses_anonymous_args = 0
 13753              		@ link register save eliminated.
 13754 56c4 80B4     		push	{r7}
 13755              	.LCFI267:
 13756              		.cfi_def_cfa_offset 4
 13757              		.cfi_offset 7, -4
 13758 56c6 87B0     		sub	sp, sp, #28
 13759              	.LCFI268:
 13760              		.cfi_def_cfa_offset 32
 13761 56c8 00AF     		add	r7, sp, #0
 13762              	.LCFI269:
 13763              		.cfi_def_cfa_register 7
 13764 56ca F860     		str	r0, [r7, #12]
 13765 56cc 7981     		strh	r1, [r7, #10]	@ movhi
 13766 56ce 3A81     		strh	r2, [r7, #8]	@ movhi
 13767 56d0 FB80     		strh	r3, [r7, #6]	@ movhi
2800:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 13768              		.loc 1 2800 0
 13769 56d2 4FF00003 		mov	r3, #0
 13770 56d6 BB82     		strh	r3, [r7, #20]	@ movhi
 13771 56d8 4FF00003 		mov	r3, #0
 13772 56dc FB82     		strh	r3, [r7, #22]	@ movhi
 13773 56de 4FF00003 		mov	r3, #0
 13774 56e2 7B82     		strh	r3, [r7, #18]	@ movhi
2801:../SPL/src/stm32f10x_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
2802:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC3E);
 13775              		.loc 1 2802 0
 13776 56e4 FB68     		ldr	r3, [r7, #12]
 13777 56e6 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 13778 56e8 9BB2     		uxth	r3, r3
 13779 56ea 23F48073 		bic	r3, r3, #256
 13780 56ee 9AB2     		uxth	r2, r3
 13781 56f0 FB68     		ldr	r3, [r7, #12]
 13782 56f2 1A84     		strh	r2, [r3, #32]	@ movhi
2803:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 13783              		.loc 1 2803 0
 13784 56f4 FB68     		ldr	r3, [r7, #12]
 13785 56f6 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 13786 56f8 BB82     		strh	r3, [r7, #20]	@ movhi
2804:../SPL/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 13787              		.loc 1 2804 0
 13788 56fa FB68     		ldr	r3, [r7, #12]
 13789 56fc 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 13790 56fe FB82     		strh	r3, [r7, #22]	@ movhi
2805:../SPL/src/stm32f10x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
 13791              		.loc 1 2805 0
 13792 5700 7B89     		ldrh	r3, [r7, #10]	@ movhi
 13793 5702 4FEA0323 		lsl	r3, r3, #8
 13794 5706 7B82     		strh	r3, [r7, #18]	@ movhi
2806:../SPL/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2807:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR2_CC3S)) & ((uint16_t)~((uint16_t)TIM_CCMR2
 13795              		.loc 1 2807 0
 13796 5708 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 13797 570a 23F0F303 		bic	r3, r3, #243
 13798 570e BB82     		strh	r3, [r7, #20]	@ movhi
2808:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 13799              		.loc 1 2808 0
 13800 5710 FB88     		ldrh	r3, [r7, #6]	@ movhi
 13801 5712 4FEA0313 		lsl	r3, r3, #4
 13802 5716 9AB2     		uxth	r2, r3
 13803 5718 3B89     		ldrh	r3, [r7, #8]	@ movhi
 13804 571a 1343     		orrs	r3, r3, r2
 13805 571c 9AB2     		uxth	r2, r3
 13806 571e BB8A     		ldrh	r3, [r7, #20]	@ movhi
 13807 5720 1343     		orrs	r3, r3, r2
 13808 5722 BB82     		strh	r3, [r7, #20]	@ movhi
2809:../SPL/src/stm32f10x_tim.c ****     
2810:../SPL/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 13809              		.loc 1 2810 0
 13810 5724 FA68     		ldr	r2, [r7, #12]
 13811 5726 1C4B     		ldr	r3, .L560
 13812 5728 9A42     		cmp	r2, r3
 13813 572a 13D0     		beq	.L557
 13814              		.loc 1 2810 0 is_stmt 0 discriminator 1
 13815 572c FA68     		ldr	r2, [r7, #12]
 13816 572e 1B4B     		ldr	r3, .L560+4
 13817 5730 9A42     		cmp	r2, r3
 13818 5732 0FD0     		beq	.L557
 13819 5734 FB68     		ldr	r3, [r7, #12]
 13820 5736 B3F1804F 		cmp	r3, #1073741824
 13821 573a 0BD0     		beq	.L557
 13822 573c FA68     		ldr	r2, [r7, #12]
 13823 573e 184B     		ldr	r3, .L560+8
 13824 5740 9A42     		cmp	r2, r3
 13825 5742 07D0     		beq	.L557
 13826 5744 FA68     		ldr	r2, [r7, #12]
 13827 5746 174B     		ldr	r3, .L560+12
 13828 5748 9A42     		cmp	r2, r3
 13829 574a 03D0     		beq	.L557
2811:../SPL/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 13830              		.loc 1 2811 0 is_stmt 1
 13831 574c FA68     		ldr	r2, [r7, #12]
 13832 574e 164B     		ldr	r3, .L560+16
 13833 5750 9A42     		cmp	r2, r3
 13834 5752 0BD1     		bne	.L558
 13835              	.L557:
2812:../SPL/src/stm32f10x_tim.c ****   {
2813:../SPL/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC3E Bit */
2814:../SPL/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P));
 13836              		.loc 1 2814 0
 13837 5754 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 13838 5756 23F40073 		bic	r3, r3, #512
 13839 575a FB82     		strh	r3, [r7, #22]	@ movhi
2815:../SPL/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 13840              		.loc 1 2815 0
 13841 575c 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 13842 575e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 13843 5760 1343     		orrs	r3, r3, r2
 13844 5762 9BB2     		uxth	r3, r3
 13845 5764 43F48073 		orr	r3, r3, #256
 13846 5768 FB82     		strh	r3, [r7, #22]	@ movhi
 13847 576a 0AE0     		b	.L559
 13848              	.L558:
2816:../SPL/src/stm32f10x_tim.c ****   }
2817:../SPL/src/stm32f10x_tim.c ****   else
2818:../SPL/src/stm32f10x_tim.c ****   {
2819:../SPL/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC3E Bit */
2820:../SPL/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P | TIM_CCER_CC3NP));
 13849              		.loc 1 2820 0
 13850 576c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 13851 576e 23F42063 		bic	r3, r3, #2560
 13852 5772 FB82     		strh	r3, [r7, #22]	@ movhi
2821:../SPL/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC3E);
 13853              		.loc 1 2821 0
 13854 5774 7A89     		ldrh	r2, [r7, #10]	@ movhi
 13855 5776 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 13856 5778 1343     		orrs	r3, r3, r2
 13857 577a 9BB2     		uxth	r3, r3
 13858 577c 43F48073 		orr	r3, r3, #256
 13859 5780 FB82     		strh	r3, [r7, #22]	@ movhi
 13860              	.L559:
2822:../SPL/src/stm32f10x_tim.c ****   }
2823:../SPL/src/stm32f10x_tim.c ****   
2824:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
2825:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 13861              		.loc 1 2825 0
 13862 5782 FB68     		ldr	r3, [r7, #12]
 13863 5784 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 13864 5786 9A83     		strh	r2, [r3, #28]	@ movhi
2826:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 13865              		.loc 1 2826 0
 13866 5788 FB68     		ldr	r3, [r7, #12]
 13867 578a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 13868 578c 1A84     		strh	r2, [r3, #32]	@ movhi
2827:../SPL/src/stm32f10x_tim.c **** }
 13869              		.loc 1 2827 0
 13870 578e 07F11C07 		add	r7, r7, #28
 13871 5792 BD46     		mov	sp, r7
 13872 5794 80BC     		pop	{r7}
 13873 5796 7047     		bx	lr
 13874              	.L561:
 13875              		.align	2
 13876              	.L560:
 13877 5798 002C0140 		.word	1073818624
 13878 579c 00340140 		.word	1073820672
 13879 57a0 00040040 		.word	1073742848
 13880 57a4 00080040 		.word	1073743872
 13881 57a8 000C0040 		.word	1073744896
 13882              		.cfi_endproc
 13883              	.LFE118:
 13885              		.align	2
 13886              		.thumb
 13887              		.thumb_func
 13889              	TI4_Config:
 13890              	.LFB119:
2828:../SPL/src/stm32f10x_tim.c **** 
2829:../SPL/src/stm32f10x_tim.c **** /**
2830:../SPL/src/stm32f10x_tim.c ****   * @brief  Configure the TI4 as Input.
2831:../SPL/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2832:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2833:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2834:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2835:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2836:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2837:../SPL/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2838:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
2839:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
2840:../SPL/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
2841:../SPL/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2842:../SPL/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2843:../SPL/src/stm32f10x_tim.c ****   * @retval None
2844:../SPL/src/stm32f10x_tim.c ****   */
2845:../SPL/src/stm32f10x_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2846:../SPL/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2847:../SPL/src/stm32f10x_tim.c **** {
 13891              		.loc 1 2847 0
 13892              		.cfi_startproc
 13893              		@ args = 0, pretend = 0, frame = 24
 13894              		@ frame_needed = 1, uses_anonymous_args = 0
 13895              		@ link register save eliminated.
 13896 57ac 80B4     		push	{r7}
 13897              	.LCFI270:
 13898              		.cfi_def_cfa_offset 4
 13899              		.cfi_offset 7, -4
 13900 57ae 87B0     		sub	sp, sp, #28
 13901              	.LCFI271:
 13902              		.cfi_def_cfa_offset 32
 13903 57b0 00AF     		add	r7, sp, #0
 13904              	.LCFI272:
 13905              		.cfi_def_cfa_register 7
 13906 57b2 F860     		str	r0, [r7, #12]
 13907 57b4 7981     		strh	r1, [r7, #10]	@ movhi
 13908 57b6 3A81     		strh	r2, [r7, #8]	@ movhi
 13909 57b8 FB80     		strh	r3, [r7, #6]	@ movhi
2848:../SPL/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 13910              		.loc 1 2848 0
 13911 57ba 4FF00003 		mov	r3, #0
 13912 57be BB82     		strh	r3, [r7, #20]	@ movhi
 13913 57c0 4FF00003 		mov	r3, #0
 13914 57c4 FB82     		strh	r3, [r7, #22]	@ movhi
 13915 57c6 4FF00003 		mov	r3, #0
 13916 57ca 7B82     		strh	r3, [r7, #18]	@ movhi
2849:../SPL/src/stm32f10x_tim.c **** 
2850:../SPL/src/stm32f10x_tim.c ****    /* Disable the Channel 4: Reset the CC4E Bit */
2851:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC4E);
 13917              		.loc 1 2851 0
 13918 57cc FB68     		ldr	r3, [r7, #12]
 13919 57ce 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 13920 57d0 9BB2     		uxth	r3, r3
 13921 57d2 23F48053 		bic	r3, r3, #4096
 13922 57d6 9AB2     		uxth	r2, r3
 13923 57d8 FB68     		ldr	r3, [r7, #12]
 13924 57da 1A84     		strh	r2, [r3, #32]	@ movhi
2852:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 13925              		.loc 1 2852 0
 13926 57dc FB68     		ldr	r3, [r7, #12]
 13927 57de 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 13928 57e0 BB82     		strh	r3, [r7, #20]	@ movhi
2853:../SPL/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 13929              		.loc 1 2853 0
 13930 57e2 FB68     		ldr	r3, [r7, #12]
 13931 57e4 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 13932 57e6 FB82     		strh	r3, [r7, #22]	@ movhi
2854:../SPL/src/stm32f10x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 13933              		.loc 1 2854 0
 13934 57e8 7B89     		ldrh	r3, [r7, #10]	@ movhi
 13935 57ea 4FEA0333 		lsl	r3, r3, #12
 13936 57ee 7B82     		strh	r3, [r7, #18]	@ movhi
2855:../SPL/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2856:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)((uint16_t)(~(uint16_t)TIM_CCMR2_CC4S) & ((uint16_t)~((uint16_t)TIM_CCMR2_I
 13937              		.loc 1 2856 0
 13938 57f0 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 13939 57f2 23F44073 		bic	r3, r3, #768
 13940 57f6 4FEA0353 		lsl	r3, r3, #20
 13941 57fa 4FEA1353 		lsr	r3, r3, #20
 13942 57fe BB82     		strh	r3, [r7, #20]	@ movhi
2857:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 13943              		.loc 1 2857 0
 13944 5800 3B89     		ldrh	r3, [r7, #8]	@ movhi
 13945 5802 4FEA0323 		lsl	r3, r3, #8
 13946 5806 9AB2     		uxth	r2, r3
 13947 5808 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 13948 580a 1343     		orrs	r3, r3, r2
 13949 580c BB82     		strh	r3, [r7, #20]	@ movhi
2858:../SPL/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 13950              		.loc 1 2858 0
 13951 580e FB88     		ldrh	r3, [r7, #6]	@ movhi
 13952 5810 4FEA0333 		lsl	r3, r3, #12
 13953 5814 9AB2     		uxth	r2, r3
 13954 5816 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 13955 5818 1343     		orrs	r3, r3, r2
 13956 581a BB82     		strh	r3, [r7, #20]	@ movhi
2859:../SPL/src/stm32f10x_tim.c ****   
2860:../SPL/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 13957              		.loc 1 2860 0
 13958 581c FA68     		ldr	r2, [r7, #12]
 13959 581e 1E4B     		ldr	r3, .L566
 13960 5820 9A42     		cmp	r2, r3
 13961 5822 13D0     		beq	.L563
 13962              		.loc 1 2860 0 is_stmt 0 discriminator 1
 13963 5824 FA68     		ldr	r2, [r7, #12]
 13964 5826 1D4B     		ldr	r3, .L566+4
 13965 5828 9A42     		cmp	r2, r3
 13966 582a 0FD0     		beq	.L563
 13967 582c FB68     		ldr	r3, [r7, #12]
 13968 582e B3F1804F 		cmp	r3, #1073741824
 13969 5832 0BD0     		beq	.L563
 13970 5834 FA68     		ldr	r2, [r7, #12]
 13971 5836 1A4B     		ldr	r3, .L566+8
 13972 5838 9A42     		cmp	r2, r3
 13973 583a 07D0     		beq	.L563
 13974 583c FA68     		ldr	r2, [r7, #12]
 13975 583e 194B     		ldr	r3, .L566+12
 13976 5840 9A42     		cmp	r2, r3
 13977 5842 03D0     		beq	.L563
2861:../SPL/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 13978              		.loc 1 2861 0 is_stmt 1
 13979 5844 FA68     		ldr	r2, [r7, #12]
 13980 5846 184B     		ldr	r3, .L566+16
 13981 5848 9A42     		cmp	r2, r3
 13982 584a 0BD1     		bne	.L564
 13983              	.L563:
2862:../SPL/src/stm32f10x_tim.c ****   {
2863:../SPL/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC4E Bit */
2864:../SPL/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC4P));
 13984              		.loc 1 2864 0
 13985 584c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 13986 584e 23F40053 		bic	r3, r3, #8192
 13987 5852 FB82     		strh	r3, [r7, #22]	@ movhi
2865:../SPL/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 13988              		.loc 1 2865 0
 13989 5854 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 13990 5856 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 13991 5858 1343     		orrs	r3, r3, r2
 13992 585a 9BB2     		uxth	r3, r3
 13993 585c 43F48053 		orr	r3, r3, #4096
 13994 5860 FB82     		strh	r3, [r7, #22]	@ movhi
 13995 5862 0EE0     		b	.L565
 13996              	.L564:
2866:../SPL/src/stm32f10x_tim.c ****   }
2867:../SPL/src/stm32f10x_tim.c ****   else
2868:../SPL/src/stm32f10x_tim.c ****   {
2869:../SPL/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC4E Bit */
2870:../SPL/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P | TIM_CCER_CC4NP));
 13997              		.loc 1 2870 0
 13998 5864 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 13999 5866 23F40073 		bic	r3, r3, #512
 14000 586a 4FEA4343 		lsl	r3, r3, #17
 14001 586e 4FEA5343 		lsr	r3, r3, #17
 14002 5872 FB82     		strh	r3, [r7, #22]	@ movhi
2871:../SPL/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC4E);
 14003              		.loc 1 2871 0
 14004 5874 7A89     		ldrh	r2, [r7, #10]	@ movhi
 14005 5876 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 14006 5878 1343     		orrs	r3, r3, r2
 14007 587a 9BB2     		uxth	r3, r3
 14008 587c 43F48053 		orr	r3, r3, #4096
 14009 5880 FB82     		strh	r3, [r7, #22]	@ movhi
 14010              	.L565:
2872:../SPL/src/stm32f10x_tim.c ****   }
2873:../SPL/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
2874:../SPL/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 14011              		.loc 1 2874 0
 14012 5882 FB68     		ldr	r3, [r7, #12]
 14013 5884 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 14014 5886 9A83     		strh	r2, [r3, #28]	@ movhi
2875:../SPL/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 14015              		.loc 1 2875 0
 14016 5888 FB68     		ldr	r3, [r7, #12]
 14017 588a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 14018 588c 1A84     		strh	r2, [r3, #32]	@ movhi
2876:../SPL/src/stm32f10x_tim.c **** }
 14019              		.loc 1 2876 0
 14020 588e 07F11C07 		add	r7, r7, #28
 14021 5892 BD46     		mov	sp, r7
 14022 5894 80BC     		pop	{r7}
 14023 5896 7047     		bx	lr
 14024              	.L567:
 14025              		.align	2
 14026              	.L566:
 14027 5898 002C0140 		.word	1073818624
 14028 589c 00340140 		.word	1073820672
 14029 58a0 00040040 		.word	1073742848
 14030 58a4 00080040 		.word	1073743872
 14031 58a8 000C0040 		.word	1073744896
 14032              		.cfi_endproc
 14033              	.LFE119:
 14035              	.Letext0:
 14036              		.file 2 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 14037              		.file 3 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\CMSIS/stm32f10x.h"
 14038              		.file 4 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\SPL\\inc/stm32f10x_tim.h"
 14039              		.file 5 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\CMSIS/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_tim.c
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:19     .rodata:00000000 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:23     .text:00000000 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:28     .text:00000000 TIM_DeInit
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:396    .text:000002e4 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:416    .text:00000328 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:421    .text:00000328 TIM_TimeBaseInit
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:700    .text:000004e4 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:720    .text:00000528 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:725    .text:00000528 TIM_OC1Init
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:1094   .text:0000078c $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:1112   .text:000007c8 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:1117   .text:000007c8 TIM_OC2Init
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:1457   .text:00000a0c $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:1469   .text:00000a30 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:1474   .text:00000a30 TIM_OC3Init
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:1797   .text:00000c58 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:1806   .text:00000c70 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:1811   .text:00000c70 TIM_OC4Init
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:2055   .text:00000e08 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:2064   .text:00000e20 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:2069   .text:00000e20 TIM_ICInit
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:13463  .text:000054f0 TI1_Config
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11339  .text:00004784 TIM_SetIC1Prescaler
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:13599  .text:000055cc TI2_Config
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11506  .text:00004898 TIM_SetIC2Prescaler
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:13747  .text:000056c4 TI3_Config
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11639  .text:0000496c TIM_SetIC3Prescaler
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:2473   .text:000010a8 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:2490   .text:000010e4 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:13889  .text:000057ac TI4_Config
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11752  .text:00004a14 TIM_SetIC4Prescaler
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:2550   .text:00001144 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:2559   .text:0000115c $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:2564   .text:0000115c TIM_PWMIConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:2741   .text:00001274 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:2753   .text:00001298 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:2758   .text:00001298 TIM_BDTRConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:2953   .text:000013d4 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:2962   .text:000013ec $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:2967   .text:000013ec TIM_TimeBaseStructInit
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:3018   .text:00001428 TIM_OCStructInit
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:3081   .text:0000147c TIM_ICStructInit
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:3132   .text:000014b8 TIM_BDTRStructInit
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:3191   .text:00001504 TIM_Cmd
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:3343   .text:000015e8 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:3363   .text:0000162c $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:3368   .text:0000162c TIM_CtrlPWMOutputs
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:3463   .text:000016c0 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:3472   .text:000016d8 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:3477   .text:000016d8 TIM_ITConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:3650   .text:000017e0 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:3670   .text:00001824 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:3675   .text:00001824 TIM_GenerateEvent
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:3810   .text:000018ec $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:3830   .text:00001930 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:3835   .text:00001930 TIM_DMAConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4078   .text:00001abc $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4090   .text:00001ae0 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4095   .text:00001ae0 TIM_DMACmd
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4239   .text:00001bbc $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4253   .text:00001be8 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4258   .text:00001be8 TIM_InternalClockConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4340   .text:00001c5c $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4352   .text:00001c80 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4357   .text:00001c80 TIM_ITRxExternalClockConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5367   .text:000022d0 TIM_SelectInputTrigger
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4467   .text:00001d24 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4479   .text:00001d48 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4484   .text:00001d48 TIM_TIxExternalClockConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4634   .text:00001e34 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4646   .text:00001e58 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4651   .text:00001e58 TIM_ETRClockMode1Config
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4936   .text:00002024 TIM_ETRConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4789   .text:00001f38 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4798   .text:00001f50 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4803   .text:00001f50 TIM_ETRClockMode2Config
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4922   .text:0000200c $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:4931   .text:00002024 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5069   .text:000020f8 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5078   .text:00002110 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5083   .text:00002110 TIM_PrescalerConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5222   .text:000021dc $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5242   .text:00002220 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5247   .text:00002220 TIM_CounterModeConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5353   .text:000022b8 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5362   .text:000022d0 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5500   .text:00002394 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5512   .text:000023b8 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5517   .text:000023b8 TIM_EncoderInterfaceConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5693   .text:000024d4 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5703   .text:000024f0 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5708   .text:000024f0 TIM_ForcedOC1Config
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5847   .text:000025c0 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5865   .text:000025fc $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5870   .text:000025fc TIM_ForcedOC2Config
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5981   .text:000026a0 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5993   .text:000026c4 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:5998   .text:000026c4 TIM_ForcedOC3Config
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6092   .text:0000274c $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6101   .text:00002764 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6106   .text:00002764 TIM_ForcedOC4Config
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6202   .text:000027f0 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6211   .text:00002808 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6216   .text:00002808 TIM_ARRPreloadConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6368   .text:000028ec $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6388   .text:00002930 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6393   .text:00002930 TIM_SelectCOM
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6486   .text:000029b4 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6495   .text:000029cc $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6500   .text:000029cc TIM_SelectCCDMA
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6612   .text:00002a70 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6624   .text:00002a94 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6629   .text:00002a94 TIM_CCPreloadControl
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6731   .text:00002b28 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6741   .text:00002b44 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6746   .text:00002b44 TIM_OC1PreloadConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6885   .text:00002c14 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6903   .text:00002c50 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:6908   .text:00002c50 TIM_OC2PreloadConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7019   .text:00002cf4 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7031   .text:00002d18 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7036   .text:00002d18 TIM_OC3PreloadConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7130   .text:00002da0 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7139   .text:00002db8 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7144   .text:00002db8 TIM_OC4PreloadConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7240   .text:00002e44 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7249   .text:00002e5c $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7254   .text:00002e5c TIM_OC1FastConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7393   .text:00002f2c $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7411   .text:00002f68 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7416   .text:00002f68 TIM_OC2FastConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7527   .text:0000300c $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7539   .text:00003030 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7544   .text:00003030 TIM_OC3FastConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7638   .text:000030b8 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7647   .text:000030d0 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7652   .text:000030d0 TIM_OC4FastConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7748   .text:0000315c $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7757   .text:00003174 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7762   .text:00003174 TIM_ClearOC1Ref
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7856   .text:000031fc $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7865   .text:00003214 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7870   .text:00003214 TIM_ClearOC2Ref
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7967   .text:000032a4 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7976   .text:000032bc $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:7981   .text:000032bc TIM_ClearOC3Ref
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8075   .text:00003344 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8084   .text:0000335c $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8089   .text:0000335c TIM_ClearOC4Ref
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8186   .text:000033ec $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8195   .text:00003404 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8200   .text:00003404 TIM_OC1PolarityConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8339   .text:000034d4 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8357   .text:00003510 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8362   .text:00003510 TIM_OC1NPolarityConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8452   .text:00003590 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8461   .text:000035a8 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8466   .text:000035a8 TIM_OC2PolarityConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8577   .text:0000364c $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8589   .text:00003670 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8594   .text:00003670 TIM_OC2NPolarityConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8671   .text:000036dc $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8677   .text:000036e8 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8682   .text:000036e8 TIM_OC3PolarityConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8778   .text:00003774 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8787   .text:0000378c $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8792   .text:0000378c TIM_OC3NPolarityConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8869   .text:000037f8 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8875   .text:00003804 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8880   .text:00003804 TIM_OC4PolarityConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8976   .text:00003890 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8985   .text:000038a8 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:8990   .text:000038a8 TIM_CCxCmd
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:9163   .text:000039bc $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:9181   .text:000039f8 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:9186   .text:000039f8 TIM_CCxNCmd
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:9306   .text:00003ab4 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:9315   .text:00003acc $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:9320   .text:00003acc TIM_SelectOCxM
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:9571   .text:00003c64 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:9589   .text:00003ca0 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:9594   .text:00003ca0 TIM_UpdateDisableConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:9746   .text:00003d84 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:9766   .text:00003dc8 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:9771   .text:00003dc8 TIM_UpdateRequestConfig
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:9923   .text:00003eac $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:9943   .text:00003ef0 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:9948   .text:00003ef0 TIM_SelectHallSensor
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10060  .text:00003f94 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10072  .text:00003fb8 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10077  .text:00003fb8 TIM_SelectOnePulseMode
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10223  .text:00004094 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10243  .text:000040d8 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10248  .text:000040d8 TIM_SelectOutputTrigger
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10388  .text:000041a8 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10402  .text:000041d4 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10407  .text:000041d4 TIM_SelectSlaveMode
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10521  .text:0000427c $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10533  .text:000042a0 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10538  .text:000042a0 TIM_SelectMasterSlaveMode
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10644  .text:0000433c $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10656  .text:00004360 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10661  .text:00004360 TIM_SetCounter
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10781  .text:0000440c $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10801  .text:00004450 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10806  .text:00004450 TIM_SetAutoreload
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10926  .text:000044fc $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10946  .text:00004540 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:10951  .text:00004540 TIM_SetCompare1
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11061  .text:000045dc $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11079  .text:00004618 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11084  .text:00004618 TIM_SetCompare2
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11164  .text:00004684 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11176  .text:000046a8 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11181  .text:000046a8 TIM_SetCompare3
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11246  .text:000046fc $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11255  .text:00004714 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11260  .text:00004714 TIM_SetCompare4
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11325  .text:0000476c $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11334  .text:00004784 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11483  .text:0000485c $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11501  .text:00004898 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11622  .text:00004948 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11634  .text:0000496c $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11738  .text:000049fc $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11747  .text:00004a14 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11853  .text:00004aac $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11862  .text:00004ac4 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:11867  .text:00004ac4 TIM_SetClockDivision
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12007  .text:00004b9c $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12025  .text:00004bd8 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12030  .text:00004bd8 TIM_GetCapture1
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12139  .text:00004c74 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12157  .text:00004cb0 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12162  .text:00004cb0 TIM_GetCapture2
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12241  .text:00004d1c $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12253  .text:00004d40 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12258  .text:00004d40 TIM_GetCapture3
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12322  .text:00004d94 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12331  .text:00004dac $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12336  .text:00004dac TIM_GetCapture4
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12400  .text:00004e00 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12409  .text:00004e18 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12414  .text:00004e18 TIM_GetCounter
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12533  .text:00004ec4 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12553  .text:00004f08 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12558  .text:00004f08 TIM_GetPrescaler
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12677  .text:00004fb4 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12697  .text:00004ff8 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12702  .text:00004ff8 TIM_GetFlagStatus
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12895  .text:00005120 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12915  .text:00005164 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:12920  .text:00005164 TIM_ClearFlag
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:13057  .text:00005230 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:13077  .text:00005274 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:13082  .text:00005274 TIM_GetITStatus
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:13277  .text:0000539c $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:13297  .text:000053e0 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:13302  .text:000053e0 TIM_ClearITPendingBit
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:13439  .text:000054ac $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:13459  .text:000054f0 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:13587  .text:000055b8 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:13595  .text:000055cc $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:13735  .text:000056b0 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:13743  .text:000056c4 $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:13877  .text:00005798 $d
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:13885  .text:000057ac $t
C:\Users\PC108\AppData\Local\Temp\cc0Og60d.s:14027  .text:00005898 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.9001f459856fa07d79ce9793bb17c6cd
                           .group:00000000 wm4.stm32f10x.h.51.b859cb68ed44ee02c916b41cb8c68f1c
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.522.115ebb8291fa96f8c9e0b9a9b670f703
                           .group:00000000 wm4.stm32f10x_exti.h.56.8b2f216f9ded9d03a9eb42ed6973fc04
                           .group:00000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:00000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765
                           .group:00000000 wm4.stm32f10x_usart.h.25.29629c699b65db3f3efd3561f66b0bf6
                           .group:00000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:00000000 wm4.stm32f10x_tim.h.169.8f8085157e91950a28cd697cc942a58d

UNDEFINED SYMBOLS
assert_failed
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
