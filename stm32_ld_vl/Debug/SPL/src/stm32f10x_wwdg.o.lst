   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_wwdg.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	WWDG_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	WWDG_DeInit:
  24              	.LFB29:
  25              		.file 1 "../SPL/src/stm32f10x_wwdg.c"
   1:../SPL/src/stm32f10x_wwdg.c **** /**
   2:../SPL/src/stm32f10x_wwdg.c ****   ******************************************************************************
   3:../SPL/src/stm32f10x_wwdg.c ****   * @file    stm32f10x_wwdg.c
   4:../SPL/src/stm32f10x_wwdg.c ****   * @author  MCD Application Team
   5:../SPL/src/stm32f10x_wwdg.c ****   * @version V3.5.0
   6:../SPL/src/stm32f10x_wwdg.c ****   * @date    11-March-2011
   7:../SPL/src/stm32f10x_wwdg.c ****   * @brief   This file provides all the WWDG firmware functions.
   8:../SPL/src/stm32f10x_wwdg.c ****   ******************************************************************************
   9:../SPL/src/stm32f10x_wwdg.c ****   * @attention
  10:../SPL/src/stm32f10x_wwdg.c ****   *
  11:../SPL/src/stm32f10x_wwdg.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../SPL/src/stm32f10x_wwdg.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../SPL/src/stm32f10x_wwdg.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../SPL/src/stm32f10x_wwdg.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../SPL/src/stm32f10x_wwdg.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../SPL/src/stm32f10x_wwdg.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../SPL/src/stm32f10x_wwdg.c ****   *
  18:../SPL/src/stm32f10x_wwdg.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../SPL/src/stm32f10x_wwdg.c ****   ******************************************************************************
  20:../SPL/src/stm32f10x_wwdg.c ****   */
  21:../SPL/src/stm32f10x_wwdg.c **** 
  22:../SPL/src/stm32f10x_wwdg.c **** /* Includes ------------------------------------------------------------------*/
  23:../SPL/src/stm32f10x_wwdg.c **** #include "stm32f10x_wwdg.h"
  24:../SPL/src/stm32f10x_wwdg.c **** #include "stm32f10x_rcc.h"
  25:../SPL/src/stm32f10x_wwdg.c **** 
  26:../SPL/src/stm32f10x_wwdg.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../SPL/src/stm32f10x_wwdg.c ****   * @{
  28:../SPL/src/stm32f10x_wwdg.c ****   */
  29:../SPL/src/stm32f10x_wwdg.c **** 
  30:../SPL/src/stm32f10x_wwdg.c **** /** @defgroup WWDG 
  31:../SPL/src/stm32f10x_wwdg.c ****   * @brief WWDG driver modules
  32:../SPL/src/stm32f10x_wwdg.c ****   * @{
  33:../SPL/src/stm32f10x_wwdg.c ****   */
  34:../SPL/src/stm32f10x_wwdg.c **** 
  35:../SPL/src/stm32f10x_wwdg.c **** /** @defgroup WWDG_Private_TypesDefinitions
  36:../SPL/src/stm32f10x_wwdg.c ****   * @{
  37:../SPL/src/stm32f10x_wwdg.c ****   */
  38:../SPL/src/stm32f10x_wwdg.c **** 
  39:../SPL/src/stm32f10x_wwdg.c **** /**
  40:../SPL/src/stm32f10x_wwdg.c ****   * @}
  41:../SPL/src/stm32f10x_wwdg.c ****   */
  42:../SPL/src/stm32f10x_wwdg.c **** 
  43:../SPL/src/stm32f10x_wwdg.c **** /** @defgroup WWDG_Private_Defines
  44:../SPL/src/stm32f10x_wwdg.c ****   * @{
  45:../SPL/src/stm32f10x_wwdg.c ****   */
  46:../SPL/src/stm32f10x_wwdg.c **** 
  47:../SPL/src/stm32f10x_wwdg.c **** /* ----------- WWDG registers bit address in the alias region ----------- */
  48:../SPL/src/stm32f10x_wwdg.c **** #define WWDG_OFFSET       (WWDG_BASE - PERIPH_BASE)
  49:../SPL/src/stm32f10x_wwdg.c **** 
  50:../SPL/src/stm32f10x_wwdg.c **** /* Alias word address of EWI bit */
  51:../SPL/src/stm32f10x_wwdg.c **** #define CFR_OFFSET        (WWDG_OFFSET + 0x04)
  52:../SPL/src/stm32f10x_wwdg.c **** #define EWI_BitNumber     0x09
  53:../SPL/src/stm32f10x_wwdg.c **** #define CFR_EWI_BB        (PERIPH_BB_BASE + (CFR_OFFSET * 32) + (EWI_BitNumber * 4))
  54:../SPL/src/stm32f10x_wwdg.c **** 
  55:../SPL/src/stm32f10x_wwdg.c **** /* --------------------- WWDG registers bit mask ------------------------ */
  56:../SPL/src/stm32f10x_wwdg.c **** 
  57:../SPL/src/stm32f10x_wwdg.c **** /* CR register bit mask */
  58:../SPL/src/stm32f10x_wwdg.c **** #define CR_WDGA_Set       ((uint32_t)0x00000080)
  59:../SPL/src/stm32f10x_wwdg.c **** 
  60:../SPL/src/stm32f10x_wwdg.c **** /* CFR register bit mask */
  61:../SPL/src/stm32f10x_wwdg.c **** #define CFR_WDGTB_Mask    ((uint32_t)0xFFFFFE7F)
  62:../SPL/src/stm32f10x_wwdg.c **** #define CFR_W_Mask        ((uint32_t)0xFFFFFF80)
  63:../SPL/src/stm32f10x_wwdg.c **** #define BIT_Mask          ((uint8_t)0x7F)
  64:../SPL/src/stm32f10x_wwdg.c **** 
  65:../SPL/src/stm32f10x_wwdg.c **** /**
  66:../SPL/src/stm32f10x_wwdg.c ****   * @}
  67:../SPL/src/stm32f10x_wwdg.c ****   */
  68:../SPL/src/stm32f10x_wwdg.c **** 
  69:../SPL/src/stm32f10x_wwdg.c **** /** @defgroup WWDG_Private_Macros
  70:../SPL/src/stm32f10x_wwdg.c ****   * @{
  71:../SPL/src/stm32f10x_wwdg.c ****   */
  72:../SPL/src/stm32f10x_wwdg.c **** 
  73:../SPL/src/stm32f10x_wwdg.c **** /**
  74:../SPL/src/stm32f10x_wwdg.c ****   * @}
  75:../SPL/src/stm32f10x_wwdg.c ****   */
  76:../SPL/src/stm32f10x_wwdg.c **** 
  77:../SPL/src/stm32f10x_wwdg.c **** /** @defgroup WWDG_Private_Variables
  78:../SPL/src/stm32f10x_wwdg.c ****   * @{
  79:../SPL/src/stm32f10x_wwdg.c ****   */
  80:../SPL/src/stm32f10x_wwdg.c **** 
  81:../SPL/src/stm32f10x_wwdg.c **** /**
  82:../SPL/src/stm32f10x_wwdg.c ****   * @}
  83:../SPL/src/stm32f10x_wwdg.c ****   */
  84:../SPL/src/stm32f10x_wwdg.c **** 
  85:../SPL/src/stm32f10x_wwdg.c **** /** @defgroup WWDG_Private_FunctionPrototypes
  86:../SPL/src/stm32f10x_wwdg.c ****   * @{
  87:../SPL/src/stm32f10x_wwdg.c ****   */
  88:../SPL/src/stm32f10x_wwdg.c **** 
  89:../SPL/src/stm32f10x_wwdg.c **** /**
  90:../SPL/src/stm32f10x_wwdg.c ****   * @}
  91:../SPL/src/stm32f10x_wwdg.c ****   */
  92:../SPL/src/stm32f10x_wwdg.c **** 
  93:../SPL/src/stm32f10x_wwdg.c **** /** @defgroup WWDG_Private_Functions
  94:../SPL/src/stm32f10x_wwdg.c ****   * @{
  95:../SPL/src/stm32f10x_wwdg.c ****   */
  96:../SPL/src/stm32f10x_wwdg.c **** 
  97:../SPL/src/stm32f10x_wwdg.c **** /**
  98:../SPL/src/stm32f10x_wwdg.c ****   * @brief  Deinitializes the WWDG peripheral registers to their default reset values.
  99:../SPL/src/stm32f10x_wwdg.c ****   * @param  None
 100:../SPL/src/stm32f10x_wwdg.c ****   * @retval None
 101:../SPL/src/stm32f10x_wwdg.c ****   */
 102:../SPL/src/stm32f10x_wwdg.c **** void WWDG_DeInit(void)
 103:../SPL/src/stm32f10x_wwdg.c **** {
  26              		.loc 1 103 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 00AF     		add	r7, sp, #0
  36              	.LCFI1:
  37              		.cfi_def_cfa_register 7
 104:../SPL/src/stm32f10x_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, ENABLE);
  38              		.loc 1 104 0
  39 0004 4FF40060 		mov	r0, #2048
  40 0008 4FF00101 		mov	r1, #1
  41 000c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 105:../SPL/src/stm32f10x_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, DISABLE);
  42              		.loc 1 105 0
  43 0010 4FF40060 		mov	r0, #2048
  44 0014 4FF00001 		mov	r1, #0
  45 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 106:../SPL/src/stm32f10x_wwdg.c **** }
  46              		.loc 1 106 0
  47 001c 80BD     		pop	{r7, pc}
  48              		.cfi_endproc
  49              	.LFE29:
  51              		.section	.rodata
  52              		.align	2
  53              	.LC0:
  54 0000 2E2E2F53 		.ascii	"../SPL/src/stm32f10x_wwdg.c\000"
  54      504C2F73 
  54      72632F73 
  54      746D3332 
  54      66313078 
  55              		.text
  56 001e 00BF     		.align	2
  57              		.global	WWDG_SetPrescaler
  58              		.thumb
  59              		.thumb_func
  61              	WWDG_SetPrescaler:
  62              	.LFB30:
 107:../SPL/src/stm32f10x_wwdg.c **** 
 108:../SPL/src/stm32f10x_wwdg.c **** /**
 109:../SPL/src/stm32f10x_wwdg.c ****   * @brief  Sets the WWDG Prescaler.
 110:../SPL/src/stm32f10x_wwdg.c ****   * @param  WWDG_Prescaler: specifies the WWDG Prescaler.
 111:../SPL/src/stm32f10x_wwdg.c ****   *   This parameter can be one of the following values:
 112:../SPL/src/stm32f10x_wwdg.c ****   *     @arg WWDG_Prescaler_1: WWDG counter clock = (PCLK1/4096)/1
 113:../SPL/src/stm32f10x_wwdg.c ****   *     @arg WWDG_Prescaler_2: WWDG counter clock = (PCLK1/4096)/2
 114:../SPL/src/stm32f10x_wwdg.c ****   *     @arg WWDG_Prescaler_4: WWDG counter clock = (PCLK1/4096)/4
 115:../SPL/src/stm32f10x_wwdg.c ****   *     @arg WWDG_Prescaler_8: WWDG counter clock = (PCLK1/4096)/8
 116:../SPL/src/stm32f10x_wwdg.c ****   * @retval None
 117:../SPL/src/stm32f10x_wwdg.c ****   */
 118:../SPL/src/stm32f10x_wwdg.c **** void WWDG_SetPrescaler(uint32_t WWDG_Prescaler)
 119:../SPL/src/stm32f10x_wwdg.c **** {
  63              		.loc 1 119 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 16
  66              		@ frame_needed = 1, uses_anonymous_args = 0
  67 0020 80B5     		push	{r7, lr}
  68              	.LCFI2:
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 7, -8
  71              		.cfi_offset 14, -4
  72 0022 84B0     		sub	sp, sp, #16
  73              	.LCFI3:
  74              		.cfi_def_cfa_offset 24
  75 0024 00AF     		add	r7, sp, #0
  76              	.LCFI4:
  77              		.cfi_def_cfa_register 7
  78 0026 7860     		str	r0, [r7, #4]
 120:../SPL/src/stm32f10x_wwdg.c ****   uint32_t tmpreg = 0;
  79              		.loc 1 120 0
  80 0028 4FF00003 		mov	r3, #0
  81 002c FB60     		str	r3, [r7, #12]
 121:../SPL/src/stm32f10x_wwdg.c ****   /* Check the parameters */
 122:../SPL/src/stm32f10x_wwdg.c ****   assert_param(IS_WWDG_PRESCALER(WWDG_Prescaler));
  82              		.loc 1 122 0
  83 002e 7B68     		ldr	r3, [r7, #4]
  84 0030 002B     		cmp	r3, #0
  85 0032 0FD0     		beq	.L3
  86              		.loc 1 122 0 is_stmt 0 discriminator 1
  87 0034 7B68     		ldr	r3, [r7, #4]
  88 0036 802B     		cmp	r3, #128
  89 0038 0CD0     		beq	.L3
  90              		.loc 1 122 0 discriminator 2
  91 003a 7B68     		ldr	r3, [r7, #4]
  92 003c B3F5807F 		cmp	r3, #256
  93 0040 08D0     		beq	.L3
  94              		.loc 1 122 0 discriminator 3
  95 0042 7B68     		ldr	r3, [r7, #4]
  96 0044 B3F5C07F 		cmp	r3, #384
  97 0048 04D0     		beq	.L3
  98              		.loc 1 122 0 discriminator 4
  99 004a 0A48     		ldr	r0, .L4
 100 004c 4FF07A01 		mov	r1, #122
 101 0050 FFF7FEFF 		bl	assert_failed
 102              	.L3:
 123:../SPL/src/stm32f10x_wwdg.c ****   /* Clear WDGTB[1:0] bits */
 124:../SPL/src/stm32f10x_wwdg.c ****   tmpreg = WWDG->CFR & CFR_WDGTB_Mask;
 103              		.loc 1 124 0 is_stmt 1
 104 0054 084B     		ldr	r3, .L4+4
 105 0056 5B68     		ldr	r3, [r3, #4]
 106 0058 23F4C073 		bic	r3, r3, #384
 107 005c FB60     		str	r3, [r7, #12]
 125:../SPL/src/stm32f10x_wwdg.c ****   /* Set WDGTB[1:0] bits according to WWDG_Prescaler value */
 126:../SPL/src/stm32f10x_wwdg.c ****   tmpreg |= WWDG_Prescaler;
 108              		.loc 1 126 0
 109 005e FA68     		ldr	r2, [r7, #12]
 110 0060 7B68     		ldr	r3, [r7, #4]
 111 0062 1343     		orrs	r3, r3, r2
 112 0064 FB60     		str	r3, [r7, #12]
 127:../SPL/src/stm32f10x_wwdg.c ****   /* Store the new value */
 128:../SPL/src/stm32f10x_wwdg.c ****   WWDG->CFR = tmpreg;
 113              		.loc 1 128 0
 114 0066 044B     		ldr	r3, .L4+4
 115 0068 FA68     		ldr	r2, [r7, #12]
 116 006a 5A60     		str	r2, [r3, #4]
 129:../SPL/src/stm32f10x_wwdg.c **** }
 117              		.loc 1 129 0
 118 006c 07F11007 		add	r7, r7, #16
 119 0070 BD46     		mov	sp, r7
 120 0072 80BD     		pop	{r7, pc}
 121              	.L5:
 122              		.align	2
 123              	.L4:
 124 0074 00000000 		.word	.LC0
 125 0078 002C0040 		.word	1073753088
 126              		.cfi_endproc
 127              	.LFE30:
 129              		.align	2
 130              		.global	WWDG_SetWindowValue
 131              		.thumb
 132              		.thumb_func
 134              	WWDG_SetWindowValue:
 135              	.LFB31:
 130:../SPL/src/stm32f10x_wwdg.c **** 
 131:../SPL/src/stm32f10x_wwdg.c **** /**
 132:../SPL/src/stm32f10x_wwdg.c ****   * @brief  Sets the WWDG window value.
 133:../SPL/src/stm32f10x_wwdg.c ****   * @param  WindowValue: specifies the window value to be compared to the downcounter.
 134:../SPL/src/stm32f10x_wwdg.c ****   *   This parameter value must be lower than 0x80.
 135:../SPL/src/stm32f10x_wwdg.c ****   * @retval None
 136:../SPL/src/stm32f10x_wwdg.c ****   */
 137:../SPL/src/stm32f10x_wwdg.c **** void WWDG_SetWindowValue(uint8_t WindowValue)
 138:../SPL/src/stm32f10x_wwdg.c **** {
 136              		.loc 1 138 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 16
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140 007c 80B5     		push	{r7, lr}
 141              	.LCFI5:
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 7, -8
 144              		.cfi_offset 14, -4
 145 007e 84B0     		sub	sp, sp, #16
 146              	.LCFI6:
 147              		.cfi_def_cfa_offset 24
 148 0080 00AF     		add	r7, sp, #0
 149              	.LCFI7:
 150              		.cfi_def_cfa_register 7
 151 0082 0346     		mov	r3, r0
 152 0084 FB71     		strb	r3, [r7, #7]
 139:../SPL/src/stm32f10x_wwdg.c ****   __IO uint32_t tmpreg = 0;
 153              		.loc 1 139 0
 154 0086 4FF00003 		mov	r3, #0
 155 008a FB60     		str	r3, [r7, #12]
 140:../SPL/src/stm32f10x_wwdg.c **** 
 141:../SPL/src/stm32f10x_wwdg.c ****   /* Check the parameters */
 142:../SPL/src/stm32f10x_wwdg.c ****   assert_param(IS_WWDG_WINDOW_VALUE(WindowValue));
 156              		.loc 1 142 0
 157 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 158 008e 5BB2     		sxtb	r3, r3
 159 0090 002B     		cmp	r3, #0
 160 0092 04DA     		bge	.L7
 161              		.loc 1 142 0 is_stmt 0 discriminator 1
 162 0094 0B48     		ldr	r0, .L8
 163 0096 4FF08E01 		mov	r1, #142
 164 009a FFF7FEFF 		bl	assert_failed
 165              	.L7:
 143:../SPL/src/stm32f10x_wwdg.c ****   /* Clear W[6:0] bits */
 144:../SPL/src/stm32f10x_wwdg.c **** 
 145:../SPL/src/stm32f10x_wwdg.c ****   tmpreg = WWDG->CFR & CFR_W_Mask;
 166              		.loc 1 145 0 is_stmt 1
 167 009e 0A4B     		ldr	r3, .L8+4
 168 00a0 5B68     		ldr	r3, [r3, #4]
 169 00a2 23F07F03 		bic	r3, r3, #127
 170 00a6 FB60     		str	r3, [r7, #12]
 146:../SPL/src/stm32f10x_wwdg.c **** 
 147:../SPL/src/stm32f10x_wwdg.c ****   /* Set W[6:0] bits according to WindowValue value */
 148:../SPL/src/stm32f10x_wwdg.c ****   tmpreg |= WindowValue & (uint32_t) BIT_Mask;
 171              		.loc 1 148 0
 172 00a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 173 00aa 03F07F02 		and	r2, r3, #127
 174 00ae FB68     		ldr	r3, [r7, #12]
 175 00b0 1343     		orrs	r3, r3, r2
 176 00b2 FB60     		str	r3, [r7, #12]
 149:../SPL/src/stm32f10x_wwdg.c **** 
 150:../SPL/src/stm32f10x_wwdg.c ****   /* Store the new value */
 151:../SPL/src/stm32f10x_wwdg.c ****   WWDG->CFR = tmpreg;
 177              		.loc 1 151 0
 178 00b4 044B     		ldr	r3, .L8+4
 179 00b6 FA68     		ldr	r2, [r7, #12]
 180 00b8 5A60     		str	r2, [r3, #4]
 152:../SPL/src/stm32f10x_wwdg.c **** }
 181              		.loc 1 152 0
 182 00ba 07F11007 		add	r7, r7, #16
 183 00be BD46     		mov	sp, r7
 184 00c0 80BD     		pop	{r7, pc}
 185              	.L9:
 186 00c2 00BF     		.align	2
 187              	.L8:
 188 00c4 00000000 		.word	.LC0
 189 00c8 002C0040 		.word	1073753088
 190              		.cfi_endproc
 191              	.LFE31:
 193              		.align	2
 194              		.global	WWDG_EnableIT
 195              		.thumb
 196              		.thumb_func
 198              	WWDG_EnableIT:
 199              	.LFB32:
 153:../SPL/src/stm32f10x_wwdg.c **** 
 154:../SPL/src/stm32f10x_wwdg.c **** /**
 155:../SPL/src/stm32f10x_wwdg.c ****   * @brief  Enables the WWDG Early Wakeup interrupt(EWI).
 156:../SPL/src/stm32f10x_wwdg.c ****   * @param  None
 157:../SPL/src/stm32f10x_wwdg.c ****   * @retval None
 158:../SPL/src/stm32f10x_wwdg.c ****   */
 159:../SPL/src/stm32f10x_wwdg.c **** void WWDG_EnableIT(void)
 160:../SPL/src/stm32f10x_wwdg.c **** {
 200              		.loc 1 160 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 205 00cc 80B4     		push	{r7}
 206              	.LCFI8:
 207              		.cfi_def_cfa_offset 4
 208              		.cfi_offset 7, -4
 209 00ce 00AF     		add	r7, sp, #0
 210              	.LCFI9:
 211              		.cfi_def_cfa_register 7
 161:../SPL/src/stm32f10x_wwdg.c ****   *(__IO uint32_t *) CFR_EWI_BB = (uint32_t)ENABLE;
 212              		.loc 1 161 0
 213 00d0 034B     		ldr	r3, .L11
 214 00d2 4FF00102 		mov	r2, #1
 215 00d6 1A60     		str	r2, [r3, #0]
 162:../SPL/src/stm32f10x_wwdg.c **** }
 216              		.loc 1 162 0
 217 00d8 BD46     		mov	sp, r7
 218 00da 80BC     		pop	{r7}
 219 00dc 7047     		bx	lr
 220              	.L12:
 221 00de 00BF     		.align	2
 222              	.L11:
 223 00e0 A4800542 		.word	1107656868
 224              		.cfi_endproc
 225              	.LFE32:
 227              		.align	2
 228              		.global	WWDG_SetCounter
 229              		.thumb
 230              		.thumb_func
 232              	WWDG_SetCounter:
 233              	.LFB33:
 163:../SPL/src/stm32f10x_wwdg.c **** 
 164:../SPL/src/stm32f10x_wwdg.c **** /**
 165:../SPL/src/stm32f10x_wwdg.c ****   * @brief  Sets the WWDG counter value.
 166:../SPL/src/stm32f10x_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 167:../SPL/src/stm32f10x_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F.
 168:../SPL/src/stm32f10x_wwdg.c ****   * @retval None
 169:../SPL/src/stm32f10x_wwdg.c ****   */
 170:../SPL/src/stm32f10x_wwdg.c **** void WWDG_SetCounter(uint8_t Counter)
 171:../SPL/src/stm32f10x_wwdg.c **** {
 234              		.loc 1 171 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 8
 237              		@ frame_needed = 1, uses_anonymous_args = 0
 238 00e4 80B5     		push	{r7, lr}
 239              	.LCFI10:
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 7, -8
 242              		.cfi_offset 14, -4
 243 00e6 82B0     		sub	sp, sp, #8
 244              	.LCFI11:
 245              		.cfi_def_cfa_offset 16
 246 00e8 00AF     		add	r7, sp, #0
 247              	.LCFI12:
 248              		.cfi_def_cfa_register 7
 249 00ea 0346     		mov	r3, r0
 250 00ec FB71     		strb	r3, [r7, #7]
 172:../SPL/src/stm32f10x_wwdg.c ****   /* Check the parameters */
 173:../SPL/src/stm32f10x_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 251              		.loc 1 173 0
 252 00ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 253 00f0 3F2B     		cmp	r3, #63
 254 00f2 03D9     		bls	.L14
 255              		.loc 1 173 0 is_stmt 0 discriminator 2
 256 00f4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 257 00f6 5BB2     		sxtb	r3, r3
 258 00f8 002B     		cmp	r3, #0
 259 00fa 04DA     		bge	.L15
 260              	.L14:
 261              		.loc 1 173 0 discriminator 1
 262 00fc 0648     		ldr	r0, .L16
 263 00fe 4FF0AD01 		mov	r1, #173
 264 0102 FFF7FEFF 		bl	assert_failed
 265              	.L15:
 174:../SPL/src/stm32f10x_wwdg.c ****   /* Write to T[6:0] bits to configure the counter value, no need to do
 175:../SPL/src/stm32f10x_wwdg.c ****      a read-modify-write; writing a 0 to WDGA bit does nothing */
 176:../SPL/src/stm32f10x_wwdg.c ****   WWDG->CR = Counter & BIT_Mask;
 266              		.loc 1 176 0 is_stmt 1
 267 0106 054B     		ldr	r3, .L16+4
 268 0108 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 269 010a 02F07F02 		and	r2, r2, #127
 270 010e 1A60     		str	r2, [r3, #0]
 177:../SPL/src/stm32f10x_wwdg.c **** }
 271              		.loc 1 177 0
 272 0110 07F10807 		add	r7, r7, #8
 273 0114 BD46     		mov	sp, r7
 274 0116 80BD     		pop	{r7, pc}
 275              	.L17:
 276              		.align	2
 277              	.L16:
 278 0118 00000000 		.word	.LC0
 279 011c 002C0040 		.word	1073753088
 280              		.cfi_endproc
 281              	.LFE33:
 283              		.align	2
 284              		.global	WWDG_Enable
 285              		.thumb
 286              		.thumb_func
 288              	WWDG_Enable:
 289              	.LFB34:
 178:../SPL/src/stm32f10x_wwdg.c **** 
 179:../SPL/src/stm32f10x_wwdg.c **** /**
 180:../SPL/src/stm32f10x_wwdg.c ****   * @brief  Enables WWDG and load the counter value.                  
 181:../SPL/src/stm32f10x_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 182:../SPL/src/stm32f10x_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F.
 183:../SPL/src/stm32f10x_wwdg.c ****   * @retval None
 184:../SPL/src/stm32f10x_wwdg.c ****   */
 185:../SPL/src/stm32f10x_wwdg.c **** void WWDG_Enable(uint8_t Counter)
 186:../SPL/src/stm32f10x_wwdg.c **** {
 290              		.loc 1 186 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 8
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294 0120 80B5     		push	{r7, lr}
 295              	.LCFI13:
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0122 82B0     		sub	sp, sp, #8
 300              	.LCFI14:
 301              		.cfi_def_cfa_offset 16
 302 0124 00AF     		add	r7, sp, #0
 303              	.LCFI15:
 304              		.cfi_def_cfa_register 7
 305 0126 0346     		mov	r3, r0
 306 0128 FB71     		strb	r3, [r7, #7]
 187:../SPL/src/stm32f10x_wwdg.c ****   /* Check the parameters */
 188:../SPL/src/stm32f10x_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 307              		.loc 1 188 0
 308 012a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 309 012c 3F2B     		cmp	r3, #63
 310 012e 03D9     		bls	.L19
 311              		.loc 1 188 0 is_stmt 0 discriminator 2
 312 0130 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 313 0132 5BB2     		sxtb	r3, r3
 314 0134 002B     		cmp	r3, #0
 315 0136 04DA     		bge	.L20
 316              	.L19:
 317              		.loc 1 188 0 discriminator 1
 318 0138 0748     		ldr	r0, .L21
 319 013a 4FF0BC01 		mov	r1, #188
 320 013e FFF7FEFF 		bl	assert_failed
 321              	.L20:
 189:../SPL/src/stm32f10x_wwdg.c ****   WWDG->CR = CR_WDGA_Set | Counter;
 322              		.loc 1 189 0 is_stmt 1
 323 0142 064B     		ldr	r3, .L21+4
 324 0144 FA79     		ldrb	r2, [r7, #7]
 325 0146 62F07F02 		orn	r2, r2, #127
 326 014a D2B2     		uxtb	r2, r2
 327 014c 1A60     		str	r2, [r3, #0]
 190:../SPL/src/stm32f10x_wwdg.c **** }
 328              		.loc 1 190 0
 329 014e 07F10807 		add	r7, r7, #8
 330 0152 BD46     		mov	sp, r7
 331 0154 80BD     		pop	{r7, pc}
 332              	.L22:
 333 0156 00BF     		.align	2
 334              	.L21:
 335 0158 00000000 		.word	.LC0
 336 015c 002C0040 		.word	1073753088
 337              		.cfi_endproc
 338              	.LFE34:
 340              		.align	2
 341              		.global	WWDG_GetFlagStatus
 342              		.thumb
 343              		.thumb_func
 345              	WWDG_GetFlagStatus:
 346              	.LFB35:
 191:../SPL/src/stm32f10x_wwdg.c **** 
 192:../SPL/src/stm32f10x_wwdg.c **** /**
 193:../SPL/src/stm32f10x_wwdg.c ****   * @brief  Checks whether the Early Wakeup interrupt flag is set or not.
 194:../SPL/src/stm32f10x_wwdg.c ****   * @param  None
 195:../SPL/src/stm32f10x_wwdg.c ****   * @retval The new state of the Early Wakeup interrupt flag (SET or RESET)
 196:../SPL/src/stm32f10x_wwdg.c ****   */
 197:../SPL/src/stm32f10x_wwdg.c **** FlagStatus WWDG_GetFlagStatus(void)
 198:../SPL/src/stm32f10x_wwdg.c **** {
 347              		.loc 1 198 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 1, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 352 0160 80B4     		push	{r7}
 353              	.LCFI16:
 354              		.cfi_def_cfa_offset 4
 355              		.cfi_offset 7, -4
 356 0162 00AF     		add	r7, sp, #0
 357              	.LCFI17:
 358              		.cfi_def_cfa_register 7
 199:../SPL/src/stm32f10x_wwdg.c ****   return (FlagStatus)(WWDG->SR);
 359              		.loc 1 199 0
 360 0164 034B     		ldr	r3, .L25
 361 0166 9B68     		ldr	r3, [r3, #8]
 362 0168 DBB2     		uxtb	r3, r3
 200:../SPL/src/stm32f10x_wwdg.c **** }
 363              		.loc 1 200 0
 364 016a 1846     		mov	r0, r3
 365 016c BD46     		mov	sp, r7
 366 016e 80BC     		pop	{r7}
 367 0170 7047     		bx	lr
 368              	.L26:
 369 0172 00BF     		.align	2
 370              	.L25:
 371 0174 002C0040 		.word	1073753088
 372              		.cfi_endproc
 373              	.LFE35:
 375              		.align	2
 376              		.global	WWDG_ClearFlag
 377              		.thumb
 378              		.thumb_func
 380              	WWDG_ClearFlag:
 381              	.LFB36:
 201:../SPL/src/stm32f10x_wwdg.c **** 
 202:../SPL/src/stm32f10x_wwdg.c **** /**
 203:../SPL/src/stm32f10x_wwdg.c ****   * @brief  Clears Early Wakeup interrupt flag.
 204:../SPL/src/stm32f10x_wwdg.c ****   * @param  None
 205:../SPL/src/stm32f10x_wwdg.c ****   * @retval None
 206:../SPL/src/stm32f10x_wwdg.c ****   */
 207:../SPL/src/stm32f10x_wwdg.c **** void WWDG_ClearFlag(void)
 208:../SPL/src/stm32f10x_wwdg.c **** {
 382              		.loc 1 208 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 1, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 387 0178 80B4     		push	{r7}
 388              	.LCFI18:
 389              		.cfi_def_cfa_offset 4
 390              		.cfi_offset 7, -4
 391 017a 00AF     		add	r7, sp, #0
 392              	.LCFI19:
 393              		.cfi_def_cfa_register 7
 209:../SPL/src/stm32f10x_wwdg.c ****   WWDG->SR = (uint32_t)RESET;
 394              		.loc 1 209 0
 395 017c 034B     		ldr	r3, .L28
 396 017e 4FF00002 		mov	r2, #0
 397 0182 9A60     		str	r2, [r3, #8]
 210:../SPL/src/stm32f10x_wwdg.c **** }
 398              		.loc 1 210 0
 399 0184 BD46     		mov	sp, r7
 400 0186 80BC     		pop	{r7}
 401 0188 7047     		bx	lr
 402              	.L29:
 403 018a 00BF     		.align	2
 404              	.L28:
 405 018c 002C0040 		.word	1073753088
 406              		.cfi_endproc
 407              	.LFE36:
 409              	.Letext0:
 410              		.file 2 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 411              		.file 3 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\CMSIS/stm32f10x.h"
 412              		.file 4 "C:\\Users\\PC108\\Export_project\\stm32_ld_vl\\CMSIS/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_wwdg.c
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:18     .text:00000000 $t
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:23     .text:00000000 WWDG_DeInit
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:52     .rodata:00000000 $d
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:61     .text:00000020 WWDG_SetPrescaler
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:124    .text:00000074 $d
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:129    .text:0000007c $t
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:134    .text:0000007c WWDG_SetWindowValue
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:188    .text:000000c4 $d
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:193    .text:000000cc $t
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:198    .text:000000cc WWDG_EnableIT
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:223    .text:000000e0 $d
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:227    .text:000000e4 $t
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:232    .text:000000e4 WWDG_SetCounter
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:278    .text:00000118 $d
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:283    .text:00000120 $t
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:288    .text:00000120 WWDG_Enable
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:335    .text:00000158 $d
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:340    .text:00000160 $t
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:345    .text:00000160 WWDG_GetFlagStatus
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:371    .text:00000174 $d
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:375    .text:00000178 $t
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:380    .text:00000178 WWDG_ClearFlag
C:\Users\PC108\AppData\Local\Temp\cc8P5YOM.s:405    .text:0000018c $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.9001f459856fa07d79ce9793bb17c6cd
                           .group:00000000 wm4.stm32f10x.h.51.b859cb68ed44ee02c916b41cb8c68f1c
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.522.115ebb8291fa96f8c9e0b9a9b670f703
                           .group:00000000 wm4.stm32f10x_exti.h.56.8b2f216f9ded9d03a9eb42ed6973fc04
                           .group:00000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:00000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765
                           .group:00000000 wm4.stm32f10x_tim.h.25.21c6ec062f1e74898cb96a57da276fec
                           .group:00000000 wm4.stm32f10x_usart.h.25.29629c699b65db3f3efd3561f66b0bf6
                           .group:00000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:00000000 wm4.stm32f10x_wwdg.h.58.4688eee61a2709866472b4b4c07d9275

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
assert_failed
